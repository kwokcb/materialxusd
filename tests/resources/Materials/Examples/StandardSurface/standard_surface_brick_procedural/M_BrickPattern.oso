OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\Examples\StandardSurface\standard_surface_brick_procedural\M_BrickPattern.oso
shader M_BrickPattern	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"M_BrickPattern"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	node_convert_1_in	3		%meta{string,widget,"number"}  %read{18,19} %write{2147483647,-1} %derivs
param	color	node_rgbtohsv_12_in	0.661876023 0.190880001 0		%read{24,24} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{26,26} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Bworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Bworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_26_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_variation_mask.jpg"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	node_tiledimage_float_26_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	float	node_tiledimage_float_26_default	0		%meta{string,widget,"number"}  %read{86,88} %write{2147483647,-1}
param	struct vector2	node_tiledimage_float_26_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_26_uvoffset.x	0		%read{44,44} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_float_26_uvoffset.y	0		%read{45,45} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_26_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_26_realworldimagesize.x	1		%read{47,47} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_26_realworldimagesize.y	1		%read{48,48} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_26_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_26_realworldtilesize.x	1		%read{50,50} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_26_realworldtilesize.y	1		%read{51,51} %write{2147483647,-1} %mystruct{node_tiledimage_float_26_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_float_26_filtertype	"linear"		%read{92,92} %write{2147483647,-1}
param	string	node_tiledimage_float_26_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_float_26_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_26_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_7_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_base_gray.jpg"		%meta{string,widget,"filename"}  %read{3,3} %write{2147483647,-1}
param	string	node_tiledimage_float_7_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{4,4} %write{2147483647,-1}
param	float	node_tiledimage_float_7_default	0		%meta{string,widget,"number"}  %read{143,145} %write{2147483647,-1}
param	struct vector2	node_tiledimage_float_7_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_7_uvoffset.x	0		%read{101,101} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_float_7_uvoffset.y	0		%read{102,102} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_7_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_7_realworldimagesize.x	1		%read{104,104} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_7_realworldimagesize.y	1		%read{105,105} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_7_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_7_realworldtilesize.x	1		%read{107,107} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_7_realworldtilesize.y	1		%read{108,108} %write{2147483647,-1} %mystruct{node_tiledimage_float_7_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_float_7_filtertype	"linear"		%read{149,149} %write{2147483647,-1}
param	string	node_tiledimage_float_7_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_float_7_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_7_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_24_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_dirt_mask.jpg"		%meta{string,widget,"filename"}  %read{5,5} %write{2147483647,-1}
param	string	node_tiledimage_float_24_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{6,6} %write{2147483647,-1}
param	float	node_tiledimage_float_24_default	0		%meta{string,widget,"number"}  %read{200,202} %write{2147483647,-1}
param	struct vector2	node_tiledimage_float_24_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_24_uvoffset.x	0		%read{158,158} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_float_24_uvoffset.y	0		%read{159,159} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_24_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_24_realworldimagesize.x	1		%read{161,161} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_24_realworldimagesize.y	1		%read{162,162} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_24_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_24_realworldtilesize.x	1		%read{164,164} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_24_realworldtilesize.y	1		%read{165,165} %write{2147483647,-1} %mystruct{node_tiledimage_float_24_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_float_24_filtertype	"linear"		%read{206,206} %write{2147483647,-1}
param	string	node_tiledimage_float_24_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_float_24_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_24_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_10_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_mask.jpg"		%meta{string,widget,"filename"}  %read{7,7} %write{2147483647,-1}
param	string	node_tiledimage_float_10_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{8,8} %write{2147483647,-1}
param	float	node_tiledimage_float_10_default	0		%meta{string,widget,"number"}  %read{257,259} %write{2147483647,-1}
param	struct vector2	node_tiledimage_float_10_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_10_uvoffset.x	0		%read{215,215} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_float_10_uvoffset.y	0		%read{216,216} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_10_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_10_realworldimagesize.x	1		%read{218,218} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_10_realworldimagesize.y	1		%read{219,219} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_10_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_10_realworldtilesize.x	1		%read{221,221} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_10_realworldtilesize.y	1		%read{222,222} %write{2147483647,-1} %mystruct{node_tiledimage_float_10_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_float_10_filtertype	"linear"		%read{263,263} %write{2147483647,-1}
param	string	node_tiledimage_float_10_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_float_10_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_10_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_22_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_roughness.jpg"		%meta{string,widget,"filename"}  %read{9,9} %write{2147483647,-1}
param	string	node_tiledimage_float_22_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{10,10} %write{2147483647,-1}
param	float	node_tiledimage_float_22_default	0		%meta{string,widget,"number"}  %read{314,316} %write{2147483647,-1}
param	struct vector2	node_tiledimage_float_22_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_22_uvoffset.x	0		%read{272,272} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_float_22_uvoffset.y	0		%read{273,273} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_22_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_22_realworldimagesize.x	1		%read{275,275} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_22_realworldimagesize.y	1		%read{276,276} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_float_22_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_float_22_realworldtilesize.x	1		%read{278,278} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_float_22_realworldtilesize.y	1		%read{279,279} %write{2147483647,-1} %mystruct{node_tiledimage_float_22_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_float_22_filtertype	"linear"		%read{320,320} %write{2147483647,-1}
param	string	node_tiledimage_float_22_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_float_22_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_float_22_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_vector3_27_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/brick_normal.jpg"		%meta{string,widget,"filename"}  %read{11,11} %write{2147483647,-1}
param	string	node_tiledimage_vector3_27_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{12,12} %write{2147483647,-1}
param	vector	node_tiledimage_vector3_27_default	0 0 0		%read{371,373} %write{2147483647,-1}
param	struct vector2	node_tiledimage_vector3_27_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_vector3_27_uvoffset.x	0		%read{329,329} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_uvoffset} %mystructfield{0} %derivs
param	float	node_tiledimage_vector3_27_uvoffset.y	0		%read{330,330} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_uvoffset} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_vector3_27_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_vector3_27_realworldimagesize.x	1		%read{332,332} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_realworldimagesize} %mystructfield{0} %derivs
param	float	node_tiledimage_vector3_27_realworldimagesize.y	1		%read{333,333} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	node_tiledimage_vector3_27_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	node_tiledimage_vector3_27_realworldtilesize.x	1		%read{335,335} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_realworldtilesize} %mystructfield{0} %derivs
param	float	node_tiledimage_vector3_27_realworldtilesize.y	1		%read{336,336} %write{2147483647,-1} %mystruct{node_tiledimage_vector3_27_realworldtilesize} %mystructfield{1} %derivs
param	string	node_tiledimage_vector3_27_filtertype	"linear"		%read{377,377} %write{2147483647,-1}
param	string	node_tiledimage_vector3_27_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	node_tiledimage_vector3_27_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	node_tiledimage_vector3_27_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	node_multiply_25_in1	0.0829999968		%meta{string,widget,"number"}  %read{379,379} %write{2147483647,-1}
param	float	node_multiply_20_in1	0.787		%meta{string,widget,"number"}  %read{380,380} %write{2147483647,-1}
param	color	node_multiply_9_in1	0.263273001 0.263273001 0.263273001		%read{381,381} %write{2147483647,-1}
param	float	node_multiply_23_in1	0.247999996		%meta{string,widget,"number"}  %read{382,382} %write{2147483647,-1}
param	float	node_max_1_in2	9.99999975e-06		%meta{string,widget,"number"}  %read{383,383} %write{2147483647,-1}
param	float	node_normalmap_3_scale	1		%meta{string,widget,"number"}  %read{386,387} %write{2147483647,-1}
param	float	node_divide_21_in1	0.852999985		%meta{string,widget,"number"}  %read{406,406} %write{2147483647,-1}
param	float	node_subtract_18_in2	0.349999994		%meta{string,widget,"number"}  %read{407,407} %write{2147483647,-1}
param	float	node_multiply_14_in2	0.0829999968		%meta{string,widget,"number"}  %read{410,410} %write{2147483647,-1}
param	float	node_combine3_color3_13_in2	0		%meta{string,widget,"number"}  %read{411,411} %write{2147483647,-1}
param	color	node_mix_6_fg	0.563719988 0.563719988 0.563719988		%read{416,416} %write{2147483647,-1}
param	color	node_clamp_0_low	0 0 0		%read{421,421} %write{2147483647,-1}
param	color	node_clamp_0_high	1 1 1		%read{420,420} %write{2147483647,-1}
param	float	N_StandardSurface_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{450,885} %write{2147483647,-1}
param	float	N_StandardSurface_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{884,884} %write{2147483647,-1}
param	float	N_StandardSurface_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{899,901} %write{2147483647,-1}
param	float	N_StandardSurface_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{451,857} %write{2147483647,-1}
param	color	N_StandardSurface_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{451,855} %write{2147483647,-1}
param	float	N_StandardSurface_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{856,868} %write{2147483647,-1}
param	float	N_StandardSurface_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{779,811} %write{2147483647,-1}
param	float	N_StandardSurface_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{454,454} %write{2147483647,-1}
param	float	N_StandardSurface_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{893,895} %write{2147483647,-1}
param	color	N_StandardSurface_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{863,867} %write{2147483647,-1}
param	float	N_StandardSurface_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	N_StandardSurface_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	N_StandardSurface_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	N_StandardSurface_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	N_StandardSurface_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{455,455} %write{2147483647,-1}
param	float	N_StandardSurface_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{887,889} %write{2147483647,-1}
param	color	N_StandardSurface_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{458,458} %write{2147483647,-1}
param	color	N_StandardSurface_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{464,464} %write{2147483647,-1}
param	float	N_StandardSurface_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{464,464} %write{2147483647,-1}
param	float	N_StandardSurface_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{878,878} %write{2147483647,-1}
param	float	N_StandardSurface_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{871,871} %write{2147483647,-1}
param	color	N_StandardSurface_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{870,870} %write{2147483647,-1}
param	float	N_StandardSurface_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{870,870} %write{2147483647,-1}
param	float	N_StandardSurface_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{452,923} %write{2147483647,-1}
param	color	N_StandardSurface_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{471,906} %write{2147483647,-1}
param	float	N_StandardSurface_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{430,626} %write{2147483647,-1}
param	float	N_StandardSurface_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{434,765} %write{2147483647,-1}
param	float	N_StandardSurface_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{449,449} %write{2147483647,-1}
param	float	N_StandardSurface_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{473,840} %write{2147483647,-1}
param	float	N_StandardSurface_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{750,750} %write{2147483647,-1}
param	float	N_StandardSurface_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{452,452} %write{2147483647,-1}
param	float	N_StandardSurface_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{844,856} %write{2147483647,-1}
param	float	N_StandardSurface_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{844,856} %write{2147483647,-1}
param	float	N_StandardSurface_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{476,476} %write{2147483647,-1}
param	color	N_StandardSurface_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{476,476} %write{2147483647,-1}
param	color	N_StandardSurface_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{479,479} %write{2147483647,-1}
param	int	N_StandardSurface_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{465,465} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{948,948}
global	vector	I	%read{909,909} %write{2147483647,-1}
global	normal	N	%read{26,910} %write{2147483647,-1}
global	float	u	%read{13,13} %write{2147483647,-1} %derivs
global	float	v	%read{14,14} %write{2147483647,-1} %derivs
local	float	___669_combine_out.x	%read{20,20} %write{18,18} %mystruct{___669_combine_out} %mystructfield{0} %derivs
local	float	___669_combine_out.y	%read{21,21} %write{19,19} %mystruct{___669_combine_out} %mystructfield{1} %derivs
local	color	___672_missingColor	%read{92,320} %write{88,316}
local	float	___672_st.x	%read{92,320} %write{90,318} %mystruct{___672_st} %mystructfield{0} %derivs
local	float	___672_st.y	%read{92,320} %write{91,319} %mystruct{___672_st} %mystructfield{1} %derivs
local	color	___672_rgb	%read{93,321} %write{92,320}
local	float	___674_N_mult_float_out.x	%read{44,272} %write{41,269} %mystruct{___674_N_mult_float_out} %mystructfield{0} %derivs
local	float	___674_N_mult_float_out.y	%read{45,273} %write{42,270} %mystruct{___674_N_mult_float_out} %mystructfield{1} %derivs
local	float	___674_N_sub_float_out.x	%read{47,275} %write{44,272} %mystruct{___674_N_sub_float_out} %mystructfield{0} %derivs
local	float	___674_N_sub_float_out.y	%read{48,276} %write{45,273} %mystruct{___674_N_sub_float_out} %mystructfield{1} %derivs
local	float	___674_N_divtilesize_float_out.x	%read{50,278} %write{47,275} %mystruct{___674_N_divtilesize_float_out} %mystructfield{0} %derivs
local	float	___674_N_divtilesize_float_out.y	%read{51,279} %write{48,276} %mystruct{___674_N_divtilesize_float_out} %mystructfield{1} %derivs
local	float	___674_N_multtilesize_float_out.x	%read{60,318} %write{50,278} %mystruct{___674_N_multtilesize_float_out} %mystructfield{0} %derivs
local	float	___674_N_multtilesize_float_out.y	%read{75,319} %write{51,279} %mystruct{___674_N_multtilesize_float_out} %mystructfield{1} %derivs
local	float	___674_N_img_float_out	%read{94,322} %write{52,321}
local	color	___675_missingColor	%read{377,377} %write{373,373}
local	float	___675_st.x	%read{377,377} %write{375,375} %mystruct{___675_st} %mystructfield{0} %derivs
local	float	___675_st.y	%read{377,377} %write{376,376} %mystruct{___675_st} %mystructfield{1} %derivs
local	float	___677_N_mult_vector3_out.x	%read{329,329} %write{326,326} %mystruct{___677_N_mult_vector3_out} %mystructfield{0} %derivs
local	float	___677_N_mult_vector3_out.y	%read{330,330} %write{327,327} %mystruct{___677_N_mult_vector3_out} %mystructfield{1} %derivs
local	float	___677_N_sub_vector3_out.x	%read{332,332} %write{329,329} %mystruct{___677_N_sub_vector3_out} %mystructfield{0} %derivs
local	float	___677_N_sub_vector3_out.y	%read{333,333} %write{330,330} %mystruct{___677_N_sub_vector3_out} %mystructfield{1} %derivs
local	float	___677_N_divtilesize_vector3_out.x	%read{335,335} %write{332,332} %mystruct{___677_N_divtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___677_N_divtilesize_vector3_out.y	%read{336,336} %write{333,333} %mystruct{___677_N_divtilesize_vector3_out} %mystructfield{1} %derivs
local	float	___677_N_multtilesize_vector3_out.x	%read{345,375} %write{335,335} %mystruct{___677_N_multtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___677_N_multtilesize_vector3_out.y	%read{360,376} %write{336,336} %mystruct{___677_N_multtilesize_vector3_out} %mystructfield{1} %derivs
local	vector	___677_N_img_vector3_out	%read{378,378} %write{337,377}
local	vector	___678_decodedValue	%read{394,401} %write{391,393}
local	float	___683_roughness_sqr	%read{441,821} %write{433,807}
local	float	___684_aspect	%read{441,818} %write{440,814}
local	vector	___687_nAxis	%read{491,691} %write{487,633}
local	float	___687_s	%read{501,687} %write{488,634}
local	float	___687_c	%read{490,693} %write{489,635}
local	float	___687_oc	%read{492,690} %write{490,636}
local	float	___688_rotationRadians	%read{488,635} %write{485,631}
local	matrix	___688_m	%read{554,741} %write{548,694}
local	float	___688_trans.x	%read{598,744} %write{564,710} %mystruct{___688_trans} %mystructfield{0}
local	float	___688_trans.y	%read{598,744} %write{575,721} %mystruct{___688_trans} %mystructfield{1}
local	float	___688_trans.z	%read{598,744} %write{586,732} %mystruct{___688_trans} %mystructfield{2}
local	float	___688_trans.w	%read{2147483647,-1} %write{597,743} %mystruct{___688_trans} %mystructfield{3}
local	color	___689_r	%read{607,621} %write{606,606}
local	color	___689_r_sqrt	%read{611,612} %write{607,607}
local	color	___689_n_min	%read{614,614} %write{610,610}
local	color	___689_n_max	%read{614,614} %write{613,613}
local	color	___689_np1	%read{617,617} %write{615,615}
local	color	___689_nm1	%read{619,619} %write{616,616}
local	color	___689_k2	%read{624,625} %write{622,624}
local	color	___690_reflection_tint	%read{840,868} %write{834,863}
local	color	___690_transmission_tint	%read{840,868} %write{838,867}
local	color	___692_combine_out	%read{829,829} %write{828,828}
local	float	___704_x	%read{917,917} %write{916,916}
local	float	___705_NdotV	%read{913,913} %write{911,911}
local	color	___705_f	%read{919,919} %write{918,918}
local	closure color	___707_null_closure	%read{830,926} %write{426,426}
local	float	___707_coat_roughness_vector_out.x	%read{443,840} %write{427,446} %mystruct{___707_coat_roughness_vector_out} %mystructfield{0}
local	float	___707_coat_roughness_vector_out.y	%read{445,840} %write{428,447} %mystruct{___707_coat_roughness_vector_out} %mystructfield{1}
local	float	___707_coat_tangent_rotate_degree_in2_tmp	%read{449,449} %write{448,448}
local	float	___707_coat_tangent_rotate_degree_out	%read{485,485} %write{449,449}
local	color	___707_metal_reflectivity_out	%read{605,605} %write{450,450}
local	color	___707_metal_edgecolor_out	%read{614,614} %write{451,451}
local	float	___707_coat_affect_roughness_multiply1_out	%read{626,626} %write{452,452}
local	float	___707_tangent_rotate_degree_in2_tmp	%read{454,454} %write{453,453}
local	float	___707_tangent_rotate_degree_out	%read{631,631} %write{454,454}
local	float	___707_transmission_roughness_add_out	%read{748,748} %write{455,455}
local	float	___707_subsurface_color_nonnegative_in2_tmp	%read{457,457} %write{456,456}
local	color	___707_subsurface_color_nonnegative_out	%read{822,822} %write{458,458}
local	float	___707_coat_clamped_low_tmp	%read{463,463} %write{459,459}
local	float	___707_coat_clamped_high_tmp	%read{462,462} %write{460,460}
local	float	___707_coat_clamped_out	%read{750,750} %write{463,463}
local	color	___707_subsurface_radius_scaled_out	%read{878,878} %write{464,464}
local	float	___707_subsurface_selector_out	%read{880,882} %write{466,466}
local	float	___707_base_color_nonnegative_in2_tmp	%read{468,468} %write{467,467}
local	color	___707_base_color_nonnegative_out	%read{823,823} %write{469,469}
local	color	___707_coat_attenuation_bg_tmp	%read{471,471} %write{470,470}
local	color	___707_coat_attenuation_out	%read{903,903} %write{471,471}
local	float	___707_one_minus_coat_ior_in1_tmp	%read{473,473} %write{472,472}
local	float	___707_one_minus_coat_ior_out	%read{751,751} %write{473,473}
local	float	___707_one_plus_coat_ior_in1_tmp	%read{475,475} %write{474,474}
local	float	___707_one_plus_coat_ior_out	%read{751,751} %write{475,475}
local	color	___707_emission_weight_out	%read{905,905} %write{476,476}
local	color	___707_opacity_luminance_out	%read{754,754} %write{477,480}
local	vector	___707_coat_tangent_rotate_out	%read{755,755} %write{481,598}
local	color	___707_artistic_ior_ior	%read{615,844} %write{599,614}
local	color	___707_artistic_ior_extinction	%read{844,844} %write{600,625}
local	float	___707_coat_affect_roughness_multiply2_out	%read{757,760} %write{626,626}
local	vector	___707_tangent_rotate_out	%read{758,758} %write{627,744}
local	float	___707_transmission_roughness_clamped_low_tmp	%read{749,749} %write{745,745}
local	float	___707_transmission_roughness_clamped_high_tmp	%read{748,748} %write{746,746}
local	float	___707_transmission_roughness_clamped_out	%read{760,760} %write{749,749}
local	float	___707_coat_gamma_multiply_out	%read{762,762} %write{750,750}
local	float	___707_coat_ior_to_F0_sqrt_out	%read{763,763} %write{751,751}
local	int	___707_opacity_luminance_float_index_tmp	%read{754,754} %write{752,752}
local	float	___707_opacity_luminance_float_out	%read{932,932} %write{754,754}
local	vector	___707_coat_tangent_rotate_normalize_out	%read{768,768} %write{755,755}
local	float	___707_coat_affected_roughness_fg_tmp	%read{757,757} %write{756,756}
local	float	___707_coat_affected_roughness_out	%read{775,775} %write{757,757}
local	vector	___707_tangent_rotate_normalize_out	%read{797,797} %write{758,758}
local	float	___707_coat_affected_transmission_roughness_fg_tmp	%read{760,760} %write{759,759}
local	float	___707_coat_affected_transmission_roughness_out	%read{804,804} %write{760,760}
local	float	___707_coat_gamma_in2_tmp	%read{762,762} %write{761,761}
local	float	___707_coat_gamma_out	%read{822,823} %write{762,762}
local	float	___707_coat_ior_to_F0_out	%read{825,825} %write{763,763}
local	float	___707_coat_tangent_value2_tmp	%read{765,765} %write{764,764}
local	vector	___707_coat_tangent_out	%read{840,840} %write{768,770}
local	float	___707_main_roughness_out.x	%read{788,856} %write{772,791} %mystruct{___707_main_roughness_out} %mystructfield{0}
local	float	___707_main_roughness_out.y	%read{790,856} %write{773,792} %mystruct{___707_main_roughness_out} %mystructfield{1}
local	float	___707_main_tangent_value2_tmp	%read{794,794} %write{793,793}
local	vector	___707_main_tangent_out	%read{844,868} %write{797,799}
local	float	___707_transmission_roughness_out.x	%read{817,868} %write{801,820} %mystruct{___707_transmission_roughness_out} %mystructfield{0}
local	float	___707_transmission_roughness_out.y	%read{819,868} %write{802,821} %mystruct{___707_transmission_roughness_out} %mystructfield{1}
local	color	___707_coat_affected_subsurface_color_out	%read{873,877} %write{822,822}
local	color	___707_coat_affected_diffuse_color_out	%read{884,884} %write{823,823}
local	float	___707_one_minus_coat_ior_to_F0_in1_tmp	%read{825,825} %write{824,824}
local	float	___707_one_minus_coat_ior_to_F0_out	%read{828,828} %write{825,825}
local	color	___707_emission_color0_out	%read{918,918} %write{826,829}
local	closure color	___707_coat_bsdf_out	%read{904,904} %write{830,841}
local	float	___707_metal_bsdf_weight_tmp	%read{845,845} %write{842,842}
local	string	___707_metal_bsdf_distribution_tmp	%read{844,844} %write{843,843}
local	closure color	___707_metal_bsdf_out	%read{901,901} %write{845,845}
local	closure color	___707_specular_bsdf_out	%read{897,897} %write{846,857}
local	closure color	___707_transmission_bsdf_out	%read{895,895} %write{858,869}
local	closure color	___707_sheen_bsdf_out	%read{891,891} %write{871,871}
local	float	___707_translucent_bsdf_weight_tmp	%read{874,874} %write{872,872}
local	closure color	___707_translucent_bsdf_out	%read{882,882} %write{874,874}
local	closure color	___707_subsurface_bsdf_out	%read{881,881} %write{875,878}
local	closure color	___707_selected_subsurface_bsdf_out	%read{889,889} %write{883,883}
local	closure color	___707_diffuse_bsdf_out	%read{888,888} %write{885,885}
local	closure color	___707_subsurface_mix_out	%read{891,891} %write{890,890}
local	closure color	___707_sheen_layer_out	%read{894,894} %write{891,891}
local	closure color	___707_transmission_mix_out	%read{897,897} %write{896,896}
local	closure color	___707_specular_layer_out	%read{900,900} %write{897,897}
local	closure color	___707_metalness_mix_out	%read{903,903} %write{902,902}
local	closure color	___707_thin_film_layer_attenuated_out	%read{904,904} %write{903,903}
local	closure color	___707_coat_layer_out	%read{929,929} %write{904,904}
local	closure color	___707_emission_edf_out	%read{906,922} %write{905,905}
local	closure color	___707_coat_tinted_emission_edf_out	%read{919,919} %write{906,906}
local	closure color	___707_coat_emission_edf_out	%read{923,923} %write{907,919}
local	closure color	___707_blended_coat_emission_edf_out	%read{930,930} %write{924,924}
local	closure color	___707_shader_constructor_out.bsdf	%read{935,935} %write{925,929} %mystruct{___707_shader_constructor_out} %mystructfield{0}
local	closure color	___707_shader_constructor_out.edf	%read{936,936} %write{926,930} %mystruct{___707_shader_constructor_out} %mystructfield{1}
local	float	___707_shader_constructor_out.opacity	%read{934,937} %write{927,934} %mystruct{___707_shader_constructor_out} %mystructfield{2}
local	float	___708_opacity_weight	%read{943,945} %write{941,941}
local	closure color	null_closure	%read{422,423} %write{0,0}
local	string	node_tiledimage_float_26_file_.filename	%read{54,92} %write{1,1} %mystruct{node_tiledimage_float_26_file_} %mystructfield{0}
local	string	node_tiledimage_float_26_file_.colorspace	%read{2147483647,-1} %write{2,2} %mystruct{node_tiledimage_float_26_file_} %mystructfield{1}
local	string	node_tiledimage_float_7_file_.filename	%read{111,149} %write{3,3} %mystruct{node_tiledimage_float_7_file_} %mystructfield{0}
local	string	node_tiledimage_float_7_file_.colorspace	%read{2147483647,-1} %write{4,4} %mystruct{node_tiledimage_float_7_file_} %mystructfield{1}
local	string	node_tiledimage_float_24_file_.filename	%read{168,206} %write{5,5} %mystruct{node_tiledimage_float_24_file_} %mystructfield{0}
local	string	node_tiledimage_float_24_file_.colorspace	%read{2147483647,-1} %write{6,6} %mystruct{node_tiledimage_float_24_file_} %mystructfield{1}
local	string	node_tiledimage_float_10_file_.filename	%read{225,263} %write{7,7} %mystruct{node_tiledimage_float_10_file_} %mystructfield{0}
local	string	node_tiledimage_float_10_file_.colorspace	%read{2147483647,-1} %write{8,8} %mystruct{node_tiledimage_float_10_file_} %mystructfield{1}
local	string	node_tiledimage_float_22_file_.filename	%read{282,320} %write{9,9} %mystruct{node_tiledimage_float_22_file_} %mystructfield{0}
local	string	node_tiledimage_float_22_file_.colorspace	%read{2147483647,-1} %write{10,10} %mystruct{node_tiledimage_float_22_file_} %mystructfield{1}
local	string	node_tiledimage_vector3_27_file_.filename	%read{339,377} %write{11,11} %mystruct{node_tiledimage_vector3_27_file_} %mystructfield{0}
local	string	node_tiledimage_vector3_27_file_.colorspace	%read{2147483647,-1} %write{12,12} %mystruct{node_tiledimage_vector3_27_file_} %mystructfield{1}
local	float	geomprop_UV0_out1.x	%read{41,326} %write{13,13} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{42,327} %write{14,14} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	node_convert_1_out.x	%read{41,326} %write{15,20} %mystruct{node_convert_1_out} %mystructfield{0} %derivs
local	float	node_convert_1_out.y	%read{42,327} %write{16,21} %mystruct{node_convert_1_out} %mystructfield{1} %derivs
local	color	node_rgbtohsv_12_out	%read{412,412} %write{22,24}
local	vector	geomprop_Nworld_out1	%read{402,840} %write{26,26}
local	vector	geomprop_Tworld_out1	%read{395,799} %write{31,31}
local	vector	geomprop_Bworld_out1	%read{398,398} %write{37,37}
local	float	node_tiledimage_float_26_out	%read{379,380} %write{38,94}
local	float	node_tiledimage_float_7_out	%read{381,417} %write{95,151}
local	float	node_tiledimage_float_24_out	%read{382,382} %write{152,208}
local	float	node_tiledimage_float_10_out	%read{383,418} %write{209,265}
local	float	node_tiledimage_float_22_out	%read{409,409} %write{266,322}
local	vector	node_tiledimage_vector3_27_out	%read{389,392} %write{323,378}
local	float	node_multiply_25_out	%read{405,405} %write{379,379}
local	float	node_multiply_20_out	%read{408,408} %write{380,380}
local	color	node_multiply_9_out	%read{418,418} %write{381,381}
local	float	node_multiply_23_out	%read{416,416} %write{382,382}
local	float	node_max_1_out	%read{406,406} %write{383,383}
local	vector	node_normalmap_3_out	%read{633,884} %write{384,404}
local	float	node_add_19_out	%read{407,408} %write{405,405}
local	float	node_divide_21_out	%read{409,409} %write{406,406}
local	float	node_subtract_18_out	%read{410,410} %write{407,407}
local	float	node_multiply_15_out	%read{411,411} %write{408,408}
local	float	node_multiply_1_out	%read{455,757} %write{409,409}
local	float	node_multiply_14_out	%read{411,411} %write{410,410}
local	color	node_combine3_color3_13_out	%read{412,412} %write{411,411}
local	color	node_add_16_out	%read{415,415} %write{412,412}
local	color	node_hsvtorgb_17_out	%read{416,416} %write{413,415}
local	color	node_mix_6_out	%read{417,417} %write{416,416}
local	color	node_multiply_5_out	%read{418,418} %write{417,417}
local	color	node_mix_8_out	%read{420,420} %write{418,418}
local	color	node_clamp_0_out	%read{450,469} %write{421,421}
local	closure color	N_StandardSurface_out.bsdf	%read{942,942} %write{422,935} %mystruct{N_StandardSurface_out} %mystructfield{0}
local	closure color	N_StandardSurface_out.edf	%read{942,942} %write{423,936} %mystruct{N_StandardSurface_out} %mystructfield{1}
local	float	N_StandardSurface_out.opacity	%read{940,940} %write{424,937} %mystruct{N_StandardSurface_out} %mystructfield{2}
local	closure color	M_BrickPattern_out	%read{948,948} %write{947,947}
const	int	$const1	0		%read{0,752} %write{2147483647,-1}
const	float	$const2	0		%read{15,941} %write{2147483647,-1}
const	string	$const3	"NG_convert_float_vector2"		%read{17,17} %write{2147483647,-1}
const	color	$const4	0 0 0		%read{22,918} %write{2147483647,-1}
const	string	$const5	"mx_rgbtohsv_color3"		%read{23,23} %write{2147483647,-1}
const	string	$const6	"rgb"		%read{24,415} %write{2147483647,-1}
const	string	$const7	"hsv"		%read{24,415} %write{2147483647,-1}
const	string	$const8	"transform"		%read{25,699} %write{2147483647,-1}
const	string	$const9	"common"		%read{26,26} %write{2147483647,-1}
temp	vector	$tmp1	%read{31,31} %write{30,30}
const	int	$const10	2		%read{27,738} %write{2147483647,-1}
temp	float	$tmp2	%read{30,30} %write{27,27}
temp	float	$tmp3	%read{29,29} %write{28,28}
temp	float	$tmp4	%read{30,30} %write{29,29}
temp	vector	$tmp5	%read{37,37} %write{36,36}
temp	vector	$tmp6	%read{36,36} %write{35,35}
temp	float	$tmp7	%read{35,35} %write{32,32}
temp	float	$tmp8	%read{34,34} %write{33,33}
temp	float	$tmp9	%read{35,35} %write{34,34}
const	string	$const11	"NG_tiledimage_float"		%read{39,267} %write{2147483647,-1}
const	string	$const12	"__operator__mul__"		%read{40,334} %write{2147483647,-1}
const	string	$const13	"__operator__sub__"		%read{43,328} %write{2147483647,-1}
const	string	$const14	"__operator__div__"		%read{46,331} %write{2147483647,-1}
const	string	$const15	""		%read{54,377} %write{2147483647,-1}
const	string	$const16	"periodic"		%read{57,377} %write{2147483647,-1}
const	string	$const17	"mx_image_float"		%read{53,281} %write{2147483647,-1}
temp	int	$tmp10	%read{55,55} %write{54,54}
temp	int	$tmp11	%read{56,70} %write{55,69}
const	string	$const18	"constant"		%read{57,357} %write{2147483647,-1}
temp	int	$tmp12	%read{58,58} %write{57,57}
temp	int	$tmp13	%read{59,68} %write{58,67}
temp	int	$tmp14	%read{61,61} %write{60,60}
temp	int	$tmp15	%read{62,66} %write{61,65}
const	float	$const19	1		%read{63,945} %write{2147483647,-1}
temp	int	$tmp16	%read{64,64} %write{63,63}
temp	int	$tmp17	%read{65,65} %write{64,64}
temp	int	$tmp18	%read{67,67} %write{66,66}
temp	int	$tmp19	%read{69,69} %write{68,68}
temp	int	$tmp20	%read{71,85} %write{70,84}
temp	int	$tmp21	%read{73,73} %write{72,72}
temp	int	$tmp22	%read{74,83} %write{73,82}
temp	int	$tmp23	%read{76,76} %write{75,75}
temp	int	$tmp24	%read{77,81} %write{76,80}
temp	int	$tmp25	%read{79,79} %write{78,78}
temp	int	$tmp26	%read{80,80} %write{79,79}
temp	int	$tmp27	%read{82,82} %write{81,81}
temp	int	$tmp28	%read{84,84} %write{83,83}
const	string	$const20	"mx_transform_uv"		%read{89,374} %write{2147483647,-1}
const	string	$const21	"subimage"		%read{92,377} %write{2147483647,-1}
const	string	$const22	"interp"		%read{92,377} %write{2147483647,-1}
const	string	$const23	"missingcolor"		%read{92,377} %write{2147483647,-1}
const	string	$const24	"swrap"		%read{92,377} %write{2147483647,-1}
const	string	$const25	"twrap"		%read{92,377} %write{2147483647,-1}
temp	int	$tmp29	%read{112,112} %write{111,111}
temp	int	$tmp30	%read{113,127} %write{112,126}
temp	int	$tmp31	%read{115,115} %write{114,114}
temp	int	$tmp32	%read{116,125} %write{115,124}
temp	int	$tmp33	%read{118,118} %write{117,117}
temp	int	$tmp34	%read{119,123} %write{118,122}
temp	int	$tmp35	%read{121,121} %write{120,120}
temp	int	$tmp36	%read{122,122} %write{121,121}
temp	int	$tmp37	%read{124,124} %write{123,123}
temp	int	$tmp38	%read{126,126} %write{125,125}
temp	int	$tmp39	%read{128,142} %write{127,141}
temp	int	$tmp40	%read{130,130} %write{129,129}
temp	int	$tmp41	%read{131,140} %write{130,139}
temp	int	$tmp42	%read{133,133} %write{132,132}
temp	int	$tmp43	%read{134,138} %write{133,137}
temp	int	$tmp44	%read{136,136} %write{135,135}
temp	int	$tmp45	%read{137,137} %write{136,136}
temp	int	$tmp46	%read{139,139} %write{138,138}
temp	int	$tmp47	%read{141,141} %write{140,140}
temp	int	$tmp48	%read{169,169} %write{168,168}
temp	int	$tmp49	%read{170,184} %write{169,183}
temp	int	$tmp50	%read{172,172} %write{171,171}
temp	int	$tmp51	%read{173,182} %write{172,181}
temp	int	$tmp52	%read{175,175} %write{174,174}
temp	int	$tmp53	%read{176,180} %write{175,179}
temp	int	$tmp54	%read{178,178} %write{177,177}
temp	int	$tmp55	%read{179,179} %write{178,178}
temp	int	$tmp56	%read{181,181} %write{180,180}
temp	int	$tmp57	%read{183,183} %write{182,182}
temp	int	$tmp58	%read{185,199} %write{184,198}
temp	int	$tmp59	%read{187,187} %write{186,186}
temp	int	$tmp60	%read{188,197} %write{187,196}
temp	int	$tmp61	%read{190,190} %write{189,189}
temp	int	$tmp62	%read{191,195} %write{190,194}
temp	int	$tmp63	%read{193,193} %write{192,192}
temp	int	$tmp64	%read{194,194} %write{193,193}
temp	int	$tmp65	%read{196,196} %write{195,195}
temp	int	$tmp66	%read{198,198} %write{197,197}
temp	int	$tmp67	%read{226,226} %write{225,225}
temp	int	$tmp68	%read{227,241} %write{226,240}
temp	int	$tmp69	%read{229,229} %write{228,228}
temp	int	$tmp70	%read{230,239} %write{229,238}
temp	int	$tmp71	%read{232,232} %write{231,231}
temp	int	$tmp72	%read{233,237} %write{232,236}
temp	int	$tmp73	%read{235,235} %write{234,234}
temp	int	$tmp74	%read{236,236} %write{235,235}
temp	int	$tmp75	%read{238,238} %write{237,237}
temp	int	$tmp76	%read{240,240} %write{239,239}
temp	int	$tmp77	%read{242,256} %write{241,255}
temp	int	$tmp78	%read{244,244} %write{243,243}
temp	int	$tmp79	%read{245,254} %write{244,253}
temp	int	$tmp80	%read{247,247} %write{246,246}
temp	int	$tmp81	%read{248,252} %write{247,251}
temp	int	$tmp82	%read{250,250} %write{249,249}
temp	int	$tmp83	%read{251,251} %write{250,250}
temp	int	$tmp84	%read{253,253} %write{252,252}
temp	int	$tmp85	%read{255,255} %write{254,254}
temp	int	$tmp86	%read{283,283} %write{282,282}
temp	int	$tmp87	%read{284,298} %write{283,297}
temp	int	$tmp88	%read{286,286} %write{285,285}
temp	int	$tmp89	%read{287,296} %write{286,295}
temp	int	$tmp90	%read{289,289} %write{288,288}
temp	int	$tmp91	%read{290,294} %write{289,293}
temp	int	$tmp92	%read{292,292} %write{291,291}
temp	int	$tmp93	%read{293,293} %write{292,292}
temp	int	$tmp94	%read{295,295} %write{294,294}
temp	int	$tmp95	%read{297,297} %write{296,296}
temp	int	$tmp96	%read{299,313} %write{298,312}
temp	int	$tmp97	%read{301,301} %write{300,300}
temp	int	$tmp98	%read{302,311} %write{301,310}
temp	int	$tmp99	%read{304,304} %write{303,303}
temp	int	$tmp100	%read{305,309} %write{304,308}
temp	int	$tmp101	%read{307,307} %write{306,306}
temp	int	$tmp102	%read{308,308} %write{307,307}
temp	int	$tmp103	%read{310,310} %write{309,309}
temp	int	$tmp104	%read{312,312} %write{311,311}
const	vector	$const26	0 0 0		%read{323,627} %write{2147483647,-1}
const	string	$const27	"NG_tiledimage_vector3"		%read{324,324} %write{2147483647,-1}
const	string	$const28	"mx_image_vector3"		%read{338,338} %write{2147483647,-1}
temp	int	$tmp105	%read{340,340} %write{339,339}
temp	int	$tmp106	%read{341,355} %write{340,354}
temp	int	$tmp107	%read{343,343} %write{342,342}
temp	int	$tmp108	%read{344,353} %write{343,352}
temp	int	$tmp109	%read{346,346} %write{345,345}
temp	int	$tmp110	%read{347,351} %write{346,350}
temp	int	$tmp111	%read{349,349} %write{348,348}
temp	int	$tmp112	%read{350,350} %write{349,349}
temp	int	$tmp113	%read{352,352} %write{351,351}
temp	int	$tmp114	%read{354,354} %write{353,353}
temp	int	$tmp115	%read{356,370} %write{355,369}
temp	int	$tmp116	%read{358,358} %write{357,357}
temp	int	$tmp117	%read{359,368} %write{358,367}
temp	int	$tmp118	%read{361,361} %write{360,360}
temp	int	$tmp119	%read{362,366} %write{361,365}
temp	int	$tmp120	%read{364,364} %write{363,363}
temp	int	$tmp121	%read{365,365} %write{364,364}
temp	int	$tmp122	%read{367,367} %write{366,366}
temp	int	$tmp123	%read{369,369} %write{368,368}
const	string	$const29	"mx_normalmap_float"		%read{385,385} %write{2147483647,-1}
temp	float	$tmp124.x	%read{396,396} %write{386,386}
temp	float	$tmp124.y	%read{399,399} %write{387,387}
const	string	$const30	"mx_normalmap_vector2"		%read{388,388} %write{2147483647,-1}
temp	int	$tmp126	%read{390,390} %write{389,389}
const	vector	$const31	0 0 1		%read{391,391} %write{2147483647,-1}
const	float	$const32	2		%read{392,392} %write{2147483647,-1}
temp	vector	$tmp127	%read{393,393} %write{392,392}
temp	float	$tmp128	%read{395,395} %write{394,394}
temp	vector	$tmp129	%read{396,396} %write{395,395}
temp	vector	$tmp130	%read{400,400} %write{396,396}
const	int	$const33	1		%read{397,735} %write{2147483647,-1}
temp	float	$tmp131	%read{398,398} %write{397,397}
temp	vector	$tmp132	%read{399,399} %write{398,398}
temp	vector	$tmp133	%read{400,400} %write{399,399}
temp	vector	$tmp134	%read{403,403} %write{400,400}
temp	float	$tmp135	%read{402,402} %write{401,401}
temp	vector	$tmp136	%read{403,403} %write{402,402}
temp	vector	$tmp137	%read{404,404} %write{403,403}
const	string	$const34	"mx_hsvtorgb_color3"		%read{414,414} %write{2147483647,-1}
const	string	$const35	"clamp"		%read{419,939} %write{2147483647,-1}
temp	color	$tmp138	%read{421,421} %write{420,420}
const	string	$const36	"NG_standard_surface_surfaceshader_100"		%read{425,425} %write{2147483647,-1}
const	string	$const37	"mx_roughness_anisotropy"		%read{429,803} %write{2147483647,-1}
temp	float	$tmp139	%read{432,432} %write{430,430}
const	float	$const38	1e-08		%read{433,807} %write{2147483647,-1}
temp	float	$tmp140	%read{433,433} %write{432,432}
temp	int	$tmp141	%read{435,435} %write{434,434}
temp	float	$tmp142	%read{439,439} %write{438,438}
const	float	$const39	0.98		%read{437,811} %write{2147483647,-1}
temp	float	$tmp143	%read{438,438} %write{437,437}
temp	float	$tmp144	%read{440,440} %write{439,439}
temp	float	$tmp145	%read{442,442} %write{441,441}
const	float	$const40	360		%read{448,453} %write{2147483647,-1}
temp	color	$tmp146	%read{458,458} %write{457,457}
temp	float	$tmp147	%read{463,463} %write{462,462}
temp	float	$tmp148	%read{466,466} %write{465,465}
temp	color	$tmp149	%read{469,469} %write{468,468}
const	color	$const41	1 1 1		%read{470,839} %write{2147483647,-1}
const	color	$const42	0.272229 0.674082 0.053689		%read{479,479} %write{2147483647,-1}
const	string	$const43	"mx_luminance_color3"		%read{478,478} %write{2147483647,-1}
temp	float	$tmp151	%read{480,480} %write{479,479}
const	string	$const44	"mx_rotate_vector3"		%read{482,628} %write{2147483647,-1}
const	string	$const45	"radians"		%read{483,629} %write{2147483647,-1}
const	float	$const46	3.1415927		%read{484,630} %write{2147483647,-1}
const	float	$const47	180		%read{484,630} %write{2147483647,-1}
temp	float	$tmp152	%read{485,485} %write{484,484}
const	string	$const48	"rotationMatrix"		%read{486,632} %write{2147483647,-1}
temp	float	$tmp153	%read{492,492} %write{491,491}
temp	float	$tmp154	%read{494,494} %write{492,492}
temp	float	$tmp155	%read{494,494} %write{493,493}
temp	float	$tmp156	%read{495,495} %write{494,494}
temp	float	$tmp157	%read{548,548} %write{495,495}
temp	float	$tmp158	%read{497,497} %write{496,496}
temp	float	$tmp159	%read{499,499} %write{497,497}
temp	float	$tmp160	%read{499,499} %write{498,498}
temp	float	$tmp161	%read{502,502} %write{499,499}
temp	float	$tmp162	%read{501,501} %write{500,500}
temp	float	$tmp163	%read{502,502} %write{501,501}
temp	float	$tmp164	%read{548,548} %write{502,502}
temp	float	$tmp165	%read{504,504} %write{503,503}
temp	float	$tmp166	%read{506,506} %write{504,504}
temp	float	$tmp167	%read{506,506} %write{505,505}
temp	float	$tmp168	%read{509,509} %write{506,506}
temp	float	$tmp169	%read{508,508} %write{507,507}
temp	float	$tmp170	%read{509,509} %write{508,508}
temp	float	$tmp171	%read{548,548} %write{509,509}
temp	float	$tmp172	%read{511,511} %write{510,510}
temp	float	$tmp173	%read{513,513} %write{511,511}
temp	float	$tmp174	%read{513,513} %write{512,512}
temp	float	$tmp175	%read{516,516} %write{513,513}
temp	float	$tmp176	%read{515,515} %write{514,514}
temp	float	$tmp177	%read{516,516} %write{515,515}
temp	float	$tmp178	%read{548,548} %write{516,516}
temp	float	$tmp179	%read{518,518} %write{517,517}
temp	float	$tmp180	%read{520,520} %write{518,518}
temp	float	$tmp181	%read{520,520} %write{519,519}
temp	float	$tmp182	%read{521,521} %write{520,520}
temp	float	$tmp183	%read{548,548} %write{521,521}
temp	float	$tmp184	%read{523,523} %write{522,522}
temp	float	$tmp185	%read{525,525} %write{523,523}
temp	float	$tmp186	%read{525,525} %write{524,524}
temp	float	$tmp187	%read{528,528} %write{525,525}
temp	float	$tmp188	%read{527,527} %write{526,526}
temp	float	$tmp189	%read{528,528} %write{527,527}
temp	float	$tmp190	%read{548,548} %write{528,528}
temp	float	$tmp191	%read{530,530} %write{529,529}
temp	float	$tmp192	%read{532,532} %write{530,530}
temp	float	$tmp193	%read{532,532} %write{531,531}
temp	float	$tmp194	%read{535,535} %write{532,532}
temp	float	$tmp195	%read{534,534} %write{533,533}
temp	float	$tmp196	%read{535,535} %write{534,534}
temp	float	$tmp197	%read{548,548} %write{535,535}
temp	float	$tmp198	%read{537,537} %write{536,536}
temp	float	$tmp199	%read{539,539} %write{537,537}
temp	float	$tmp200	%read{539,539} %write{538,538}
temp	float	$tmp201	%read{542,542} %write{539,539}
temp	float	$tmp202	%read{541,541} %write{540,540}
temp	float	$tmp203	%read{542,542} %write{541,541}
temp	float	$tmp204	%read{548,548} %write{542,542}
temp	float	$tmp205	%read{544,544} %write{543,543}
temp	float	$tmp206	%read{546,546} %write{544,544}
temp	float	$tmp207	%read{546,546} %write{545,545}
temp	float	$tmp208	%read{547,547} %write{546,546}
temp	float	$tmp209	%read{548,548} %write{547,547}
temp	float	$tmp210.x	%read{555,588} %write{549,549}
temp	float	$tmp210.y	%read{557,590} %write{550,550}
temp	float	$tmp210.z	%read{560,593} %write{551,551}
temp	float	$tmp210.w	%read{563,596} %write{552,552}
temp	float	$tmp211	%read{555,555} %write{554,554}
temp	float	$tmp212	%read{558,558} %write{555,555}
temp	float	$tmp213	%read{557,557} %write{556,556}
temp	float	$tmp214	%read{558,558} %write{557,557}
temp	float	$tmp215	%read{561,561} %write{558,558}
temp	float	$tmp216	%read{560,560} %write{559,559}
temp	float	$tmp217	%read{561,561} %write{560,560}
temp	float	$tmp218	%read{564,564} %write{561,561}
const	int	$const49	3		%read{562,741} %write{2147483647,-1}
temp	float	$tmp219	%read{563,563} %write{562,562}
temp	float	$tmp220	%read{564,564} %write{563,563}
temp	float	$tmp221	%read{566,566} %write{565,565}
temp	float	$tmp222	%read{569,569} %write{566,566}
temp	float	$tmp223	%read{568,568} %write{567,567}
temp	float	$tmp224	%read{569,569} %write{568,568}
temp	float	$tmp225	%read{572,572} %write{569,569}
temp	float	$tmp226	%read{571,571} %write{570,570}
temp	float	$tmp227	%read{572,572} %write{571,571}
temp	float	$tmp228	%read{575,575} %write{572,572}
temp	float	$tmp229	%read{574,574} %write{573,573}
temp	float	$tmp230	%read{575,575} %write{574,574}
temp	float	$tmp231	%read{577,577} %write{576,576}
temp	float	$tmp232	%read{580,580} %write{577,577}
temp	float	$tmp233	%read{579,579} %write{578,578}
temp	float	$tmp234	%read{580,580} %write{579,579}
temp	float	$tmp235	%read{583,583} %write{580,580}
temp	float	$tmp236	%read{582,582} %write{581,581}
temp	float	$tmp237	%read{583,583} %write{582,582}
temp	float	$tmp238	%read{586,586} %write{583,583}
temp	float	$tmp239	%read{585,585} %write{584,584}
temp	float	$tmp240	%read{586,586} %write{585,585}
temp	float	$tmp241	%read{588,588} %write{587,587}
temp	float	$tmp242	%read{591,591} %write{588,588}
temp	float	$tmp243	%read{590,590} %write{589,589}
temp	float	$tmp244	%read{591,591} %write{590,590}
temp	float	$tmp245	%read{594,594} %write{591,591}
temp	float	$tmp246	%read{593,593} %write{592,592}
temp	float	$tmp247	%read{594,594} %write{593,593}
temp	float	$tmp248	%read{597,597} %write{594,594}
temp	float	$tmp249	%read{596,596} %write{595,595}
temp	float	$tmp250	%read{597,597} %write{596,596}
const	string	$const50	"mx_artistic_ior"		%read{601,601} %write{2147483647,-1}
temp	color	$tmp251	%read{606,606} %write{602,602}
const	float	$const51	0.99		%read{603,603} %write{2147483647,-1}
temp	color	$tmp252	%read{605,605} %write{603,603}
temp	color	$tmp253	%read{606,606} %write{605,605}
temp	color	$tmp254	%read{610,610} %write{608,608}
temp	color	$tmp255	%read{610,610} %write{609,609}
temp	color	$tmp256	%read{613,613} %write{611,611}
temp	color	$tmp257	%read{613,613} %write{612,612}
temp	color	$tmp258	%read{618,618} %write{617,617}
temp	color	$tmp259	%read{620,620} %write{618,618}
temp	color	$tmp260	%read{620,620} %write{619,619}
temp	color	$tmp261	%read{622,622} %write{620,620}
temp	color	$tmp262	%read{622,622} %write{621,621}
temp	color	$tmp263	%read{624,624} %write{623,623}
temp	float	$tmp264	%read{631,631} %write{630,630}
temp	float	$tmp265	%read{638,638} %write{637,637}
temp	float	$tmp266	%read{640,640} %write{638,638}
temp	float	$tmp267	%read{640,640} %write{639,639}
temp	float	$tmp268	%read{641,641} %write{640,640}
temp	float	$tmp269	%read{694,694} %write{641,641}
temp	float	$tmp270	%read{643,643} %write{642,642}
temp	float	$tmp271	%read{645,645} %write{643,643}
temp	float	$tmp272	%read{645,645} %write{644,644}
temp	float	$tmp273	%read{648,648} %write{645,645}
temp	float	$tmp274	%read{647,647} %write{646,646}
temp	float	$tmp275	%read{648,648} %write{647,647}
temp	float	$tmp276	%read{694,694} %write{648,648}
temp	float	$tmp277	%read{650,650} %write{649,649}
temp	float	$tmp278	%read{652,652} %write{650,650}
temp	float	$tmp279	%read{652,652} %write{651,651}
temp	float	$tmp280	%read{655,655} %write{652,652}
temp	float	$tmp281	%read{654,654} %write{653,653}
temp	float	$tmp282	%read{655,655} %write{654,654}
temp	float	$tmp283	%read{694,694} %write{655,655}
temp	float	$tmp284	%read{657,657} %write{656,656}
temp	float	$tmp285	%read{659,659} %write{657,657}
temp	float	$tmp286	%read{659,659} %write{658,658}
temp	float	$tmp287	%read{662,662} %write{659,659}
temp	float	$tmp288	%read{661,661} %write{660,660}
temp	float	$tmp289	%read{662,662} %write{661,661}
temp	float	$tmp290	%read{694,694} %write{662,662}
temp	float	$tmp291	%read{664,664} %write{663,663}
temp	float	$tmp292	%read{666,666} %write{664,664}
temp	float	$tmp293	%read{666,666} %write{665,665}
temp	float	$tmp294	%read{667,667} %write{666,666}
temp	float	$tmp295	%read{694,694} %write{667,667}
temp	float	$tmp296	%read{669,669} %write{668,668}
temp	float	$tmp297	%read{671,671} %write{669,669}
temp	float	$tmp298	%read{671,671} %write{670,670}
temp	float	$tmp299	%read{674,674} %write{671,671}
temp	float	$tmp300	%read{673,673} %write{672,672}
temp	float	$tmp301	%read{674,674} %write{673,673}
temp	float	$tmp302	%read{694,694} %write{674,674}
temp	float	$tmp303	%read{676,676} %write{675,675}
temp	float	$tmp304	%read{678,678} %write{676,676}
temp	float	$tmp305	%read{678,678} %write{677,677}
temp	float	$tmp306	%read{681,681} %write{678,678}
temp	float	$tmp307	%read{680,680} %write{679,679}
temp	float	$tmp308	%read{681,681} %write{680,680}
temp	float	$tmp309	%read{694,694} %write{681,681}
temp	float	$tmp310	%read{683,683} %write{682,682}
temp	float	$tmp311	%read{685,685} %write{683,683}
temp	float	$tmp312	%read{685,685} %write{684,684}
temp	float	$tmp313	%read{688,688} %write{685,685}
temp	float	$tmp314	%read{687,687} %write{686,686}
temp	float	$tmp315	%read{688,688} %write{687,687}
temp	float	$tmp316	%read{694,694} %write{688,688}
temp	float	$tmp317	%read{690,690} %write{689,689}
temp	float	$tmp318	%read{692,692} %write{690,690}
temp	float	$tmp319	%read{692,692} %write{691,691}
temp	float	$tmp320	%read{693,693} %write{692,692}
temp	float	$tmp321	%read{694,694} %write{693,693}
temp	float	$tmp322.x	%read{701,734} %write{695,695}
temp	float	$tmp322.y	%read{703,736} %write{696,696}
temp	float	$tmp322.z	%read{706,739} %write{697,697}
temp	float	$tmp322.w	%read{709,742} %write{698,698}
temp	float	$tmp323	%read{701,701} %write{700,700}
temp	float	$tmp324	%read{704,704} %write{701,701}
temp	float	$tmp325	%read{703,703} %write{702,702}
temp	float	$tmp326	%read{704,704} %write{703,703}
temp	float	$tmp327	%read{707,707} %write{704,704}
temp	float	$tmp328	%read{706,706} %write{705,705}
temp	float	$tmp329	%read{707,707} %write{706,706}
temp	float	$tmp330	%read{710,710} %write{707,707}
temp	float	$tmp331	%read{709,709} %write{708,708}
temp	float	$tmp332	%read{710,710} %write{709,709}
temp	float	$tmp333	%read{712,712} %write{711,711}
temp	float	$tmp334	%read{715,715} %write{712,712}
temp	float	$tmp335	%read{714,714} %write{713,713}
temp	float	$tmp336	%read{715,715} %write{714,714}
temp	float	$tmp337	%read{718,718} %write{715,715}
temp	float	$tmp338	%read{717,717} %write{716,716}
temp	float	$tmp339	%read{718,718} %write{717,717}
temp	float	$tmp340	%read{721,721} %write{718,718}
temp	float	$tmp341	%read{720,720} %write{719,719}
temp	float	$tmp342	%read{721,721} %write{720,720}
temp	float	$tmp343	%read{723,723} %write{722,722}
temp	float	$tmp344	%read{726,726} %write{723,723}
temp	float	$tmp345	%read{725,725} %write{724,724}
temp	float	$tmp346	%read{726,726} %write{725,725}
temp	float	$tmp347	%read{729,729} %write{726,726}
temp	float	$tmp348	%read{728,728} %write{727,727}
temp	float	$tmp349	%read{729,729} %write{728,728}
temp	float	$tmp350	%read{732,732} %write{729,729}
temp	float	$tmp351	%read{731,731} %write{730,730}
temp	float	$tmp352	%read{732,732} %write{731,731}
temp	float	$tmp353	%read{734,734} %write{733,733}
temp	float	$tmp354	%read{737,737} %write{734,734}
temp	float	$tmp355	%read{736,736} %write{735,735}
temp	float	$tmp356	%read{737,737} %write{736,736}
temp	float	$tmp357	%read{740,740} %write{737,737}
temp	float	$tmp358	%read{739,739} %write{738,738}
temp	float	$tmp359	%read{740,740} %write{739,739}
temp	float	$tmp360	%read{743,743} %write{740,740}
temp	float	$tmp361	%read{742,742} %write{741,741}
temp	float	$tmp362	%read{743,743} %write{742,742}
temp	float	$tmp363	%read{749,749} %write{748,748}
const	string	$const52	"mx_extract"		%read{753,753} %write{2147483647,-1}
temp	int	$tmp364	%read{767,767} %write{765,765}
const	string	$const53	"mx_ternary"		%read{766,795} %write{2147483647,-1}
temp	float	$tmp365	%read{777,777} %write{775,775}
temp	float	$tmp366	%read{778,778} %write{777,777}
temp	int	$tmp367	%read{780,780} %write{779,779}
temp	float	$tmp368	%read{784,784} %write{783,783}
temp	float	$tmp369	%read{783,783} %write{782,782}
temp	float	$tmp370	%read{785,785} %write{784,784}
temp	float	$tmp371	%read{787,787} %write{786,786}
temp	int	$tmp372	%read{796,796} %write{794,794}
temp	float	$tmp373	%read{806,806} %write{804,804}
temp	float	$tmp374	%read{807,807} %write{806,806}
temp	int	$tmp375	%read{809,809} %write{808,808}
temp	float	$tmp376	%read{813,813} %write{812,812}
temp	float	$tmp377	%read{812,812} %write{811,811}
temp	float	$tmp378	%read{814,814} %write{813,813}
temp	float	$tmp379	%read{816,816} %write{815,815}
const	string	$const54	"NG_convert_float_color3"		%read{827,827} %write{2147483647,-1}
const	float	$const55	1.5		%read{840,868} %write{2147483647,-1}
const	string	$const56	"ggx"		%read{840,868} %write{2147483647,-1}
const	string	$const57	"R"		%read{832,864} %write{2147483647,-1}
const	string	$const58	"mx_dielectric_bsdf"		%read{831,859} %write{2147483647,-1}
const	string	$const59	"T"		%read{832,864} %write{2147483647,-1}
temp	int	$tmp381	%read{833,833} %write{832,832}
temp	int	$tmp382	%read{837,837} %write{836,836}
temp	closure color	$tmp383	%read{841,841} %write{840,840}
const	string	$const60	"thinfilm_thickness"		%read{840,868} %write{2147483647,-1}
const	string	$const61	"thinfilm_ior"		%read{840,868} %write{2147483647,-1}
const	string	$const62	"dielectric_bsdf"		%read{840,868} %write{2147483647,-1}
temp	closure color	$tmp384	%read{845,845} %write{844,844}
const	string	$const63	"conductor_bsdf"		%read{844,844} %write{2147483647,-1}
temp	int	$tmp385	%read{849,849} %write{848,848}
temp	int	$tmp386	%read{853,853} %write{852,852}
temp	closure color	$tmp387	%read{857,857} %write{856,856}
temp	int	$tmp388	%read{861,861} %write{860,860}
temp	int	$tmp389	%read{865,865} %write{864,864}
temp	closure color	$tmp390	%read{869,869} %write{868,868}
temp	closure color	$tmp391	%read{871,871} %write{870,870}
const	string	$const64	"sheen_bsdf"		%read{870,870} %write{2147483647,-1}
temp	closure color	$tmp392	%read{874,874} %write{873,873}
const	string	$const65	"translucent_bsdf"		%read{873,873} %write{2147483647,-1}
const	string	$const66	"mx_subsurface_bsdf"		%read{876,876} %write{2147483647,-1}
temp	color	$tmp393	%read{878,878} %write{877,877}
const	string	$const67	"subsurface_bssrdf"		%read{878,878} %write{2147483647,-1}
const	string	$const68	"mix"		%read{879,920} %write{2147483647,-1}
temp	float	$tmp394	%read{881,881} %write{880,880}
temp	closure color	$tmp395	%read{883,883} %write{881,881}
temp	closure color	$tmp396	%read{883,883} %write{882,882}
temp	closure color	$tmp397	%read{885,885} %write{884,884}
const	string	$const69	"oren_nayar_diffuse_bsdf"		%read{884,884} %write{2147483647,-1}
temp	float	$tmp398	%read{888,888} %write{887,887}
temp	closure color	$tmp399	%read{890,890} %write{888,888}
temp	closure color	$tmp400	%read{890,890} %write{889,889}
const	string	$const70	"layer"		%read{891,904} %write{2147483647,-1}
temp	float	$tmp401	%read{894,894} %write{893,893}
temp	closure color	$tmp402	%read{896,896} %write{894,894}
temp	closure color	$tmp403	%read{896,896} %write{895,895}
temp	float	$tmp404	%read{900,900} %write{899,899}
temp	closure color	$tmp405	%read{902,902} %write{900,900}
temp	closure color	$tmp406	%read{902,902} %write{901,901}
const	string	$const71	"uniform_edf"		%read{905,905} %write{2147483647,-1}
const	float	$const72	5		%read{917,917} %write{2147483647,-1}
const	string	$const73	"mx_generalized_schlick_edf"		%read{908,908} %write{2147483647,-1}
temp	float	$tmp408	%read{911,911} %write{910,910}
temp	vector	$tmp409	%read{910,910} %write{909,909}
const	string	$const74	"mx_fresnel_schlick"		%read{912,912} %write{2147483647,-1}
temp	float	$tmp410	%read{915,915} %write{913,913}
temp	float	$tmp411	%read{916,916} %write{915,915}
temp	float	$tmp412	%read{918,918} %write{917,917}
temp	float	$tmp413	%read{922,922} %write{921,921}
temp	closure color	$tmp414	%read{924,924} %write{922,922}
temp	closure color	$tmp415	%read{924,924} %write{923,923}
const	string	$const75	"mx_surface"		%read{928,928} %write{2147483647,-1}
temp	float	$tmp416	%read{933,933} %write{932,932}
const	string	$const76	"mx_surfacematerial"		%read{938,938} %write{2147483647,-1}
temp	float	$tmp417	%read{941,941} %write{940,940}
temp	closure color	$tmp418	%read{943,943} %write{942,942}
temp	closure color	$tmp419	%read{947,947} %write{943,943}
temp	closure color	$tmp420	%read{946,946} %write{944,944}
const	string	$const77	"transparent"		%read{944,944} %write{2147483647,-1}
temp	float	$tmp421	%read{946,946} %write{945,945}
temp	closure color	$tmp422	%read{947,947} %write{946,946}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:953
#     textureresource node_tiledimage_float_26_file_ = {node_tiledimage_float_26_file, node_tiledimage_float_26_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{953} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:954
#     textureresource node_tiledimage_float_7_file_ = {node_tiledimage_float_7_file, node_tiledimage_float_7_file_colorspace};
	assign		node_tiledimage_float_26_file_.filename node_tiledimage_float_26_file 	%line{954} %argrw{"wr"}
	assign		node_tiledimage_float_26_file_.colorspace node_tiledimage_float_26_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:955
#     textureresource node_tiledimage_float_24_file_ = {node_tiledimage_float_24_file, node_tiledimage_float_24_file_colorspace};
	assign		node_tiledimage_float_7_file_.filename node_tiledimage_float_7_file 	%line{955} %argrw{"wr"}
	assign		node_tiledimage_float_7_file_.colorspace node_tiledimage_float_7_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:956
#     textureresource node_tiledimage_float_10_file_ = {node_tiledimage_float_10_file, node_tiledimage_float_10_file_colorspace};
	assign		node_tiledimage_float_24_file_.filename node_tiledimage_float_24_file 	%line{956} %argrw{"wr"}
	assign		node_tiledimage_float_24_file_.colorspace node_tiledimage_float_24_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:957
#     textureresource node_tiledimage_float_22_file_ = {node_tiledimage_float_22_file, node_tiledimage_float_22_file_colorspace};
	assign		node_tiledimage_float_10_file_.filename node_tiledimage_float_10_file 	%line{957} %argrw{"wr"}
	assign		node_tiledimage_float_10_file_.colorspace node_tiledimage_float_10_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:958
#     textureresource node_tiledimage_vector3_27_file_ = {node_tiledimage_vector3_27_file, node_tiledimage_vector3_27_file_colorspace};
	assign		node_tiledimage_float_22_file_.filename node_tiledimage_float_22_file 	%line{958} %argrw{"wr"}
	assign		node_tiledimage_float_22_file_.colorspace node_tiledimage_float_22_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:959
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	assign		node_tiledimage_vector3_27_file_.filename node_tiledimage_vector3_27_file 	%line{959} %argrw{"wr"}
	assign		node_tiledimage_vector3_27_file_.colorspace node_tiledimage_vector3_27_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:960
#     vector2 node_convert_1_out = vector2(0.0, 0.0);
	assign		geomprop_UV0_out1.x u 	%line{960} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:961
#     NG_convert_float_vector2(node_convert_1_in, node_convert_1_out);
	assign		node_convert_1_out.x $const2 	%line{961} %argrw{"wr"}
	assign		node_convert_1_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:962
#     color node_rgbtohsv_12_out = color(0.0);
	functioncall	$const3 22 	%line{962} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:20
#     out = combine_out;
	assign		___669_combine_out.x node_convert_1_in 	%line{20} %argrw{"wr"}
	assign		___669_combine_out.y node_convert_1_in 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:21
# }
	assign		node_convert_1_out.x ___669_combine_out.x 	%line{21} %argrw{"wr"}
	assign		node_convert_1_out.y ___669_combine_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:963
#     mx_rgbtohsv_color3(node_rgbtohsv_12_in, node_rgbtohsv_12_out);
	assign		node_rgbtohsv_12_out $const4 	%line{963} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:964
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const5 25 	%line{964} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:26
# }
	transformc	node_rgbtohsv_12_out $const6 $const7 node_rgbtohsv_12_in 	%line{26} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:965
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const8 27 	%line{965} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const9 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:966
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	compref		$tmp2 N $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{966} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const2 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:967
#     float node_tiledimage_float_26_out = 0.0;
	compref		$tmp7 N $const10 	%line{967} %argrw{"wrr"}
	compref		$tmp8 N $const1 	%argrw{"wrr"}
	neg		$tmp9 $tmp8 	%argrw{"wr"}
	vector		$tmp6 $tmp7 $const2 $tmp9 	%argrw{"wrrr"}
	cross		$tmp5 N $tmp6 	%argrw{"wrr"}
	normalize	geomprop_Bworld_out1 $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:968
#     NG_tiledimage_float(node_tiledimage_float_26_file_, node_tiledimage_float_26_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_float_26_uvoffset, node_tiledimage_float_26_realworldimagesize, node_tiledimage_float_26_realworldtilesize, node_tiledimage_float_26_filtertype, node_tiledimage_float_26_framerange, node_tiledimage_float_26_frameoffset, node_tiledimage_float_26_frameendaction, node_tiledimage_float_26_out);
	assign		node_tiledimage_float_26_out $const2 	%line{968} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:969
#     float node_tiledimage_float_7_out = 0.0;
	functioncall	$const11 95 	%line{969} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 43 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_mult_float_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_mult_float_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 46 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_N_sub_float_out.x ___674_N_mult_float_out.x node_tiledimage_float_26_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_N_sub_float_out.y ___674_N_mult_float_out.y node_tiledimage_float_26_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 49 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___674_N_divtilesize_float_out.x ___674_N_sub_float_out.x node_tiledimage_float_26_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___674_N_divtilesize_float_out.y ___674_N_sub_float_out.y node_tiledimage_float_26_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 52 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_multtilesize_float_out.x ___674_N_divtilesize_float_out.x node_tiledimage_float_26_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_multtilesize_float_out.y ___674_N_divtilesize_float_out.y node_tiledimage_float_26_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:59
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___674_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:60
#     out = N_img_float_out;
	functioncall	$const17 94 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp10 node_tiledimage_float_26_file_.filename $const15 	%line{36} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 57 70 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp12 $const16 $const18 	%line{37} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 68 68 	%argrw{"r"}
	lt		$tmp14 ___674_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 63 66 	%argrw{"r"}
	gt		$tmp16 ___674_N_multtilesize_float_out.x $const19 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp11 $tmp19 	%line{36} %argrw{"wr"}
	neq		$tmp20 $tmp11 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp20 72 85 	%line{37} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:38
#     {
	eq		$tmp21 $const16 $const18 	%line{38} %argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	if		$tmp22 83 83 	%argrw{"r"}
	lt		$tmp23 ___674_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 78 81 	%argrw{"r"}
	gt		$tmp25 ___674_N_multtilesize_float_out.y $const19 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	neq		$tmp27 $tmp24 $const1 	%argrw{"wrr"}
	assign		$tmp22 $tmp27 	%argrw{"wr"}
	neq		$tmp28 $tmp22 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp20 $tmp28 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp20 88 88 	%line{36} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:40
#         return;
	assign		___674_N_img_float_out node_tiledimage_float_26_default 	%line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:41
#     }
	return	%line{41}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:44
#     vector2 st = mx_transform_uv(texcoord);
	assign		___672_missingColor node_tiledimage_float_26_default 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:45
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const20 92 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___672_st.x ___674_N_multtilesize_float_out.x 	%line{31} %argrw{"wr"}
	assign		___672_st.y ___674_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:46
#                         "subimage", layer, "interp", filtertype,
	texture		___672_rgb node_tiledimage_float_26_file_.filename ___672_st.x ___672_st.y $const21 $const15 $const22 node_tiledimage_float_26_filtertype $const23 ___672_missingColor $const24 $const16 $const25 $const16 	%line{46} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:50
# }
	compref		___674_N_img_float_out ___672_rgb $const1 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:61
# }
	assign		node_tiledimage_float_26_out ___674_N_img_float_out 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:970
#     NG_tiledimage_float(node_tiledimage_float_7_file_, node_tiledimage_float_7_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_float_7_uvoffset, node_tiledimage_float_7_realworldimagesize, node_tiledimage_float_7_realworldtilesize, node_tiledimage_float_7_filtertype, node_tiledimage_float_7_framerange, node_tiledimage_float_7_frameoffset, node_tiledimage_float_7_frameendaction, node_tiledimage_float_7_out);
	assign		node_tiledimage_float_7_out $const2 	%line{970} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:971
#     float node_tiledimage_float_24_out = 0.0;
	functioncall	$const11 152 	%line{971} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 100 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_mult_float_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_mult_float_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 103 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_N_sub_float_out.x ___674_N_mult_float_out.x node_tiledimage_float_7_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_N_sub_float_out.y ___674_N_mult_float_out.y node_tiledimage_float_7_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 106 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___674_N_divtilesize_float_out.x ___674_N_sub_float_out.x node_tiledimage_float_7_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___674_N_divtilesize_float_out.y ___674_N_sub_float_out.y node_tiledimage_float_7_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 109 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_multtilesize_float_out.x ___674_N_divtilesize_float_out.x node_tiledimage_float_7_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_multtilesize_float_out.y ___674_N_divtilesize_float_out.y node_tiledimage_float_7_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:59
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___674_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:60
#     out = N_img_float_out;
	functioncall	$const17 151 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp29 node_tiledimage_float_7_file_.filename $const15 	%line{36} %argrw{"wrr"}
	neq		$tmp30 $tmp29 $const1 	%argrw{"wrr"}
	if		$tmp30 114 127 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp31 $const16 $const18 	%line{37} %argrw{"wrr"}
	neq		$tmp32 $tmp31 $const1 	%argrw{"wrr"}
	if		$tmp32 125 125 	%argrw{"r"}
	lt		$tmp33 ___674_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp34 $tmp33 $const1 	%argrw{"wrr"}
	if		$tmp34 120 123 	%argrw{"r"}
	gt		$tmp35 ___674_N_multtilesize_float_out.x $const19 	%argrw{"wrr"}
	neq		$tmp36 $tmp35 $const1 	%argrw{"wrr"}
	assign		$tmp34 $tmp36 	%argrw{"wr"}
	neq		$tmp37 $tmp34 $const1 	%argrw{"wrr"}
	assign		$tmp32 $tmp37 	%argrw{"wr"}
	neq		$tmp38 $tmp32 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp30 $tmp38 	%line{36} %argrw{"wr"}
	neq		$tmp39 $tmp30 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp39 129 142 	%line{37} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:38
#     {
	eq		$tmp40 $const16 $const18 	%line{38} %argrw{"wrr"}
	neq		$tmp41 $tmp40 $const1 	%argrw{"wrr"}
	if		$tmp41 140 140 	%argrw{"r"}
	lt		$tmp42 ___674_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const1 	%argrw{"wrr"}
	if		$tmp43 135 138 	%argrw{"r"}
	gt		$tmp44 ___674_N_multtilesize_float_out.y $const19 	%argrw{"wrr"}
	neq		$tmp45 $tmp44 $const1 	%argrw{"wrr"}
	assign		$tmp43 $tmp45 	%argrw{"wr"}
	neq		$tmp46 $tmp43 $const1 	%argrw{"wrr"}
	assign		$tmp41 $tmp46 	%argrw{"wr"}
	neq		$tmp47 $tmp41 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp39 $tmp47 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp39 145 145 	%line{36} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:40
#         return;
	assign		___674_N_img_float_out node_tiledimage_float_7_default 	%line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:41
#     }
	return	%line{41}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:44
#     vector2 st = mx_transform_uv(texcoord);
	assign		___672_missingColor node_tiledimage_float_7_default 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:45
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const20 149 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___672_st.x ___674_N_multtilesize_float_out.x 	%line{31} %argrw{"wr"}
	assign		___672_st.y ___674_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:46
#                         "subimage", layer, "interp", filtertype,
	texture		___672_rgb node_tiledimage_float_7_file_.filename ___672_st.x ___672_st.y $const21 $const15 $const22 node_tiledimage_float_7_filtertype $const23 ___672_missingColor $const24 $const16 $const25 $const16 	%line{46} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:50
# }
	compref		___674_N_img_float_out ___672_rgb $const1 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:61
# }
	assign		node_tiledimage_float_7_out ___674_N_img_float_out 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:972
#     NG_tiledimage_float(node_tiledimage_float_24_file_, node_tiledimage_float_24_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_float_24_uvoffset, node_tiledimage_float_24_realworldimagesize, node_tiledimage_float_24_realworldtilesize, node_tiledimage_float_24_filtertype, node_tiledimage_float_24_framerange, node_tiledimage_float_24_frameoffset, node_tiledimage_float_24_frameendaction, node_tiledimage_float_24_out);
	assign		node_tiledimage_float_24_out $const2 	%line{972} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:973
#     float node_tiledimage_float_10_out = 0.0;
	functioncall	$const11 209 	%line{973} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 157 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_mult_float_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_mult_float_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 160 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_N_sub_float_out.x ___674_N_mult_float_out.x node_tiledimage_float_24_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_N_sub_float_out.y ___674_N_mult_float_out.y node_tiledimage_float_24_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 163 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___674_N_divtilesize_float_out.x ___674_N_sub_float_out.x node_tiledimage_float_24_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___674_N_divtilesize_float_out.y ___674_N_sub_float_out.y node_tiledimage_float_24_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 166 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_multtilesize_float_out.x ___674_N_divtilesize_float_out.x node_tiledimage_float_24_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_multtilesize_float_out.y ___674_N_divtilesize_float_out.y node_tiledimage_float_24_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:59
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___674_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:60
#     out = N_img_float_out;
	functioncall	$const17 208 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp48 node_tiledimage_float_24_file_.filename $const15 	%line{36} %argrw{"wrr"}
	neq		$tmp49 $tmp48 $const1 	%argrw{"wrr"}
	if		$tmp49 171 184 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp50 $const16 $const18 	%line{37} %argrw{"wrr"}
	neq		$tmp51 $tmp50 $const1 	%argrw{"wrr"}
	if		$tmp51 182 182 	%argrw{"r"}
	lt		$tmp52 ___674_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp53 $tmp52 $const1 	%argrw{"wrr"}
	if		$tmp53 177 180 	%argrw{"r"}
	gt		$tmp54 ___674_N_multtilesize_float_out.x $const19 	%argrw{"wrr"}
	neq		$tmp55 $tmp54 $const1 	%argrw{"wrr"}
	assign		$tmp53 $tmp55 	%argrw{"wr"}
	neq		$tmp56 $tmp53 $const1 	%argrw{"wrr"}
	assign		$tmp51 $tmp56 	%argrw{"wr"}
	neq		$tmp57 $tmp51 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp49 $tmp57 	%line{36} %argrw{"wr"}
	neq		$tmp58 $tmp49 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp58 186 199 	%line{37} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:38
#     {
	eq		$tmp59 $const16 $const18 	%line{38} %argrw{"wrr"}
	neq		$tmp60 $tmp59 $const1 	%argrw{"wrr"}
	if		$tmp60 197 197 	%argrw{"r"}
	lt		$tmp61 ___674_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp62 $tmp61 $const1 	%argrw{"wrr"}
	if		$tmp62 192 195 	%argrw{"r"}
	gt		$tmp63 ___674_N_multtilesize_float_out.y $const19 	%argrw{"wrr"}
	neq		$tmp64 $tmp63 $const1 	%argrw{"wrr"}
	assign		$tmp62 $tmp64 	%argrw{"wr"}
	neq		$tmp65 $tmp62 $const1 	%argrw{"wrr"}
	assign		$tmp60 $tmp65 	%argrw{"wr"}
	neq		$tmp66 $tmp60 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp58 $tmp66 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp58 202 202 	%line{36} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:40
#         return;
	assign		___674_N_img_float_out node_tiledimage_float_24_default 	%line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:41
#     }
	return	%line{41}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:44
#     vector2 st = mx_transform_uv(texcoord);
	assign		___672_missingColor node_tiledimage_float_24_default 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:45
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const20 206 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___672_st.x ___674_N_multtilesize_float_out.x 	%line{31} %argrw{"wr"}
	assign		___672_st.y ___674_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:46
#                         "subimage", layer, "interp", filtertype,
	texture		___672_rgb node_tiledimage_float_24_file_.filename ___672_st.x ___672_st.y $const21 $const15 $const22 node_tiledimage_float_24_filtertype $const23 ___672_missingColor $const24 $const16 $const25 $const16 	%line{46} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:50
# }
	compref		___674_N_img_float_out ___672_rgb $const1 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:61
# }
	assign		node_tiledimage_float_24_out ___674_N_img_float_out 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:974
#     NG_tiledimage_float(node_tiledimage_float_10_file_, node_tiledimage_float_10_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_float_10_uvoffset, node_tiledimage_float_10_realworldimagesize, node_tiledimage_float_10_realworldtilesize, node_tiledimage_float_10_filtertype, node_tiledimage_float_10_framerange, node_tiledimage_float_10_frameoffset, node_tiledimage_float_10_frameendaction, node_tiledimage_float_10_out);
	assign		node_tiledimage_float_10_out $const2 	%line{974} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:975
#     float node_tiledimage_float_22_out = 0.0;
	functioncall	$const11 266 	%line{975} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 214 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_mult_float_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_mult_float_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 217 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_N_sub_float_out.x ___674_N_mult_float_out.x node_tiledimage_float_10_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_N_sub_float_out.y ___674_N_mult_float_out.y node_tiledimage_float_10_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 220 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___674_N_divtilesize_float_out.x ___674_N_sub_float_out.x node_tiledimage_float_10_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___674_N_divtilesize_float_out.y ___674_N_sub_float_out.y node_tiledimage_float_10_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 223 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_multtilesize_float_out.x ___674_N_divtilesize_float_out.x node_tiledimage_float_10_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_multtilesize_float_out.y ___674_N_divtilesize_float_out.y node_tiledimage_float_10_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:59
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___674_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:60
#     out = N_img_float_out;
	functioncall	$const17 265 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp67 node_tiledimage_float_10_file_.filename $const15 	%line{36} %argrw{"wrr"}
	neq		$tmp68 $tmp67 $const1 	%argrw{"wrr"}
	if		$tmp68 228 241 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp69 $const16 $const18 	%line{37} %argrw{"wrr"}
	neq		$tmp70 $tmp69 $const1 	%argrw{"wrr"}
	if		$tmp70 239 239 	%argrw{"r"}
	lt		$tmp71 ___674_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp72 $tmp71 $const1 	%argrw{"wrr"}
	if		$tmp72 234 237 	%argrw{"r"}
	gt		$tmp73 ___674_N_multtilesize_float_out.x $const19 	%argrw{"wrr"}
	neq		$tmp74 $tmp73 $const1 	%argrw{"wrr"}
	assign		$tmp72 $tmp74 	%argrw{"wr"}
	neq		$tmp75 $tmp72 $const1 	%argrw{"wrr"}
	assign		$tmp70 $tmp75 	%argrw{"wr"}
	neq		$tmp76 $tmp70 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp68 $tmp76 	%line{36} %argrw{"wr"}
	neq		$tmp77 $tmp68 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp77 243 256 	%line{37} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:38
#     {
	eq		$tmp78 $const16 $const18 	%line{38} %argrw{"wrr"}
	neq		$tmp79 $tmp78 $const1 	%argrw{"wrr"}
	if		$tmp79 254 254 	%argrw{"r"}
	lt		$tmp80 ___674_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp81 $tmp80 $const1 	%argrw{"wrr"}
	if		$tmp81 249 252 	%argrw{"r"}
	gt		$tmp82 ___674_N_multtilesize_float_out.y $const19 	%argrw{"wrr"}
	neq		$tmp83 $tmp82 $const1 	%argrw{"wrr"}
	assign		$tmp81 $tmp83 	%argrw{"wr"}
	neq		$tmp84 $tmp81 $const1 	%argrw{"wrr"}
	assign		$tmp79 $tmp84 	%argrw{"wr"}
	neq		$tmp85 $tmp79 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp77 $tmp85 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp77 259 259 	%line{36} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:40
#         return;
	assign		___674_N_img_float_out node_tiledimage_float_10_default 	%line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:41
#     }
	return	%line{41}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:44
#     vector2 st = mx_transform_uv(texcoord);
	assign		___672_missingColor node_tiledimage_float_10_default 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:45
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const20 263 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___672_st.x ___674_N_multtilesize_float_out.x 	%line{31} %argrw{"wr"}
	assign		___672_st.y ___674_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:46
#                         "subimage", layer, "interp", filtertype,
	texture		___672_rgb node_tiledimage_float_10_file_.filename ___672_st.x ___672_st.y $const21 $const15 $const22 node_tiledimage_float_10_filtertype $const23 ___672_missingColor $const24 $const16 $const25 $const16 	%line{46} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:50
# }
	compref		___674_N_img_float_out ___672_rgb $const1 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:61
# }
	assign		node_tiledimage_float_10_out ___674_N_img_float_out 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:976
#     NG_tiledimage_float(node_tiledimage_float_22_file_, node_tiledimage_float_22_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_float_22_uvoffset, node_tiledimage_float_22_realworldimagesize, node_tiledimage_float_22_realworldtilesize, node_tiledimage_float_22_filtertype, node_tiledimage_float_22_framerange, node_tiledimage_float_22_frameoffset, node_tiledimage_float_22_frameendaction, node_tiledimage_float_22_out);
	assign		node_tiledimage_float_22_out $const2 	%line{976} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:977
#     vector node_tiledimage_vector3_27_out = vector(0.0);
	functioncall	$const11 323 	%line{977} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 271 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_mult_float_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_mult_float_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 274 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_N_sub_float_out.x ___674_N_mult_float_out.x node_tiledimage_float_22_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_N_sub_float_out.y ___674_N_mult_float_out.y node_tiledimage_float_22_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 277 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___674_N_divtilesize_float_out.x ___674_N_sub_float_out.x node_tiledimage_float_22_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___674_N_divtilesize_float_out.y ___674_N_sub_float_out.y node_tiledimage_float_22_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 280 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_N_multtilesize_float_out.x ___674_N_divtilesize_float_out.x node_tiledimage_float_22_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_N_multtilesize_float_out.y ___674_N_divtilesize_float_out.y node_tiledimage_float_22_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:59
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___674_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:60
#     out = N_img_float_out;
	functioncall	$const17 322 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp86 node_tiledimage_float_22_file_.filename $const15 	%line{36} %argrw{"wrr"}
	neq		$tmp87 $tmp86 $const1 	%argrw{"wrr"}
	if		$tmp87 285 298 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp88 $const16 $const18 	%line{37} %argrw{"wrr"}
	neq		$tmp89 $tmp88 $const1 	%argrw{"wrr"}
	if		$tmp89 296 296 	%argrw{"r"}
	lt		$tmp90 ___674_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp91 $tmp90 $const1 	%argrw{"wrr"}
	if		$tmp91 291 294 	%argrw{"r"}
	gt		$tmp92 ___674_N_multtilesize_float_out.x $const19 	%argrw{"wrr"}
	neq		$tmp93 $tmp92 $const1 	%argrw{"wrr"}
	assign		$tmp91 $tmp93 	%argrw{"wr"}
	neq		$tmp94 $tmp91 $const1 	%argrw{"wrr"}
	assign		$tmp89 $tmp94 	%argrw{"wr"}
	neq		$tmp95 $tmp89 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp87 $tmp95 	%line{36} %argrw{"wr"}
	neq		$tmp96 $tmp87 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp96 300 313 	%line{37} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:38
#     {
	eq		$tmp97 $const16 $const18 	%line{38} %argrw{"wrr"}
	neq		$tmp98 $tmp97 $const1 	%argrw{"wrr"}
	if		$tmp98 311 311 	%argrw{"r"}
	lt		$tmp99 ___674_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp100 $tmp99 $const1 	%argrw{"wrr"}
	if		$tmp100 306 309 	%argrw{"r"}
	gt		$tmp101 ___674_N_multtilesize_float_out.y $const19 	%argrw{"wrr"}
	neq		$tmp102 $tmp101 $const1 	%argrw{"wrr"}
	assign		$tmp100 $tmp102 	%argrw{"wr"}
	neq		$tmp103 $tmp100 $const1 	%argrw{"wrr"}
	assign		$tmp98 $tmp103 	%argrw{"wr"}
	neq		$tmp104 $tmp98 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:37
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp96 $tmp104 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:36
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp96 316 316 	%line{36} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:40
#         return;
	assign		___674_N_img_float_out node_tiledimage_float_22_default 	%line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:41
#     }
	return	%line{41}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:44
#     vector2 st = mx_transform_uv(texcoord);
	assign		___672_missingColor node_tiledimage_float_22_default 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:45
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const20 320 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___672_st.x ___674_N_multtilesize_float_out.x 	%line{31} %argrw{"wr"}
	assign		___672_st.y ___674_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:46
#                         "subimage", layer, "interp", filtertype,
	texture		___672_rgb node_tiledimage_float_22_file_.filename ___672_st.x ___672_st.y $const21 $const15 $const22 node_tiledimage_float_22_filtertype $const23 ___672_missingColor $const24 $const16 $const25 $const16 	%line{46} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:50
# }
	compref		___674_N_img_float_out ___672_rgb $const1 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:61
# }
	assign		node_tiledimage_float_22_out ___674_N_img_float_out 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:978
#     NG_tiledimage_vector3(node_tiledimage_vector3_27_file_, node_tiledimage_vector3_27_default, geomprop_UV0_out1, node_convert_1_out, node_tiledimage_vector3_27_uvoffset, node_tiledimage_vector3_27_realworldimagesize, node_tiledimage_vector3_27_realworldtilesize, node_tiledimage_vector3_27_filtertype, node_tiledimage_vector3_27_framerange, node_tiledimage_vector3_27_frameoffset, node_tiledimage_vector3_27_frameendaction, node_tiledimage_vector3_27_out);
	assign		node_tiledimage_vector3_27_out $const26 	%line{978} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:979
#     float node_multiply_25_out = node_multiply_25_in1 * node_tiledimage_float_26_out;
	functioncall	$const27 379 	%line{979} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 328 	%line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___677_N_mult_vector3_out.x geomprop_UV0_out1.x node_convert_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___677_N_mult_vector3_out.y geomprop_UV0_out1.y node_convert_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const13 331 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___677_N_sub_vector3_out.x ___677_N_mult_vector3_out.x node_tiledimage_vector3_27_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___677_N_sub_vector3_out.y ___677_N_mult_vector3_out.y node_tiledimage_vector3_27_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const14 334 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___677_N_divtilesize_vector3_out.x ___677_N_sub_vector3_out.x node_tiledimage_vector3_27_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___677_N_divtilesize_vector3_out.y ___677_N_sub_vector3_out.y node_tiledimage_vector3_27_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1006
# 
	functioncall	$const12 337 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1006} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___677_N_multtilesize_vector3_out.x ___677_N_divtilesize_vector3_out.x node_tiledimage_vector3_27_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___677_N_multtilesize_vector3_out.y ___677_N_divtilesize_vector3_out.y node_tiledimage_vector3_27_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:89
#     mx_image_vector3(file, "", default1, N_multtilesize_vector3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector3_out);
	assign		___677_N_img_vector3_out $const26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:90
#     out = N_img_vector3_out;
	functioncall	$const28 378 	%line{90} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:67
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp105 node_tiledimage_vector3_27_file_.filename $const15 	%line{67} %argrw{"wrr"}
	neq		$tmp106 $tmp105 $const1 	%argrw{"wrr"}
	if		$tmp106 342 355 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:68
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp107 $const16 $const18 	%line{68} %argrw{"wrr"}
	neq		$tmp108 $tmp107 $const1 	%argrw{"wrr"}
	if		$tmp108 353 353 	%argrw{"r"}
	lt		$tmp109 ___677_N_multtilesize_vector3_out.x $const2 	%argrw{"wrr"}
	neq		$tmp110 $tmp109 $const1 	%argrw{"wrr"}
	if		$tmp110 348 351 	%argrw{"r"}
	gt		$tmp111 ___677_N_multtilesize_vector3_out.x $const19 	%argrw{"wrr"}
	neq		$tmp112 $tmp111 $const1 	%argrw{"wrr"}
	assign		$tmp110 $tmp112 	%argrw{"wr"}
	neq		$tmp113 $tmp110 $const1 	%argrw{"wrr"}
	assign		$tmp108 $tmp113 	%argrw{"wr"}
	neq		$tmp114 $tmp108 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:67
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp106 $tmp114 	%line{67} %argrw{"wr"}
	neq		$tmp115 $tmp106 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:68
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp115 357 370 	%line{68} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:69
#     {
	eq		$tmp116 $const16 $const18 	%line{69} %argrw{"wrr"}
	neq		$tmp117 $tmp116 $const1 	%argrw{"wrr"}
	if		$tmp117 368 368 	%argrw{"r"}
	lt		$tmp118 ___677_N_multtilesize_vector3_out.y $const2 	%argrw{"wrr"}
	neq		$tmp119 $tmp118 $const1 	%argrw{"wrr"}
	if		$tmp119 363 366 	%argrw{"r"}
	gt		$tmp120 ___677_N_multtilesize_vector3_out.y $const19 	%argrw{"wrr"}
	neq		$tmp121 $tmp120 $const1 	%argrw{"wrr"}
	assign		$tmp119 $tmp121 	%argrw{"wr"}
	neq		$tmp122 $tmp119 $const1 	%argrw{"wrr"}
	assign		$tmp117 $tmp122 	%argrw{"wr"}
	neq		$tmp123 $tmp117 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:68
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp115 $tmp123 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:67
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp115 373 373 	%line{67} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:71
#         return;
	assign		___677_N_img_vector3_out node_tiledimage_vector3_27_default 	%line{71} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:72
#     }
	return	%line{72}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:75
#     vector2 st = mx_transform_uv(texcoord);
	assign		___675_missingColor node_tiledimage_vector3_27_default 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:76
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const20 377 	%line{76} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:31
# }
	assign		___675_st.x ___677_N_multtilesize_vector3_out.x 	%line{31} %argrw{"wr"}
	assign		___675_st.y ___677_N_multtilesize_vector3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:77
#                   "subimage", layer, "interp", filtertype,
	texture		___677_N_img_vector3_out node_tiledimage_vector3_27_file_.filename ___675_st.x ___675_st.y $const21 $const15 $const22 node_tiledimage_vector3_27_filtertype $const23 ___675_missingColor $const24 $const16 $const25 $const16 	%line{77} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:91
# }
	assign		node_tiledimage_vector3_27_out ___677_N_img_vector3_out 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:980
#     float node_multiply_20_out = node_multiply_20_in1 * node_tiledimage_float_26_out;
	mul		node_multiply_25_out node_multiply_25_in1 node_tiledimage_float_26_out 	%line{980} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:981
#     color node_multiply_9_out = node_multiply_9_in1 * node_tiledimage_float_7_out;
	mul		node_multiply_20_out node_multiply_20_in1 node_tiledimage_float_26_out 	%line{981} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:982
#     float node_multiply_23_out = node_multiply_23_in1 * node_tiledimage_float_24_out;
	mul		node_multiply_9_out node_multiply_9_in1 node_tiledimage_float_7_out 	%line{982} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:983
#     float node_max_1_out = max(node_tiledimage_float_10_out, node_max_1_in2);
	mul		node_multiply_23_out node_multiply_23_in1 node_tiledimage_float_24_out 	%line{983} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:984
#     vector node_normalmap_3_out = vector(0.0);
	max		node_max_1_out node_tiledimage_float_10_out node_max_1_in2 	%line{984} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:985
#     mx_normalmap_float(node_tiledimage_vector3_27_out, node_normalmap_3_scale, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, node_normalmap_3_out);
	assign		node_normalmap_3_out $const26 	%line{985} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:986
#     float node_add_19_out = node_multiply_25_out + node_tiledimage_float_7_out;
	functioncall	$const29 405 	%line{986} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:111
# }
	assign		$tmp124.x node_normalmap_3_scale 	%line{111} %argrw{"wr"}
	assign		$tmp124.y node_normalmap_3_scale 	%argrw{"wr"}
	functioncall	$const30 405 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:97
#     {
	eq		$tmp126 node_tiledimage_vector3_27_out $const26 	%line{97} %argrw{"wrr"}
	if		$tmp126 392 394 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:99
#     }
	assign		___678_decodedValue $const31 	%line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:103
#     }
	mul		$tmp127 node_tiledimage_vector3_27_out $const32 	%line{103} %argrw{"wrr"}
	sub		___678_decodedValue $tmp127 $const19 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:106
# }
	compref		$tmp128 ___678_decodedValue $const1 	%line{106} %argrw{"wrr"}
	mul		$tmp129 geomprop_Tworld_out1 $tmp128 	%argrw{"wrr"}
	mul		$tmp130 $tmp129 $tmp124.x 	%argrw{"wrr"}
	compref		$tmp131 ___678_decodedValue $const33 	%argrw{"wrr"}
	mul		$tmp132 geomprop_Bworld_out1 $tmp131 	%argrw{"wrr"}
	mul		$tmp133 $tmp132 $tmp124.y 	%argrw{"wrr"}
	add		$tmp134 $tmp130 $tmp133 	%argrw{"wrr"}
	compref		$tmp135 ___678_decodedValue $const10 	%argrw{"wrr"}
	mul		$tmp136 geomprop_Nworld_out1 $tmp135 	%argrw{"wrr"}
	add		$tmp137 $tmp134 $tmp136 	%argrw{"wrr"}
	normalize	node_normalmap_3_out $tmp137 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:987
#     float node_divide_21_out = node_divide_21_in1 / node_max_1_out;
	add		node_add_19_out node_multiply_25_out node_tiledimage_float_7_out 	%line{987} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:988
#     float node_subtract_18_out = node_add_19_out - node_subtract_18_in2;
	div		node_divide_21_out node_divide_21_in1 node_max_1_out 	%line{988} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:989
#     float node_multiply_15_out = node_add_19_out * node_multiply_20_out;
	sub		node_subtract_18_out node_add_19_out node_subtract_18_in2 	%line{989} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:990
#     float node_multiply_1_out = node_divide_21_out * node_tiledimage_float_22_out;
	mul		node_multiply_15_out node_add_19_out node_multiply_20_out 	%line{990} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:991
#     float node_multiply_14_out = node_subtract_18_out * node_multiply_14_in2;
	mul		node_multiply_1_out node_divide_21_out node_tiledimage_float_22_out 	%line{991} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:992
#     color node_combine3_color3_13_out = color( node_multiply_14_out,node_combine3_color3_13_in2,node_multiply_15_out );
	mul		node_multiply_14_out node_subtract_18_out node_multiply_14_in2 	%line{992} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:993
#     color node_add_16_out = node_combine3_color3_13_out + node_rgbtohsv_12_out;
	color		node_combine3_color3_13_out node_multiply_14_out node_combine3_color3_13_in2 node_multiply_15_out 	%line{993} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:994
#     color node_hsvtorgb_17_out = color(0.0);
	add		node_add_16_out node_combine3_color3_13_out node_rgbtohsv_12_out 	%line{994} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:995
#     mx_hsvtorgb_color3(node_add_16_out, node_hsvtorgb_17_out);
	assign		node_hsvtorgb_17_out $const4 	%line{995} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:996
#     color node_mix_6_out = mix(node_hsvtorgb_17_out, node_mix_6_fg, node_multiply_23_out);
	functioncall	$const34 416 	%line{996} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:116
# }
	transformc	node_hsvtorgb_17_out $const7 $const6 node_add_16_out 	%line{116} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:997
#     color node_multiply_5_out = node_mix_6_out * node_tiledimage_float_7_out;
	mix		node_mix_6_out node_hsvtorgb_17_out node_mix_6_fg node_multiply_23_out 	%line{997} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:998
#     color node_mix_8_out = mix(node_multiply_9_out, node_multiply_5_out, node_tiledimage_float_10_out);
	mul		node_multiply_5_out node_mix_6_out node_tiledimage_float_7_out 	%line{998} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:999
#     color node_clamp_0_out = clamp(node_mix_8_out, node_clamp_0_low, node_clamp_0_high);
	mix		node_mix_8_out node_multiply_9_out node_multiply_5_out node_tiledimage_float_10_out 	%line{999} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1000
#     surfaceshader N_StandardSurface_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const35 422 	%line{1000} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp138 node_mix_8_out node_clamp_0_high 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		node_clamp_0_out $tmp138 node_clamp_0_low 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1001
#     NG_standard_surface_surfaceshader_100(N_StandardSurface_base, node_clamp_0_out, N_StandardSurface_diffuse_roughness, N_StandardSurface_metalness, N_StandardSurface_specular, N_StandardSurface_specular_color, node_multiply_1_out, N_StandardSurface_specular_IOR, N_StandardSurface_specular_anisotropy, N_StandardSurface_specular_rotation, N_StandardSurface_transmission, N_StandardSurface_transmission_color, N_StandardSurface_transmission_depth, N_StandardSurface_transmission_scatter, N_StandardSurface_transmission_scatter_anisotropy, N_StandardSurface_transmission_dispersion, N_StandardSurface_transmission_extra_roughness, N_StandardSurface_subsurface, N_StandardSurface_subsurface_color, N_StandardSurface_subsurface_radius, N_StandardSurface_subsurface_scale, N_StandardSurface_subsurface_anisotropy, N_StandardSurface_sheen, N_StandardSurface_sheen_color, N_StandardSurface_sheen_roughness, N_StandardSurface_coat, N_StandardSurface_coat_color, N_StandardSurface_coat_roughness, N_StandardSurface_coat_anisotropy, N_StandardSurface_coat_rotation, N_StandardSurface_coat_IOR, geomprop_Nworld_out1, N_StandardSurface_coat_affect_color, N_StandardSurface_coat_affect_roughness, N_StandardSurface_thin_film_thickness, N_StandardSurface_thin_film_IOR, N_StandardSurface_emission, N_StandardSurface_emission_color, N_StandardSurface_opacity, N_StandardSurface_thin_walled, node_normalmap_3_out, geomprop_Tworld_out1, N_StandardSurface_out);
	assign		N_StandardSurface_out.bsdf null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{1001} %argrw{"wr"}
	assign		N_StandardSurface_out.edf null_closure 	%argrw{"wr"}
	assign		N_StandardSurface_out.opacity $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1002
#     MATERIAL M_BrickPattern_out = mx_surfacematerial(N_StandardSurface_out, backsurfaceshader, displacementshader1);
	functioncall	$const36 938 	%line{1002} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:296
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___707_null_closure $const1 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:297
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___707_coat_roughness_vector_out.x $const2 	%line{297} %argrw{"wr"}
	assign		___707_coat_roughness_vector_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:298
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const37 448 	%line{298} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:121
#     if (anisotropy > 0.0)
	mul		$tmp139 N_StandardSurface_coat_roughness N_StandardSurface_coat_roughness 	%line{121} %argrw{"wrr"}
	functioncall	$const35 434 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp140 $tmp139 $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___683_roughness_sqr $tmp140 $const38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:122
#     {
	gt		$tmp141 N_StandardSurface_coat_anisotropy $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{122} %argrw{"wrr"}
	if		$tmp141 446 448 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 439 	%line{124} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp143 N_StandardSurface_coat_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp142 $tmp143 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp144 $const19 $tmp142 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{124} %argrw{"wrr"}
	sqrt		___684_aspect $tmp144 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:125
#         result.y = roughness_sqr * aspect;
	div		$tmp145 ___683_roughness_sqr ___684_aspect 	%line{125} %argrw{"wrr"}
	min		___707_coat_roughness_vector_out.x $tmp145 $const19 	%argrw{"wrr"}
	assign		___707_coat_roughness_vector_out.x ___707_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:126
#     }
	mul		___707_coat_roughness_vector_out.y ___683_roughness_sqr ___684_aspect 	%line{126} %argrw{"wrr"}
	assign		___707_coat_roughness_vector_out.y ___707_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:130
#         result.y = roughness_sqr;
	assign		___707_coat_roughness_vector_out.x ___683_roughness_sqr 	%line{130} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:131
#     }
	assign		___707_coat_roughness_vector_out.y ___683_roughness_sqr 	%line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:299
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___707_coat_tangent_rotate_degree_in2_tmp $const40 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:300
#     color metal_reflectivity_out = base_color * base;
	mul		___707_coat_tangent_rotate_degree_out N_StandardSurface_coat_rotation ___707_coat_tangent_rotate_degree_in2_tmp 	%line{300} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:301
#     color metal_edgecolor_out = specular_color * specular;
	mul		___707_metal_reflectivity_out node_clamp_0_out N_StandardSurface_base 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:302
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___707_metal_edgecolor_out N_StandardSurface_specular_color N_StandardSurface_specular 	%line{302} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:303
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___707_coat_affect_roughness_multiply1_out N_StandardSurface_coat_affect_roughness N_StandardSurface_coat 	%line{303} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:304
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___707_tangent_rotate_degree_in2_tmp $const40 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:305
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___707_tangent_rotate_degree_out N_StandardSurface_specular_rotation ___707_tangent_rotate_degree_in2_tmp 	%line{305} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:306
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___707_transmission_roughness_add_out node_multiply_1_out N_StandardSurface_transmission_extra_roughness 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:307
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___707_subsurface_color_nonnegative_in2_tmp $const2 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:308
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp146 ___707_subsurface_color_nonnegative_in2_tmp 	%line{308} %argrw{"wr"}
	max		___707_subsurface_color_nonnegative_out N_StandardSurface_subsurface_color $tmp146 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:309
#     float coat_clamped_high_tmp = 1.000000;
	assign		___707_coat_clamped_low_tmp $const2 	%line{309} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:310
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___707_coat_clamped_high_tmp $const19 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:311
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const35 464 	%line{311} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp147 N_StandardSurface_coat ___707_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___707_coat_clamped_out $tmp147 ___707_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:312
#     float subsurface_selector_out = float(thin_walled);
	mul		___707_subsurface_radius_scaled_out N_StandardSurface_subsurface_radius N_StandardSurface_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{312} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:313
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp148 N_StandardSurface_thin_walled 	%line{313} %argrw{"wr"}
	assign		___707_subsurface_selector_out $tmp148 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:314
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___707_base_color_nonnegative_in2_tmp $const2 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:315
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp149 ___707_base_color_nonnegative_in2_tmp 	%line{315} %argrw{"wr"}
	max		___707_base_color_nonnegative_out node_clamp_0_out $tmp149 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:316
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___707_coat_attenuation_bg_tmp $const41 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:317
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___707_coat_attenuation_out ___707_coat_attenuation_bg_tmp N_StandardSurface_coat_color N_StandardSurface_coat 	%line{317} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:318
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___707_one_minus_coat_ior_in1_tmp $const19 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:319
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___707_one_minus_coat_ior_out ___707_one_minus_coat_ior_in1_tmp N_StandardSurface_coat_IOR 	%line{319} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:320
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___707_one_plus_coat_ior_in1_tmp $const19 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:321
#     color emission_weight_out = emission_color * emission1;
	add		___707_one_plus_coat_ior_out ___707_one_plus_coat_ior_in1_tmp N_StandardSurface_coat_IOR 	%line{321} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:322
#     color opacity_luminance_out = color(0.0);
	mul		___707_emission_weight_out N_StandardSurface_emission_color N_StandardSurface_emission 	%line{322} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:323
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___707_opacity_luminance_out $const4 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:324
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const43 481 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:137
# }
	dot		$tmp151 N_StandardSurface_opacity $const42 	%line{137} %argrw{"wrr"}
	assign		___707_opacity_luminance_out $tmp151 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:325
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___707_coat_tangent_rotate_out $const26 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:326
#     color artistic_ior_ior = color(0.0);
	functioncall	$const44 599 	%line{326} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:155
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const45 486 	%line{155} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp152 $const46 $const47 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___688_rotationRadians ___707_coat_tangent_rotate_degree_out $tmp152 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:156
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const48 549 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{156} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:142
#     float s = sin(angle);
	normalize	___687_nAxis geomprop_Nworld_out1 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:143
#     float c = cos(angle);
	sin		___687_s ___688_rotationRadians 	%line{143} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:144
#     float oc = 1.0 - c;
	cos		___687_c ___688_rotationRadians 	%line{144} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:145
# 
	sub		___687_oc $const19 ___687_c 	%line{145} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:147
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp153 ___687_nAxis $const1 	%line{147} %argrw{"wrr"}
	mul		$tmp154 ___687_oc $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp156 $tmp154 $tmp155 	%argrw{"wrr"}
	add		$tmp157 $tmp156 ___687_c 	%argrw{"wrr"}
	compref		$tmp158 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp159 ___687_oc $tmp158 	%argrw{"wrr"}
	compref		$tmp160 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp161 $tmp159 $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp163 $tmp162 ___687_s 	%argrw{"wrr"}
	sub		$tmp164 $tmp161 $tmp163 	%argrw{"wrr"}
	compref		$tmp165 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp166 ___687_oc $tmp165 	%argrw{"wrr"}
	compref		$tmp167 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp168 $tmp166 $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp170 $tmp169 ___687_s 	%argrw{"wrr"}
	add		$tmp171 $tmp168 $tmp170 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:148
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp172 ___687_nAxis $const1 	%line{148} %argrw{"wrr"}
	mul		$tmp173 ___687_oc $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp175 $tmp173 $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp177 $tmp176 ___687_s 	%argrw{"wrr"}
	add		$tmp178 $tmp175 $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp180 ___687_oc $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp182 $tmp180 $tmp181 	%argrw{"wrr"}
	add		$tmp183 $tmp182 ___687_c 	%argrw{"wrr"}
	compref		$tmp184 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp185 ___687_oc $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp189 $tmp188 ___687_s 	%argrw{"wrr"}
	sub		$tmp190 $tmp187 $tmp189 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:149
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp191 ___687_nAxis $const10 	%line{149} %argrw{"wrr"}
	mul		$tmp192 ___687_oc $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp194 $tmp192 $tmp193 	%argrw{"wrr"}
	compref		$tmp195 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp196 $tmp195 ___687_s 	%argrw{"wrr"}
	sub		$tmp197 $tmp194 $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp199 ___687_oc $tmp198 	%argrw{"wrr"}
	compref		$tmp200 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp201 $tmp199 $tmp200 	%argrw{"wrr"}
	compref		$tmp202 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp203 $tmp202 ___687_s 	%argrw{"wrr"}
	add		$tmp204 $tmp201 $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp206 ___687_oc $tmp205 	%argrw{"wrr"}
	compref		$tmp207 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp208 $tmp206 $tmp207 	%argrw{"wrr"}
	add		$tmp209 $tmp208 ___687_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:147
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___688_m $tmp157 $tmp164 $tmp171 $const2 $tmp178 $tmp183 $tmp190 $const2 $tmp197 $tmp204 $tmp209 $const2 $const2 $const2 $const2 $const19 	%line{147} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:157
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp210.x geomprop_Tworld_out1 $const1 	%line{157} %argrw{"wrr"}
	compref		$tmp210.y geomprop_Tworld_out1 $const33 	%argrw{"wrr"}
	compref		$tmp210.z geomprop_Tworld_out1 $const10 	%argrw{"wrr"}
	assign		$tmp210.w $const19 	%argrw{"wr"}
	functioncall	$const8 598 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp211 ___688_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp212 $tmp211 $tmp210.x 	%argrw{"wrr"}
	mxcompref	$tmp213 ___688_m $const33 $const1 	%argrw{"wrrr"}
	mul		$tmp214 $tmp213 $tmp210.y 	%argrw{"wrr"}
	add		$tmp215 $tmp212 $tmp214 	%argrw{"wrr"}
	mxcompref	$tmp216 ___688_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp217 $tmp216 $tmp210.z 	%argrw{"wrr"}
	add		$tmp218 $tmp215 $tmp217 	%argrw{"wrr"}
	mxcompref	$tmp219 ___688_m $const49 $const1 	%argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp210.w 	%argrw{"wrr"}
	add		___688_trans.x $tmp218 $tmp220 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp221 ___688_m $const1 $const33 	%line{416} %argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp210.x 	%argrw{"wrr"}
	mxcompref	$tmp223 ___688_m $const33 $const33 	%argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp210.y 	%argrw{"wrr"}
	add		$tmp225 $tmp222 $tmp224 	%argrw{"wrr"}
	mxcompref	$tmp226 ___688_m $const10 $const33 	%argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp210.z 	%argrw{"wrr"}
	add		$tmp228 $tmp225 $tmp227 	%argrw{"wrr"}
	mxcompref	$tmp229 ___688_m $const49 $const33 	%argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp210.w 	%argrw{"wrr"}
	add		___688_trans.y $tmp228 $tmp230 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp231 ___688_m $const1 $const10 	%line{417} %argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp210.x 	%argrw{"wrr"}
	mxcompref	$tmp233 ___688_m $const33 $const10 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp210.y 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___688_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp210.z 	%argrw{"wrr"}
	add		$tmp238 $tmp235 $tmp237 	%argrw{"wrr"}
	mxcompref	$tmp239 ___688_m $const49 $const10 	%argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp210.w 	%argrw{"wrr"}
	add		___688_trans.z $tmp238 $tmp240 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp241 ___688_m $const1 $const49 	%line{418} %argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp210.x 	%argrw{"wrr"}
	mxcompref	$tmp243 ___688_m $const33 $const49 	%argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp210.y 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	mxcompref	$tmp246 ___688_m $const10 $const49 	%argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp210.z 	%argrw{"wrr"}
	add		$tmp248 $tmp245 $tmp247 	%argrw{"wrr"}
	mxcompref	$tmp249 ___688_m $const49 $const49 	%argrw{"wrrr"}
	mul		$tmp250 $tmp249 $tmp210.w 	%argrw{"wrr"}
	add		___688_trans.w $tmp248 $tmp250 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:158
# }
	vector		___707_coat_tangent_rotate_out ___688_trans.x ___688_trans.y ___688_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{158} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:327
#     color artistic_ior_extinction = color(0.0);
	assign		___707_artistic_ior_ior $const4 	%line{327} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:328
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___707_artistic_ior_extinction $const4 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:329
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const50 626 	%line{329} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:166
#     color r_sqrt = sqrt(r);
	assign		$tmp251 $const2 	%line{166} %argrw{"wr"}
	assign		$tmp252 $const51 	%argrw{"wr"}
	functioncall	$const35 607 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp253 ___707_metal_reflectivity_out $tmp252 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___689_r $tmp253 $tmp251 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:167
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___689_r_sqrt ___689_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{167} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:168
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp254 $const19 ___689_r 	%line{168} %argrw{"wrr"}
	add		$tmp255 $const19 ___689_r 	%argrw{"wrr"}
	div		___689_n_min $tmp254 $tmp255 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:169
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp256 $const19 ___689_r_sqrt 	%line{169} %argrw{"wrr"}
	sub		$tmp257 $const19 ___689_r_sqrt 	%argrw{"wrr"}
	div		___689_n_max $tmp256 $tmp257 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:170
# 
	mix		___707_artistic_ior_ior ___689_n_max ___689_n_min ___707_metal_edgecolor_out 	%line{170} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:172
#     color nm1 = ior - 1.0;
	add		___689_np1 ___707_artistic_ior_ior $const19 	%line{172} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:173
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___689_nm1 ___707_artistic_ior_ior $const19 	%line{173} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:174
#     k2 = max(k2, 0.0);
	mul		$tmp258 ___689_np1 ___689_np1 	%line{174} %argrw{"wrr"}
	mul		$tmp259 $tmp258 ___689_r 	%argrw{"wrr"}
	mul		$tmp260 ___689_nm1 ___689_nm1 	%argrw{"wrr"}
	sub		$tmp261 $tmp259 $tmp260 	%argrw{"wrr"}
	sub		$tmp262 $const19 ___689_r 	%argrw{"wrr"}
	div		___689_k2 $tmp261 $tmp262 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:175
#     extinction = sqrt(k2);
	assign		$tmp263 $const2 	%line{175} %argrw{"wr"}
	max		___689_k2 ___689_k2 $tmp263 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:176
# }
	sqrt		___707_artistic_ior_extinction ___689_k2 	%line{176} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:330
#     vector tangent_rotate_out = vector(0.0);
	mul		___707_coat_affect_roughness_multiply2_out ___707_coat_affect_roughness_multiply1_out N_StandardSurface_coat_roughness 	%line{330} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:331
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___707_tangent_rotate_out $const26 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:332
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const44 745 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:155
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const45 632 	%line{155} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp264 $const46 $const47 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___688_rotationRadians ___707_tangent_rotate_degree_out $tmp264 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:156
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const48 695 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{156} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:142
#     float s = sin(angle);
	normalize	___687_nAxis node_normalmap_3_out 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:143
#     float c = cos(angle);
	sin		___687_s ___688_rotationRadians 	%line{143} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:144
#     float oc = 1.0 - c;
	cos		___687_c ___688_rotationRadians 	%line{144} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:145
# 
	sub		___687_oc $const19 ___687_c 	%line{145} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:147
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp265 ___687_nAxis $const1 	%line{147} %argrw{"wrr"}
	mul		$tmp266 ___687_oc $tmp265 	%argrw{"wrr"}
	compref		$tmp267 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp268 $tmp266 $tmp267 	%argrw{"wrr"}
	add		$tmp269 $tmp268 ___687_c 	%argrw{"wrr"}
	compref		$tmp270 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp271 ___687_oc $tmp270 	%argrw{"wrr"}
	compref		$tmp272 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp273 $tmp271 $tmp272 	%argrw{"wrr"}
	compref		$tmp274 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp275 $tmp274 ___687_s 	%argrw{"wrr"}
	sub		$tmp276 $tmp273 $tmp275 	%argrw{"wrr"}
	compref		$tmp277 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp278 ___687_oc $tmp277 	%argrw{"wrr"}
	compref		$tmp279 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp280 $tmp278 $tmp279 	%argrw{"wrr"}
	compref		$tmp281 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp282 $tmp281 ___687_s 	%argrw{"wrr"}
	add		$tmp283 $tmp280 $tmp282 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:148
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp284 ___687_nAxis $const1 	%line{148} %argrw{"wrr"}
	mul		$tmp285 ___687_oc $tmp284 	%argrw{"wrr"}
	compref		$tmp286 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp287 $tmp285 $tmp286 	%argrw{"wrr"}
	compref		$tmp288 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp289 $tmp288 ___687_s 	%argrw{"wrr"}
	add		$tmp290 $tmp287 $tmp289 	%argrw{"wrr"}
	compref		$tmp291 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp292 ___687_oc $tmp291 	%argrw{"wrr"}
	compref		$tmp293 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp294 $tmp292 $tmp293 	%argrw{"wrr"}
	add		$tmp295 $tmp294 ___687_c 	%argrw{"wrr"}
	compref		$tmp296 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp297 ___687_oc $tmp296 	%argrw{"wrr"}
	compref		$tmp298 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp299 $tmp297 $tmp298 	%argrw{"wrr"}
	compref		$tmp300 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp301 $tmp300 ___687_s 	%argrw{"wrr"}
	sub		$tmp302 $tmp299 $tmp301 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:149
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp303 ___687_nAxis $const10 	%line{149} %argrw{"wrr"}
	mul		$tmp304 ___687_oc $tmp303 	%argrw{"wrr"}
	compref		$tmp305 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp306 $tmp304 $tmp305 	%argrw{"wrr"}
	compref		$tmp307 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp308 $tmp307 ___687_s 	%argrw{"wrr"}
	sub		$tmp309 $tmp306 $tmp308 	%argrw{"wrr"}
	compref		$tmp310 ___687_nAxis $const33 	%argrw{"wrr"}
	mul		$tmp311 ___687_oc $tmp310 	%argrw{"wrr"}
	compref		$tmp312 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp313 $tmp311 $tmp312 	%argrw{"wrr"}
	compref		$tmp314 ___687_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp315 $tmp314 ___687_s 	%argrw{"wrr"}
	add		$tmp316 $tmp313 $tmp315 	%argrw{"wrr"}
	compref		$tmp317 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp318 ___687_oc $tmp317 	%argrw{"wrr"}
	compref		$tmp319 ___687_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp320 $tmp318 $tmp319 	%argrw{"wrr"}
	add		$tmp321 $tmp320 ___687_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:147
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___688_m $tmp269 $tmp276 $tmp283 $const2 $tmp290 $tmp295 $tmp302 $const2 $tmp309 $tmp316 $tmp321 $const2 $const2 $const2 $const2 $const19 	%line{147} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:157
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp322.x geomprop_Tworld_out1 $const1 	%line{157} %argrw{"wrr"}
	compref		$tmp322.y geomprop_Tworld_out1 $const33 	%argrw{"wrr"}
	compref		$tmp322.z geomprop_Tworld_out1 $const10 	%argrw{"wrr"}
	assign		$tmp322.w $const19 	%argrw{"wr"}
	functioncall	$const8 744 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp323 ___688_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp324 $tmp323 $tmp322.x 	%argrw{"wrr"}
	mxcompref	$tmp325 ___688_m $const33 $const1 	%argrw{"wrrr"}
	mul		$tmp326 $tmp325 $tmp322.y 	%argrw{"wrr"}
	add		$tmp327 $tmp324 $tmp326 	%argrw{"wrr"}
	mxcompref	$tmp328 ___688_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp329 $tmp328 $tmp322.z 	%argrw{"wrr"}
	add		$tmp330 $tmp327 $tmp329 	%argrw{"wrr"}
	mxcompref	$tmp331 ___688_m $const49 $const1 	%argrw{"wrrr"}
	mul		$tmp332 $tmp331 $tmp322.w 	%argrw{"wrr"}
	add		___688_trans.x $tmp330 $tmp332 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp333 ___688_m $const1 $const33 	%line{416} %argrw{"wrrr"}
	mul		$tmp334 $tmp333 $tmp322.x 	%argrw{"wrr"}
	mxcompref	$tmp335 ___688_m $const33 $const33 	%argrw{"wrrr"}
	mul		$tmp336 $tmp335 $tmp322.y 	%argrw{"wrr"}
	add		$tmp337 $tmp334 $tmp336 	%argrw{"wrr"}
	mxcompref	$tmp338 ___688_m $const10 $const33 	%argrw{"wrrr"}
	mul		$tmp339 $tmp338 $tmp322.z 	%argrw{"wrr"}
	add		$tmp340 $tmp337 $tmp339 	%argrw{"wrr"}
	mxcompref	$tmp341 ___688_m $const49 $const33 	%argrw{"wrrr"}
	mul		$tmp342 $tmp341 $tmp322.w 	%argrw{"wrr"}
	add		___688_trans.y $tmp340 $tmp342 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp343 ___688_m $const1 $const10 	%line{417} %argrw{"wrrr"}
	mul		$tmp344 $tmp343 $tmp322.x 	%argrw{"wrr"}
	mxcompref	$tmp345 ___688_m $const33 $const10 	%argrw{"wrrr"}
	mul		$tmp346 $tmp345 $tmp322.y 	%argrw{"wrr"}
	add		$tmp347 $tmp344 $tmp346 	%argrw{"wrr"}
	mxcompref	$tmp348 ___688_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp349 $tmp348 $tmp322.z 	%argrw{"wrr"}
	add		$tmp350 $tmp347 $tmp349 	%argrw{"wrr"}
	mxcompref	$tmp351 ___688_m $const49 $const10 	%argrw{"wrrr"}
	mul		$tmp352 $tmp351 $tmp322.w 	%argrw{"wrr"}
	add		___688_trans.z $tmp350 $tmp352 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp353 ___688_m $const1 $const49 	%line{418} %argrw{"wrrr"}
	mul		$tmp354 $tmp353 $tmp322.x 	%argrw{"wrr"}
	mxcompref	$tmp355 ___688_m $const33 $const49 	%argrw{"wrrr"}
	mul		$tmp356 $tmp355 $tmp322.y 	%argrw{"wrr"}
	add		$tmp357 $tmp354 $tmp356 	%argrw{"wrr"}
	mxcompref	$tmp358 ___688_m $const10 $const49 	%argrw{"wrrr"}
	mul		$tmp359 $tmp358 $tmp322.z 	%argrw{"wrr"}
	add		$tmp360 $tmp357 $tmp359 	%argrw{"wrr"}
	mxcompref	$tmp361 ___688_m $const49 $const49 	%argrw{"wrrr"}
	mul		$tmp362 $tmp361 $tmp322.w 	%argrw{"wrr"}
	add		___688_trans.w $tmp360 $tmp362 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:158
# }
	vector		___707_tangent_rotate_out ___688_trans.x ___688_trans.y ___688_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{158} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:333
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___707_transmission_roughness_clamped_low_tmp $const2 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:334
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___707_transmission_roughness_clamped_high_tmp $const19 	%line{334} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:335
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const35 750 	%line{335} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp363 ___707_transmission_roughness_add_out ___707_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___707_transmission_roughness_clamped_out $tmp363 ___707_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:336
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___707_coat_gamma_multiply_out ___707_coat_clamped_out N_StandardSurface_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{336} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:337
#     int opacity_luminance_float_index_tmp = 0;
	div		___707_coat_ior_to_F0_sqrt_out ___707_one_minus_coat_ior_out ___707_one_plus_coat_ior_out 	%line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:338
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___707_opacity_luminance_float_index_tmp $const1 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:339
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const52 755 	%line{339} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___707_opacity_luminance_float_out ___707_opacity_luminance_out ___707_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:340
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___707_coat_tangent_rotate_normalize_out ___707_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{340} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:341
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___707_coat_affected_roughness_fg_tmp $const19 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:342
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___707_coat_affected_roughness_out node_multiply_1_out ___707_coat_affected_roughness_fg_tmp ___707_coat_affect_roughness_multiply2_out 	%line{342} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:343
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___707_tangent_rotate_normalize_out ___707_tangent_rotate_out 	%line{343} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:344
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___707_coat_affected_transmission_roughness_fg_tmp $const19 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:345
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___707_coat_affected_transmission_roughness_out ___707_transmission_roughness_clamped_out ___707_coat_affected_transmission_roughness_fg_tmp ___707_coat_affect_roughness_multiply2_out 	%line{345} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:346
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___707_coat_gamma_in2_tmp $const19 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:347
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___707_coat_gamma_out ___707_coat_gamma_multiply_out ___707_coat_gamma_in2_tmp 	%line{347} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:348
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___707_coat_ior_to_F0_out ___707_coat_ior_to_F0_sqrt_out ___707_coat_ior_to_F0_sqrt_out 	%line{348} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:349
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___707_coat_tangent_value2_tmp $const2 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:350
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp364 N_StandardSurface_coat_anisotropy ___707_coat_tangent_value2_tmp 	%line{350} %argrw{"wrr"}
	functioncall	$const53 772 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp364 770 772 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___707_coat_tangent_out ___707_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___707_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:351
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___707_main_roughness_out.x $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{351} %argrw{"wr"}
	assign		___707_main_roughness_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:352
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const37 793 	%line{352} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:121
#     if (anisotropy > 0.0)
	mul		$tmp365 ___707_coat_affected_roughness_out ___707_coat_affected_roughness_out 	%line{121} %argrw{"wrr"}
	functioncall	$const35 779 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp366 $tmp365 $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___683_roughness_sqr $tmp366 $const38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:122
#     {
	gt		$tmp367 N_StandardSurface_specular_anisotropy $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{122} %argrw{"wrr"}
	if		$tmp367 791 793 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 784 	%line{124} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp369 N_StandardSurface_specular_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp368 $tmp369 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp370 $const19 $tmp368 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{124} %argrw{"wrr"}
	sqrt		___684_aspect $tmp370 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:125
#         result.y = roughness_sqr * aspect;
	div		$tmp371 ___683_roughness_sqr ___684_aspect 	%line{125} %argrw{"wrr"}
	min		___707_main_roughness_out.x $tmp371 $const19 	%argrw{"wrr"}
	assign		___707_main_roughness_out.x ___707_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:126
#     }
	mul		___707_main_roughness_out.y ___683_roughness_sqr ___684_aspect 	%line{126} %argrw{"wrr"}
	assign		___707_main_roughness_out.y ___707_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:130
#         result.y = roughness_sqr;
	assign		___707_main_roughness_out.x ___683_roughness_sqr 	%line{130} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:131
#     }
	assign		___707_main_roughness_out.y ___683_roughness_sqr 	%line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:353
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___707_main_tangent_value2_tmp $const2 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:354
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp372 N_StandardSurface_specular_anisotropy ___707_main_tangent_value2_tmp 	%line{354} %argrw{"wrr"}
	functioncall	$const53 801 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp372 799 801 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___707_main_tangent_out ___707_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___707_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:355
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___707_transmission_roughness_out.x $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{355} %argrw{"wr"}
	assign		___707_transmission_roughness_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:356
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const37 822 	%line{356} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:121
#     if (anisotropy > 0.0)
	mul		$tmp373 ___707_coat_affected_transmission_roughness_out ___707_coat_affected_transmission_roughness_out 	%line{121} %argrw{"wrr"}
	functioncall	$const35 808 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp374 $tmp373 $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___683_roughness_sqr $tmp374 $const38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:122
#     {
	gt		$tmp375 N_StandardSurface_specular_anisotropy $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{122} %argrw{"wrr"}
	if		$tmp375 820 822 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 813 	%line{124} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp377 N_StandardSurface_specular_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp376 $tmp377 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:124
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp378 $const19 $tmp376 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{124} %argrw{"wrr"}
	sqrt		___684_aspect $tmp378 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:125
#         result.y = roughness_sqr * aspect;
	div		$tmp379 ___683_roughness_sqr ___684_aspect 	%line{125} %argrw{"wrr"}
	min		___707_transmission_roughness_out.x $tmp379 $const19 	%argrw{"wrr"}
	assign		___707_transmission_roughness_out.x ___707_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:126
#     }
	mul		___707_transmission_roughness_out.y ___683_roughness_sqr ___684_aspect 	%line{126} %argrw{"wrr"}
	assign		___707_transmission_roughness_out.y ___707_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:130
#         result.y = roughness_sqr;
	assign		___707_transmission_roughness_out.x ___683_roughness_sqr 	%line{130} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:131
#     }
	assign		___707_transmission_roughness_out.y ___683_roughness_sqr 	%line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:357
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___707_coat_affected_subsurface_color_out ___707_subsurface_color_nonnegative_out ___707_coat_gamma_out 	%line{357} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:358
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___707_coat_affected_diffuse_color_out ___707_base_color_nonnegative_out ___707_coat_gamma_out 	%line{358} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:359
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___707_one_minus_coat_ior_to_F0_in1_tmp $const19 	%line{359} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:360
#     color emission_color0_out = color(0.0);
	sub		___707_one_minus_coat_ior_to_F0_out ___707_one_minus_coat_ior_to_F0_in1_tmp ___707_coat_ior_to_F0_out 	%line{360} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:361
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___707_emission_color0_out $const4 	%line{361} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:362
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const54 830 	%line{362} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:197
#     out = combine_out;
	color		___692_combine_out ___707_one_minus_coat_ior_to_F0_out ___707_one_minus_coat_ior_to_F0_out ___707_one_minus_coat_ior_to_F0_out 	%line{197} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:198
# }
	assign		___707_emission_color0_out ___692_combine_out 	%line{198} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:363
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___707_coat_bsdf_out ___707_null_closure 	%line{363} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:364
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const58 842 	%line{364} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:181
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp381 $const57 $const59 	%line{181} %argrw{"wrr"}
	if		$tmp381 835 836 	%argrw{"r"}
	assign		___690_reflection_tint $const4 	%argrw{"wr"}
	assign		___690_reflection_tint $const41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:182
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp382 $const57 $const57 	%line{182} %argrw{"wrr"}
	if		$tmp382 839 840 	%argrw{"r"}
	assign		___690_transmission_tint $const4 	%argrw{"wr"}
	assign		___690_transmission_tint $const41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:183
# }
	closure		$tmp383 $const62 geomprop_Nworld_out1 ___707_coat_tangent_out ___690_reflection_tint ___690_transmission_tint ___707_coat_roughness_vector_out.x ___707_coat_roughness_vector_out.y N_StandardSurface_coat_IOR $const56 $const60 $const2 $const61 $const55 	%line{183} %argrw{"wrrrrrrrrrrrrr"}
	mul		___707_coat_bsdf_out $tmp383 N_StandardSurface_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:365
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___707_metal_bsdf_weight_tmp $const19 	%line{365} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:366
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___707_metal_bsdf_distribution_tmp $const56 	%line{366} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:367
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp384 $const63 node_normalmap_3_out ___707_main_tangent_out ___707_main_roughness_out.x ___707_main_roughness_out.y ___707_artistic_ior_ior ___707_artistic_ior_extinction ___707_metal_bsdf_distribution_tmp $const60 N_StandardSurface_thin_film_thickness $const61 N_StandardSurface_thin_film_IOR 	%line{367} %argrw{"wrrrrrrrrrrrr"}
	mul		___707_metal_bsdf_out $tmp384 ___707_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:368
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___707_specular_bsdf_out ___707_null_closure 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:369
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const58 858 	%line{369} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:181
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp385 $const57 $const59 	%line{181} %argrw{"wrr"}
	if		$tmp385 851 852 	%argrw{"r"}
	assign		___690_reflection_tint $const4 	%argrw{"wr"}
	assign		___690_reflection_tint N_StandardSurface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:182
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp386 $const57 $const57 	%line{182} %argrw{"wrr"}
	if		$tmp386 855 856 	%argrw{"r"}
	assign		___690_transmission_tint $const4 	%argrw{"wr"}
	assign		___690_transmission_tint N_StandardSurface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:183
# }
	closure		$tmp387 $const62 node_normalmap_3_out ___707_main_tangent_out ___690_reflection_tint ___690_transmission_tint ___707_main_roughness_out.x ___707_main_roughness_out.y N_StandardSurface_specular_IOR $const56 $const60 N_StandardSurface_thin_film_thickness $const61 N_StandardSurface_thin_film_IOR 	%line{183} %argrw{"wrrrrrrrrrrrrr"}
	mul		___707_specular_bsdf_out $tmp387 N_StandardSurface_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:370
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___707_transmission_bsdf_out ___707_null_closure 	%line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:371
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const58 870 	%line{371} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:181
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp388 $const59 $const59 	%line{181} %argrw{"wrr"}
	if		$tmp388 863 864 	%argrw{"r"}
	assign		___690_reflection_tint $const4 	%argrw{"wr"}
	assign		___690_reflection_tint N_StandardSurface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:182
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp389 $const59 $const57 	%line{182} %argrw{"wrr"}
	if		$tmp389 867 868 	%argrw{"r"}
	assign		___690_transmission_tint $const4 	%argrw{"wr"}
	assign		___690_transmission_tint N_StandardSurface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:183
# }
	closure		$tmp390 $const62 node_normalmap_3_out ___707_main_tangent_out ___690_reflection_tint ___690_transmission_tint ___707_transmission_roughness_out.x ___707_transmission_roughness_out.y N_StandardSurface_specular_IOR $const56 $const60 $const2 $const61 $const55 	%line{183} %argrw{"wrrrrrrrrrrrrr"}
	mul		___707_transmission_bsdf_out $tmp390 $const19 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:372
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp391 $const64 node_normalmap_3_out N_StandardSurface_sheen_color N_StandardSurface_sheen_roughness 	%line{372} %argrw{"wrrrr"}
	mul		___707_sheen_bsdf_out $tmp391 N_StandardSurface_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:373
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___707_translucent_bsdf_weight_tmp $const19 	%line{373} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:374
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp392 $const65 node_normalmap_3_out ___707_coat_affected_subsurface_color_out 	%line{374} %argrw{"wrrr"}
	mul		___707_translucent_bsdf_out $tmp392 ___707_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:375
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___707_subsurface_bsdf_out ___707_null_closure 	%line{375} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:376
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const66 879 	%line{376} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:191
# #endif
	mul		$tmp393 $const19 ___707_coat_affected_subsurface_color_out 	%line{191} %argrw{"wrr"}
	closure		___707_subsurface_bsdf_out $const67 node_normalmap_3_out $tmp393 $const19 ___707_subsurface_radius_scaled_out N_StandardSurface_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:377
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const68 884 	%line{377} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp394 $const19 ___707_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp395 ___707_subsurface_bsdf_out $tmp394 	%argrw{"wrr"}
	mul		$tmp396 ___707_translucent_bsdf_out ___707_subsurface_selector_out 	%argrw{"wrr"}
	add		___707_selected_subsurface_bsdf_out $tmp395 $tmp396 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:378
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp397 $const69 node_normalmap_3_out ___707_coat_affected_diffuse_color_out N_StandardSurface_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{378} %argrw{"wrrrr"}
	mul		___707_diffuse_bsdf_out $tmp397 N_StandardSurface_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:379
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const68 891 	%line{379} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp398 $const19 N_StandardSurface_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp399 ___707_diffuse_bsdf_out $tmp398 	%argrw{"wrr"}
	mul		$tmp400 ___707_selected_subsurface_bsdf_out N_StandardSurface_subsurface 	%argrw{"wrr"}
	add		___707_subsurface_mix_out $tmp399 $tmp400 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:380
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___707_sheen_layer_out $const70 ___707_sheen_bsdf_out ___707_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{380} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:381
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const68 897 	%line{381} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp401 $const19 N_StandardSurface_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp402 ___707_sheen_layer_out $tmp401 	%argrw{"wrr"}
	mul		$tmp403 ___707_transmission_bsdf_out N_StandardSurface_transmission 	%argrw{"wrr"}
	add		___707_transmission_mix_out $tmp402 $tmp403 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:382
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___707_specular_layer_out $const70 ___707_specular_bsdf_out ___707_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{382} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:383
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const68 903 	%line{383} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp404 $const19 N_StandardSurface_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp405 ___707_specular_layer_out $tmp404 	%argrw{"wrr"}
	mul		$tmp406 ___707_metal_bsdf_out N_StandardSurface_metalness 	%argrw{"wrr"}
	add		___707_metalness_mix_out $tmp405 $tmp406 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:384
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___707_thin_film_layer_attenuated_out ___707_metalness_mix_out ___707_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{384} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:385
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___707_coat_layer_out $const70 ___707_coat_bsdf_out ___707_thin_film_layer_attenuated_out 	%line{385} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:386
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___707_emission_edf_out $const71 ___707_emission_weight_out 	%line{386} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:387
#     EDF coat_emission_edf_out = null_closure;
	mul		___707_coat_tinted_emission_edf_out ___707_emission_edf_out N_StandardSurface_coat_color 	%line{387} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:388
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___707_coat_emission_edf_out ___707_null_closure 	%line{388} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:389
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const73 920 	%line{389} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:282
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp409 I 	%line{282} %argrw{"wr"}
	dot		$tmp408 N $tmp409 	%argrw{"wrr"}
	fabs		___705_NdotV $tmp408 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:283
#     result = base * f;
	functioncall	$const74 919 	%line{283} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:276
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp410 $const19 ___705_NdotV 	%line{276} %argrw{"wrr"}
	functioncall	$const35 917 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp411 $tmp410 $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___704_x $tmp411 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:277
# }
	pow		$tmp412 ___704_x $const72 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{277} %argrw{"wrr"}
	mix		___705_f ___707_emission_color0_out $const4 $tmp412 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:284
# }
	mul		___707_coat_emission_edf_out ___707_coat_tinted_emission_edf_out ___705_f 	%line{284} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:390
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const68 925 	%line{390} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp413 $const19 N_StandardSurface_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp414 ___707_emission_edf_out $tmp413 	%argrw{"wrr"}
	mul		$tmp415 ___707_coat_emission_edf_out N_StandardSurface_coat 	%argrw{"wrr"}
	add		___707_blended_coat_emission_edf_out $tmp414 $tmp415 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:391
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___707_shader_constructor_out.bsdf ___707_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{391} %argrw{"wr"}
	assign		___707_shader_constructor_out.edf ___707_null_closure 	%argrw{"wr"}
	assign		___707_shader_constructor_out.opacity $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:392
#     out = shader_constructor_out;
	functioncall	$const75 935 	%line{392} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:289
#     result.edf     = edf;
	assign		___707_shader_constructor_out.bsdf ___707_coat_layer_out 	%line{289} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:290
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___707_shader_constructor_out.edf ___707_blended_coat_emission_edf_out 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:291
# }
	functioncall	$const35 934 	%line{291} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp416 ___707_opacity_luminance_float_out $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___707_shader_constructor_out.opacity $tmp416 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:291
# }
	assign		___707_shader_constructor_out.opacity ___707_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:393
# }
	assign		N_StandardSurface_out.bsdf ___707_shader_constructor_out.bsdf 	%line{393} %argrw{"wr"}
	assign		N_StandardSurface_out.edf ___707_shader_constructor_out.edf 	%argrw{"wr"}
	assign		N_StandardSurface_out.opacity ___707_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1003
#     out = M_BrickPattern_out;
	functioncall	$const76 948 	%line{1003} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:398
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const35 942 	%line{398} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp417 N_StandardSurface_out.opacity $const19 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___708_opacity_weight $tmp417 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:399
# }
	add		$tmp418 N_StandardSurface_out.bsdf N_StandardSurface_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl"} %line{399} %argrw{"wrr"}
	mul		$tmp419 $tmp418 ___708_opacity_weight 	%argrw{"wrr"}
	closure		$tmp420 $const77 	%argrw{"wr"}
	sub		$tmp421 $const19 ___708_opacity_weight 	%argrw{"wrr"}
	mul		$tmp422 $tmp420 $tmp421 	%argrw{"wrr"}
	add		M_BrickPattern_out $tmp419 $tmp422 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_brick_procedural\\M_BrickPattern.osl:1004
# }
	assign		out M_BrickPattern_out 	%line{1004} %argrw{"wr"}
	end
