OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\Examples\StandardSurface\standard_surface_look_brass_tiled\Greysphere_Calibration.oso
shader Greysphere_Calibration	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"Greysphere_Calibration"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	texcoord1_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	place2d_pivot			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	place2d_pivot.x	0.5		%read{16,64} %write{2147483647,-1} %mystruct{place2d_pivot} %mystructfield{0} %derivs
param	float	place2d_pivot.y	0.5		%read{17,65} %write{2147483647,-1} %mystruct{place2d_pivot} %mystructfield{1} %derivs
param	struct vector2	place2d_scale			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	place2d_scale.x	0.209999993		%read{19,58} %write{2147483647,-1} %mystruct{place2d_scale} %mystructfield{0} %derivs
param	float	place2d_scale.y	0.209999993		%read{20,59} %write{2147483647,-1} %mystruct{place2d_scale} %mystructfield{1} %derivs
param	float	place2d_rotate	0		%meta{string,unit,"degree"} %meta{string,widget,"number"}  %read{29,44} %write{2147483647,-1} %derivs
param	struct vector2	place2d_offset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	place2d_offset.x	-1.65999997		%read{22,55} %write{2147483647,-1} %mystruct{place2d_offset} %mystructfield{0} %derivs
param	float	place2d_offset.y	-0.49000001		%read{23,56} %write{2147483647,-1} %mystruct{place2d_offset} %mystructfield{1} %derivs
param	int	place2d_operationorder	0		%meta{string,widget,"number"}  %read{88,178} %write{2147483647,-1}
param	string	image1_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/greysphere_calibration.png"		%meta{string,label,"Filename"} %meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	image1_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	image1_layer	""		%meta{string,label,"Layer"}  %read{231,231} %write{2147483647,-1}
param	color	image1_default	0 0 0		%meta{string,label,"Default Color"}  %read{225,227} %write{2147483647,-1}
param	string	image1_uaddressmode	"clamp"		%meta{string,label,"Address Mode U"}  %read{196,231} %write{2147483647,-1}
param	string	image1_vaddressmode	"clamp"		%meta{string,label,"Address Mode V"}  %read{211,231} %write{2147483647,-1}
param	string	image1_filtertype	"linear"		%meta{string,label,"Filter Type"}  %read{231,231} %write{2147483647,-1}
param	string	image1_framerange	""		%meta{string,label,"Frame Range"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	image1_frameoffset	0		%meta{string,label,"Frame Offset"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image1_frameendaction	"constant"		%meta{string,label,"Frame End Action"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{322,757} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{756,756} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{771,773} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{323,729} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{323,727} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_specular_roughness	0.699999988		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{327,629} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{728,740} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{651,683} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{326,326} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{765,767} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{735,739} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{327,327} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{759,761} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{330,330} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{336,336} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{336,336} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{750,750} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{743,743} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{742,742} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{742,742} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{324,795} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{343,778} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{302,498} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{306,637} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{321,321} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{345,712} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{622,622} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{324,324} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{716,728} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{716,728} %write{2147483647,-1}
param	float	SR_Greysphere_Calibration_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{348,348} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{348,348} %write{2147483647,-1}
param	color	SR_Greysphere_Calibration_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{351,351} %write{2147483647,-1}
param	int	SR_Greysphere_Calibration_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{337,337} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{820,820}
global	vector	I	%read{781,781} %write{2147483647,-1}
global	normal	N	%read{4,782} %write{2147483647,-1}
global	float	u	%read{10,10} %write{2147483647,-1} %derivs
global	float	v	%read{11,11} %write{2147483647,-1} %derivs
local	float	___669_rotationRadians	%read{30,46} %write{29,44} %derivs
local	float	___669_sa	%read{33,50} %write{30,45} %derivs
local	float	___669_ca	%read{32,52} %write{31,46} %derivs
local	int	___670_ifgreater_10_value1_tmp	%read{88,88} %write{85,85}
local	float	___670_ifgreater_10_in2_tmp.x	%read{94,94} %write{86,86} %mystruct{___670_ifgreater_10_in2_tmp} %mystructfield{0} %derivs
local	float	___670_ifgreater_10_in2_tmp.y	%read{95,95} %write{87,87} %mystruct{___670_ifgreater_10_in2_tmp} %mystructfield{1} %derivs
local	float	___670_ifgreater_10_out.x	%read{104,104} %write{91,94} %mystruct{___670_ifgreater_10_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_10_out.y	%read{105,105} %write{92,95} %mystruct{___670_ifgreater_10_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_9_value1_tmp	%read{98,98} %write{97,97}
local	float	___670_ifgreater_9_out.x	%read{114,114} %write{101,104} %mystruct{___670_ifgreater_9_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_9_out.y	%read{115,115} %write{102,105} %mystruct{___670_ifgreater_9_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_8_value1_tmp	%read{108,108} %write{107,107}
local	float	___670_ifgreater_8_out.x	%read{124,124} %write{111,114} %mystruct{___670_ifgreater_8_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_8_out.y	%read{125,125} %write{112,115} %mystruct{___670_ifgreater_8_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_7_value1_tmp	%read{118,118} %write{117,117}
local	float	___670_ifgreater_7_out.x	%read{134,134} %write{121,124} %mystruct{___670_ifgreater_7_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_7_out.y	%read{135,135} %write{122,125} %mystruct{___670_ifgreater_7_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_6_value1_tmp	%read{128,128} %write{127,127}
local	float	___670_ifgreater_6_out.x	%read{144,144} %write{131,134} %mystruct{___670_ifgreater_6_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_6_out.y	%read{145,145} %write{132,135} %mystruct{___670_ifgreater_6_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_5_value1_tmp	%read{138,138} %write{137,137}
local	float	___670_ifgreater_5_out.x	%read{154,154} %write{141,144} %mystruct{___670_ifgreater_5_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_5_out.y	%read{155,155} %write{142,145} %mystruct{___670_ifgreater_5_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_4_value1_tmp	%read{148,148} %write{147,147}
local	float	___670_ifgreater_4_out.x	%read{164,164} %write{151,154} %mystruct{___670_ifgreater_4_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_4_out.y	%read{165,165} %write{152,155} %mystruct{___670_ifgreater_4_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_3_value1_tmp	%read{158,158} %write{157,157}
local	float	___670_ifgreater_3_out.x	%read{174,174} %write{161,164} %mystruct{___670_ifgreater_3_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_3_out.y	%read{175,175} %write{162,165} %mystruct{___670_ifgreater_3_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_2_value1_tmp	%read{168,168} %write{167,167}
local	float	___670_ifgreater_2_out.x	%read{184,184} %write{171,174} %mystruct{___670_ifgreater_2_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_2_out.y	%read{185,185} %write{172,175} %mystruct{___670_ifgreater_2_out} %mystructfield{1} %derivs
local	int	___670_ifgreater_1_value1_tmp	%read{178,178} %write{177,177}
local	float	___670_ifgreater_1_out.x	%read{187,187} %write{181,184} %mystruct{___670_ifgreater_1_out} %mystructfield{0} %derivs
local	float	___670_ifgreater_1_out.y	%read{188,188} %write{182,185} %mystruct{___670_ifgreater_1_out} %mystructfield{1} %derivs
local	float	___671_N_subpivot_out.x	%read{19,22} %write{16,16} %mystruct{___671_N_subpivot_out} %mystructfield{0} %derivs
local	float	___671_N_subpivot_out.y	%read{20,23} %write{17,17} %mystruct{___671_N_subpivot_out} %mystructfield{1} %derivs
local	float	___671_N_applyscale_out.x	%read{32,36} %write{19,19} %mystruct{___671_N_applyscale_out} %mystructfield{0} %derivs
local	float	___671_N_applyscale_out.y	%read{33,37} %write{20,20} %mystruct{___671_N_applyscale_out} %mystructfield{1} %derivs
local	float	___671_N_applyoffset2_out.x	%read{47,51} %write{22,22} %mystruct{___671_N_applyoffset2_out} %mystructfield{0} %derivs
local	float	___671_N_applyoffset2_out.y	%read{48,52} %write{23,23} %mystruct{___671_N_applyoffset2_out} %mystructfield{1} %derivs
local	float	___671_N_applyrot_out.x	%read{55,55} %write{24,34} %mystruct{___671_N_applyrot_out} %mystructfield{0} %derivs
local	float	___671_N_applyrot_out.y	%read{56,56} %write{25,38} %mystruct{___671_N_applyrot_out} %mystructfield{1} %derivs
local	float	___671_N_applyrot2_out.x	%read{58,58} %write{39,49} %mystruct{___671_N_applyrot2_out} %mystructfield{0} %derivs
local	float	___671_N_applyrot2_out.y	%read{59,59} %write{40,53} %mystruct{___671_N_applyrot2_out} %mystructfield{1} %derivs
local	float	___671_N_applyoffset_out.x	%read{61,61} %write{55,55} %mystruct{___671_N_applyoffset_out} %mystructfield{0} %derivs
local	float	___671_N_applyoffset_out.y	%read{62,62} %write{56,56} %mystruct{___671_N_applyoffset_out} %mystructfield{1} %derivs
local	float	___671_N_applyscale2_out.x	%read{64,64} %write{58,58} %mystruct{___671_N_applyscale2_out} %mystructfield{0} %derivs
local	float	___671_N_applyscale2_out.y	%read{65,65} %write{59,59} %mystruct{___671_N_applyscale2_out} %mystructfield{1} %derivs
local	float	___671_N_addpivot_out.x	%read{181,181} %write{61,61} %mystruct{___671_N_addpivot_out} %mystructfield{0} %derivs
local	float	___671_N_addpivot_out.y	%read{182,182} %write{62,62} %mystruct{___671_N_addpivot_out} %mystructfield{1} %derivs
local	float	___671_N_addpivot2_out.x	%read{171,171} %write{64,64} %mystruct{___671_N_addpivot2_out} %mystructfield{0} %derivs
local	float	___671_N_addpivot2_out.y	%read{172,172} %write{65,65} %mystruct{___671_N_addpivot2_out} %mystructfield{1} %derivs
local	float	___671_N_switch_operationorder_out.x	%read{189,189} %write{66,187} %mystruct{___671_N_switch_operationorder_out} %mystructfield{0} %derivs
local	float	___671_N_switch_operationorder_out.y	%read{190,190} %write{67,188} %mystruct{___671_N_switch_operationorder_out} %mystructfield{1} %derivs
local	color	___673_missingColor	%read{231,231} %write{227,227}
local	float	___673_st.x	%read{231,231} %write{229,229} %mystruct{___673_st} %mystructfield{0} %derivs
local	float	___673_st.y	%read{231,231} %write{230,230} %mystruct{___673_st} %mystructfield{1} %derivs
local	int	___675_N_extract_0_index_tmp	%read{244,244} %write{242,242}
local	float	___675_N_extract_0_out	%read{251,251} %write{244,244}
local	int	___675_N_extract_1_index_tmp	%read{247,247} %write{245,245}
local	float	___675_N_extract_1_out	%read{252,252} %write{247,247}
local	int	___675_N_extract_2_index_tmp	%read{250,250} %write{248,248}
local	float	___675_N_extract_2_out	%read{253,253} %write{250,250}
local	float	___676_bias_in2_tmp	%read{235,235} %write{234,234}
local	color	___676_bias_out	%read{256,256} %write{235,235}
local	float	___676_linSeg_in2_tmp	%read{237,237} %write{236,236}
local	color	___676_linSeg_out	%read{292,292} %write{237,237}
local	float	___676_colorSeparate_outr	%read{260,260} %write{238,251}
local	float	___676_colorSeparate_outg	%read{270,270} %write{239,252}
local	float	___676_colorSeparate_outb	%read{280,280} %write{240,253}
local	float	___676_max_in2_tmp	%read{255,255} %write{254,254}
local	color	___676_max_out	%read{288,288} %write{256,256}
local	float	___676_isAboveR_value2_tmp	%read{260,260} %write{257,257}
local	float	___676_isAboveR_in1_tmp	%read{263,263} %write{258,258}
local	float	___676_isAboveR_in2_tmp	%read{265,265} %write{259,259}
local	float	___676_isAboveR_out	%read{289,289} %write{263,265}
local	float	___676_isAboveG_value2_tmp	%read{270,270} %write{267,267}
local	float	___676_isAboveG_in1_tmp	%read{273,273} %write{268,268}
local	float	___676_isAboveG_in2_tmp	%read{275,275} %write{269,269}
local	float	___676_isAboveG_out	%read{289,289} %write{273,275}
local	float	___676_isAboveB_value2_tmp	%read{280,280} %write{277,277}
local	float	___676_isAboveB_in1_tmp	%read{283,283} %write{278,278}
local	float	___676_isAboveB_in2_tmp	%read{285,285} %write{279,279}
local	float	___676_isAboveB_out	%read{289,289} %write{283,285}
local	float	___676_scale_in2_tmp	%read{288,288} %write{287,287}
local	color	___676_scale_out	%read{291,291} %write{288,288}
local	color	___676_isAbove_out	%read{292,292} %write{289,289}
local	float	___676_powSeg_in2_tmp	%read{291,291} %write{290,290}
local	color	___676_powSeg_out	%read{292,292} %write{291,291}
local	color	___676_mix_out	%read{293,293} %write{292,292}
local	float	___677_roughness_sqr	%read{313,693} %write{305,679}
local	float	___678_aspect	%read{313,690} %write{312,686}
local	vector	___681_nAxis	%read{363,563} %write{359,505}
local	float	___681_s	%read{373,559} %write{360,506}
local	float	___681_c	%read{362,565} %write{361,507}
local	float	___681_oc	%read{364,562} %write{362,508}
local	float	___682_rotationRadians	%read{360,507} %write{357,503}
local	matrix	___682_m	%read{426,613} %write{420,566}
local	float	___682_trans.x	%read{470,616} %write{436,582} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{470,616} %write{447,593} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{470,616} %write{458,604} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{469,615} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{479,493} %write{478,478}
local	color	___683_r_sqrt	%read{483,484} %write{479,479}
local	color	___683_n_min	%read{486,486} %write{482,482}
local	color	___683_n_max	%read{486,486} %write{485,485}
local	color	___683_np1	%read{489,489} %write{487,487}
local	color	___683_nm1	%read{491,491} %write{488,488}
local	color	___683_k2	%read{496,497} %write{494,496}
local	color	___684_reflection_tint	%read{712,740} %write{706,735}
local	color	___684_transmission_tint	%read{712,740} %write{710,739}
local	color	___686_combine_out	%read{701,701} %write{700,700}
local	float	___698_x	%read{789,789} %write{788,788}
local	float	___699_NdotV	%read{785,785} %write{783,783}
local	color	___699_f	%read{791,791} %write{790,790}
local	closure color	___701_null_closure	%read{702,798} %write{298,298}
local	float	___701_coat_roughness_vector_out.x	%read{315,712} %write{299,318} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{317,712} %write{300,319} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{321,321} %write{320,320}
local	float	___701_coat_tangent_rotate_degree_out	%read{357,357} %write{321,321}
local	color	___701_metal_reflectivity_out	%read{477,477} %write{322,322}
local	color	___701_metal_edgecolor_out	%read{486,486} %write{323,323}
local	float	___701_coat_affect_roughness_multiply1_out	%read{498,498} %write{324,324}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{326,326} %write{325,325}
local	float	___701_tangent_rotate_degree_out	%read{503,503} %write{326,326}
local	float	___701_transmission_roughness_add_out	%read{620,620} %write{327,327}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{329,329} %write{328,328}
local	color	___701_subsurface_color_nonnegative_out	%read{694,694} %write{330,330}
local	float	___701_coat_clamped_low_tmp	%read{335,335} %write{331,331}
local	float	___701_coat_clamped_high_tmp	%read{334,334} %write{332,332}
local	float	___701_coat_clamped_out	%read{622,622} %write{335,335}
local	color	___701_subsurface_radius_scaled_out	%read{750,750} %write{336,336}
local	float	___701_subsurface_selector_out	%read{752,754} %write{338,338}
local	float	___701_base_color_nonnegative_in2_tmp	%read{340,340} %write{339,339}
local	color	___701_base_color_nonnegative_out	%read{695,695} %write{341,341}
local	color	___701_coat_attenuation_bg_tmp	%read{343,343} %write{342,342}
local	color	___701_coat_attenuation_out	%read{775,775} %write{343,343}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{345,345} %write{344,344}
local	float	___701_one_minus_coat_ior_out	%read{623,623} %write{345,345}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{347,347} %write{346,346}
local	float	___701_one_plus_coat_ior_out	%read{623,623} %write{347,347}
local	color	___701_emission_weight_out	%read{777,777} %write{348,348}
local	color	___701_opacity_luminance_out	%read{626,626} %write{349,352}
local	vector	___701_coat_tangent_rotate_out	%read{627,627} %write{353,470}
local	color	___701_artistic_ior_ior	%read{487,716} %write{471,486}
local	color	___701_artistic_ior_extinction	%read{716,716} %write{472,497}
local	float	___701_coat_affect_roughness_multiply2_out	%read{629,632} %write{498,498}
local	vector	___701_tangent_rotate_out	%read{630,630} %write{499,616}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{621,621} %write{617,617}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{620,620} %write{618,618}
local	float	___701_transmission_roughness_clamped_out	%read{632,632} %write{621,621}
local	float	___701_coat_gamma_multiply_out	%read{634,634} %write{622,622}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{635,635} %write{623,623}
local	int	___701_opacity_luminance_float_index_tmp	%read{626,626} %write{624,624}
local	float	___701_opacity_luminance_float_out	%read{804,804} %write{626,626}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{640,640} %write{627,627}
local	float	___701_coat_affected_roughness_fg_tmp	%read{629,629} %write{628,628}
local	float	___701_coat_affected_roughness_out	%read{647,647} %write{629,629}
local	vector	___701_tangent_rotate_normalize_out	%read{669,669} %write{630,630}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{632,632} %write{631,631}
local	float	___701_coat_affected_transmission_roughness_out	%read{676,676} %write{632,632}
local	float	___701_coat_gamma_in2_tmp	%read{634,634} %write{633,633}
local	float	___701_coat_gamma_out	%read{694,695} %write{634,634}
local	float	___701_coat_ior_to_F0_out	%read{697,697} %write{635,635}
local	float	___701_coat_tangent_value2_tmp	%read{637,637} %write{636,636}
local	vector	___701_coat_tangent_out	%read{712,712} %write{640,642}
local	float	___701_main_roughness_out.x	%read{660,728} %write{644,663} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{662,728} %write{645,664} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{666,666} %write{665,665}
local	vector	___701_main_tangent_out	%read{716,740} %write{669,671}
local	float	___701_transmission_roughness_out.x	%read{689,740} %write{673,692} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{691,740} %write{674,693} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{745,749} %write{694,694}
local	color	___701_coat_affected_diffuse_color_out	%read{756,756} %write{695,695}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{697,697} %write{696,696}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{700,700} %write{697,697}
local	color	___701_emission_color0_out	%read{790,790} %write{698,701}
local	closure color	___701_coat_bsdf_out	%read{776,776} %write{702,713}
local	float	___701_metal_bsdf_weight_tmp	%read{717,717} %write{714,714}
local	string	___701_metal_bsdf_distribution_tmp	%read{716,716} %write{715,715}
local	closure color	___701_metal_bsdf_out	%read{773,773} %write{717,717}
local	closure color	___701_specular_bsdf_out	%read{769,769} %write{718,729}
local	closure color	___701_transmission_bsdf_out	%read{767,767} %write{730,741}
local	closure color	___701_sheen_bsdf_out	%read{763,763} %write{743,743}
local	float	___701_translucent_bsdf_weight_tmp	%read{746,746} %write{744,744}
local	closure color	___701_translucent_bsdf_out	%read{754,754} %write{746,746}
local	closure color	___701_subsurface_bsdf_out	%read{753,753} %write{747,750}
local	closure color	___701_selected_subsurface_bsdf_out	%read{761,761} %write{755,755}
local	closure color	___701_diffuse_bsdf_out	%read{760,760} %write{757,757}
local	closure color	___701_subsurface_mix_out	%read{763,763} %write{762,762}
local	closure color	___701_sheen_layer_out	%read{766,766} %write{763,763}
local	closure color	___701_transmission_mix_out	%read{769,769} %write{768,768}
local	closure color	___701_specular_layer_out	%read{772,772} %write{769,769}
local	closure color	___701_metalness_mix_out	%read{775,775} %write{774,774}
local	closure color	___701_thin_film_layer_attenuated_out	%read{776,776} %write{775,775}
local	closure color	___701_coat_layer_out	%read{801,801} %write{776,776}
local	closure color	___701_emission_edf_out	%read{778,794} %write{777,777}
local	closure color	___701_coat_tinted_emission_edf_out	%read{791,791} %write{778,778}
local	closure color	___701_coat_emission_edf_out	%read{795,795} %write{779,791}
local	closure color	___701_blended_coat_emission_edf_out	%read{802,802} %write{796,796}
local	closure color	___701_shader_constructor_out.bsdf	%read{807,807} %write{797,801} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{808,808} %write{798,802} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{806,809} %write{799,806} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{815,817} %write{813,813}
local	closure color	null_closure	%read{294,295} %write{0,0}
local	string	image1_file_.filename	%read{193,231} %write{1,1} %mystruct{image1_file_} %mystructfield{0}
local	string	image1_file_.colorspace	%read{231,231} %write{2,2} %mystruct{image1_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{359,756} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{421,671} %write{9,9}
local	float	texcoord1_out.x	%read{16,16} %write{10,10} %mystruct{texcoord1_out} %mystructfield{0} %derivs
local	float	texcoord1_out.y	%read{17,17} %write{11,11} %mystruct{texcoord1_out} %mystructfield{1} %derivs
local	float	place2d_out.x	%read{199,229} %write{12,189} %mystruct{place2d_out} %mystructfield{0} %derivs
local	float	place2d_out.y	%read{214,230} %write{13,190} %mystruct{place2d_out} %mystructfield{1} %derivs
local	color	image1_out	%read{235,250} %write{191,231}
local	color	image1_out_cm_out	%read{322,341} %write{232,293}
local	closure color	SR_Greysphere_Calibration_out.bsdf	%read{814,814} %write{294,807} %mystruct{SR_Greysphere_Calibration_out} %mystructfield{0}
local	closure color	SR_Greysphere_Calibration_out.edf	%read{814,814} %write{295,808} %mystruct{SR_Greysphere_Calibration_out} %mystructfield{1}
local	float	SR_Greysphere_Calibration_out.opacity	%read{812,812} %write{296,809} %mystruct{SR_Greysphere_Calibration_out} %mystructfield{2}
local	closure color	Greysphere_Calibration_out	%read{820,820} %write{819,819}
const	int	$const1	0		%read{0,624} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,571} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,610} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,813} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
const	string	$const6	"NG_place2d_vector2"		%read{14,14} %write{2147483647,-1}
const	string	$const7	"__operator__sub__"		%read{15,54} %write{2147483647,-1}
const	string	$const8	"__operator__div__"		%read{18,57} %write{2147483647,-1}
const	string	$const9	"mx_rotate_vector2"		%read{26,41} %write{2147483647,-1}
const	string	$const10	"radians"		%read{27,501} %write{2147483647,-1}
const	float	$const11	3.1415927		%read{28,502} %write{2147483647,-1}
const	float	$const12	180		%read{28,502} %write{2147483647,-1}
temp	float	$tmp5	%read{29,29} %write{28,28} %derivs
temp	float	$tmp6	%read{34,34} %write{32,32} %derivs
temp	float	$tmp7	%read{34,34} %write{33,33} %derivs
temp	float	$tmp8	%read{36,36} %write{35,35} %derivs
temp	float	$tmp9	%read{38,38} %write{36,36} %derivs
temp	float	$tmp10	%read{38,38} %write{37,37} %derivs
temp	float	$tmp11	%read{44,44} %write{43,43} %derivs
temp	float	$tmp12	%read{49,49} %write{47,47} %derivs
temp	float	$tmp13	%read{49,49} %write{48,48} %derivs
temp	float	$tmp14	%read{51,51} %write{50,50} %derivs
temp	float	$tmp15	%read{53,53} %write{51,51} %derivs
temp	float	$tmp16	%read{53,53} %write{52,52} %derivs
const	string	$const13	"__operator__add__"		%read{60,63} %write{2147483647,-1}
temp	float	$tmp17.x	%read{161,161} %write{68,68} %derivs
temp	float	$tmp17.y	%read{162,162} %write{69,69} %derivs
temp	float	$tmp18.x	%read{151,151} %write{70,70} %derivs
temp	float	$tmp18.y	%read{152,152} %write{71,71} %derivs
temp	float	$tmp19.x	%read{141,141} %write{72,72} %derivs
temp	float	$tmp19.y	%read{142,142} %write{73,73} %derivs
temp	float	$tmp20.x	%read{131,131} %write{74,74} %derivs
temp	float	$tmp20.y	%read{132,132} %write{75,75} %derivs
temp	float	$tmp21.x	%read{121,121} %write{76,76} %derivs
temp	float	$tmp21.y	%read{122,122} %write{77,77} %derivs
temp	float	$tmp22.x	%read{111,111} %write{78,78} %derivs
temp	float	$tmp22.y	%read{112,112} %write{79,79} %derivs
temp	float	$tmp23.x	%read{101,101} %write{80,80} %derivs
temp	float	$tmp23.y	%read{102,102} %write{81,81} %derivs
temp	float	$tmp24.x	%read{91,91} %write{82,82} %derivs
temp	float	$tmp24.y	%read{92,92} %write{83,83} %derivs
const	string	$const14	"NG_switch_vector2I"		%read{84,84} %write{2147483647,-1}
const	int	$const15	10		%read{85,85} %write{2147483647,-1}
temp	int	$tmp25	%read{90,90} %write{88,88}
const	string	$const16	"mx_ternary"		%read{89,667} %write{2147483647,-1}
const	int	$const17	9		%read{97,97} %write{2147483647,-1}
temp	int	$tmp26	%read{100,100} %write{98,98}
const	int	$const18	8		%read{107,107} %write{2147483647,-1}
temp	int	$tmp27	%read{110,110} %write{108,108}
const	int	$const19	7		%read{117,117} %write{2147483647,-1}
temp	int	$tmp28	%read{120,120} %write{118,118}
const	int	$const20	6		%read{127,127} %write{2147483647,-1}
temp	int	$tmp29	%read{130,130} %write{128,128}
const	int	$const21	5		%read{137,137} %write{2147483647,-1}
temp	int	$tmp30	%read{140,140} %write{138,138}
const	int	$const22	4		%read{147,147} %write{2147483647,-1}
temp	int	$tmp31	%read{150,150} %write{148,148}
const	int	$const23	3		%read{157,613} %write{2147483647,-1}
temp	int	$tmp32	%read{160,160} %write{158,158}
temp	int	$tmp33	%read{170,170} %write{168,168}
const	int	$const24	1		%read{177,607} %write{2147483647,-1}
temp	int	$tmp34	%read{180,180} %write{178,178}
const	color	$const25	0 0 0		%read{191,790} %write{2147483647,-1}
const	string	$const26	"mx_image_color3"		%read{192,192} %write{2147483647,-1}
const	string	$const27	""		%read{193,193} %write{2147483647,-1}
temp	int	$tmp35	%read{194,194} %write{193,193}
temp	int	$tmp36	%read{195,209} %write{194,208}
const	string	$const28	"constant"		%read{196,211} %write{2147483647,-1}
temp	int	$tmp37	%read{197,197} %write{196,196}
temp	int	$tmp38	%read{198,207} %write{197,206}
temp	int	$tmp39	%read{200,200} %write{199,199}
temp	int	$tmp40	%read{201,205} %write{200,204}
const	float	$const29	1		%read{202,817} %write{2147483647,-1}
temp	int	$tmp41	%read{203,203} %write{202,202}
temp	int	$tmp42	%read{204,204} %write{203,203}
temp	int	$tmp43	%read{206,206} %write{205,205}
temp	int	$tmp44	%read{208,208} %write{207,207}
temp	int	$tmp45	%read{210,224} %write{209,223}
temp	int	$tmp46	%read{212,212} %write{211,211}
temp	int	$tmp47	%read{213,222} %write{212,221}
temp	int	$tmp48	%read{215,215} %write{214,214}
temp	int	$tmp49	%read{216,220} %write{215,219}
temp	int	$tmp50	%read{218,218} %write{217,217}
temp	int	$tmp51	%read{219,219} %write{218,218}
temp	int	$tmp52	%read{221,221} %write{220,220}
temp	int	$tmp53	%read{223,223} %write{222,222}
const	string	$const30	"mx_transform_uv"		%read{228,228} %write{2147483647,-1}
const	string	$const31	"subimage"		%read{231,231} %write{2147483647,-1}
const	string	$const32	"interp"		%read{231,231} %write{2147483647,-1}
const	string	$const33	"missingcolor"		%read{231,231} %write{2147483647,-1}
const	string	$const34	"swrap"		%read{231,231} %write{2147483647,-1}
const	string	$const35	"twrap"		%read{231,231} %write{2147483647,-1}
const	string	$const36	"colorspace"		%read{231,231} %write{2147483647,-1}
const	string	$const37	"NG_srgb_texture_to_lin_rec709_color3"		%read{233,233} %write{2147483647,-1}
const	float	$const38	0.055		%read{234,234} %write{2147483647,-1}
const	float	$const39	12.92		%read{236,236} %write{2147483647,-1}
const	string	$const40	"NG_separate3_color3"		%read{241,241} %write{2147483647,-1}
const	string	$const41	"mx_extract"		%read{243,625} %write{2147483647,-1}
temp	color	$tmp54	%read{256,256} %write{255,255}
const	float	$const42	0.04045		%read{257,277} %write{2147483647,-1}
temp	int	$tmp55	%read{262,262} %write{260,260}
temp	int	$tmp56	%read{272,272} %write{270,270}
temp	int	$tmp57	%read{282,282} %write{280,280}
const	float	$const43	1.055		%read{287,287} %write{2147483647,-1}
const	float	$const44	2.4		%read{290,290} %write{2147483647,-1}
const	string	$const45	"NG_standard_surface_surfaceshader_100"		%read{297,297} %write{2147483647,-1}
const	string	$const46	"mx_roughness_anisotropy"		%read{301,675} %write{2147483647,-1}
temp	float	$tmp58	%read{304,304} %write{302,302}
const	float	$const47	1e-08		%read{305,679} %write{2147483647,-1}
const	string	$const48	"clamp"		%read{303,811} %write{2147483647,-1}
temp	float	$tmp59	%read{305,305} %write{304,304}
temp	int	$tmp60	%read{307,307} %write{306,306}
temp	float	$tmp61	%read{311,311} %write{310,310}
const	float	$const49	0.98		%read{309,683} %write{2147483647,-1}
temp	float	$tmp62	%read{310,310} %write{309,309}
temp	float	$tmp63	%read{312,312} %write{311,311}
temp	float	$tmp64	%read{314,314} %write{313,313}
const	float	$const50	360		%read{320,325} %write{2147483647,-1}
temp	color	$tmp65	%read{330,330} %write{329,329}
temp	float	$tmp66	%read{335,335} %write{334,334}
temp	float	$tmp67	%read{338,338} %write{337,337}
temp	color	$tmp68	%read{341,341} %write{340,340}
const	color	$const51	1 1 1		%read{342,711} %write{2147483647,-1}
const	color	$const52	0.272229 0.674082 0.053689		%read{351,351} %write{2147483647,-1}
const	string	$const53	"mx_luminance_color3"		%read{350,350} %write{2147483647,-1}
temp	float	$tmp70	%read{352,352} %write{351,351}
const	vector	$const54	0 0 0		%read{353,499} %write{2147483647,-1}
const	string	$const55	"mx_rotate_vector3"		%read{354,500} %write{2147483647,-1}
temp	float	$tmp71	%read{357,357} %write{356,356}
const	string	$const56	"rotationMatrix"		%read{358,504} %write{2147483647,-1}
temp	float	$tmp72	%read{364,364} %write{363,363}
temp	float	$tmp73	%read{366,366} %write{364,364}
temp	float	$tmp74	%read{366,366} %write{365,365}
temp	float	$tmp75	%read{367,367} %write{366,366}
temp	float	$tmp76	%read{420,420} %write{367,367}
temp	float	$tmp77	%read{369,369} %write{368,368}
temp	float	$tmp78	%read{371,371} %write{369,369}
temp	float	$tmp79	%read{371,371} %write{370,370}
temp	float	$tmp80	%read{374,374} %write{371,371}
temp	float	$tmp81	%read{373,373} %write{372,372}
temp	float	$tmp82	%read{374,374} %write{373,373}
temp	float	$tmp83	%read{420,420} %write{374,374}
temp	float	$tmp84	%read{376,376} %write{375,375}
temp	float	$tmp85	%read{378,378} %write{376,376}
temp	float	$tmp86	%read{378,378} %write{377,377}
temp	float	$tmp87	%read{381,381} %write{378,378}
temp	float	$tmp88	%read{380,380} %write{379,379}
temp	float	$tmp89	%read{381,381} %write{380,380}
temp	float	$tmp90	%read{420,420} %write{381,381}
temp	float	$tmp91	%read{383,383} %write{382,382}
temp	float	$tmp92	%read{385,385} %write{383,383}
temp	float	$tmp93	%read{385,385} %write{384,384}
temp	float	$tmp94	%read{388,388} %write{385,385}
temp	float	$tmp95	%read{387,387} %write{386,386}
temp	float	$tmp96	%read{388,388} %write{387,387}
temp	float	$tmp97	%read{420,420} %write{388,388}
temp	float	$tmp98	%read{390,390} %write{389,389}
temp	float	$tmp99	%read{392,392} %write{390,390}
temp	float	$tmp100	%read{392,392} %write{391,391}
temp	float	$tmp101	%read{393,393} %write{392,392}
temp	float	$tmp102	%read{420,420} %write{393,393}
temp	float	$tmp103	%read{395,395} %write{394,394}
temp	float	$tmp104	%read{397,397} %write{395,395}
temp	float	$tmp105	%read{397,397} %write{396,396}
temp	float	$tmp106	%read{400,400} %write{397,397}
temp	float	$tmp107	%read{399,399} %write{398,398}
temp	float	$tmp108	%read{400,400} %write{399,399}
temp	float	$tmp109	%read{420,420} %write{400,400}
temp	float	$tmp110	%read{402,402} %write{401,401}
temp	float	$tmp111	%read{404,404} %write{402,402}
temp	float	$tmp112	%read{404,404} %write{403,403}
temp	float	$tmp113	%read{407,407} %write{404,404}
temp	float	$tmp114	%read{406,406} %write{405,405}
temp	float	$tmp115	%read{407,407} %write{406,406}
temp	float	$tmp116	%read{420,420} %write{407,407}
temp	float	$tmp117	%read{409,409} %write{408,408}
temp	float	$tmp118	%read{411,411} %write{409,409}
temp	float	$tmp119	%read{411,411} %write{410,410}
temp	float	$tmp120	%read{414,414} %write{411,411}
temp	float	$tmp121	%read{413,413} %write{412,412}
temp	float	$tmp122	%read{414,414} %write{413,413}
temp	float	$tmp123	%read{420,420} %write{414,414}
temp	float	$tmp124	%read{416,416} %write{415,415}
temp	float	$tmp125	%read{418,418} %write{416,416}
temp	float	$tmp126	%read{418,418} %write{417,417}
temp	float	$tmp127	%read{419,419} %write{418,418}
temp	float	$tmp128	%read{420,420} %write{419,419}
temp	float	$tmp129.x	%read{427,460} %write{421,421}
temp	float	$tmp129.y	%read{429,462} %write{422,422}
temp	float	$tmp129.z	%read{432,465} %write{423,423}
temp	float	$tmp129.w	%read{435,468} %write{424,424}
temp	float	$tmp130	%read{427,427} %write{426,426}
temp	float	$tmp131	%read{430,430} %write{427,427}
temp	float	$tmp132	%read{429,429} %write{428,428}
temp	float	$tmp133	%read{430,430} %write{429,429}
temp	float	$tmp134	%read{433,433} %write{430,430}
temp	float	$tmp135	%read{432,432} %write{431,431}
temp	float	$tmp136	%read{433,433} %write{432,432}
temp	float	$tmp137	%read{436,436} %write{433,433}
temp	float	$tmp138	%read{435,435} %write{434,434}
temp	float	$tmp139	%read{436,436} %write{435,435}
temp	float	$tmp140	%read{438,438} %write{437,437}
temp	float	$tmp141	%read{441,441} %write{438,438}
temp	float	$tmp142	%read{440,440} %write{439,439}
temp	float	$tmp143	%read{441,441} %write{440,440}
temp	float	$tmp144	%read{444,444} %write{441,441}
temp	float	$tmp145	%read{443,443} %write{442,442}
temp	float	$tmp146	%read{444,444} %write{443,443}
temp	float	$tmp147	%read{447,447} %write{444,444}
temp	float	$tmp148	%read{446,446} %write{445,445}
temp	float	$tmp149	%read{447,447} %write{446,446}
temp	float	$tmp150	%read{449,449} %write{448,448}
temp	float	$tmp151	%read{452,452} %write{449,449}
temp	float	$tmp152	%read{451,451} %write{450,450}
temp	float	$tmp153	%read{452,452} %write{451,451}
temp	float	$tmp154	%read{455,455} %write{452,452}
temp	float	$tmp155	%read{454,454} %write{453,453}
temp	float	$tmp156	%read{455,455} %write{454,454}
temp	float	$tmp157	%read{458,458} %write{455,455}
temp	float	$tmp158	%read{457,457} %write{456,456}
temp	float	$tmp159	%read{458,458} %write{457,457}
temp	float	$tmp160	%read{460,460} %write{459,459}
temp	float	$tmp161	%read{463,463} %write{460,460}
temp	float	$tmp162	%read{462,462} %write{461,461}
temp	float	$tmp163	%read{463,463} %write{462,462}
temp	float	$tmp164	%read{466,466} %write{463,463}
temp	float	$tmp165	%read{465,465} %write{464,464}
temp	float	$tmp166	%read{466,466} %write{465,465}
temp	float	$tmp167	%read{469,469} %write{466,466}
temp	float	$tmp168	%read{468,468} %write{467,467}
temp	float	$tmp169	%read{469,469} %write{468,468}
const	string	$const57	"mx_artistic_ior"		%read{473,473} %write{2147483647,-1}
temp	color	$tmp170	%read{478,478} %write{474,474}
const	float	$const58	0.99		%read{475,475} %write{2147483647,-1}
temp	color	$tmp171	%read{477,477} %write{475,475}
temp	color	$tmp172	%read{478,478} %write{477,477}
temp	color	$tmp173	%read{482,482} %write{480,480}
temp	color	$tmp174	%read{482,482} %write{481,481}
temp	color	$tmp175	%read{485,485} %write{483,483}
temp	color	$tmp176	%read{485,485} %write{484,484}
temp	color	$tmp177	%read{490,490} %write{489,489}
temp	color	$tmp178	%read{492,492} %write{490,490}
temp	color	$tmp179	%read{492,492} %write{491,491}
temp	color	$tmp180	%read{494,494} %write{492,492}
temp	color	$tmp181	%read{494,494} %write{493,493}
temp	color	$tmp182	%read{496,496} %write{495,495}
temp	float	$tmp183	%read{503,503} %write{502,502}
temp	float	$tmp184	%read{510,510} %write{509,509}
temp	float	$tmp185	%read{512,512} %write{510,510}
temp	float	$tmp186	%read{512,512} %write{511,511}
temp	float	$tmp187	%read{513,513} %write{512,512}
temp	float	$tmp188	%read{566,566} %write{513,513}
temp	float	$tmp189	%read{515,515} %write{514,514}
temp	float	$tmp190	%read{517,517} %write{515,515}
temp	float	$tmp191	%read{517,517} %write{516,516}
temp	float	$tmp192	%read{520,520} %write{517,517}
temp	float	$tmp193	%read{519,519} %write{518,518}
temp	float	$tmp194	%read{520,520} %write{519,519}
temp	float	$tmp195	%read{566,566} %write{520,520}
temp	float	$tmp196	%read{522,522} %write{521,521}
temp	float	$tmp197	%read{524,524} %write{522,522}
temp	float	$tmp198	%read{524,524} %write{523,523}
temp	float	$tmp199	%read{527,527} %write{524,524}
temp	float	$tmp200	%read{526,526} %write{525,525}
temp	float	$tmp201	%read{527,527} %write{526,526}
temp	float	$tmp202	%read{566,566} %write{527,527}
temp	float	$tmp203	%read{529,529} %write{528,528}
temp	float	$tmp204	%read{531,531} %write{529,529}
temp	float	$tmp205	%read{531,531} %write{530,530}
temp	float	$tmp206	%read{534,534} %write{531,531}
temp	float	$tmp207	%read{533,533} %write{532,532}
temp	float	$tmp208	%read{534,534} %write{533,533}
temp	float	$tmp209	%read{566,566} %write{534,534}
temp	float	$tmp210	%read{536,536} %write{535,535}
temp	float	$tmp211	%read{538,538} %write{536,536}
temp	float	$tmp212	%read{538,538} %write{537,537}
temp	float	$tmp213	%read{539,539} %write{538,538}
temp	float	$tmp214	%read{566,566} %write{539,539}
temp	float	$tmp215	%read{541,541} %write{540,540}
temp	float	$tmp216	%read{543,543} %write{541,541}
temp	float	$tmp217	%read{543,543} %write{542,542}
temp	float	$tmp218	%read{546,546} %write{543,543}
temp	float	$tmp219	%read{545,545} %write{544,544}
temp	float	$tmp220	%read{546,546} %write{545,545}
temp	float	$tmp221	%read{566,566} %write{546,546}
temp	float	$tmp222	%read{548,548} %write{547,547}
temp	float	$tmp223	%read{550,550} %write{548,548}
temp	float	$tmp224	%read{550,550} %write{549,549}
temp	float	$tmp225	%read{553,553} %write{550,550}
temp	float	$tmp226	%read{552,552} %write{551,551}
temp	float	$tmp227	%read{553,553} %write{552,552}
temp	float	$tmp228	%read{566,566} %write{553,553}
temp	float	$tmp229	%read{555,555} %write{554,554}
temp	float	$tmp230	%read{557,557} %write{555,555}
temp	float	$tmp231	%read{557,557} %write{556,556}
temp	float	$tmp232	%read{560,560} %write{557,557}
temp	float	$tmp233	%read{559,559} %write{558,558}
temp	float	$tmp234	%read{560,560} %write{559,559}
temp	float	$tmp235	%read{566,566} %write{560,560}
temp	float	$tmp236	%read{562,562} %write{561,561}
temp	float	$tmp237	%read{564,564} %write{562,562}
temp	float	$tmp238	%read{564,564} %write{563,563}
temp	float	$tmp239	%read{565,565} %write{564,564}
temp	float	$tmp240	%read{566,566} %write{565,565}
temp	float	$tmp241.x	%read{573,606} %write{567,567}
temp	float	$tmp241.y	%read{575,608} %write{568,568}
temp	float	$tmp241.z	%read{578,611} %write{569,569}
temp	float	$tmp241.w	%read{581,614} %write{570,570}
temp	float	$tmp242	%read{573,573} %write{572,572}
temp	float	$tmp243	%read{576,576} %write{573,573}
temp	float	$tmp244	%read{575,575} %write{574,574}
temp	float	$tmp245	%read{576,576} %write{575,575}
temp	float	$tmp246	%read{579,579} %write{576,576}
temp	float	$tmp247	%read{578,578} %write{577,577}
temp	float	$tmp248	%read{579,579} %write{578,578}
temp	float	$tmp249	%read{582,582} %write{579,579}
temp	float	$tmp250	%read{581,581} %write{580,580}
temp	float	$tmp251	%read{582,582} %write{581,581}
temp	float	$tmp252	%read{584,584} %write{583,583}
temp	float	$tmp253	%read{587,587} %write{584,584}
temp	float	$tmp254	%read{586,586} %write{585,585}
temp	float	$tmp255	%read{587,587} %write{586,586}
temp	float	$tmp256	%read{590,590} %write{587,587}
temp	float	$tmp257	%read{589,589} %write{588,588}
temp	float	$tmp258	%read{590,590} %write{589,589}
temp	float	$tmp259	%read{593,593} %write{590,590}
temp	float	$tmp260	%read{592,592} %write{591,591}
temp	float	$tmp261	%read{593,593} %write{592,592}
temp	float	$tmp262	%read{595,595} %write{594,594}
temp	float	$tmp263	%read{598,598} %write{595,595}
temp	float	$tmp264	%read{597,597} %write{596,596}
temp	float	$tmp265	%read{598,598} %write{597,597}
temp	float	$tmp266	%read{601,601} %write{598,598}
temp	float	$tmp267	%read{600,600} %write{599,599}
temp	float	$tmp268	%read{601,601} %write{600,600}
temp	float	$tmp269	%read{604,604} %write{601,601}
temp	float	$tmp270	%read{603,603} %write{602,602}
temp	float	$tmp271	%read{604,604} %write{603,603}
temp	float	$tmp272	%read{606,606} %write{605,605}
temp	float	$tmp273	%read{609,609} %write{606,606}
temp	float	$tmp274	%read{608,608} %write{607,607}
temp	float	$tmp275	%read{609,609} %write{608,608}
temp	float	$tmp276	%read{612,612} %write{609,609}
temp	float	$tmp277	%read{611,611} %write{610,610}
temp	float	$tmp278	%read{612,612} %write{611,611}
temp	float	$tmp279	%read{615,615} %write{612,612}
temp	float	$tmp280	%read{614,614} %write{613,613}
temp	float	$tmp281	%read{615,615} %write{614,614}
temp	float	$tmp282	%read{621,621} %write{620,620}
temp	int	$tmp283	%read{639,639} %write{637,637}
temp	float	$tmp284	%read{649,649} %write{647,647}
temp	float	$tmp285	%read{650,650} %write{649,649}
temp	int	$tmp286	%read{652,652} %write{651,651}
temp	float	$tmp287	%read{656,656} %write{655,655}
temp	float	$tmp288	%read{655,655} %write{654,654}
temp	float	$tmp289	%read{657,657} %write{656,656}
temp	float	$tmp290	%read{659,659} %write{658,658}
temp	int	$tmp291	%read{668,668} %write{666,666}
temp	float	$tmp292	%read{678,678} %write{676,676}
temp	float	$tmp293	%read{679,679} %write{678,678}
temp	int	$tmp294	%read{681,681} %write{680,680}
temp	float	$tmp295	%read{685,685} %write{684,684}
temp	float	$tmp296	%read{684,684} %write{683,683}
temp	float	$tmp297	%read{686,686} %write{685,685}
temp	float	$tmp298	%read{688,688} %write{687,687}
const	string	$const59	"NG_convert_float_color3"		%read{699,699} %write{2147483647,-1}
const	float	$const60	1.5		%read{712,740} %write{2147483647,-1}
const	string	$const61	"ggx"		%read{712,740} %write{2147483647,-1}
const	string	$const62	"R"		%read{704,736} %write{2147483647,-1}
const	string	$const63	"mx_dielectric_bsdf"		%read{703,731} %write{2147483647,-1}
const	string	$const64	"T"		%read{704,736} %write{2147483647,-1}
temp	int	$tmp300	%read{705,705} %write{704,704}
temp	int	$tmp301	%read{709,709} %write{708,708}
temp	closure color	$tmp302	%read{713,713} %write{712,712}
const	string	$const65	"thinfilm_thickness"		%read{712,740} %write{2147483647,-1}
const	string	$const66	"thinfilm_ior"		%read{712,740} %write{2147483647,-1}
const	string	$const67	"dielectric_bsdf"		%read{712,740} %write{2147483647,-1}
temp	closure color	$tmp303	%read{717,717} %write{716,716}
const	string	$const68	"conductor_bsdf"		%read{716,716} %write{2147483647,-1}
temp	int	$tmp304	%read{721,721} %write{720,720}
temp	int	$tmp305	%read{725,725} %write{724,724}
temp	closure color	$tmp306	%read{729,729} %write{728,728}
temp	int	$tmp307	%read{733,733} %write{732,732}
temp	int	$tmp308	%read{737,737} %write{736,736}
temp	closure color	$tmp309	%read{741,741} %write{740,740}
temp	closure color	$tmp310	%read{743,743} %write{742,742}
const	string	$const69	"sheen_bsdf"		%read{742,742} %write{2147483647,-1}
temp	closure color	$tmp311	%read{746,746} %write{745,745}
const	string	$const70	"translucent_bsdf"		%read{745,745} %write{2147483647,-1}
const	string	$const71	"mx_subsurface_bsdf"		%read{748,748} %write{2147483647,-1}
temp	color	$tmp312	%read{750,750} %write{749,749}
const	string	$const72	"subsurface_bssrdf"		%read{750,750} %write{2147483647,-1}
const	string	$const73	"mix"		%read{751,792} %write{2147483647,-1}
temp	float	$tmp313	%read{753,753} %write{752,752}
temp	closure color	$tmp314	%read{755,755} %write{753,753}
temp	closure color	$tmp315	%read{755,755} %write{754,754}
temp	closure color	$tmp316	%read{757,757} %write{756,756}
const	string	$const74	"oren_nayar_diffuse_bsdf"		%read{756,756} %write{2147483647,-1}
temp	float	$tmp317	%read{760,760} %write{759,759}
temp	closure color	$tmp318	%read{762,762} %write{760,760}
temp	closure color	$tmp319	%read{762,762} %write{761,761}
const	string	$const75	"layer"		%read{763,776} %write{2147483647,-1}
temp	float	$tmp320	%read{766,766} %write{765,765}
temp	closure color	$tmp321	%read{768,768} %write{766,766}
temp	closure color	$tmp322	%read{768,768} %write{767,767}
temp	float	$tmp323	%read{772,772} %write{771,771}
temp	closure color	$tmp324	%read{774,774} %write{772,772}
temp	closure color	$tmp325	%read{774,774} %write{773,773}
const	string	$const76	"uniform_edf"		%read{777,777} %write{2147483647,-1}
const	float	$const77	5		%read{789,789} %write{2147483647,-1}
const	string	$const78	"mx_generalized_schlick_edf"		%read{780,780} %write{2147483647,-1}
temp	float	$tmp327	%read{783,783} %write{782,782}
temp	vector	$tmp328	%read{782,782} %write{781,781}
const	string	$const79	"mx_fresnel_schlick"		%read{784,784} %write{2147483647,-1}
temp	float	$tmp329	%read{787,787} %write{785,785}
temp	float	$tmp330	%read{788,788} %write{787,787}
temp	float	$tmp331	%read{790,790} %write{789,789}
temp	float	$tmp332	%read{794,794} %write{793,793}
temp	closure color	$tmp333	%read{796,796} %write{794,794}
temp	closure color	$tmp334	%read{796,796} %write{795,795}
const	string	$const80	"mx_surface"		%read{800,800} %write{2147483647,-1}
temp	float	$tmp335	%read{805,805} %write{804,804}
const	string	$const81	"mx_surfacematerial"		%read{810,810} %write{2147483647,-1}
temp	float	$tmp336	%read{813,813} %write{812,812}
temp	closure color	$tmp337	%read{815,815} %write{814,814}
temp	closure color	$tmp338	%read{819,819} %write{815,815}
temp	closure color	$tmp339	%read{818,818} %write{816,816}
const	string	$const82	"transparent"		%read{816,816} %write{2147483647,-1}
temp	float	$tmp340	%read{818,818} %write{817,817}
temp	closure color	$tmp341	%read{819,819} %write{818,818}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:858
#     textureresource image1_file_ = {image1_file, image1_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{858} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:859
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		image1_file_.filename image1_file 	%line{859} %argrw{"wr"}
	assign		image1_file_.colorspace image1_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:860
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{860} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:861
#     vector2 texcoord1_out = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{861} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:862
#     vector2 place2d_out = vector2(0.0, 0.0);
	assign		texcoord1_out.x u 	%line{862} %argrw{"wr"}
	assign		texcoord1_out.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:863
#     NG_place2d_vector2(texcoord1_out, place2d_pivot, place2d_scale, place2d_rotate, place2d_offset, place2d_operationorder, place2d_out);
	assign		place2d_out.x $const5 	%line{863} %argrw{"wr"}
	assign		place2d_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:864
#     color image1_out = color(0.0);
	functioncall	$const6 191 	%line{864} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const7 18 	%line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_N_subpivot_out.x texcoord1_out.x place2d_pivot.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_N_subpivot_out.y texcoord1_out.y place2d_pivot.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const8 21 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___671_N_applyscale_out.x ___671_N_subpivot_out.x place2d_scale.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___671_N_applyscale_out.y ___671_N_subpivot_out.y place2d_scale.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const7 24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_N_applyoffset2_out.x ___671_N_subpivot_out.x place2d_offset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_N_applyoffset2_out.y ___671_N_subpivot_out.y place2d_offset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:57
#     mx_rotate_vector2(N_applyscale_out, rotate1, N_applyrot_out);
	assign		___671_N_applyrot_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{57} %argrw{"wr"}
	assign		___671_N_applyrot_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:58
#     vector2 N_applyrot2_out = vector2(0.0, 0.0);
	functioncall	$const9 39 	%line{58} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:20
#     float sa = sin(rotationRadians);
	functioncall	$const10 30 	%line{20} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp5 $const11 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___669_rotationRadians place2d_rotate $tmp5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:21
#     float ca = cos(rotationRadians);
	sin		___669_sa ___669_rotationRadians 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{21} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:22
#     result = vector2(ca*_in.x + sa*_in.y, -sa*_in.x + ca*_in.y);
	cos		___669_ca ___669_rotationRadians 	%line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:23
# }
	mul		$tmp6 ___669_ca ___671_N_applyscale_out.x 	%line{23} %argrw{"wrr"}
	mul		$tmp7 ___669_sa ___671_N_applyscale_out.y 	%argrw{"wrr"}
	add		___671_N_applyrot_out.x $tmp6 $tmp7 	%argrw{"wrr"}
	neg		$tmp8 ___669_sa 	%argrw{"wr"}
	mul		$tmp9 $tmp8 ___671_N_applyscale_out.x 	%argrw{"wrr"}
	mul		$tmp10 ___669_ca ___671_N_applyscale_out.y 	%argrw{"wrr"}
	add		___671_N_applyrot_out.y $tmp9 $tmp10 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:59
#     mx_rotate_vector2(N_applyoffset2_out, rotate1, N_applyrot2_out);
	assign		___671_N_applyrot2_out.x $const5 	%line{59} %argrw{"wr"}
	assign		___671_N_applyrot2_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:60
#     vector2 N_applyoffset_out = N_applyrot_out - offset;
	functioncall	$const9 54 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:20
#     float sa = sin(rotationRadians);
	functioncall	$const10 45 	%line{20} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp11 $const11 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___669_rotationRadians place2d_rotate $tmp11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:21
#     float ca = cos(rotationRadians);
	sin		___669_sa ___669_rotationRadians 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{21} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:22
#     result = vector2(ca*_in.x + sa*_in.y, -sa*_in.x + ca*_in.y);
	cos		___669_ca ___669_rotationRadians 	%line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:23
# }
	mul		$tmp12 ___669_ca ___671_N_applyoffset2_out.x 	%line{23} %argrw{"wrr"}
	mul		$tmp13 ___669_sa ___671_N_applyoffset2_out.y 	%argrw{"wrr"}
	add		___671_N_applyrot2_out.x $tmp12 $tmp13 	%argrw{"wrr"}
	neg		$tmp14 ___669_sa 	%argrw{"wr"}
	mul		$tmp15 $tmp14 ___671_N_applyoffset2_out.x 	%argrw{"wrr"}
	mul		$tmp16 ___669_ca ___671_N_applyoffset2_out.y 	%argrw{"wrr"}
	add		___671_N_applyrot2_out.y $tmp15 $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const7 57 	%line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_N_applyoffset_out.x ___671_N_applyrot_out.x place2d_offset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_N_applyoffset_out.y ___671_N_applyrot_out.y place2d_offset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const8 60 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___671_N_applyscale2_out.x ___671_N_applyrot2_out.x place2d_scale.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___671_N_applyscale2_out.y ___671_N_applyrot2_out.y place2d_scale.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const13 63 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___671_N_addpivot_out.x ___671_N_applyoffset_out.x place2d_pivot.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		___671_N_addpivot_out.y ___671_N_applyoffset_out.y place2d_pivot.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:874
# 
	functioncall	$const13 66 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{874} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___671_N_addpivot2_out.x ___671_N_applyscale2_out.x place2d_pivot.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		___671_N_addpivot2_out.y ___671_N_applyscale2_out.y place2d_pivot.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:65
#     NG_switch_vector2I(N_addpivot_out, N_addpivot2_out, vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), vector2(0.000000, 0.000000), operationorder, N_switch_operationorder_out);
	assign		___671_N_switch_operationorder_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{65} %argrw{"wr"}
	assign		___671_N_switch_operationorder_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:66
#     out = N_switch_operationorder_out;
	assign		$tmp17.x $const5 	%line{66} %argrw{"wr"}
	assign		$tmp17.y $const5 	%argrw{"wr"}
	assign		$tmp18.x $const5 	%argrw{"wr"}
	assign		$tmp18.y $const5 	%argrw{"wr"}
	assign		$tmp19.x $const5 	%argrw{"wr"}
	assign		$tmp19.y $const5 	%argrw{"wr"}
	assign		$tmp20.x $const5 	%argrw{"wr"}
	assign		$tmp20.y $const5 	%argrw{"wr"}
	assign		$tmp21.x $const5 	%argrw{"wr"}
	assign		$tmp21.y $const5 	%argrw{"wr"}
	assign		$tmp22.x $const5 	%argrw{"wr"}
	assign		$tmp22.y $const5 	%argrw{"wr"}
	assign		$tmp23.x $const5 	%argrw{"wr"}
	assign		$tmp23.y $const5 	%argrw{"wr"}
	assign		$tmp24.x $const5 	%argrw{"wr"}
	assign		$tmp24.y $const5 	%argrw{"wr"}
	functioncall	$const14 189 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:28
#     vector2 ifgreater_10_in2_tmp = vector2(0.000000, 0.000000);
	assign		___670_ifgreater_10_value1_tmp $const15 	%line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:29
#     vector2 ifgreater_10_out = mx_ternary(ifgreater_10_value1_tmp > which, in10, ifgreater_10_in2_tmp);
	assign		___670_ifgreater_10_in2_tmp.x $const5 	%line{29} %argrw{"wr"}
	assign		___670_ifgreater_10_in2_tmp.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:30
#     int ifgreater_9_value1_tmp = 9;
	gt		$tmp25 ___670_ifgreater_10_value1_tmp place2d_operationorder 	%line{30} %argrw{"wrr"}
	functioncall	$const16 97 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp25 94 97 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_10_out.x $tmp24.x 	%argrw{"wr"}
	assign		___670_ifgreater_10_out.y $tmp24.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_10_out.x ___670_ifgreater_10_in2_tmp.x 	%argrw{"wr"}
	assign		___670_ifgreater_10_out.y ___670_ifgreater_10_in2_tmp.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:31
#     vector2 ifgreater_9_out = mx_ternary(ifgreater_9_value1_tmp > which, in9, ifgreater_10_out);
	assign		___670_ifgreater_9_value1_tmp $const17 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:32
#     int ifgreater_8_value1_tmp = 8;
	gt		$tmp26 ___670_ifgreater_9_value1_tmp place2d_operationorder 	%line{32} %argrw{"wrr"}
	functioncall	$const16 107 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp26 104 107 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_9_out.x $tmp23.x 	%argrw{"wr"}
	assign		___670_ifgreater_9_out.y $tmp23.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_9_out.x ___670_ifgreater_10_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_9_out.y ___670_ifgreater_10_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:33
#     vector2 ifgreater_8_out = mx_ternary(ifgreater_8_value1_tmp > which, in8, ifgreater_9_out);
	assign		___670_ifgreater_8_value1_tmp $const18 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:34
#     int ifgreater_7_value1_tmp = 7;
	gt		$tmp27 ___670_ifgreater_8_value1_tmp place2d_operationorder 	%line{34} %argrw{"wrr"}
	functioncall	$const16 117 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp27 114 117 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_8_out.x $tmp22.x 	%argrw{"wr"}
	assign		___670_ifgreater_8_out.y $tmp22.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_8_out.x ___670_ifgreater_9_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_8_out.y ___670_ifgreater_9_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:35
#     vector2 ifgreater_7_out = mx_ternary(ifgreater_7_value1_tmp > which, in7, ifgreater_8_out);
	assign		___670_ifgreater_7_value1_tmp $const19 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{35} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:36
#     int ifgreater_6_value1_tmp = 6;
	gt		$tmp28 ___670_ifgreater_7_value1_tmp place2d_operationorder 	%line{36} %argrw{"wrr"}
	functioncall	$const16 127 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp28 124 127 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_7_out.x $tmp21.x 	%argrw{"wr"}
	assign		___670_ifgreater_7_out.y $tmp21.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_7_out.x ___670_ifgreater_8_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_7_out.y ___670_ifgreater_8_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:37
#     vector2 ifgreater_6_out = mx_ternary(ifgreater_6_value1_tmp > which, in6, ifgreater_7_out);
	assign		___670_ifgreater_6_value1_tmp $const20 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:38
#     int ifgreater_5_value1_tmp = 5;
	gt		$tmp29 ___670_ifgreater_6_value1_tmp place2d_operationorder 	%line{38} %argrw{"wrr"}
	functioncall	$const16 137 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp29 134 137 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_6_out.x $tmp20.x 	%argrw{"wr"}
	assign		___670_ifgreater_6_out.y $tmp20.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_6_out.x ___670_ifgreater_7_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_6_out.y ___670_ifgreater_7_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:39
#     vector2 ifgreater_5_out = mx_ternary(ifgreater_5_value1_tmp > which, in5, ifgreater_6_out);
	assign		___670_ifgreater_5_value1_tmp $const21 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:40
#     int ifgreater_4_value1_tmp = 4;
	gt		$tmp30 ___670_ifgreater_5_value1_tmp place2d_operationorder 	%line{40} %argrw{"wrr"}
	functioncall	$const16 147 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp30 144 147 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_5_out.x $tmp19.x 	%argrw{"wr"}
	assign		___670_ifgreater_5_out.y $tmp19.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_5_out.x ___670_ifgreater_6_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_5_out.y ___670_ifgreater_6_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:41
#     vector2 ifgreater_4_out = mx_ternary(ifgreater_4_value1_tmp > which, in4, ifgreater_5_out);
	assign		___670_ifgreater_4_value1_tmp $const22 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{41} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:42
#     int ifgreater_3_value1_tmp = 3;
	gt		$tmp31 ___670_ifgreater_4_value1_tmp place2d_operationorder 	%line{42} %argrw{"wrr"}
	functioncall	$const16 157 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp31 154 157 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_4_out.x $tmp18.x 	%argrw{"wr"}
	assign		___670_ifgreater_4_out.y $tmp18.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_4_out.x ___670_ifgreater_5_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_4_out.y ___670_ifgreater_5_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:43
#     vector2 ifgreater_3_out = mx_ternary(ifgreater_3_value1_tmp > which, in3, ifgreater_4_out);
	assign		___670_ifgreater_3_value1_tmp $const23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:44
#     int ifgreater_2_value1_tmp = 2;
	gt		$tmp32 ___670_ifgreater_3_value1_tmp place2d_operationorder 	%line{44} %argrw{"wrr"}
	functioncall	$const16 167 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp32 164 167 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_3_out.x $tmp17.x 	%argrw{"wr"}
	assign		___670_ifgreater_3_out.y $tmp17.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_3_out.x ___670_ifgreater_4_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_3_out.y ___670_ifgreater_4_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:45
#     vector2 ifgreater_2_out = mx_ternary(ifgreater_2_value1_tmp > which, in2, ifgreater_3_out);
	assign		___670_ifgreater_2_value1_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:46
#     int ifgreater_1_value1_tmp = 1;
	gt		$tmp33 ___670_ifgreater_2_value1_tmp place2d_operationorder 	%line{46} %argrw{"wrr"}
	functioncall	$const16 177 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp33 174 177 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_2_out.x ___671_N_addpivot2_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_2_out.y ___671_N_addpivot2_out.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_2_out.x ___670_ifgreater_3_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_2_out.y ___670_ifgreater_3_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:47
#     vector2 ifgreater_1_out = mx_ternary(ifgreater_1_value1_tmp > which, in1, ifgreater_2_out);
	assign		___670_ifgreater_1_value1_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:48
#     out = ifgreater_1_out;
	gt		$tmp34 ___670_ifgreater_1_value1_tmp place2d_operationorder 	%line{48} %argrw{"wrr"}
	functioncall	$const16 187 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:23
# vector2 mx_ternary(int expr, vector2 v1, vector2 v2) { if (expr) return v1; else return v2; }
	if		$tmp34 184 187 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{23} %argrw{"r"}
	assign		___670_ifgreater_1_out.x ___671_N_addpivot_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_1_out.y ___671_N_addpivot_out.y 	%argrw{"wr"}
	return
	assign		___670_ifgreater_1_out.x ___670_ifgreater_2_out.x 	%argrw{"wr"}
	assign		___670_ifgreater_1_out.y ___670_ifgreater_2_out.y 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:49
# }
	assign		___671_N_switch_operationorder_out.x ___670_ifgreater_1_out.x 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{49} %argrw{"wr"}
	assign		___671_N_switch_operationorder_out.y ___670_ifgreater_1_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:67
# }
	assign		place2d_out.x ___671_N_switch_operationorder_out.x 	%line{67} %argrw{"wr"}
	assign		place2d_out.y ___671_N_switch_operationorder_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:865
#     mx_image_color3(image1_file_, image1_layer, image1_default, place2d_out, image1_uaddressmode, image1_vaddressmode, image1_filtertype, image1_framerange, image1_frameoffset, image1_frameendaction, image1_out);
	assign		image1_out $const25 	%line{865} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:866
#     color image1_out_cm_out = color(0.0);
	functioncall	$const26 232 	%line{866} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:77
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp35 image1_file_.filename $const27 	%line{77} %argrw{"wrr"}
	neq		$tmp36 $tmp35 $const1 	%argrw{"wrr"}
	if		$tmp36 196 209 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:78
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp37 image1_uaddressmode $const28 	%line{78} %argrw{"wrr"}
	neq		$tmp38 $tmp37 $const1 	%argrw{"wrr"}
	if		$tmp38 207 207 	%argrw{"r"}
	lt		$tmp39 place2d_out.x $const5 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const1 	%argrw{"wrr"}
	if		$tmp40 202 205 	%argrw{"r"}
	gt		$tmp41 place2d_out.x $const29 	%argrw{"wrr"}
	neq		$tmp42 $tmp41 $const1 	%argrw{"wrr"}
	assign		$tmp40 $tmp42 	%argrw{"wr"}
	neq		$tmp43 $tmp40 $const1 	%argrw{"wrr"}
	assign		$tmp38 $tmp43 	%argrw{"wr"}
	neq		$tmp44 $tmp38 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:77
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp36 $tmp44 	%line{77} %argrw{"wr"}
	neq		$tmp45 $tmp36 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:78
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp45 211 224 	%line{78} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:79
#     {
	eq		$tmp46 image1_vaddressmode $const28 	%line{79} %argrw{"wrr"}
	neq		$tmp47 $tmp46 $const1 	%argrw{"wrr"}
	if		$tmp47 222 222 	%argrw{"r"}
	lt		$tmp48 place2d_out.y $const5 	%argrw{"wrr"}
	neq		$tmp49 $tmp48 $const1 	%argrw{"wrr"}
	if		$tmp49 217 220 	%argrw{"r"}
	gt		$tmp50 place2d_out.y $const29 	%argrw{"wrr"}
	neq		$tmp51 $tmp50 $const1 	%argrw{"wrr"}
	assign		$tmp49 $tmp51 	%argrw{"wr"}
	neq		$tmp52 $tmp49 $const1 	%argrw{"wrr"}
	assign		$tmp47 $tmp52 	%argrw{"wr"}
	neq		$tmp53 $tmp47 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:78
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp45 $tmp53 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:77
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp45 227 227 	%line{77} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:81
#         return;
	assign		image1_out image1_default 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:82
#     }
	return	%line{82}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:85
#     vector2 st = mx_transform_uv(texcoord);
	assign		___673_missingColor image1_default 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:86
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const30 231 	%line{86} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:72
# }
	assign		___673_st.x place2d_out.x 	%line{72} %argrw{"wr"}
	assign		___673_st.y place2d_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:87
#                   "subimage", layer, "interp", filtertype,
	texture		image1_out image1_file_.filename ___673_st.x ___673_st.y $const31 image1_layer $const32 image1_filtertype $const33 ___673_missingColor $const34 image1_uaddressmode $const35 image1_vaddressmode $const36 image1_file_.colorspace 	%line{87} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:867
#     NG_srgb_texture_to_lin_rec709_color3(image1_out, image1_out_cm_out);
	assign		image1_out_cm_out $const25 	%line{867} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:868
#     surfaceshader SR_Greysphere_Calibration_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const37 294 	%line{868} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:109
#     color bias_out = in + bias_in2_tmp;
	assign		___676_bias_in2_tmp $const38 	%line{109} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:110
#     float linSeg_in2_tmp = 12.920000;
	add		___676_bias_out image1_out ___676_bias_in2_tmp 	%line{110} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:111
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___676_linSeg_in2_tmp $const39 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:112
#     float colorSeparate_outr = 0.0;
	div		___676_linSeg_out image1_out ___676_linSeg_in2_tmp 	%line{112} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:113
#     float colorSeparate_outg = 0.0;
	assign		___676_colorSeparate_outr $const5 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:114
#     float colorSeparate_outb = 0.0;
	assign		___676_colorSeparate_outg $const5 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:115
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___676_colorSeparate_outb $const5 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:116
#     float max_in2_tmp = 0.000000;
	functioncall	$const40 254 	%line{116} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:96
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___675_N_extract_0_index_tmp $const1 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:97
#     int N_extract_1_index_tmp = 1;
	functioncall	$const41 245 	%line{97} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_0_out image1_out ___675_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:98
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___675_N_extract_1_index_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:99
#     int N_extract_2_index_tmp = 2;
	functioncall	$const41 248 	%line{99} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_1_out image1_out ___675_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:100
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___675_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{100} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:101
#     outr = N_extract_0_out;
	functioncall	$const41 251 	%line{101} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_2_out image1_out ___675_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:102
#     outg = N_extract_1_out;
	assign		___676_colorSeparate_outr ___675_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:103
#     outb = N_extract_2_out;
	assign		___676_colorSeparate_outg ___675_N_extract_1_out 	%line{103} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:104
# }
	assign		___676_colorSeparate_outb ___675_N_extract_2_out 	%line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:117
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___676_max_in2_tmp $const5 	%line{117} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:118
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp54 ___676_max_in2_tmp 	%line{118} %argrw{"wr"}
	max		___676_max_out ___676_bias_out $tmp54 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:119
#     float isAboveR_in1_tmp = 1.000000;
	assign		___676_isAboveR_value2_tmp $const42 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:120
#     float isAboveR_in2_tmp = 0.000000;
	assign		___676_isAboveR_in1_tmp $const29 	%line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:121
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___676_isAboveR_in2_tmp $const5 	%line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:122
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp55 ___676_colorSeparate_outr ___676_isAboveR_value2_tmp 	%line{122} %argrw{"wrr"}
	functioncall	$const16 267 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp55 265 267 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___676_isAboveR_out ___676_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___676_isAboveR_out ___676_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:123
#     float isAboveG_in1_tmp = 1.000000;
	assign		___676_isAboveG_value2_tmp $const42 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:124
#     float isAboveG_in2_tmp = 0.000000;
	assign		___676_isAboveG_in1_tmp $const29 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:125
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___676_isAboveG_in2_tmp $const5 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:126
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp56 ___676_colorSeparate_outg ___676_isAboveG_value2_tmp 	%line{126} %argrw{"wrr"}
	functioncall	$const16 277 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp56 275 277 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___676_isAboveG_out ___676_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___676_isAboveG_out ___676_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:127
#     float isAboveB_in1_tmp = 1.000000;
	assign		___676_isAboveB_value2_tmp $const42 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:128
#     float isAboveB_in2_tmp = 0.000000;
	assign		___676_isAboveB_in1_tmp $const29 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:129
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___676_isAboveB_in2_tmp $const5 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:130
#     float scale_in2_tmp = 1.055000;
	gt		$tmp57 ___676_colorSeparate_outb ___676_isAboveB_value2_tmp 	%line{130} %argrw{"wrr"}
	functioncall	$const16 287 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp57 285 287 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___676_isAboveB_out ___676_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___676_isAboveB_out ___676_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:131
#     color scale_out = max_out / scale_in2_tmp;
	assign		___676_scale_in2_tmp $const43 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:132
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___676_scale_out ___676_max_out ___676_scale_in2_tmp 	%line{132} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:133
#     float powSeg_in2_tmp = 2.400000;
	color		___676_isAbove_out ___676_isAboveR_out ___676_isAboveG_out ___676_isAboveB_out 	%line{133} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:134
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___676_powSeg_in2_tmp $const44 	%line{134} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:135
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___676_powSeg_out ___676_scale_out ___676_powSeg_in2_tmp 	%line{135} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:136
#     out = mix_out;
	mix		___676_mix_out ___676_linSeg_out ___676_powSeg_out ___676_isAbove_out 	%line{136} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:137
# }
	assign		image1_out_cm_out ___676_mix_out 	%line{137} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:869
#     NG_standard_surface_surfaceshader_100(SR_Greysphere_Calibration_base, image1_out_cm_out, SR_Greysphere_Calibration_diffuse_roughness, SR_Greysphere_Calibration_metalness, SR_Greysphere_Calibration_specular, SR_Greysphere_Calibration_specular_color, SR_Greysphere_Calibration_specular_roughness, SR_Greysphere_Calibration_specular_IOR, SR_Greysphere_Calibration_specular_anisotropy, SR_Greysphere_Calibration_specular_rotation, SR_Greysphere_Calibration_transmission, SR_Greysphere_Calibration_transmission_color, SR_Greysphere_Calibration_transmission_depth, SR_Greysphere_Calibration_transmission_scatter, SR_Greysphere_Calibration_transmission_scatter_anisotropy, SR_Greysphere_Calibration_transmission_dispersion, SR_Greysphere_Calibration_transmission_extra_roughness, SR_Greysphere_Calibration_subsurface, SR_Greysphere_Calibration_subsurface_color, SR_Greysphere_Calibration_subsurface_radius, SR_Greysphere_Calibration_subsurface_scale, SR_Greysphere_Calibration_subsurface_anisotropy, SR_Greysphere_Calibration_sheen, SR_Greysphere_Calibration_sheen_color, SR_Greysphere_Calibration_sheen_roughness, SR_Greysphere_Calibration_coat, SR_Greysphere_Calibration_coat_color, SR_Greysphere_Calibration_coat_roughness, SR_Greysphere_Calibration_coat_anisotropy, SR_Greysphere_Calibration_coat_rotation, SR_Greysphere_Calibration_coat_IOR, geomprop_Nworld_out1, SR_Greysphere_Calibration_coat_affect_color, SR_Greysphere_Calibration_coat_affect_roughness, SR_Greysphere_Calibration_thin_film_thickness, SR_Greysphere_Calibration_thin_film_IOR, SR_Greysphere_Calibration_emission, SR_Greysphere_Calibration_emission_color, SR_Greysphere_Calibration_opacity, SR_Greysphere_Calibration_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_Greysphere_Calibration_out);
	assign		SR_Greysphere_Calibration_out.bsdf null_closure 	%line{869} %argrw{"wr"}
	assign		SR_Greysphere_Calibration_out.edf null_closure 	%argrw{"wr"}
	assign		SR_Greysphere_Calibration_out.opacity $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:870
#     MATERIAL Greysphere_Calibration_out = mx_surfacematerial(SR_Greysphere_Calibration_out, backsurfaceshader, displacementshader1);
	functioncall	$const45 810 	%line{870} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:317
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:318
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const5 	%line{318} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:319
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const46 320 	%line{319} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:142
#     if (anisotropy > 0.0)
	mul		$tmp58 SR_Greysphere_Calibration_coat_roughness SR_Greysphere_Calibration_coat_roughness 	%line{142} %argrw{"wrr"}
	functioncall	$const48 306 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp59 $tmp58 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp59 $const47 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:143
#     {
	gt		$tmp60 SR_Greysphere_Calibration_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{143} %argrw{"wrr"}
	if		$tmp60 318 320 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const48 311 	%line{145} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp62 SR_Greysphere_Calibration_coat_anisotropy $const49 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp61 $tmp62 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp63 $const29 $tmp61 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{145} %argrw{"wrr"}
	sqrt		___678_aspect $tmp63 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:146
#         result.y = roughness_sqr * aspect;
	div		$tmp64 ___677_roughness_sqr ___678_aspect 	%line{146} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp64 $const29 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:147
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{147} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:151
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:152
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{152} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:320
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const50 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:321
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out SR_Greysphere_Calibration_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{321} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:322
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out image1_out_cm_out SR_Greysphere_Calibration_base 	%line{322} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:323
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out SR_Greysphere_Calibration_specular_color SR_Greysphere_Calibration_specular 	%line{323} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:324
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out SR_Greysphere_Calibration_coat_affect_roughness SR_Greysphere_Calibration_coat 	%line{324} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:325
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const50 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:326
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out SR_Greysphere_Calibration_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{326} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:327
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out SR_Greysphere_Calibration_specular_roughness SR_Greysphere_Calibration_transmission_extra_roughness 	%line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:328
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const5 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:329
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp65 ___701_subsurface_color_nonnegative_in2_tmp 	%line{329} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out SR_Greysphere_Calibration_subsurface_color $tmp65 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:330
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const5 	%line{330} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:331
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const29 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:332
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const48 336 	%line{332} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp66 SR_Greysphere_Calibration_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp66 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:333
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out SR_Greysphere_Calibration_subsurface_radius SR_Greysphere_Calibration_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:334
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp67 SR_Greysphere_Calibration_thin_walled 	%line{334} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp67 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:335
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const5 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:336
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp68 ___701_base_color_nonnegative_in2_tmp 	%line{336} %argrw{"wr"}
	max		___701_base_color_nonnegative_out image1_out_cm_out $tmp68 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:337
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const51 	%line{337} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:338
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp SR_Greysphere_Calibration_coat_color SR_Greysphere_Calibration_coat 	%line{338} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:339
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const29 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:340
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp SR_Greysphere_Calibration_coat_IOR 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:341
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const29 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:342
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp SR_Greysphere_Calibration_coat_IOR 	%line{342} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:343
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out SR_Greysphere_Calibration_emission_color SR_Greysphere_Calibration_emission 	%line{343} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:344
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const25 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:345
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const53 353 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:158
# }
	dot		$tmp70 SR_Greysphere_Calibration_opacity $const52 	%line{158} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp70 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:346
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const54 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:347
#     color artistic_ior_ior = color(0.0);
	functioncall	$const55 471 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:176
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const10 358 	%line{176} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp71 $const11 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp71 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:177
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const56 421 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{177} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:163
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:164
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{164} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:165
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{165} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:166
# 
	sub		___681_oc $const29 ___681_c 	%line{166} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:168
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp72 ___681_nAxis $const1 	%line{168} %argrw{"wrr"}
	mul		$tmp73 ___681_oc $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	add		$tmp76 $tmp75 ___681_c 	%argrw{"wrr"}
	compref		$tmp77 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp78 ___681_oc $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp82 $tmp81 ___681_s 	%argrw{"wrr"}
	sub		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp85 ___681_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	compref		$tmp88 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp89 $tmp88 ___681_s 	%argrw{"wrr"}
	add		$tmp90 $tmp87 $tmp89 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:169
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp91 ___681_nAxis $const1 	%line{169} %argrw{"wrr"}
	mul		$tmp92 ___681_oc $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp94 $tmp92 $tmp93 	%argrw{"wrr"}
	compref		$tmp95 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp96 $tmp95 ___681_s 	%argrw{"wrr"}
	add		$tmp97 $tmp94 $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp99 ___681_oc $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp101 $tmp99 $tmp100 	%argrw{"wrr"}
	add		$tmp102 $tmp101 ___681_c 	%argrw{"wrr"}
	compref		$tmp103 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp104 ___681_oc $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp106 $tmp104 $tmp105 	%argrw{"wrr"}
	compref		$tmp107 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp108 $tmp107 ___681_s 	%argrw{"wrr"}
	sub		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:170
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp110 ___681_nAxis $const4 	%line{170} %argrw{"wrr"}
	mul		$tmp111 ___681_oc $tmp110 	%argrw{"wrr"}
	compref		$tmp112 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp113 $tmp111 $tmp112 	%argrw{"wrr"}
	compref		$tmp114 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp115 $tmp114 ___681_s 	%argrw{"wrr"}
	sub		$tmp116 $tmp113 $tmp115 	%argrw{"wrr"}
	compref		$tmp117 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp118 ___681_oc $tmp117 	%argrw{"wrr"}
	compref		$tmp119 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp120 $tmp118 $tmp119 	%argrw{"wrr"}
	compref		$tmp121 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp122 $tmp121 ___681_s 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	compref		$tmp124 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp125 ___681_oc $tmp124 	%argrw{"wrr"}
	compref		$tmp126 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp127 $tmp125 $tmp126 	%argrw{"wrr"}
	add		$tmp128 $tmp127 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:168
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp76 $tmp83 $tmp90 $const5 $tmp97 $tmp102 $tmp109 $const5 $tmp116 $tmp123 $tmp128 $const5 $const5 $const5 $const5 $const29 	%line{168} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:178
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp129.x geomprop_Tworld_out1 $const1 	%line{178} %argrw{"wrr"}
	compref		$tmp129.y geomprop_Tworld_out1 $const24 	%argrw{"wrr"}
	compref		$tmp129.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp129.w $const29 	%argrw{"wr"}
	functioncall	$const2 470 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp130 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp131 $tmp130 $tmp129.x 	%argrw{"wrr"}
	mxcompref	$tmp132 ___682_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp129.y 	%argrw{"wrr"}
	add		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	mxcompref	$tmp135 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp129.z 	%argrw{"wrr"}
	add		$tmp137 $tmp134 $tmp136 	%argrw{"wrr"}
	mxcompref	$tmp138 ___682_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp139 $tmp138 $tmp129.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp137 $tmp139 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp140 ___682_m $const1 $const24 	%line{416} %argrw{"wrrr"}
	mul		$tmp141 $tmp140 $tmp129.x 	%argrw{"wrr"}
	mxcompref	$tmp142 ___682_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp143 $tmp142 $tmp129.y 	%argrw{"wrr"}
	add		$tmp144 $tmp141 $tmp143 	%argrw{"wrr"}
	mxcompref	$tmp145 ___682_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp146 $tmp145 $tmp129.z 	%argrw{"wrr"}
	add		$tmp147 $tmp144 $tmp146 	%argrw{"wrr"}
	mxcompref	$tmp148 ___682_m $const23 $const24 	%argrw{"wrrr"}
	mul		$tmp149 $tmp148 $tmp129.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp147 $tmp149 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp150 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp151 $tmp150 $tmp129.x 	%argrw{"wrr"}
	mxcompref	$tmp152 ___682_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp153 $tmp152 $tmp129.y 	%argrw{"wrr"}
	add		$tmp154 $tmp151 $tmp153 	%argrw{"wrr"}
	mxcompref	$tmp155 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp156 $tmp155 $tmp129.z 	%argrw{"wrr"}
	add		$tmp157 $tmp154 $tmp156 	%argrw{"wrr"}
	mxcompref	$tmp158 ___682_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp159 $tmp158 $tmp129.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp157 $tmp159 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp160 ___682_m $const1 $const23 	%line{418} %argrw{"wrrr"}
	mul		$tmp161 $tmp160 $tmp129.x 	%argrw{"wrr"}
	mxcompref	$tmp162 ___682_m $const24 $const23 	%argrw{"wrrr"}
	mul		$tmp163 $tmp162 $tmp129.y 	%argrw{"wrr"}
	add		$tmp164 $tmp161 $tmp163 	%argrw{"wrr"}
	mxcompref	$tmp165 ___682_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp166 $tmp165 $tmp129.z 	%argrw{"wrr"}
	add		$tmp167 $tmp164 $tmp166 	%argrw{"wrr"}
	mxcompref	$tmp168 ___682_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp169 $tmp168 $tmp129.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp167 $tmp169 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:179
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{179} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:348
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const25 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:349
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const25 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:350
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const57 498 	%line{350} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:187
#     color r_sqrt = sqrt(r);
	assign		$tmp170 $const5 	%line{187} %argrw{"wr"}
	assign		$tmp171 $const58 	%argrw{"wr"}
	functioncall	$const48 479 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp172 ___701_metal_reflectivity_out $tmp171 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp172 $tmp170 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:188
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{188} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:189
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp173 $const29 ___683_r 	%line{189} %argrw{"wrr"}
	add		$tmp174 $const29 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp173 $tmp174 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:190
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp175 $const29 ___683_r_sqrt 	%line{190} %argrw{"wrr"}
	sub		$tmp176 $const29 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp175 $tmp176 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:191
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{191} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:193
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const29 	%line{193} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:194
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const29 	%line{194} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:195
#     k2 = max(k2, 0.0);
	mul		$tmp177 ___683_np1 ___683_np1 	%line{195} %argrw{"wrr"}
	mul		$tmp178 $tmp177 ___683_r 	%argrw{"wrr"}
	mul		$tmp179 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp180 $tmp178 $tmp179 	%argrw{"wrr"}
	sub		$tmp181 $const29 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp180 $tmp181 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:196
#     extinction = sqrt(k2);
	assign		$tmp182 $const5 	%line{196} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp182 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:197
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{197} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:351
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out SR_Greysphere_Calibration_coat_roughness 	%line{351} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:352
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const54 	%line{352} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:353
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const55 617 	%line{353} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:176
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const10 504 	%line{176} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp183 $const11 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp183 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:177
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const56 567 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{177} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:163
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:164
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{164} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:165
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{165} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:166
# 
	sub		___681_oc $const29 ___681_c 	%line{166} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:168
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp184 ___681_nAxis $const1 	%line{168} %argrw{"wrr"}
	mul		$tmp185 ___681_oc $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	add		$tmp188 $tmp187 ___681_c 	%argrw{"wrr"}
	compref		$tmp189 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp190 ___681_oc $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp192 $tmp190 $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___681_s 	%argrw{"wrr"}
	sub		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp197 ___681_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	compref		$tmp200 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp201 $tmp200 ___681_s 	%argrw{"wrr"}
	add		$tmp202 $tmp199 $tmp201 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:169
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp203 ___681_nAxis $const1 	%line{169} %argrw{"wrr"}
	mul		$tmp204 ___681_oc $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
	compref		$tmp207 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp208 $tmp207 ___681_s 	%argrw{"wrr"}
	add		$tmp209 $tmp206 $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp211 ___681_oc $tmp210 	%argrw{"wrr"}
	compref		$tmp212 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp213 $tmp211 $tmp212 	%argrw{"wrr"}
	add		$tmp214 $tmp213 ___681_c 	%argrw{"wrr"}
	compref		$tmp215 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp216 ___681_oc $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp218 $tmp216 $tmp217 	%argrw{"wrr"}
	compref		$tmp219 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp220 $tmp219 ___681_s 	%argrw{"wrr"}
	sub		$tmp221 $tmp218 $tmp220 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:170
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp222 ___681_nAxis $const4 	%line{170} %argrw{"wrr"}
	mul		$tmp223 ___681_oc $tmp222 	%argrw{"wrr"}
	compref		$tmp224 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp225 $tmp223 $tmp224 	%argrw{"wrr"}
	compref		$tmp226 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp227 $tmp226 ___681_s 	%argrw{"wrr"}
	sub		$tmp228 $tmp225 $tmp227 	%argrw{"wrr"}
	compref		$tmp229 ___681_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp230 ___681_oc $tmp229 	%argrw{"wrr"}
	compref		$tmp231 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp232 $tmp230 $tmp231 	%argrw{"wrr"}
	compref		$tmp233 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp234 $tmp233 ___681_s 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	compref		$tmp236 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp237 ___681_oc $tmp236 	%argrw{"wrr"}
	compref		$tmp238 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp239 $tmp237 $tmp238 	%argrw{"wrr"}
	add		$tmp240 $tmp239 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:168
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp188 $tmp195 $tmp202 $const5 $tmp209 $tmp214 $tmp221 $const5 $tmp228 $tmp235 $tmp240 $const5 $const5 $const5 $const5 $const29 	%line{168} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:178
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp241.x geomprop_Tworld_out1 $const1 	%line{178} %argrw{"wrr"}
	compref		$tmp241.y geomprop_Tworld_out1 $const24 	%argrw{"wrr"}
	compref		$tmp241.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp241.w $const29 	%argrw{"wr"}
	functioncall	$const2 616 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp242 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp243 $tmp242 $tmp241.x 	%argrw{"wrr"}
	mxcompref	$tmp244 ___682_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp241.y 	%argrw{"wrr"}
	add		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	mxcompref	$tmp247 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp241.z 	%argrw{"wrr"}
	add		$tmp249 $tmp246 $tmp248 	%argrw{"wrr"}
	mxcompref	$tmp250 ___682_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp251 $tmp250 $tmp241.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp249 $tmp251 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp252 ___682_m $const1 $const24 	%line{416} %argrw{"wrrr"}
	mul		$tmp253 $tmp252 $tmp241.x 	%argrw{"wrr"}
	mxcompref	$tmp254 ___682_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp255 $tmp254 $tmp241.y 	%argrw{"wrr"}
	add		$tmp256 $tmp253 $tmp255 	%argrw{"wrr"}
	mxcompref	$tmp257 ___682_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp258 $tmp257 $tmp241.z 	%argrw{"wrr"}
	add		$tmp259 $tmp256 $tmp258 	%argrw{"wrr"}
	mxcompref	$tmp260 ___682_m $const23 $const24 	%argrw{"wrrr"}
	mul		$tmp261 $tmp260 $tmp241.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp259 $tmp261 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp262 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp263 $tmp262 $tmp241.x 	%argrw{"wrr"}
	mxcompref	$tmp264 ___682_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp265 $tmp264 $tmp241.y 	%argrw{"wrr"}
	add		$tmp266 $tmp263 $tmp265 	%argrw{"wrr"}
	mxcompref	$tmp267 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp268 $tmp267 $tmp241.z 	%argrw{"wrr"}
	add		$tmp269 $tmp266 $tmp268 	%argrw{"wrr"}
	mxcompref	$tmp270 ___682_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp271 $tmp270 $tmp241.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp269 $tmp271 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp272 ___682_m $const1 $const23 	%line{418} %argrw{"wrrr"}
	mul		$tmp273 $tmp272 $tmp241.x 	%argrw{"wrr"}
	mxcompref	$tmp274 ___682_m $const24 $const23 	%argrw{"wrrr"}
	mul		$tmp275 $tmp274 $tmp241.y 	%argrw{"wrr"}
	add		$tmp276 $tmp273 $tmp275 	%argrw{"wrr"}
	mxcompref	$tmp277 ___682_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp278 $tmp277 $tmp241.z 	%argrw{"wrr"}
	add		$tmp279 $tmp276 $tmp278 	%argrw{"wrr"}
	mxcompref	$tmp280 ___682_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp281 $tmp280 $tmp241.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp279 $tmp281 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:179
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{179} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:354
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const5 	%line{354} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:355
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const29 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:356
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const48 622 	%line{356} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp282 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp282 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:357
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out SR_Greysphere_Calibration_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{357} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:358
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{358} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:359
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{359} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:360
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const41 627 	%line{360} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:361
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{361} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:362
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const29 	%line{362} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:363
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out SR_Greysphere_Calibration_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{363} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:364
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:365
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const29 	%line{365} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:366
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{366} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:367
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const29 	%line{367} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:368
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{368} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:369
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{369} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:370
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const5 	%line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:371
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp283 SR_Greysphere_Calibration_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{371} %argrw{"wrr"}
	functioncall	$const16 644 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp283 642 644 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:372
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{372} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:373
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const46 665 	%line{373} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:142
#     if (anisotropy > 0.0)
	mul		$tmp284 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{142} %argrw{"wrr"}
	functioncall	$const48 651 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp285 $tmp284 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp285 $const47 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:143
#     {
	gt		$tmp286 SR_Greysphere_Calibration_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{143} %argrw{"wrr"}
	if		$tmp286 663 665 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const48 656 	%line{145} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp288 SR_Greysphere_Calibration_specular_anisotropy $const49 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp287 $tmp288 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp289 $const29 $tmp287 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{145} %argrw{"wrr"}
	sqrt		___678_aspect $tmp289 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:146
#         result.y = roughness_sqr * aspect;
	div		$tmp290 ___677_roughness_sqr ___678_aspect 	%line{146} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp290 $const29 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:147
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{147} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:151
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:152
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{152} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:374
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const5 	%line{374} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:375
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp291 SR_Greysphere_Calibration_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{375} %argrw{"wrr"}
	functioncall	$const16 673 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp291 671 673 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:376
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{376} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:377
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const46 694 	%line{377} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:142
#     if (anisotropy > 0.0)
	mul		$tmp292 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{142} %argrw{"wrr"}
	functioncall	$const48 680 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp293 $tmp292 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp293 $const47 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:143
#     {
	gt		$tmp294 SR_Greysphere_Calibration_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{143} %argrw{"wrr"}
	if		$tmp294 692 694 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const48 685 	%line{145} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp296 SR_Greysphere_Calibration_specular_anisotropy $const49 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp295 $tmp296 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:145
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp297 $const29 $tmp295 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{145} %argrw{"wrr"}
	sqrt		___678_aspect $tmp297 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:146
#         result.y = roughness_sqr * aspect;
	div		$tmp298 ___677_roughness_sqr ___678_aspect 	%line{146} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp298 $const29 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:147
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{147} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:151
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:152
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{152} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:378
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{378} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:379
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{379} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:380
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const29 	%line{380} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:381
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{381} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:382
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const25 	%line{382} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:383
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const59 702 	%line{383} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:218
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{218} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:219
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:384
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{384} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:385
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const63 714 	%line{385} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:202
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp300 $const62 $const64 	%line{202} %argrw{"wrr"}
	if		$tmp300 707 708 	%argrw{"r"}
	assign		___684_reflection_tint $const25 	%argrw{"wr"}
	assign		___684_reflection_tint $const51 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:203
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp301 $const62 $const62 	%line{203} %argrw{"wrr"}
	if		$tmp301 711 712 	%argrw{"r"}
	assign		___684_transmission_tint $const25 	%argrw{"wr"}
	assign		___684_transmission_tint $const51 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:204
# }
	closure		$tmp302 $const67 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y SR_Greysphere_Calibration_coat_IOR $const61 $const65 $const5 $const66 $const60 	%line{204} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp302 SR_Greysphere_Calibration_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:386
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const29 	%line{386} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:387
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const61 	%line{387} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:388
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp303 $const68 geomprop_Nworld_out1 ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const65 SR_Greysphere_Calibration_thin_film_thickness $const66 SR_Greysphere_Calibration_thin_film_IOR 	%line{388} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp303 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:389
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{389} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:390
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const63 730 	%line{390} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:202
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp304 $const62 $const64 	%line{202} %argrw{"wrr"}
	if		$tmp304 723 724 	%argrw{"r"}
	assign		___684_reflection_tint $const25 	%argrw{"wr"}
	assign		___684_reflection_tint SR_Greysphere_Calibration_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:203
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp305 $const62 $const62 	%line{203} %argrw{"wrr"}
	if		$tmp305 727 728 	%argrw{"r"}
	assign		___684_transmission_tint $const25 	%argrw{"wr"}
	assign		___684_transmission_tint SR_Greysphere_Calibration_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:204
# }
	closure		$tmp306 $const67 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y SR_Greysphere_Calibration_specular_IOR $const61 $const65 SR_Greysphere_Calibration_thin_film_thickness $const66 SR_Greysphere_Calibration_thin_film_IOR 	%line{204} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp306 SR_Greysphere_Calibration_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:391
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{391} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:392
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const63 742 	%line{392} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:202
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp307 $const64 $const64 	%line{202} %argrw{"wrr"}
	if		$tmp307 735 736 	%argrw{"r"}
	assign		___684_reflection_tint $const25 	%argrw{"wr"}
	assign		___684_reflection_tint SR_Greysphere_Calibration_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:203
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp308 $const64 $const62 	%line{203} %argrw{"wrr"}
	if		$tmp308 739 740 	%argrw{"r"}
	assign		___684_transmission_tint $const25 	%argrw{"wr"}
	assign		___684_transmission_tint SR_Greysphere_Calibration_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:204
# }
	closure		$tmp309 $const67 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y SR_Greysphere_Calibration_specular_IOR $const61 $const65 $const5 $const66 $const60 	%line{204} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp309 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:393
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp310 $const69 geomprop_Nworld_out1 SR_Greysphere_Calibration_sheen_color SR_Greysphere_Calibration_sheen_roughness 	%line{393} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp310 SR_Greysphere_Calibration_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:394
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const29 	%line{394} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:395
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp311 $const70 geomprop_Nworld_out1 ___701_coat_affected_subsurface_color_out 	%line{395} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp311 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:396
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{396} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:397
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const71 751 	%line{397} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:212
# #endif
	mul		$tmp312 $const29 ___701_coat_affected_subsurface_color_out 	%line{212} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const72 geomprop_Nworld_out1 $tmp312 $const29 ___701_subsurface_radius_scaled_out SR_Greysphere_Calibration_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:398
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const73 756 	%line{398} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp313 $const29 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp314 ___701_subsurface_bsdf_out $tmp313 	%argrw{"wrr"}
	mul		$tmp315 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp314 $tmp315 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:399
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp316 $const74 geomprop_Nworld_out1 ___701_coat_affected_diffuse_color_out SR_Greysphere_Calibration_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{399} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp316 SR_Greysphere_Calibration_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:400
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const73 763 	%line{400} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp317 $const29 SR_Greysphere_Calibration_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp318 ___701_diffuse_bsdf_out $tmp317 	%argrw{"wrr"}
	mul		$tmp319 ___701_selected_subsurface_bsdf_out SR_Greysphere_Calibration_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp318 $tmp319 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:401
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const75 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{401} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:402
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const73 769 	%line{402} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp320 $const29 SR_Greysphere_Calibration_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp321 ___701_sheen_layer_out $tmp320 	%argrw{"wrr"}
	mul		$tmp322 ___701_transmission_bsdf_out SR_Greysphere_Calibration_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp321 $tmp322 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:403
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const75 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{403} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:404
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const73 775 	%line{404} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp323 $const29 SR_Greysphere_Calibration_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp324 ___701_specular_layer_out $tmp323 	%argrw{"wrr"}
	mul		$tmp325 ___701_metal_bsdf_out SR_Greysphere_Calibration_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp324 $tmp325 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:405
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{405} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:406
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const75 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{406} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:407
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const76 ___701_emission_weight_out 	%line{407} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:408
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out SR_Greysphere_Calibration_coat_color 	%line{408} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:409
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{409} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:410
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const78 792 	%line{410} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:303
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp328 I 	%line{303} %argrw{"wr"}
	dot		$tmp327 N $tmp328 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp327 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:304
#     result = base * f;
	functioncall	$const79 791 	%line{304} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:297
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp329 $const29 ___699_NdotV 	%line{297} %argrw{"wrr"}
	functioncall	$const48 789 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp330 $tmp329 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp330 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:298
# }
	pow		$tmp331 ___698_x $const77 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{298} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const25 $tmp331 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:305
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{305} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:411
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const73 797 	%line{411} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp332 $const29 SR_Greysphere_Calibration_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp333 ___701_emission_edf_out $tmp332 	%argrw{"wrr"}
	mul		$tmp334 ___701_coat_emission_edf_out SR_Greysphere_Calibration_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp333 $tmp334 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:412
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{412} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:413
#     out = shader_constructor_out;
	functioncall	$const80 807 	%line{413} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:310
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:311
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:312
# }
	functioncall	$const48 806 	%line{312} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp335 ___701_opacity_luminance_float_out $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp335 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:312
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:414
# }
	assign		SR_Greysphere_Calibration_out.bsdf ___701_shader_constructor_out.bsdf 	%line{414} %argrw{"wr"}
	assign		SR_Greysphere_Calibration_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_Greysphere_Calibration_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:871
#     out = Greysphere_Calibration_out;
	functioncall	$const81 820 	%line{871} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:419
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const48 814 	%line{419} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp336 SR_Greysphere_Calibration_out.opacity $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp336 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:420
# }
	add		$tmp337 SR_Greysphere_Calibration_out.bsdf SR_Greysphere_Calibration_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl"} %line{420} %argrw{"wrr"}
	mul		$tmp338 $tmp337 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp339 $const82 	%argrw{"wr"}
	sub		$tmp340 $const29 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp341 $tmp339 $tmp340 	%argrw{"wrr"}
	add		Greysphere_Calibration_out $tmp338 $tmp341 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_look_brass_tiled\\Greysphere_Calibration.osl:872
# }
	assign		out Greysphere_Calibration_out 	%line{872} %argrw{"wr"}
	end
