OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\Examples\StandardSurface\standard_surface_marble_solid\Marble_3D.oso
shader Marble_3D	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"Marble_3D"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	obj_pos_space	"world"		%read{9,9} %write{2147483647,-1} %derivs
param	vector	add_xyz_in2	1 1 1		%read{10,10} %write{2147483647,-1}
param	float	scale_pos_in2	4		%meta{string,widget,"number"}  %read{11,11} %write{2147483647,-1} %derivs
param	float	scale_xyz_in2	6		%meta{string,widget,"number"}  %read{12,12} %write{2147483647,-1}
param	float	noise_amplitude	1		%meta{string,widget,"number"}  %read{30,30} %write{2147483647,-1}
param	int	noise_octaves	3		%meta{string,widget,"number"}  %read{21,21} %write{2147483647,-1}
param	float	noise_lacunarity	2		%meta{string,widget,"number"}  %read{27,27} %write{2147483647,-1} %derivs
param	float	noise_diminish	0.5		%meta{string,widget,"number"}  %read{26,26} %write{2147483647,-1}
param	float	scale_noise_in2	3		%meta{string,widget,"number"}  %read{31,31} %write{2147483647,-1}
param	float	scale_in2	0.5		%meta{string,widget,"number"}  %read{34,34} %write{2147483647,-1}
param	float	bias_in2	0.5		%meta{string,widget,"number"}  %read{35,35} %write{2147483647,-1}
param	float	power_in2	3		%meta{string,widget,"number"}  %read{36,36} %write{2147483647,-1}
param	color	color_mix_fg	0.100000001 0.100000001 0.300000012		%read{37,37} %write{2147483647,-1}
param	color	color_mix_bg	0.800000012 0.800000012 0.800000012		%read{37,37} %write{2147483647,-1}
param	float	SR_marble1_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{66,501} %write{2147483647,-1}
param	float	SR_marble1_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{500,500} %write{2147483647,-1}
param	float	SR_marble1_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{515,517} %write{2147483647,-1}
param	float	SR_marble1_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{67,473} %write{2147483647,-1}
param	color	SR_marble1_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{67,471} %write{2147483647,-1}
param	float	SR_marble1_specular_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{71,373} %write{2147483647,-1}
param	float	SR_marble1_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{472,484} %write{2147483647,-1}
param	float	SR_marble1_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{395,427} %write{2147483647,-1}
param	float	SR_marble1_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{70,70} %write{2147483647,-1}
param	float	SR_marble1_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{509,511} %write{2147483647,-1}
param	color	SR_marble1_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{479,483} %write{2147483647,-1}
param	float	SR_marble1_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_marble1_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_marble1_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_marble1_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_marble1_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{71,71} %write{2147483647,-1}
param	float	SR_marble1_subsurface	0.400000006		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{503,505} %write{2147483647,-1}
param	color	SR_marble1_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{80,80} %write{2147483647,-1}
param	float	SR_marble1_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{80,80} %write{2147483647,-1}
param	float	SR_marble1_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{494,494} %write{2147483647,-1}
param	float	SR_marble1_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{487,487} %write{2147483647,-1}
param	color	SR_marble1_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{486,486} %write{2147483647,-1}
param	float	SR_marble1_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{486,486} %write{2147483647,-1}
param	float	SR_marble1_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{68,539} %write{2147483647,-1}
param	color	SR_marble1_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{87,522} %write{2147483647,-1}
param	float	SR_marble1_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{46,242} %write{2147483647,-1}
param	float	SR_marble1_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{50,381} %write{2147483647,-1}
param	float	SR_marble1_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{65,65} %write{2147483647,-1}
param	float	SR_marble1_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{89,456} %write{2147483647,-1}
param	float	SR_marble1_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{366,366} %write{2147483647,-1}
param	float	SR_marble1_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{68,68} %write{2147483647,-1}
param	float	SR_marble1_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{460,472} %write{2147483647,-1}
param	float	SR_marble1_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{460,472} %write{2147483647,-1}
param	float	SR_marble1_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{92,92} %write{2147483647,-1}
param	color	SR_marble1_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{92,92} %write{2147483647,-1}
param	color	SR_marble1_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{95,95} %write{2147483647,-1}
param	int	SR_marble1_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{81,81} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{564,564}
global	point	P	%read{9,9} %write{2147483647,-1} %derivs
global	vector	I	%read{525,525} %write{2147483647,-1}
global	normal	N	%read{2,526} %write{2147483647,-1}
local	float	___590_out	%read{21,29} %write{16,28}
local	float	___590_amp	%read{21,28} %write{17,28}
local	point	___590_p	%read{21,28} %write{18,28} %derivs
local	int	___591_i	%read{21,28} %write{20,28}
local	float	___669_f	%read{30,30} %write{29,29}
local	float	___670_roughness_sqr	%read{57,437} %write{49,423}
local	float	___671_aspect	%read{57,434} %write{56,430}
local	vector	___674_nAxis	%read{107,307} %write{103,249}
local	float	___674_s	%read{117,303} %write{104,250}
local	float	___674_c	%read{106,309} %write{105,251}
local	float	___674_oc	%read{108,306} %write{106,252}
local	float	___675_rotationRadians	%read{104,251} %write{101,247}
local	matrix	___675_m	%read{170,357} %write{164,310}
local	float	___675_trans.x	%read{214,360} %write{180,326} %mystruct{___675_trans} %mystructfield{0}
local	float	___675_trans.y	%read{214,360} %write{191,337} %mystruct{___675_trans} %mystructfield{1}
local	float	___675_trans.z	%read{214,360} %write{202,348} %mystruct{___675_trans} %mystructfield{2}
local	float	___675_trans.w	%read{2147483647,-1} %write{213,359} %mystruct{___675_trans} %mystructfield{3}
local	color	___676_r	%read{223,237} %write{222,222}
local	color	___676_r_sqrt	%read{227,228} %write{223,223}
local	color	___676_n_min	%read{230,230} %write{226,226}
local	color	___676_n_max	%read{230,230} %write{229,229}
local	color	___676_np1	%read{233,233} %write{231,231}
local	color	___676_nm1	%read{235,235} %write{232,232}
local	color	___676_k2	%read{240,241} %write{238,240}
local	color	___677_reflection_tint	%read{456,484} %write{450,479}
local	color	___677_transmission_tint	%read{456,484} %write{454,483}
local	color	___679_combine_out	%read{445,445} %write{444,444}
local	float	___691_x	%read{533,533} %write{532,532}
local	float	___692_NdotV	%read{529,529} %write{527,527}
local	color	___692_f	%read{535,535} %write{534,534}
local	closure color	___694_null_closure	%read{446,542} %write{42,42}
local	float	___694_coat_roughness_vector_out.x	%read{59,456} %write{43,62} %mystruct{___694_coat_roughness_vector_out} %mystructfield{0}
local	float	___694_coat_roughness_vector_out.y	%read{61,456} %write{44,63} %mystruct{___694_coat_roughness_vector_out} %mystructfield{1}
local	float	___694_coat_tangent_rotate_degree_in2_tmp	%read{65,65} %write{64,64}
local	float	___694_coat_tangent_rotate_degree_out	%read{101,101} %write{65,65}
local	color	___694_metal_reflectivity_out	%read{221,221} %write{66,66}
local	color	___694_metal_edgecolor_out	%read{230,230} %write{67,67}
local	float	___694_coat_affect_roughness_multiply1_out	%read{242,242} %write{68,68}
local	float	___694_tangent_rotate_degree_in2_tmp	%read{70,70} %write{69,69}
local	float	___694_tangent_rotate_degree_out	%read{247,247} %write{70,70}
local	float	___694_transmission_roughness_add_out	%read{364,364} %write{71,71}
local	float	___694_subsurface_color_nonnegative_in2_tmp	%read{73,73} %write{72,72}
local	color	___694_subsurface_color_nonnegative_out	%read{438,438} %write{74,74}
local	float	___694_coat_clamped_low_tmp	%read{79,79} %write{75,75}
local	float	___694_coat_clamped_high_tmp	%read{78,78} %write{76,76}
local	float	___694_coat_clamped_out	%read{366,366} %write{79,79}
local	color	___694_subsurface_radius_scaled_out	%read{494,494} %write{80,80}
local	float	___694_subsurface_selector_out	%read{496,498} %write{82,82}
local	float	___694_base_color_nonnegative_in2_tmp	%read{84,84} %write{83,83}
local	color	___694_base_color_nonnegative_out	%read{439,439} %write{85,85}
local	color	___694_coat_attenuation_bg_tmp	%read{87,87} %write{86,86}
local	color	___694_coat_attenuation_out	%read{519,519} %write{87,87}
local	float	___694_one_minus_coat_ior_in1_tmp	%read{89,89} %write{88,88}
local	float	___694_one_minus_coat_ior_out	%read{367,367} %write{89,89}
local	float	___694_one_plus_coat_ior_in1_tmp	%read{91,91} %write{90,90}
local	float	___694_one_plus_coat_ior_out	%read{367,367} %write{91,91}
local	color	___694_emission_weight_out	%read{521,521} %write{92,92}
local	color	___694_opacity_luminance_out	%read{370,370} %write{93,96}
local	vector	___694_coat_tangent_rotate_out	%read{371,371} %write{97,214}
local	color	___694_artistic_ior_ior	%read{231,460} %write{215,230}
local	color	___694_artistic_ior_extinction	%read{460,460} %write{216,241}
local	float	___694_coat_affect_roughness_multiply2_out	%read{373,376} %write{242,242}
local	vector	___694_tangent_rotate_out	%read{374,374} %write{243,360}
local	float	___694_transmission_roughness_clamped_low_tmp	%read{365,365} %write{361,361}
local	float	___694_transmission_roughness_clamped_high_tmp	%read{364,364} %write{362,362}
local	float	___694_transmission_roughness_clamped_out	%read{376,376} %write{365,365}
local	float	___694_coat_gamma_multiply_out	%read{378,378} %write{366,366}
local	float	___694_coat_ior_to_F0_sqrt_out	%read{379,379} %write{367,367}
local	int	___694_opacity_luminance_float_index_tmp	%read{370,370} %write{368,368}
local	float	___694_opacity_luminance_float_out	%read{548,548} %write{370,370}
local	vector	___694_coat_tangent_rotate_normalize_out	%read{384,384} %write{371,371}
local	float	___694_coat_affected_roughness_fg_tmp	%read{373,373} %write{372,372}
local	float	___694_coat_affected_roughness_out	%read{391,391} %write{373,373}
local	vector	___694_tangent_rotate_normalize_out	%read{413,413} %write{374,374}
local	float	___694_coat_affected_transmission_roughness_fg_tmp	%read{376,376} %write{375,375}
local	float	___694_coat_affected_transmission_roughness_out	%read{420,420} %write{376,376}
local	float	___694_coat_gamma_in2_tmp	%read{378,378} %write{377,377}
local	float	___694_coat_gamma_out	%read{438,439} %write{378,378}
local	float	___694_coat_ior_to_F0_out	%read{441,441} %write{379,379}
local	float	___694_coat_tangent_value2_tmp	%read{381,381} %write{380,380}
local	vector	___694_coat_tangent_out	%read{456,456} %write{384,386}
local	float	___694_main_roughness_out.x	%read{404,472} %write{388,407} %mystruct{___694_main_roughness_out} %mystructfield{0}
local	float	___694_main_roughness_out.y	%read{406,472} %write{389,408} %mystruct{___694_main_roughness_out} %mystructfield{1}
local	float	___694_main_tangent_value2_tmp	%read{410,410} %write{409,409}
local	vector	___694_main_tangent_out	%read{460,484} %write{413,415}
local	float	___694_transmission_roughness_out.x	%read{433,484} %write{417,436} %mystruct{___694_transmission_roughness_out} %mystructfield{0}
local	float	___694_transmission_roughness_out.y	%read{435,484} %write{418,437} %mystruct{___694_transmission_roughness_out} %mystructfield{1}
local	color	___694_coat_affected_subsurface_color_out	%read{489,493} %write{438,438}
local	color	___694_coat_affected_diffuse_color_out	%read{500,500} %write{439,439}
local	float	___694_one_minus_coat_ior_to_F0_in1_tmp	%read{441,441} %write{440,440}
local	float	___694_one_minus_coat_ior_to_F0_out	%read{444,444} %write{441,441}
local	color	___694_emission_color0_out	%read{534,534} %write{442,445}
local	closure color	___694_coat_bsdf_out	%read{520,520} %write{446,457}
local	float	___694_metal_bsdf_weight_tmp	%read{461,461} %write{458,458}
local	string	___694_metal_bsdf_distribution_tmp	%read{460,460} %write{459,459}
local	closure color	___694_metal_bsdf_out	%read{517,517} %write{461,461}
local	closure color	___694_specular_bsdf_out	%read{513,513} %write{462,473}
local	closure color	___694_transmission_bsdf_out	%read{511,511} %write{474,485}
local	closure color	___694_sheen_bsdf_out	%read{507,507} %write{487,487}
local	float	___694_translucent_bsdf_weight_tmp	%read{490,490} %write{488,488}
local	closure color	___694_translucent_bsdf_out	%read{498,498} %write{490,490}
local	closure color	___694_subsurface_bsdf_out	%read{497,497} %write{491,494}
local	closure color	___694_selected_subsurface_bsdf_out	%read{505,505} %write{499,499}
local	closure color	___694_diffuse_bsdf_out	%read{504,504} %write{501,501}
local	closure color	___694_subsurface_mix_out	%read{507,507} %write{506,506}
local	closure color	___694_sheen_layer_out	%read{510,510} %write{507,507}
local	closure color	___694_transmission_mix_out	%read{513,513} %write{512,512}
local	closure color	___694_specular_layer_out	%read{516,516} %write{513,513}
local	closure color	___694_metalness_mix_out	%read{519,519} %write{518,518}
local	closure color	___694_thin_film_layer_attenuated_out	%read{520,520} %write{519,519}
local	closure color	___694_coat_layer_out	%read{545,545} %write{520,520}
local	closure color	___694_emission_edf_out	%read{522,538} %write{521,521}
local	closure color	___694_coat_tinted_emission_edf_out	%read{535,535} %write{522,522}
local	closure color	___694_coat_emission_edf_out	%read{539,539} %write{523,535}
local	closure color	___694_blended_coat_emission_edf_out	%read{546,546} %write{540,540}
local	closure color	___694_shader_constructor_out.bsdf	%read{551,551} %write{541,545} %mystruct{___694_shader_constructor_out} %mystructfield{0}
local	closure color	___694_shader_constructor_out.edf	%read{552,552} %write{542,546} %mystruct{___694_shader_constructor_out} %mystructfield{1}
local	float	___694_shader_constructor_out.opacity	%read{550,553} %write{543,550} %mystruct{___694_shader_constructor_out} %mystructfield{2}
local	float	___695_opacity_weight	%read{559,561} %write{557,557}
local	closure color	null_closure	%read{38,39} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{103,500} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{165,415} %write{7,7}
local	vector	obj_pos_out	%read{10,11} %write{9,9} %derivs
local	float	add_xyz_out	%read{12,12} %write{10,10}
local	vector	scale_pos_out	%read{18,18} %write{11,11} %derivs
local	float	scale_xyz_out	%read{32,32} %write{12,12}
local	float	noise_out	%read{31,31} %write{13,30}
local	float	scale_noise_out	%read{32,32} %write{31,31}
local	float	sum_out	%read{33,33} %write{32,32}
local	float	sin_out	%read{34,34} %write{33,33}
local	float	scale_out	%read{35,35} %write{34,34}
local	float	bias_out	%read{36,36} %write{35,35}
local	float	power_out	%read{37,37} %write{36,36}
local	color	color_mix_out	%read{66,85} %write{37,37}
local	closure color	SR_marble1_out.bsdf	%read{558,558} %write{38,551} %mystruct{SR_marble1_out} %mystructfield{0}
local	closure color	SR_marble1_out.edf	%read{558,558} %write{39,552} %mystruct{SR_marble1_out} %mystructfield{1}
local	float	SR_marble1_out.opacity	%read{556,556} %write{40,553} %mystruct{SR_marble1_out} %mystructfield{2}
local	closure color	Marble_3D_out	%read{564,564} %write{563,563}
const	int	$const1	0		%read{0,368} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,315} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,9} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,354} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,557} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	string	$const6	"mx_fractal3d_float"		%read{14,14} %write{2147483647,-1}
const	string	$const7	"snoise"		%read{23,23} %write{2147483647,-1}
const	string	$const8	"mx_fbm"		%read{15,15} %write{2147483647,-1}
const	float	$const9	1		%read{17,561} %write{2147483647,-1}
temp	int	$tmp5	%read{21,28} %write{21,28}
temp	int	$tmp6	%read{19,28} %write{20,28}
temp	float	$tmp7	%read{21,28} %write{21,28}
temp	float	$tmp8	%read{21,28} %write{21,28}
const	int	$const10	1		%read{28,351} %write{2147483647,-1}
const	string	$const11	"NG_standard_surface_surfaceshader_100"		%read{41,41} %write{2147483647,-1}
const	string	$const12	"mx_roughness_anisotropy"		%read{45,419} %write{2147483647,-1}
temp	float	$tmp9	%read{48,48} %write{46,46}
const	float	$const13	1e-08		%read{49,423} %write{2147483647,-1}
const	string	$const14	"clamp"		%read{47,555} %write{2147483647,-1}
temp	float	$tmp10	%read{49,49} %write{48,48}
temp	int	$tmp11	%read{51,51} %write{50,50}
temp	float	$tmp12	%read{55,55} %write{54,54}
const	float	$const15	0.98		%read{53,427} %write{2147483647,-1}
temp	float	$tmp13	%read{54,54} %write{53,53}
temp	float	$tmp14	%read{56,56} %write{55,55}
temp	float	$tmp15	%read{58,58} %write{57,57}
const	float	$const16	360		%read{64,69} %write{2147483647,-1}
temp	color	$tmp16	%read{74,74} %write{73,73}
temp	float	$tmp17	%read{79,79} %write{78,78}
temp	float	$tmp18	%read{82,82} %write{81,81}
temp	color	$tmp19	%read{85,85} %write{84,84}
const	color	$const17	1 1 1		%read{86,455} %write{2147483647,-1}
const	color	$const18	0 0 0		%read{93,534} %write{2147483647,-1}
const	color	$const19	0.272229 0.674082 0.053689		%read{95,95} %write{2147483647,-1}
const	string	$const20	"mx_luminance_color3"		%read{94,94} %write{2147483647,-1}
temp	float	$tmp21	%read{96,96} %write{95,95}
const	vector	$const21	0 0 0		%read{97,243} %write{2147483647,-1}
const	string	$const22	"mx_rotate_vector3"		%read{98,244} %write{2147483647,-1}
const	string	$const23	"radians"		%read{99,245} %write{2147483647,-1}
const	float	$const24	3.1415927		%read{100,246} %write{2147483647,-1}
const	float	$const25	180		%read{100,246} %write{2147483647,-1}
temp	float	$tmp22	%read{101,101} %write{100,100}
const	string	$const26	"rotationMatrix"		%read{102,248} %write{2147483647,-1}
temp	float	$tmp23	%read{108,108} %write{107,107}
temp	float	$tmp24	%read{110,110} %write{108,108}
temp	float	$tmp25	%read{110,110} %write{109,109}
temp	float	$tmp26	%read{111,111} %write{110,110}
temp	float	$tmp27	%read{164,164} %write{111,111}
temp	float	$tmp28	%read{113,113} %write{112,112}
temp	float	$tmp29	%read{115,115} %write{113,113}
temp	float	$tmp30	%read{115,115} %write{114,114}
temp	float	$tmp31	%read{118,118} %write{115,115}
temp	float	$tmp32	%read{117,117} %write{116,116}
temp	float	$tmp33	%read{118,118} %write{117,117}
temp	float	$tmp34	%read{164,164} %write{118,118}
temp	float	$tmp35	%read{120,120} %write{119,119}
temp	float	$tmp36	%read{122,122} %write{120,120}
temp	float	$tmp37	%read{122,122} %write{121,121}
temp	float	$tmp38	%read{125,125} %write{122,122}
temp	float	$tmp39	%read{124,124} %write{123,123}
temp	float	$tmp40	%read{125,125} %write{124,124}
temp	float	$tmp41	%read{164,164} %write{125,125}
temp	float	$tmp42	%read{127,127} %write{126,126}
temp	float	$tmp43	%read{129,129} %write{127,127}
temp	float	$tmp44	%read{129,129} %write{128,128}
temp	float	$tmp45	%read{132,132} %write{129,129}
temp	float	$tmp46	%read{131,131} %write{130,130}
temp	float	$tmp47	%read{132,132} %write{131,131}
temp	float	$tmp48	%read{164,164} %write{132,132}
temp	float	$tmp49	%read{134,134} %write{133,133}
temp	float	$tmp50	%read{136,136} %write{134,134}
temp	float	$tmp51	%read{136,136} %write{135,135}
temp	float	$tmp52	%read{137,137} %write{136,136}
temp	float	$tmp53	%read{164,164} %write{137,137}
temp	float	$tmp54	%read{139,139} %write{138,138}
temp	float	$tmp55	%read{141,141} %write{139,139}
temp	float	$tmp56	%read{141,141} %write{140,140}
temp	float	$tmp57	%read{144,144} %write{141,141}
temp	float	$tmp58	%read{143,143} %write{142,142}
temp	float	$tmp59	%read{144,144} %write{143,143}
temp	float	$tmp60	%read{164,164} %write{144,144}
temp	float	$tmp61	%read{146,146} %write{145,145}
temp	float	$tmp62	%read{148,148} %write{146,146}
temp	float	$tmp63	%read{148,148} %write{147,147}
temp	float	$tmp64	%read{151,151} %write{148,148}
temp	float	$tmp65	%read{150,150} %write{149,149}
temp	float	$tmp66	%read{151,151} %write{150,150}
temp	float	$tmp67	%read{164,164} %write{151,151}
temp	float	$tmp68	%read{153,153} %write{152,152}
temp	float	$tmp69	%read{155,155} %write{153,153}
temp	float	$tmp70	%read{155,155} %write{154,154}
temp	float	$tmp71	%read{158,158} %write{155,155}
temp	float	$tmp72	%read{157,157} %write{156,156}
temp	float	$tmp73	%read{158,158} %write{157,157}
temp	float	$tmp74	%read{164,164} %write{158,158}
temp	float	$tmp75	%read{160,160} %write{159,159}
temp	float	$tmp76	%read{162,162} %write{160,160}
temp	float	$tmp77	%read{162,162} %write{161,161}
temp	float	$tmp78	%read{163,163} %write{162,162}
temp	float	$tmp79	%read{164,164} %write{163,163}
temp	float	$tmp80.x	%read{171,204} %write{165,165}
temp	float	$tmp80.y	%read{173,206} %write{166,166}
temp	float	$tmp80.z	%read{176,209} %write{167,167}
temp	float	$tmp80.w	%read{179,212} %write{168,168}
temp	float	$tmp81	%read{171,171} %write{170,170}
temp	float	$tmp82	%read{174,174} %write{171,171}
temp	float	$tmp83	%read{173,173} %write{172,172}
temp	float	$tmp84	%read{174,174} %write{173,173}
temp	float	$tmp85	%read{177,177} %write{174,174}
temp	float	$tmp86	%read{176,176} %write{175,175}
temp	float	$tmp87	%read{177,177} %write{176,176}
temp	float	$tmp88	%read{180,180} %write{177,177}
const	int	$const27	3		%read{178,357} %write{2147483647,-1}
temp	float	$tmp89	%read{179,179} %write{178,178}
temp	float	$tmp90	%read{180,180} %write{179,179}
temp	float	$tmp91	%read{182,182} %write{181,181}
temp	float	$tmp92	%read{185,185} %write{182,182}
temp	float	$tmp93	%read{184,184} %write{183,183}
temp	float	$tmp94	%read{185,185} %write{184,184}
temp	float	$tmp95	%read{188,188} %write{185,185}
temp	float	$tmp96	%read{187,187} %write{186,186}
temp	float	$tmp97	%read{188,188} %write{187,187}
temp	float	$tmp98	%read{191,191} %write{188,188}
temp	float	$tmp99	%read{190,190} %write{189,189}
temp	float	$tmp100	%read{191,191} %write{190,190}
temp	float	$tmp101	%read{193,193} %write{192,192}
temp	float	$tmp102	%read{196,196} %write{193,193}
temp	float	$tmp103	%read{195,195} %write{194,194}
temp	float	$tmp104	%read{196,196} %write{195,195}
temp	float	$tmp105	%read{199,199} %write{196,196}
temp	float	$tmp106	%read{198,198} %write{197,197}
temp	float	$tmp107	%read{199,199} %write{198,198}
temp	float	$tmp108	%read{202,202} %write{199,199}
temp	float	$tmp109	%read{201,201} %write{200,200}
temp	float	$tmp110	%read{202,202} %write{201,201}
temp	float	$tmp111	%read{204,204} %write{203,203}
temp	float	$tmp112	%read{207,207} %write{204,204}
temp	float	$tmp113	%read{206,206} %write{205,205}
temp	float	$tmp114	%read{207,207} %write{206,206}
temp	float	$tmp115	%read{210,210} %write{207,207}
temp	float	$tmp116	%read{209,209} %write{208,208}
temp	float	$tmp117	%read{210,210} %write{209,209}
temp	float	$tmp118	%read{213,213} %write{210,210}
temp	float	$tmp119	%read{212,212} %write{211,211}
temp	float	$tmp120	%read{213,213} %write{212,212}
const	string	$const28	"mx_artistic_ior"		%read{217,217} %write{2147483647,-1}
temp	color	$tmp121	%read{222,222} %write{218,218}
const	float	$const29	0.99		%read{219,219} %write{2147483647,-1}
temp	color	$tmp122	%read{221,221} %write{219,219}
temp	color	$tmp123	%read{222,222} %write{221,221}
temp	color	$tmp124	%read{226,226} %write{224,224}
temp	color	$tmp125	%read{226,226} %write{225,225}
temp	color	$tmp126	%read{229,229} %write{227,227}
temp	color	$tmp127	%read{229,229} %write{228,228}
temp	color	$tmp128	%read{234,234} %write{233,233}
temp	color	$tmp129	%read{236,236} %write{234,234}
temp	color	$tmp130	%read{236,236} %write{235,235}
temp	color	$tmp131	%read{238,238} %write{236,236}
temp	color	$tmp132	%read{238,238} %write{237,237}
temp	color	$tmp133	%read{240,240} %write{239,239}
temp	float	$tmp134	%read{247,247} %write{246,246}
temp	float	$tmp135	%read{254,254} %write{253,253}
temp	float	$tmp136	%read{256,256} %write{254,254}
temp	float	$tmp137	%read{256,256} %write{255,255}
temp	float	$tmp138	%read{257,257} %write{256,256}
temp	float	$tmp139	%read{310,310} %write{257,257}
temp	float	$tmp140	%read{259,259} %write{258,258}
temp	float	$tmp141	%read{261,261} %write{259,259}
temp	float	$tmp142	%read{261,261} %write{260,260}
temp	float	$tmp143	%read{264,264} %write{261,261}
temp	float	$tmp144	%read{263,263} %write{262,262}
temp	float	$tmp145	%read{264,264} %write{263,263}
temp	float	$tmp146	%read{310,310} %write{264,264}
temp	float	$tmp147	%read{266,266} %write{265,265}
temp	float	$tmp148	%read{268,268} %write{266,266}
temp	float	$tmp149	%read{268,268} %write{267,267}
temp	float	$tmp150	%read{271,271} %write{268,268}
temp	float	$tmp151	%read{270,270} %write{269,269}
temp	float	$tmp152	%read{271,271} %write{270,270}
temp	float	$tmp153	%read{310,310} %write{271,271}
temp	float	$tmp154	%read{273,273} %write{272,272}
temp	float	$tmp155	%read{275,275} %write{273,273}
temp	float	$tmp156	%read{275,275} %write{274,274}
temp	float	$tmp157	%read{278,278} %write{275,275}
temp	float	$tmp158	%read{277,277} %write{276,276}
temp	float	$tmp159	%read{278,278} %write{277,277}
temp	float	$tmp160	%read{310,310} %write{278,278}
temp	float	$tmp161	%read{280,280} %write{279,279}
temp	float	$tmp162	%read{282,282} %write{280,280}
temp	float	$tmp163	%read{282,282} %write{281,281}
temp	float	$tmp164	%read{283,283} %write{282,282}
temp	float	$tmp165	%read{310,310} %write{283,283}
temp	float	$tmp166	%read{285,285} %write{284,284}
temp	float	$tmp167	%read{287,287} %write{285,285}
temp	float	$tmp168	%read{287,287} %write{286,286}
temp	float	$tmp169	%read{290,290} %write{287,287}
temp	float	$tmp170	%read{289,289} %write{288,288}
temp	float	$tmp171	%read{290,290} %write{289,289}
temp	float	$tmp172	%read{310,310} %write{290,290}
temp	float	$tmp173	%read{292,292} %write{291,291}
temp	float	$tmp174	%read{294,294} %write{292,292}
temp	float	$tmp175	%read{294,294} %write{293,293}
temp	float	$tmp176	%read{297,297} %write{294,294}
temp	float	$tmp177	%read{296,296} %write{295,295}
temp	float	$tmp178	%read{297,297} %write{296,296}
temp	float	$tmp179	%read{310,310} %write{297,297}
temp	float	$tmp180	%read{299,299} %write{298,298}
temp	float	$tmp181	%read{301,301} %write{299,299}
temp	float	$tmp182	%read{301,301} %write{300,300}
temp	float	$tmp183	%read{304,304} %write{301,301}
temp	float	$tmp184	%read{303,303} %write{302,302}
temp	float	$tmp185	%read{304,304} %write{303,303}
temp	float	$tmp186	%read{310,310} %write{304,304}
temp	float	$tmp187	%read{306,306} %write{305,305}
temp	float	$tmp188	%read{308,308} %write{306,306}
temp	float	$tmp189	%read{308,308} %write{307,307}
temp	float	$tmp190	%read{309,309} %write{308,308}
temp	float	$tmp191	%read{310,310} %write{309,309}
temp	float	$tmp192.x	%read{317,350} %write{311,311}
temp	float	$tmp192.y	%read{319,352} %write{312,312}
temp	float	$tmp192.z	%read{322,355} %write{313,313}
temp	float	$tmp192.w	%read{325,358} %write{314,314}
temp	float	$tmp193	%read{317,317} %write{316,316}
temp	float	$tmp194	%read{320,320} %write{317,317}
temp	float	$tmp195	%read{319,319} %write{318,318}
temp	float	$tmp196	%read{320,320} %write{319,319}
temp	float	$tmp197	%read{323,323} %write{320,320}
temp	float	$tmp198	%read{322,322} %write{321,321}
temp	float	$tmp199	%read{323,323} %write{322,322}
temp	float	$tmp200	%read{326,326} %write{323,323}
temp	float	$tmp201	%read{325,325} %write{324,324}
temp	float	$tmp202	%read{326,326} %write{325,325}
temp	float	$tmp203	%read{328,328} %write{327,327}
temp	float	$tmp204	%read{331,331} %write{328,328}
temp	float	$tmp205	%read{330,330} %write{329,329}
temp	float	$tmp206	%read{331,331} %write{330,330}
temp	float	$tmp207	%read{334,334} %write{331,331}
temp	float	$tmp208	%read{333,333} %write{332,332}
temp	float	$tmp209	%read{334,334} %write{333,333}
temp	float	$tmp210	%read{337,337} %write{334,334}
temp	float	$tmp211	%read{336,336} %write{335,335}
temp	float	$tmp212	%read{337,337} %write{336,336}
temp	float	$tmp213	%read{339,339} %write{338,338}
temp	float	$tmp214	%read{342,342} %write{339,339}
temp	float	$tmp215	%read{341,341} %write{340,340}
temp	float	$tmp216	%read{342,342} %write{341,341}
temp	float	$tmp217	%read{345,345} %write{342,342}
temp	float	$tmp218	%read{344,344} %write{343,343}
temp	float	$tmp219	%read{345,345} %write{344,344}
temp	float	$tmp220	%read{348,348} %write{345,345}
temp	float	$tmp221	%read{347,347} %write{346,346}
temp	float	$tmp222	%read{348,348} %write{347,347}
temp	float	$tmp223	%read{350,350} %write{349,349}
temp	float	$tmp224	%read{353,353} %write{350,350}
temp	float	$tmp225	%read{352,352} %write{351,351}
temp	float	$tmp226	%read{353,353} %write{352,352}
temp	float	$tmp227	%read{356,356} %write{353,353}
temp	float	$tmp228	%read{355,355} %write{354,354}
temp	float	$tmp229	%read{356,356} %write{355,355}
temp	float	$tmp230	%read{359,359} %write{356,356}
temp	float	$tmp231	%read{358,358} %write{357,357}
temp	float	$tmp232	%read{359,359} %write{358,358}
temp	float	$tmp233	%read{365,365} %write{364,364}
const	string	$const30	"mx_extract"		%read{369,369} %write{2147483647,-1}
temp	int	$tmp234	%read{383,383} %write{381,381}
const	string	$const31	"mx_ternary"		%read{382,411} %write{2147483647,-1}
temp	float	$tmp235	%read{393,393} %write{391,391}
temp	float	$tmp236	%read{394,394} %write{393,393}
temp	int	$tmp237	%read{396,396} %write{395,395}
temp	float	$tmp238	%read{400,400} %write{399,399}
temp	float	$tmp239	%read{399,399} %write{398,398}
temp	float	$tmp240	%read{401,401} %write{400,400}
temp	float	$tmp241	%read{403,403} %write{402,402}
temp	int	$tmp242	%read{412,412} %write{410,410}
temp	float	$tmp243	%read{422,422} %write{420,420}
temp	float	$tmp244	%read{423,423} %write{422,422}
temp	int	$tmp245	%read{425,425} %write{424,424}
temp	float	$tmp246	%read{429,429} %write{428,428}
temp	float	$tmp247	%read{428,428} %write{427,427}
temp	float	$tmp248	%read{430,430} %write{429,429}
temp	float	$tmp249	%read{432,432} %write{431,431}
const	string	$const32	"NG_convert_float_color3"		%read{443,443} %write{2147483647,-1}
const	float	$const33	1.5		%read{456,484} %write{2147483647,-1}
const	string	$const34	"ggx"		%read{456,484} %write{2147483647,-1}
const	string	$const35	"R"		%read{448,480} %write{2147483647,-1}
const	string	$const36	"mx_dielectric_bsdf"		%read{447,475} %write{2147483647,-1}
const	string	$const37	"T"		%read{448,480} %write{2147483647,-1}
temp	int	$tmp251	%read{449,449} %write{448,448}
temp	int	$tmp252	%read{453,453} %write{452,452}
temp	closure color	$tmp253	%read{457,457} %write{456,456}
const	string	$const38	"thinfilm_thickness"		%read{456,484} %write{2147483647,-1}
const	string	$const39	"thinfilm_ior"		%read{456,484} %write{2147483647,-1}
const	string	$const40	"dielectric_bsdf"		%read{456,484} %write{2147483647,-1}
temp	closure color	$tmp254	%read{461,461} %write{460,460}
const	string	$const41	"conductor_bsdf"		%read{460,460} %write{2147483647,-1}
temp	int	$tmp255	%read{465,465} %write{464,464}
temp	int	$tmp256	%read{469,469} %write{468,468}
temp	closure color	$tmp257	%read{473,473} %write{472,472}
temp	int	$tmp258	%read{477,477} %write{476,476}
temp	int	$tmp259	%read{481,481} %write{480,480}
temp	closure color	$tmp260	%read{485,485} %write{484,484}
temp	closure color	$tmp261	%read{487,487} %write{486,486}
const	string	$const42	"sheen_bsdf"		%read{486,486} %write{2147483647,-1}
temp	closure color	$tmp262	%read{490,490} %write{489,489}
const	string	$const43	"translucent_bsdf"		%read{489,489} %write{2147483647,-1}
const	string	$const44	"mx_subsurface_bsdf"		%read{492,492} %write{2147483647,-1}
temp	color	$tmp263	%read{494,494} %write{493,493}
const	string	$const45	"subsurface_bssrdf"		%read{494,494} %write{2147483647,-1}
const	string	$const46	"mix"		%read{495,536} %write{2147483647,-1}
temp	float	$tmp264	%read{497,497} %write{496,496}
temp	closure color	$tmp265	%read{499,499} %write{497,497}
temp	closure color	$tmp266	%read{499,499} %write{498,498}
temp	closure color	$tmp267	%read{501,501} %write{500,500}
const	string	$const47	"oren_nayar_diffuse_bsdf"		%read{500,500} %write{2147483647,-1}
temp	float	$tmp268	%read{504,504} %write{503,503}
temp	closure color	$tmp269	%read{506,506} %write{504,504}
temp	closure color	$tmp270	%read{506,506} %write{505,505}
const	string	$const48	"layer"		%read{507,520} %write{2147483647,-1}
temp	float	$tmp271	%read{510,510} %write{509,509}
temp	closure color	$tmp272	%read{512,512} %write{510,510}
temp	closure color	$tmp273	%read{512,512} %write{511,511}
temp	float	$tmp274	%read{516,516} %write{515,515}
temp	closure color	$tmp275	%read{518,518} %write{516,516}
temp	closure color	$tmp276	%read{518,518} %write{517,517}
const	string	$const49	"uniform_edf"		%read{521,521} %write{2147483647,-1}
const	float	$const50	5		%read{533,533} %write{2147483647,-1}
const	string	$const51	"mx_generalized_schlick_edf"		%read{524,524} %write{2147483647,-1}
temp	float	$tmp278	%read{527,527} %write{526,526}
temp	vector	$tmp279	%read{526,526} %write{525,525}
const	string	$const52	"mx_fresnel_schlick"		%read{528,528} %write{2147483647,-1}
temp	float	$tmp280	%read{531,531} %write{529,529}
temp	float	$tmp281	%read{532,532} %write{531,531}
temp	float	$tmp282	%read{534,534} %write{533,533}
temp	float	$tmp283	%read{538,538} %write{537,537}
temp	closure color	$tmp284	%read{540,540} %write{538,538}
temp	closure color	$tmp285	%read{540,540} %write{539,539}
const	string	$const53	"mx_surface"		%read{544,544} %write{2147483647,-1}
temp	float	$tmp286	%read{549,549} %write{548,548}
const	string	$const54	"mx_surfacematerial"		%read{554,554} %write{2147483647,-1}
temp	float	$tmp287	%read{557,557} %write{556,556}
temp	closure color	$tmp288	%read{559,559} %write{558,558}
temp	closure color	$tmp289	%read{563,563} %write{559,559}
temp	closure color	$tmp290	%read{562,562} %write{560,560}
const	string	$const55	"transparent"		%read{560,560} %write{2147483647,-1}
temp	float	$tmp291	%read{562,562} %write{561,561}
temp	closure color	$tmp292	%read{563,563} %write{562,562}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:719
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{719} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:720
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{720} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:721
#     vector obj_pos_out = transform(obj_pos_space, P);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{721} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:722
#     float add_xyz_out = dot(obj_pos_out, add_xyz_in2);
	functioncall	$const2 10 	%line{722} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	obj_pos_out $const3 obj_pos_space P 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:723
#     vector scale_pos_out = obj_pos_out * scale_pos_in2;
	dot		add_xyz_out obj_pos_out add_xyz_in2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{723} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:724
#     float scale_xyz_out = add_xyz_out * scale_xyz_in2;
	mul		scale_pos_out obj_pos_out scale_pos_in2 	%line{724} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:725
#     float noise_out = 0.0;
	mul		scale_xyz_out add_xyz_out scale_xyz_in2 	%line{725} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:726
#     mx_fractal3d_float(noise_amplitude, noise_octaves, noise_lacunarity, noise_diminish, scale_pos_out, noise_out);
	assign		noise_out $const5 	%line{726} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:727
#     float scale_noise_out = noise_out * scale_noise_in2;
	functioncall	$const6 31 	%line{727} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:20
#     result = f * amplitude;
	functioncall	$const8 30 	%line{20} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:313
#     float out = 0;
	assign		___590_out $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{313} %argrw{"wr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:314
#     float amp = 1.0;
	assign		___590_amp $const9 	%line{314} %argrw{"wr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:315
#     point p = position;
	assign		___590_p scale_pos_out 	%line{315} %argrw{"wr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:317
#     for (int i = 0;  i < octaves;  i += 1) {
	for		$tmp6 21 23 28 29 	%line{317} %argrw{"r"}
	assign		___591_i $const1 	%argrw{"wr"}
	lt		$tmp5 ___591_i noise_octaves 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:318
#         out += amp * noise(noisetype, p);
	noise		$tmp7 $const7 ___590_p 	%line{318} %argrw{"wrr"} %argderivs{2}
	mul		$tmp8 ___590_amp $tmp7 	%argrw{"wrr"}
	add		___590_out ___590_out $tmp8 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:319
#         amp *= diminish;
	mul		___590_amp ___590_amp noise_diminish 	%line{319} %argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:320
#         p *= lacunarity;
	mul		___590_p ___590_p noise_lacunarity 	%line{320} %argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:317
#     for (int i = 0;  i < octaves;  i += 1) {
	add		___591_i ___591_i $const10 	%line{317} %argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:322
#     return out;
	assign		___669_f ___590_out 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:21
# }
	mul		noise_out ___669_f noise_amplitude 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{21} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:728
#     float sum_out = scale_xyz_out + scale_noise_out;
	mul		scale_noise_out noise_out scale_noise_in2 	%line{728} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:729
#     float sin_out = sin(sum_out);
	add		sum_out scale_xyz_out scale_noise_out 	%line{729} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:730
#     float scale_out = sin_out * scale_in2;
	sin		sin_out sum_out 	%line{730} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:731
#     float bias_out = scale_out + bias_in2;
	mul		scale_out sin_out scale_in2 	%line{731} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:732
#     float power_out = pow(bias_out, power_in2);
	add		bias_out scale_out bias_in2 	%line{732} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:733
#     color color_mix_out = mix(color_mix_bg, color_mix_fg, power_out);
	pow		power_out bias_out power_in2 	%line{733} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:734
#     surfaceshader SR_marble1_out = surfaceshader(null_closure, null_closure, 1.0);
	mix		color_mix_out color_mix_bg color_mix_fg power_out 	%line{734} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:735
#     NG_standard_surface_surfaceshader_100(SR_marble1_base, color_mix_out, SR_marble1_diffuse_roughness, SR_marble1_metalness, SR_marble1_specular, SR_marble1_specular_color, SR_marble1_specular_roughness, SR_marble1_specular_IOR, SR_marble1_specular_anisotropy, SR_marble1_specular_rotation, SR_marble1_transmission, SR_marble1_transmission_color, SR_marble1_transmission_depth, SR_marble1_transmission_scatter, SR_marble1_transmission_scatter_anisotropy, SR_marble1_transmission_dispersion, SR_marble1_transmission_extra_roughness, SR_marble1_subsurface, color_mix_out, SR_marble1_subsurface_radius, SR_marble1_subsurface_scale, SR_marble1_subsurface_anisotropy, SR_marble1_sheen, SR_marble1_sheen_color, SR_marble1_sheen_roughness, SR_marble1_coat, SR_marble1_coat_color, SR_marble1_coat_roughness, SR_marble1_coat_anisotropy, SR_marble1_coat_rotation, SR_marble1_coat_IOR, geomprop_Nworld_out1, SR_marble1_coat_affect_color, SR_marble1_coat_affect_roughness, SR_marble1_thin_film_thickness, SR_marble1_thin_film_IOR, SR_marble1_emission, SR_marble1_emission_color, SR_marble1_opacity, SR_marble1_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_marble1_out);
	assign		SR_marble1_out.bsdf null_closure 	%line{735} %argrw{"wr"}
	assign		SR_marble1_out.edf null_closure 	%argrw{"wr"}
	assign		SR_marble1_out.opacity $const9 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:736
#     MATERIAL Marble_3D_out = mx_surfacematerial(SR_marble1_out, backsurfaceshader, displacementshader1);
	functioncall	$const11 554 	%line{736} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:201
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___694_null_closure $const1 	%line{201} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:202
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___694_coat_roughness_vector_out.x $const5 	%line{202} %argrw{"wr"}
	assign		___694_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:203
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const12 64 	%line{203} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:26
#     if (anisotropy > 0.0)
	mul		$tmp9 SR_marble1_coat_roughness SR_marble1_coat_roughness 	%line{26} %argrw{"wrr"}
	functioncall	$const14 50 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp10 $tmp9 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp10 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:27
#     {
	gt		$tmp11 SR_marble1_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{27} %argrw{"wrr"}
	if		$tmp11 62 64 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const14 55 	%line{29} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp13 SR_marble1_coat_anisotropy $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp12 $tmp13 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp14 $const9 $tmp12 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{29} %argrw{"wrr"}
	sqrt		___671_aspect $tmp14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:30
#         result.y = roughness_sqr * aspect;
	div		$tmp15 ___670_roughness_sqr ___671_aspect 	%line{30} %argrw{"wrr"}
	min		___694_coat_roughness_vector_out.x $tmp15 $const9 	%argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:31
#     }
	mul		___694_coat_roughness_vector_out.y ___670_roughness_sqr ___671_aspect 	%line{31} %argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.y ___694_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:35
#         result.y = roughness_sqr;
	assign		___694_coat_roughness_vector_out.x ___670_roughness_sqr 	%line{35} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:36
#     }
	assign		___694_coat_roughness_vector_out.y ___670_roughness_sqr 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:204
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___694_coat_tangent_rotate_degree_in2_tmp $const16 	%line{204} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:205
#     color metal_reflectivity_out = base_color * base;
	mul		___694_coat_tangent_rotate_degree_out SR_marble1_coat_rotation ___694_coat_tangent_rotate_degree_in2_tmp 	%line{205} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:206
#     color metal_edgecolor_out = specular_color * specular;
	mul		___694_metal_reflectivity_out color_mix_out SR_marble1_base 	%line{206} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:207
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___694_metal_edgecolor_out SR_marble1_specular_color SR_marble1_specular 	%line{207} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:208
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___694_coat_affect_roughness_multiply1_out SR_marble1_coat_affect_roughness SR_marble1_coat 	%line{208} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:209
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___694_tangent_rotate_degree_in2_tmp $const16 	%line{209} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:210
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___694_tangent_rotate_degree_out SR_marble1_specular_rotation ___694_tangent_rotate_degree_in2_tmp 	%line{210} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:211
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___694_transmission_roughness_add_out SR_marble1_specular_roughness SR_marble1_transmission_extra_roughness 	%line{211} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:212
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___694_subsurface_color_nonnegative_in2_tmp $const5 	%line{212} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:213
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp16 ___694_subsurface_color_nonnegative_in2_tmp 	%line{213} %argrw{"wr"}
	max		___694_subsurface_color_nonnegative_out color_mix_out $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:214
#     float coat_clamped_high_tmp = 1.000000;
	assign		___694_coat_clamped_low_tmp $const5 	%line{214} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:215
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___694_coat_clamped_high_tmp $const9 	%line{215} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:216
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const14 80 	%line{216} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp17 SR_marble1_coat ___694_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_coat_clamped_out $tmp17 ___694_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:217
#     float subsurface_selector_out = float(thin_walled);
	mul		___694_subsurface_radius_scaled_out SR_marble1_subsurface_radius SR_marble1_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{217} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:218
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp18 SR_marble1_thin_walled 	%line{218} %argrw{"wr"}
	assign		___694_subsurface_selector_out $tmp18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:219
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___694_base_color_nonnegative_in2_tmp $const5 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:220
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp19 ___694_base_color_nonnegative_in2_tmp 	%line{220} %argrw{"wr"}
	max		___694_base_color_nonnegative_out color_mix_out $tmp19 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:221
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___694_coat_attenuation_bg_tmp $const17 	%line{221} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:222
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___694_coat_attenuation_out ___694_coat_attenuation_bg_tmp SR_marble1_coat_color SR_marble1_coat 	%line{222} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:223
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___694_one_minus_coat_ior_in1_tmp $const9 	%line{223} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:224
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___694_one_minus_coat_ior_out ___694_one_minus_coat_ior_in1_tmp SR_marble1_coat_IOR 	%line{224} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:225
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___694_one_plus_coat_ior_in1_tmp $const9 	%line{225} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:226
#     color emission_weight_out = emission_color * emission1;
	add		___694_one_plus_coat_ior_out ___694_one_plus_coat_ior_in1_tmp SR_marble1_coat_IOR 	%line{226} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:227
#     color opacity_luminance_out = color(0.0);
	mul		___694_emission_weight_out SR_marble1_emission_color SR_marble1_emission 	%line{227} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:228
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___694_opacity_luminance_out $const18 	%line{228} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:229
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const20 97 	%line{229} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:42
# }
	dot		$tmp21 SR_marble1_opacity $const19 	%line{42} %argrw{"wrr"}
	assign		___694_opacity_luminance_out $tmp21 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:230
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___694_coat_tangent_rotate_out $const21 	%line{230} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:231
#     color artistic_ior_ior = color(0.0);
	functioncall	$const22 215 	%line{231} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:60
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const23 102 	%line{60} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp22 $const24 $const25 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_coat_tangent_rotate_degree_out $tmp22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:61
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const26 165 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{61} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:47
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:48
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:49
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:50
# 
	sub		___674_oc $const9 ___674_c 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:52
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp23 ___674_nAxis $const1 	%line{52} %argrw{"wrr"}
	mul		$tmp24 ___674_oc $tmp23 	%argrw{"wrr"}
	compref		$tmp25 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp26 $tmp24 $tmp25 	%argrw{"wrr"}
	add		$tmp27 $tmp26 ___674_c 	%argrw{"wrr"}
	compref		$tmp28 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp29 ___674_oc $tmp28 	%argrw{"wrr"}
	compref		$tmp30 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp31 $tmp29 $tmp30 	%argrw{"wrr"}
	compref		$tmp32 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp33 $tmp32 ___674_s 	%argrw{"wrr"}
	sub		$tmp34 $tmp31 $tmp33 	%argrw{"wrr"}
	compref		$tmp35 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp36 ___674_oc $tmp35 	%argrw{"wrr"}
	compref		$tmp37 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
	compref		$tmp39 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp40 $tmp39 ___674_s 	%argrw{"wrr"}
	add		$tmp41 $tmp38 $tmp40 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:53
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp42 ___674_nAxis $const1 	%line{53} %argrw{"wrr"}
	mul		$tmp43 ___674_oc $tmp42 	%argrw{"wrr"}
	compref		$tmp44 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp45 $tmp43 $tmp44 	%argrw{"wrr"}
	compref		$tmp46 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp47 $tmp46 ___674_s 	%argrw{"wrr"}
	add		$tmp48 $tmp45 $tmp47 	%argrw{"wrr"}
	compref		$tmp49 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp50 ___674_oc $tmp49 	%argrw{"wrr"}
	compref		$tmp51 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp52 $tmp50 $tmp51 	%argrw{"wrr"}
	add		$tmp53 $tmp52 ___674_c 	%argrw{"wrr"}
	compref		$tmp54 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp55 ___674_oc $tmp54 	%argrw{"wrr"}
	compref		$tmp56 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	compref		$tmp58 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp59 $tmp58 ___674_s 	%argrw{"wrr"}
	sub		$tmp60 $tmp57 $tmp59 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:54
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp61 ___674_nAxis $const4 	%line{54} %argrw{"wrr"}
	mul		$tmp62 ___674_oc $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp66 $tmp65 ___674_s 	%argrw{"wrr"}
	sub		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp69 ___674_oc $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp73 $tmp72 ___674_s 	%argrw{"wrr"}
	add		$tmp74 $tmp71 $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp76 ___674_oc $tmp75 	%argrw{"wrr"}
	compref		$tmp77 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp78 $tmp76 $tmp77 	%argrw{"wrr"}
	add		$tmp79 $tmp78 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:52
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp27 $tmp34 $tmp41 $const5 $tmp48 $tmp53 $tmp60 $const5 $tmp67 $tmp74 $tmp79 $const5 $const5 $const5 $const5 $const9 	%line{52} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:62
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp80.x geomprop_Tworld_out1 $const1 	%line{62} %argrw{"wrr"}
	compref		$tmp80.y geomprop_Tworld_out1 $const10 	%argrw{"wrr"}
	compref		$tmp80.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp80.w $const9 	%argrw{"wr"}
	functioncall	$const2 214 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp81 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp82 $tmp81 $tmp80.x 	%argrw{"wrr"}
	mxcompref	$tmp83 ___675_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp84 $tmp83 $tmp80.y 	%argrw{"wrr"}
	add		$tmp85 $tmp82 $tmp84 	%argrw{"wrr"}
	mxcompref	$tmp86 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp87 $tmp86 $tmp80.z 	%argrw{"wrr"}
	add		$tmp88 $tmp85 $tmp87 	%argrw{"wrr"}
	mxcompref	$tmp89 ___675_m $const27 $const1 	%argrw{"wrrr"}
	mul		$tmp90 $tmp89 $tmp80.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp88 $tmp90 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp91 ___675_m $const1 $const10 	%line{416} %argrw{"wrrr"}
	mul		$tmp92 $tmp91 $tmp80.x 	%argrw{"wrr"}
	mxcompref	$tmp93 ___675_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp94 $tmp93 $tmp80.y 	%argrw{"wrr"}
	add		$tmp95 $tmp92 $tmp94 	%argrw{"wrr"}
	mxcompref	$tmp96 ___675_m $const4 $const10 	%argrw{"wrrr"}
	mul		$tmp97 $tmp96 $tmp80.z 	%argrw{"wrr"}
	add		$tmp98 $tmp95 $tmp97 	%argrw{"wrr"}
	mxcompref	$tmp99 ___675_m $const27 $const10 	%argrw{"wrrr"}
	mul		$tmp100 $tmp99 $tmp80.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp98 $tmp100 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp101 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp102 $tmp101 $tmp80.x 	%argrw{"wrr"}
	mxcompref	$tmp103 ___675_m $const10 $const4 	%argrw{"wrrr"}
	mul		$tmp104 $tmp103 $tmp80.y 	%argrw{"wrr"}
	add		$tmp105 $tmp102 $tmp104 	%argrw{"wrr"}
	mxcompref	$tmp106 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp107 $tmp106 $tmp80.z 	%argrw{"wrr"}
	add		$tmp108 $tmp105 $tmp107 	%argrw{"wrr"}
	mxcompref	$tmp109 ___675_m $const27 $const4 	%argrw{"wrrr"}
	mul		$tmp110 $tmp109 $tmp80.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp108 $tmp110 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp111 ___675_m $const1 $const27 	%line{418} %argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp80.x 	%argrw{"wrr"}
	mxcompref	$tmp113 ___675_m $const10 $const27 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp80.y 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	mxcompref	$tmp116 ___675_m $const4 $const27 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp80.z 	%argrw{"wrr"}
	add		$tmp118 $tmp115 $tmp117 	%argrw{"wrr"}
	mxcompref	$tmp119 ___675_m $const27 $const27 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp80.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp118 $tmp120 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:63
# }
	vector		___694_coat_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{63} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:232
#     color artistic_ior_extinction = color(0.0);
	assign		___694_artistic_ior_ior $const18 	%line{232} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:233
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___694_artistic_ior_extinction $const18 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:234
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const28 242 	%line{234} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:71
#     color r_sqrt = sqrt(r);
	assign		$tmp121 $const5 	%line{71} %argrw{"wr"}
	assign		$tmp122 $const29 	%argrw{"wr"}
	functioncall	$const14 223 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp123 ___694_metal_reflectivity_out $tmp122 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___676_r $tmp123 $tmp121 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:72
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___676_r_sqrt ___676_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:73
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp124 $const9 ___676_r 	%line{73} %argrw{"wrr"}
	add		$tmp125 $const9 ___676_r 	%argrw{"wrr"}
	div		___676_n_min $tmp124 $tmp125 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:74
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp126 $const9 ___676_r_sqrt 	%line{74} %argrw{"wrr"}
	sub		$tmp127 $const9 ___676_r_sqrt 	%argrw{"wrr"}
	div		___676_n_max $tmp126 $tmp127 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:75
# 
	mix		___694_artistic_ior_ior ___676_n_max ___676_n_min ___694_metal_edgecolor_out 	%line{75} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:77
#     color nm1 = ior - 1.0;
	add		___676_np1 ___694_artistic_ior_ior $const9 	%line{77} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:78
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___676_nm1 ___694_artistic_ior_ior $const9 	%line{78} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:79
#     k2 = max(k2, 0.0);
	mul		$tmp128 ___676_np1 ___676_np1 	%line{79} %argrw{"wrr"}
	mul		$tmp129 $tmp128 ___676_r 	%argrw{"wrr"}
	mul		$tmp130 ___676_nm1 ___676_nm1 	%argrw{"wrr"}
	sub		$tmp131 $tmp129 $tmp130 	%argrw{"wrr"}
	sub		$tmp132 $const9 ___676_r 	%argrw{"wrr"}
	div		___676_k2 $tmp131 $tmp132 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:80
#     extinction = sqrt(k2);
	assign		$tmp133 $const5 	%line{80} %argrw{"wr"}
	max		___676_k2 ___676_k2 $tmp133 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:81
# }
	sqrt		___694_artistic_ior_extinction ___676_k2 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:235
#     vector tangent_rotate_out = vector(0.0);
	mul		___694_coat_affect_roughness_multiply2_out ___694_coat_affect_roughness_multiply1_out SR_marble1_coat_roughness 	%line{235} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:236
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___694_tangent_rotate_out $const21 	%line{236} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:237
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const22 361 	%line{237} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:60
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const23 248 	%line{60} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp134 $const24 $const25 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_tangent_rotate_degree_out $tmp134 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:61
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const26 311 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{61} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:47
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:48
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:49
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:50
# 
	sub		___674_oc $const9 ___674_c 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:52
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp135 ___674_nAxis $const1 	%line{52} %argrw{"wrr"}
	mul		$tmp136 ___674_oc $tmp135 	%argrw{"wrr"}
	compref		$tmp137 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp138 $tmp136 $tmp137 	%argrw{"wrr"}
	add		$tmp139 $tmp138 ___674_c 	%argrw{"wrr"}
	compref		$tmp140 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp141 ___674_oc $tmp140 	%argrw{"wrr"}
	compref		$tmp142 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp143 $tmp141 $tmp142 	%argrw{"wrr"}
	compref		$tmp144 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp145 $tmp144 ___674_s 	%argrw{"wrr"}
	sub		$tmp146 $tmp143 $tmp145 	%argrw{"wrr"}
	compref		$tmp147 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp148 ___674_oc $tmp147 	%argrw{"wrr"}
	compref		$tmp149 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp150 $tmp148 $tmp149 	%argrw{"wrr"}
	compref		$tmp151 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp152 $tmp151 ___674_s 	%argrw{"wrr"}
	add		$tmp153 $tmp150 $tmp152 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:53
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp154 ___674_nAxis $const1 	%line{53} %argrw{"wrr"}
	mul		$tmp155 ___674_oc $tmp154 	%argrw{"wrr"}
	compref		$tmp156 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp157 $tmp155 $tmp156 	%argrw{"wrr"}
	compref		$tmp158 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp159 $tmp158 ___674_s 	%argrw{"wrr"}
	add		$tmp160 $tmp157 $tmp159 	%argrw{"wrr"}
	compref		$tmp161 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp162 ___674_oc $tmp161 	%argrw{"wrr"}
	compref		$tmp163 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp164 $tmp162 $tmp163 	%argrw{"wrr"}
	add		$tmp165 $tmp164 ___674_c 	%argrw{"wrr"}
	compref		$tmp166 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp167 ___674_oc $tmp166 	%argrw{"wrr"}
	compref		$tmp168 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp169 $tmp167 $tmp168 	%argrw{"wrr"}
	compref		$tmp170 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp171 $tmp170 ___674_s 	%argrw{"wrr"}
	sub		$tmp172 $tmp169 $tmp171 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:54
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp173 ___674_nAxis $const4 	%line{54} %argrw{"wrr"}
	mul		$tmp174 ___674_oc $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp178 $tmp177 ___674_s 	%argrw{"wrr"}
	sub		$tmp179 $tmp176 $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___674_nAxis $const10 	%argrw{"wrr"}
	mul		$tmp181 ___674_oc $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp183 $tmp181 $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp185 $tmp184 ___674_s 	%argrw{"wrr"}
	add		$tmp186 $tmp183 $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp188 ___674_oc $tmp187 	%argrw{"wrr"}
	compref		$tmp189 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp190 $tmp188 $tmp189 	%argrw{"wrr"}
	add		$tmp191 $tmp190 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:52
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp139 $tmp146 $tmp153 $const5 $tmp160 $tmp165 $tmp172 $const5 $tmp179 $tmp186 $tmp191 $const5 $const5 $const5 $const5 $const9 	%line{52} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:62
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp192.x geomprop_Tworld_out1 $const1 	%line{62} %argrw{"wrr"}
	compref		$tmp192.y geomprop_Tworld_out1 $const10 	%argrw{"wrr"}
	compref		$tmp192.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp192.w $const9 	%argrw{"wr"}
	functioncall	$const2 360 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp193 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp194 $tmp193 $tmp192.x 	%argrw{"wrr"}
	mxcompref	$tmp195 ___675_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp196 $tmp195 $tmp192.y 	%argrw{"wrr"}
	add		$tmp197 $tmp194 $tmp196 	%argrw{"wrr"}
	mxcompref	$tmp198 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp199 $tmp198 $tmp192.z 	%argrw{"wrr"}
	add		$tmp200 $tmp197 $tmp199 	%argrw{"wrr"}
	mxcompref	$tmp201 ___675_m $const27 $const1 	%argrw{"wrrr"}
	mul		$tmp202 $tmp201 $tmp192.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp200 $tmp202 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp203 ___675_m $const1 $const10 	%line{416} %argrw{"wrrr"}
	mul		$tmp204 $tmp203 $tmp192.x 	%argrw{"wrr"}
	mxcompref	$tmp205 ___675_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp206 $tmp205 $tmp192.y 	%argrw{"wrr"}
	add		$tmp207 $tmp204 $tmp206 	%argrw{"wrr"}
	mxcompref	$tmp208 ___675_m $const4 $const10 	%argrw{"wrrr"}
	mul		$tmp209 $tmp208 $tmp192.z 	%argrw{"wrr"}
	add		$tmp210 $tmp207 $tmp209 	%argrw{"wrr"}
	mxcompref	$tmp211 ___675_m $const27 $const10 	%argrw{"wrrr"}
	mul		$tmp212 $tmp211 $tmp192.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp210 $tmp212 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp213 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp214 $tmp213 $tmp192.x 	%argrw{"wrr"}
	mxcompref	$tmp215 ___675_m $const10 $const4 	%argrw{"wrrr"}
	mul		$tmp216 $tmp215 $tmp192.y 	%argrw{"wrr"}
	add		$tmp217 $tmp214 $tmp216 	%argrw{"wrr"}
	mxcompref	$tmp218 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp219 $tmp218 $tmp192.z 	%argrw{"wrr"}
	add		$tmp220 $tmp217 $tmp219 	%argrw{"wrr"}
	mxcompref	$tmp221 ___675_m $const27 $const4 	%argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp192.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp220 $tmp222 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp223 ___675_m $const1 $const27 	%line{418} %argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp192.x 	%argrw{"wrr"}
	mxcompref	$tmp225 ___675_m $const10 $const27 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp192.y 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	mxcompref	$tmp228 ___675_m $const4 $const27 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp192.z 	%argrw{"wrr"}
	add		$tmp230 $tmp227 $tmp229 	%argrw{"wrr"}
	mxcompref	$tmp231 ___675_m $const27 $const27 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp192.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp230 $tmp232 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:63
# }
	vector		___694_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{63} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:238
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___694_transmission_roughness_clamped_low_tmp $const5 	%line{238} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:239
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___694_transmission_roughness_clamped_high_tmp $const9 	%line{239} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:240
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const14 366 	%line{240} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp233 ___694_transmission_roughness_add_out ___694_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_transmission_roughness_clamped_out $tmp233 ___694_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:241
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___694_coat_gamma_multiply_out ___694_coat_clamped_out SR_marble1_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{241} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:242
#     int opacity_luminance_float_index_tmp = 0;
	div		___694_coat_ior_to_F0_sqrt_out ___694_one_minus_coat_ior_out ___694_one_plus_coat_ior_out 	%line{242} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:243
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___694_opacity_luminance_float_index_tmp $const1 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:244
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const30 371 	%line{244} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___694_opacity_luminance_float_out ___694_opacity_luminance_out ___694_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:245
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___694_coat_tangent_rotate_normalize_out ___694_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{245} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:246
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_roughness_fg_tmp $const9 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:247
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___694_coat_affected_roughness_out SR_marble1_specular_roughness ___694_coat_affected_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{247} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:248
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___694_tangent_rotate_normalize_out ___694_tangent_rotate_out 	%line{248} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:249
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_transmission_roughness_fg_tmp $const9 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:250
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___694_coat_affected_transmission_roughness_out ___694_transmission_roughness_clamped_out ___694_coat_affected_transmission_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{250} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:251
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___694_coat_gamma_in2_tmp $const9 	%line{251} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:252
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___694_coat_gamma_out ___694_coat_gamma_multiply_out ___694_coat_gamma_in2_tmp 	%line{252} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:253
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___694_coat_ior_to_F0_out ___694_coat_ior_to_F0_sqrt_out ___694_coat_ior_to_F0_sqrt_out 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:254
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___694_coat_tangent_value2_tmp $const5 	%line{254} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:255
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp234 SR_marble1_coat_anisotropy ___694_coat_tangent_value2_tmp 	%line{255} %argrw{"wrr"}
	functioncall	$const31 388 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp234 386 388 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_coat_tangent_out ___694_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:256
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___694_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{256} %argrw{"wr"}
	assign		___694_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:257
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const12 409 	%line{257} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:26
#     if (anisotropy > 0.0)
	mul		$tmp235 ___694_coat_affected_roughness_out ___694_coat_affected_roughness_out 	%line{26} %argrw{"wrr"}
	functioncall	$const14 395 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp236 $tmp235 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp236 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:27
#     {
	gt		$tmp237 SR_marble1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{27} %argrw{"wrr"}
	if		$tmp237 407 409 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const14 400 	%line{29} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp239 SR_marble1_specular_anisotropy $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp238 $tmp239 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp240 $const9 $tmp238 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{29} %argrw{"wrr"}
	sqrt		___671_aspect $tmp240 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:30
#         result.y = roughness_sqr * aspect;
	div		$tmp241 ___670_roughness_sqr ___671_aspect 	%line{30} %argrw{"wrr"}
	min		___694_main_roughness_out.x $tmp241 $const9 	%argrw{"wrr"}
	assign		___694_main_roughness_out.x ___694_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:31
#     }
	mul		___694_main_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{31} %argrw{"wrr"}
	assign		___694_main_roughness_out.y ___694_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:35
#         result.y = roughness_sqr;
	assign		___694_main_roughness_out.x ___670_roughness_sqr 	%line{35} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:36
#     }
	assign		___694_main_roughness_out.y ___670_roughness_sqr 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:258
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___694_main_tangent_value2_tmp $const5 	%line{258} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:259
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp242 SR_marble1_specular_anisotropy ___694_main_tangent_value2_tmp 	%line{259} %argrw{"wrr"}
	functioncall	$const31 417 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp242 415 417 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_main_tangent_out ___694_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:260
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___694_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{260} %argrw{"wr"}
	assign		___694_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:261
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const12 438 	%line{261} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:26
#     if (anisotropy > 0.0)
	mul		$tmp243 ___694_coat_affected_transmission_roughness_out ___694_coat_affected_transmission_roughness_out 	%line{26} %argrw{"wrr"}
	functioncall	$const14 424 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp244 $tmp243 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp244 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:27
#     {
	gt		$tmp245 SR_marble1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{27} %argrw{"wrr"}
	if		$tmp245 436 438 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const14 429 	%line{29} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp247 SR_marble1_specular_anisotropy $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp246 $tmp247 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:29
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp248 $const9 $tmp246 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{29} %argrw{"wrr"}
	sqrt		___671_aspect $tmp248 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:30
#         result.y = roughness_sqr * aspect;
	div		$tmp249 ___670_roughness_sqr ___671_aspect 	%line{30} %argrw{"wrr"}
	min		___694_transmission_roughness_out.x $tmp249 $const9 	%argrw{"wrr"}
	assign		___694_transmission_roughness_out.x ___694_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:31
#     }
	mul		___694_transmission_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{31} %argrw{"wrr"}
	assign		___694_transmission_roughness_out.y ___694_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:35
#         result.y = roughness_sqr;
	assign		___694_transmission_roughness_out.x ___670_roughness_sqr 	%line{35} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:36
#     }
	assign		___694_transmission_roughness_out.y ___670_roughness_sqr 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:262
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___694_coat_affected_subsurface_color_out ___694_subsurface_color_nonnegative_out ___694_coat_gamma_out 	%line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:263
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___694_coat_affected_diffuse_color_out ___694_base_color_nonnegative_out ___694_coat_gamma_out 	%line{263} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:264
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___694_one_minus_coat_ior_to_F0_in1_tmp $const9 	%line{264} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:265
#     color emission_color0_out = color(0.0);
	sub		___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_in1_tmp ___694_coat_ior_to_F0_out 	%line{265} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:266
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___694_emission_color0_out $const18 	%line{266} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:267
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const32 446 	%line{267} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:102
#     out = combine_out;
	color		___679_combine_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out 	%line{102} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:103
# }
	assign		___694_emission_color0_out ___679_combine_out 	%line{103} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:268
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___694_coat_bsdf_out ___694_null_closure 	%line{268} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:269
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const36 458 	%line{269} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:86
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp251 $const35 $const37 	%line{86} %argrw{"wrr"}
	if		$tmp251 451 452 	%argrw{"r"}
	assign		___677_reflection_tint $const18 	%argrw{"wr"}
	assign		___677_reflection_tint $const17 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:87
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp252 $const35 $const35 	%line{87} %argrw{"wrr"}
	if		$tmp252 455 456 	%argrw{"r"}
	assign		___677_transmission_tint $const18 	%argrw{"wr"}
	assign		___677_transmission_tint $const17 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:88
# }
	closure		$tmp253 $const40 geomprop_Nworld_out1 ___694_coat_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.y SR_marble1_coat_IOR $const34 $const38 $const5 $const39 $const33 	%line{88} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_coat_bsdf_out $tmp253 SR_marble1_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:270
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___694_metal_bsdf_weight_tmp $const9 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:271
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___694_metal_bsdf_distribution_tmp $const34 	%line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:272
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp254 $const41 geomprop_Nworld_out1 ___694_main_tangent_out ___694_main_roughness_out.x ___694_main_roughness_out.y ___694_artistic_ior_ior ___694_artistic_ior_extinction ___694_metal_bsdf_distribution_tmp $const38 SR_marble1_thin_film_thickness $const39 SR_marble1_thin_film_IOR 	%line{272} %argrw{"wrrrrrrrrrrrr"}
	mul		___694_metal_bsdf_out $tmp254 ___694_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:273
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___694_specular_bsdf_out ___694_null_closure 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:274
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const36 474 	%line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:86
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp255 $const35 $const37 	%line{86} %argrw{"wrr"}
	if		$tmp255 467 468 	%argrw{"r"}
	assign		___677_reflection_tint $const18 	%argrw{"wr"}
	assign		___677_reflection_tint SR_marble1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:87
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp256 $const35 $const35 	%line{87} %argrw{"wrr"}
	if		$tmp256 471 472 	%argrw{"r"}
	assign		___677_transmission_tint $const18 	%argrw{"wr"}
	assign		___677_transmission_tint SR_marble1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:88
# }
	closure		$tmp257 $const40 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_main_roughness_out.x ___694_main_roughness_out.y SR_marble1_specular_IOR $const34 $const38 SR_marble1_thin_film_thickness $const39 SR_marble1_thin_film_IOR 	%line{88} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_specular_bsdf_out $tmp257 SR_marble1_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:275
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___694_transmission_bsdf_out ___694_null_closure 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:276
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const36 486 	%line{276} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:86
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp258 $const37 $const37 	%line{86} %argrw{"wrr"}
	if		$tmp258 479 480 	%argrw{"r"}
	assign		___677_reflection_tint $const18 	%argrw{"wr"}
	assign		___677_reflection_tint SR_marble1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:87
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp259 $const37 $const35 	%line{87} %argrw{"wrr"}
	if		$tmp259 483 484 	%argrw{"r"}
	assign		___677_transmission_tint $const18 	%argrw{"wr"}
	assign		___677_transmission_tint SR_marble1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:88
# }
	closure		$tmp260 $const40 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_transmission_roughness_out.x ___694_transmission_roughness_out.y SR_marble1_specular_IOR $const34 $const38 $const5 $const39 $const33 	%line{88} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_transmission_bsdf_out $tmp260 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:277
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp261 $const42 geomprop_Nworld_out1 SR_marble1_sheen_color SR_marble1_sheen_roughness 	%line{277} %argrw{"wrrrr"}
	mul		___694_sheen_bsdf_out $tmp261 SR_marble1_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:278
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___694_translucent_bsdf_weight_tmp $const9 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:279
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp262 $const43 geomprop_Nworld_out1 ___694_coat_affected_subsurface_color_out 	%line{279} %argrw{"wrrr"}
	mul		___694_translucent_bsdf_out $tmp262 ___694_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:280
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___694_subsurface_bsdf_out ___694_null_closure 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:281
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const44 495 	%line{281} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:96
# #endif
	mul		$tmp263 $const9 ___694_coat_affected_subsurface_color_out 	%line{96} %argrw{"wrr"}
	closure		___694_subsurface_bsdf_out $const45 geomprop_Nworld_out1 $tmp263 $const9 ___694_subsurface_radius_scaled_out SR_marble1_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:282
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const46 500 	%line{282} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp264 $const9 ___694_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp265 ___694_subsurface_bsdf_out $tmp264 	%argrw{"wrr"}
	mul		$tmp266 ___694_translucent_bsdf_out ___694_subsurface_selector_out 	%argrw{"wrr"}
	add		___694_selected_subsurface_bsdf_out $tmp265 $tmp266 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:283
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp267 $const47 geomprop_Nworld_out1 ___694_coat_affected_diffuse_color_out SR_marble1_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{283} %argrw{"wrrrr"}
	mul		___694_diffuse_bsdf_out $tmp267 SR_marble1_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:284
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const46 507 	%line{284} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp268 $const9 SR_marble1_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp269 ___694_diffuse_bsdf_out $tmp268 	%argrw{"wrr"}
	mul		$tmp270 ___694_selected_subsurface_bsdf_out SR_marble1_subsurface 	%argrw{"wrr"}
	add		___694_subsurface_mix_out $tmp269 $tmp270 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:285
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___694_sheen_layer_out $const48 ___694_sheen_bsdf_out ___694_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{285} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:286
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const46 513 	%line{286} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp271 $const9 SR_marble1_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp272 ___694_sheen_layer_out $tmp271 	%argrw{"wrr"}
	mul		$tmp273 ___694_transmission_bsdf_out SR_marble1_transmission 	%argrw{"wrr"}
	add		___694_transmission_mix_out $tmp272 $tmp273 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:287
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___694_specular_layer_out $const48 ___694_specular_bsdf_out ___694_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{287} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:288
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const46 519 	%line{288} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp274 $const9 SR_marble1_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp275 ___694_specular_layer_out $tmp274 	%argrw{"wrr"}
	mul		$tmp276 ___694_metal_bsdf_out SR_marble1_metalness 	%argrw{"wrr"}
	add		___694_metalness_mix_out $tmp275 $tmp276 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:289
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___694_thin_film_layer_attenuated_out ___694_metalness_mix_out ___694_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:290
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___694_coat_layer_out $const48 ___694_coat_bsdf_out ___694_thin_film_layer_attenuated_out 	%line{290} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:291
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___694_emission_edf_out $const49 ___694_emission_weight_out 	%line{291} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:292
#     EDF coat_emission_edf_out = null_closure;
	mul		___694_coat_tinted_emission_edf_out ___694_emission_edf_out SR_marble1_coat_color 	%line{292} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:293
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___694_coat_emission_edf_out ___694_null_closure 	%line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:294
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const51 536 	%line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:187
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp279 I 	%line{187} %argrw{"wr"}
	dot		$tmp278 N $tmp279 	%argrw{"wrr"}
	fabs		___692_NdotV $tmp278 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:188
#     result = base * f;
	functioncall	$const52 535 	%line{188} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:181
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp280 $const9 ___692_NdotV 	%line{181} %argrw{"wrr"}
	functioncall	$const14 533 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp281 $tmp280 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___691_x $tmp281 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:182
# }
	pow		$tmp282 ___691_x $const50 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{182} %argrw{"wrr"}
	mix		___692_f ___694_emission_color0_out $const18 $tmp282 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:189
# }
	mul		___694_coat_emission_edf_out ___694_coat_tinted_emission_edf_out ___692_f 	%line{189} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:295
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const46 541 	%line{295} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp283 $const9 SR_marble1_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp284 ___694_emission_edf_out $tmp283 	%argrw{"wrr"}
	mul		$tmp285 ___694_coat_emission_edf_out SR_marble1_coat 	%argrw{"wrr"}
	add		___694_blended_coat_emission_edf_out $tmp284 $tmp285 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:296
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___694_shader_constructor_out.bsdf ___694_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{296} %argrw{"wr"}
	assign		___694_shader_constructor_out.edf ___694_null_closure 	%argrw{"wr"}
	assign		___694_shader_constructor_out.opacity $const9 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:297
#     out = shader_constructor_out;
	functioncall	$const53 551 	%line{297} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:194
#     result.edf     = edf;
	assign		___694_shader_constructor_out.bsdf ___694_coat_layer_out 	%line{194} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:195
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___694_shader_constructor_out.edf ___694_blended_coat_emission_edf_out 	%line{195} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:196
# }
	functioncall	$const14 550 	%line{196} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp286 ___694_opacity_luminance_float_out $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_shader_constructor_out.opacity $tmp286 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:196
# }
	assign		___694_shader_constructor_out.opacity ___694_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{196} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:298
# }
	assign		SR_marble1_out.bsdf ___694_shader_constructor_out.bsdf 	%line{298} %argrw{"wr"}
	assign		SR_marble1_out.edf ___694_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_marble1_out.opacity ___694_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:737
#     out = Marble_3D_out;
	functioncall	$const54 564 	%line{737} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:303
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const14 558 	%line{303} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp287 SR_marble1_out.opacity $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_opacity_weight $tmp287 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:304
# }
	add		$tmp288 SR_marble1_out.bsdf SR_marble1_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl"} %line{304} %argrw{"wrr"}
	mul		$tmp289 $tmp288 ___695_opacity_weight 	%argrw{"wrr"}
	closure		$tmp290 $const55 	%argrw{"wr"}
	sub		$tmp291 $const9 ___695_opacity_weight 	%argrw{"wrr"}
	mul		$tmp292 $tmp290 $tmp291 	%argrw{"wrr"}
	add		Marble_3D_out $tmp289 $tmp292 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_marble_solid\\Marble_3D.osl:738
# }
	assign		out Marble_3D_out 	%line{738} %argrw{"wr"}
	end
