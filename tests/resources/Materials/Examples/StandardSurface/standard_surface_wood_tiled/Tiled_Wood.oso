OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\Examples\StandardSurface\standard_surface_wood_tiled\Tiled_Wood.oso
shader Tiled_Wood	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"Tiled_Wood"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{6,6} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_color_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/wood_color.jpg"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	image_color_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	color	image_color_default	0 0 0		%read{62,64} %write{2147483647,-1}
param	struct vector2	image_color_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_color_uvtiling.x	4		%read{17,17} %write{2147483647,-1} %mystruct{image_color_uvtiling} %mystructfield{0} %derivs
param	float	image_color_uvtiling.y	4		%read{18,18} %write{2147483647,-1} %mystruct{image_color_uvtiling} %mystructfield{1} %derivs
param	struct vector2	image_color_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_color_uvoffset.x	0		%read{20,20} %write{2147483647,-1} %mystruct{image_color_uvoffset} %mystructfield{0} %derivs
param	float	image_color_uvoffset.y	0		%read{21,21} %write{2147483647,-1} %mystruct{image_color_uvoffset} %mystructfield{1} %derivs
param	struct vector2	image_color_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_color_realworldimagesize.x	1		%read{23,23} %write{2147483647,-1} %mystruct{image_color_realworldimagesize} %mystructfield{0} %derivs
param	float	image_color_realworldimagesize.y	1		%read{24,24} %write{2147483647,-1} %mystruct{image_color_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	image_color_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_color_realworldtilesize.x	1		%read{26,26} %write{2147483647,-1} %mystruct{image_color_realworldtilesize} %mystructfield{0} %derivs
param	float	image_color_realworldtilesize.y	1		%read{27,27} %write{2147483647,-1} %mystruct{image_color_realworldtilesize} %mystructfield{1} %derivs
param	string	image_color_filtertype	"linear"		%read{68,68} %write{2147483647,-1}
param	string	image_color_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	image_color_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_color_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	string	image_roughness_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/wood_roughness.jpg"		%meta{string,widget,"filename"}  %read{3,3} %write{2147483647,-1}
param	string	image_roughness_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{4,4} %write{2147483647,-1}
param	float	image_roughness_default	0		%meta{string,widget,"number"}  %read{118,120} %write{2147483647,-1}
param	struct vector2	image_roughness_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_roughness_uvtiling.x	4		%read{73,73} %write{2147483647,-1} %mystruct{image_roughness_uvtiling} %mystructfield{0} %derivs
param	float	image_roughness_uvtiling.y	4		%read{74,74} %write{2147483647,-1} %mystruct{image_roughness_uvtiling} %mystructfield{1} %derivs
param	struct vector2	image_roughness_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_roughness_uvoffset.x	0		%read{76,76} %write{2147483647,-1} %mystruct{image_roughness_uvoffset} %mystructfield{0} %derivs
param	float	image_roughness_uvoffset.y	0		%read{77,77} %write{2147483647,-1} %mystruct{image_roughness_uvoffset} %mystructfield{1} %derivs
param	struct vector2	image_roughness_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_roughness_realworldimagesize.x	1		%read{79,79} %write{2147483647,-1} %mystruct{image_roughness_realworldimagesize} %mystructfield{0} %derivs
param	float	image_roughness_realworldimagesize.y	1		%read{80,80} %write{2147483647,-1} %mystruct{image_roughness_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	image_roughness_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	image_roughness_realworldtilesize.x	1		%read{82,82} %write{2147483647,-1} %mystruct{image_roughness_realworldtilesize} %mystructfield{0} %derivs
param	float	image_roughness_realworldtilesize.y	1		%read{83,83} %write{2147483647,-1} %mystruct{image_roughness_realworldtilesize} %mystructfield{1} %derivs
param	string	image_roughness_filtertype	"linear"		%read{124,124} %write{2147483647,-1}
param	string	image_roughness_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	image_roughness_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_roughness_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	SR_wood1_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{217,652} %write{2147483647,-1}
param	float	SR_wood1_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{651,651} %write{2147483647,-1}
param	float	SR_wood1_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{666,668} %write{2147483647,-1}
param	float	SR_wood1_specular	0.400000006		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{218,624} %write{2147483647,-1}
param	color	SR_wood1_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{218,622} %write{2147483647,-1}
param	float	SR_wood1_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{623,635} %write{2147483647,-1}
param	float	SR_wood1_specular_anisotropy	0.5		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{546,578} %write{2147483647,-1}
param	float	SR_wood1_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{221,221} %write{2147483647,-1}
param	float	SR_wood1_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{660,662} %write{2147483647,-1}
param	color	SR_wood1_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{630,634} %write{2147483647,-1}
param	float	SR_wood1_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_wood1_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_wood1_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_wood1_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_wood1_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{222,222} %write{2147483647,-1}
param	float	SR_wood1_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{654,656} %write{2147483647,-1}
param	color	SR_wood1_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{225,225} %write{2147483647,-1}
param	color	SR_wood1_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{231,231} %write{2147483647,-1}
param	float	SR_wood1_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{231,231} %write{2147483647,-1}
param	float	SR_wood1_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{645,645} %write{2147483647,-1}
param	float	SR_wood1_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{638,638} %write{2147483647,-1}
param	color	SR_wood1_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{637,637} %write{2147483647,-1}
param	float	SR_wood1_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{637,637} %write{2147483647,-1}
param	float	SR_wood1_coat	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{219,690} %write{2147483647,-1}
param	color	SR_wood1_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{238,673} %write{2147483647,-1}
param	float	SR_wood1_coat_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{197,393} %write{2147483647,-1}
param	float	SR_wood1_coat_anisotropy	0.5		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{201,532} %write{2147483647,-1}
param	float	SR_wood1_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{216,216} %write{2147483647,-1}
param	float	SR_wood1_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{240,607} %write{2147483647,-1}
param	float	SR_wood1_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{517,517} %write{2147483647,-1}
param	float	SR_wood1_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{219,219} %write{2147483647,-1}
param	float	SR_wood1_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{611,623} %write{2147483647,-1}
param	float	SR_wood1_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{611,623} %write{2147483647,-1}
param	float	SR_wood1_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{243,243} %write{2147483647,-1}
param	color	SR_wood1_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{243,243} %write{2147483647,-1}
param	color	SR_wood1_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{246,246} %write{2147483647,-1}
param	int	SR_wood1_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{232,232} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{715,715}
global	vector	I	%read{676,676} %write{2147483647,-1}
global	normal	N	%read{6,677} %write{2147483647,-1}
global	float	u	%read{12,12} %write{2147483647,-1} %derivs
global	float	v	%read{13,13} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{68,68} %write{64,64}
local	float	___670_st.x	%read{68,68} %write{66,66} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{68,68} %write{67,67} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_N_mult_color3_out.x	%read{20,20} %write{17,17} %mystruct{___672_N_mult_color3_out} %mystructfield{0} %derivs
local	float	___672_N_mult_color3_out.y	%read{21,21} %write{18,18} %mystruct{___672_N_mult_color3_out} %mystructfield{1} %derivs
local	float	___672_N_sub_color3_out.x	%read{23,23} %write{20,20} %mystruct{___672_N_sub_color3_out} %mystructfield{0} %derivs
local	float	___672_N_sub_color3_out.y	%read{24,24} %write{21,21} %mystruct{___672_N_sub_color3_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_color3_out.x	%read{26,26} %write{23,23} %mystruct{___672_N_divtilesize_color3_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_color3_out.y	%read{27,27} %write{24,24} %mystruct{___672_N_divtilesize_color3_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_color3_out.x	%read{36,66} %write{26,26} %mystruct{___672_N_multtilesize_color3_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_color3_out.y	%read{51,67} %write{27,27} %mystruct{___672_N_multtilesize_color3_out} %mystructfield{1} %derivs
local	color	___672_N_img_color3_out	%read{69,69} %write{28,68}
local	color	___673_missingColor	%read{124,124} %write{120,120}
local	float	___673_st.x	%read{124,124} %write{122,122} %mystruct{___673_st} %mystructfield{0} %derivs
local	float	___673_st.y	%read{124,124} %write{123,123} %mystruct{___673_st} %mystructfield{1} %derivs
local	color	___673_rgb	%read{125,125} %write{124,124}
local	float	___675_N_mult_float_out.x	%read{76,76} %write{73,73} %mystruct{___675_N_mult_float_out} %mystructfield{0} %derivs
local	float	___675_N_mult_float_out.y	%read{77,77} %write{74,74} %mystruct{___675_N_mult_float_out} %mystructfield{1} %derivs
local	float	___675_N_sub_float_out.x	%read{79,79} %write{76,76} %mystruct{___675_N_sub_float_out} %mystructfield{0} %derivs
local	float	___675_N_sub_float_out.y	%read{80,80} %write{77,77} %mystruct{___675_N_sub_float_out} %mystructfield{1} %derivs
local	float	___675_N_divtilesize_float_out.x	%read{82,82} %write{79,79} %mystruct{___675_N_divtilesize_float_out} %mystructfield{0} %derivs
local	float	___675_N_divtilesize_float_out.y	%read{83,83} %write{80,80} %mystruct{___675_N_divtilesize_float_out} %mystructfield{1} %derivs
local	float	___675_N_multtilesize_float_out.x	%read{92,122} %write{82,82} %mystruct{___675_N_multtilesize_float_out} %mystructfield{0} %derivs
local	float	___675_N_multtilesize_float_out.y	%read{107,123} %write{83,83} %mystruct{___675_N_multtilesize_float_out} %mystructfield{1} %derivs
local	float	___675_N_img_float_out	%read{126,126} %write{84,125}
local	int	___676_N_extract_0_index_tmp	%read{139,139} %write{137,137}
local	float	___676_N_extract_0_out	%read{146,146} %write{139,139}
local	int	___676_N_extract_1_index_tmp	%read{142,142} %write{140,140}
local	float	___676_N_extract_1_out	%read{147,147} %write{142,142}
local	int	___676_N_extract_2_index_tmp	%read{145,145} %write{143,143}
local	float	___676_N_extract_2_out	%read{148,148} %write{145,145}
local	float	___677_bias_in2_tmp	%read{130,130} %write{129,129}
local	color	___677_bias_out	%read{151,151} %write{130,130}
local	float	___677_linSeg_in2_tmp	%read{132,132} %write{131,131}
local	color	___677_linSeg_out	%read{187,187} %write{132,132}
local	float	___677_colorSeparate_outr	%read{155,155} %write{133,146}
local	float	___677_colorSeparate_outg	%read{165,165} %write{134,147}
local	float	___677_colorSeparate_outb	%read{175,175} %write{135,148}
local	float	___677_max_in2_tmp	%read{150,150} %write{149,149}
local	color	___677_max_out	%read{183,183} %write{151,151}
local	float	___677_isAboveR_value2_tmp	%read{155,155} %write{152,152}
local	float	___677_isAboveR_in1_tmp	%read{158,158} %write{153,153}
local	float	___677_isAboveR_in2_tmp	%read{160,160} %write{154,154}
local	float	___677_isAboveR_out	%read{184,184} %write{158,160}
local	float	___677_isAboveG_value2_tmp	%read{165,165} %write{162,162}
local	float	___677_isAboveG_in1_tmp	%read{168,168} %write{163,163}
local	float	___677_isAboveG_in2_tmp	%read{170,170} %write{164,164}
local	float	___677_isAboveG_out	%read{184,184} %write{168,170}
local	float	___677_isAboveB_value2_tmp	%read{175,175} %write{172,172}
local	float	___677_isAboveB_in1_tmp	%read{178,178} %write{173,173}
local	float	___677_isAboveB_in2_tmp	%read{180,180} %write{174,174}
local	float	___677_isAboveB_out	%read{184,184} %write{178,180}
local	float	___677_scale_in2_tmp	%read{183,183} %write{182,182}
local	color	___677_scale_out	%read{186,186} %write{183,183}
local	color	___677_isAbove_out	%read{187,187} %write{184,184}
local	float	___677_powSeg_in2_tmp	%read{186,186} %write{185,185}
local	color	___677_powSeg_out	%read{187,187} %write{186,186}
local	color	___677_mix_out	%read{188,188} %write{187,187}
local	float	___678_roughness_sqr	%read{208,588} %write{200,574}
local	float	___679_aspect	%read{208,585} %write{207,581}
local	vector	___682_nAxis	%read{258,458} %write{254,400}
local	float	___682_s	%read{268,454} %write{255,401}
local	float	___682_c	%read{257,460} %write{256,402}
local	float	___682_oc	%read{259,457} %write{257,403}
local	float	___683_rotationRadians	%read{255,402} %write{252,398}
local	matrix	___683_m	%read{321,508} %write{315,461}
local	float	___683_trans.x	%read{365,511} %write{331,477} %mystruct{___683_trans} %mystructfield{0}
local	float	___683_trans.y	%read{365,511} %write{342,488} %mystruct{___683_trans} %mystructfield{1}
local	float	___683_trans.z	%read{365,511} %write{353,499} %mystruct{___683_trans} %mystructfield{2}
local	float	___683_trans.w	%read{2147483647,-1} %write{364,510} %mystruct{___683_trans} %mystructfield{3}
local	color	___684_r	%read{374,388} %write{373,373}
local	color	___684_r_sqrt	%read{378,379} %write{374,374}
local	color	___684_n_min	%read{381,381} %write{377,377}
local	color	___684_n_max	%read{381,381} %write{380,380}
local	color	___684_np1	%read{384,384} %write{382,382}
local	color	___684_nm1	%read{386,386} %write{383,383}
local	color	___684_k2	%read{391,392} %write{389,391}
local	color	___685_reflection_tint	%read{607,635} %write{601,630}
local	color	___685_transmission_tint	%read{607,635} %write{605,634}
local	color	___687_combine_out	%read{596,596} %write{595,595}
local	float	___699_x	%read{684,684} %write{683,683}
local	float	___700_NdotV	%read{680,680} %write{678,678}
local	color	___700_f	%read{686,686} %write{685,685}
local	closure color	___702_null_closure	%read{597,693} %write{193,193}
local	float	___702_coat_roughness_vector_out.x	%read{210,607} %write{194,213} %mystruct{___702_coat_roughness_vector_out} %mystructfield{0}
local	float	___702_coat_roughness_vector_out.y	%read{212,607} %write{195,214} %mystruct{___702_coat_roughness_vector_out} %mystructfield{1}
local	float	___702_coat_tangent_rotate_degree_in2_tmp	%read{216,216} %write{215,215}
local	float	___702_coat_tangent_rotate_degree_out	%read{252,252} %write{216,216}
local	color	___702_metal_reflectivity_out	%read{372,372} %write{217,217}
local	color	___702_metal_edgecolor_out	%read{381,381} %write{218,218}
local	float	___702_coat_affect_roughness_multiply1_out	%read{393,393} %write{219,219}
local	float	___702_tangent_rotate_degree_in2_tmp	%read{221,221} %write{220,220}
local	float	___702_tangent_rotate_degree_out	%read{398,398} %write{221,221}
local	float	___702_transmission_roughness_add_out	%read{515,515} %write{222,222}
local	float	___702_subsurface_color_nonnegative_in2_tmp	%read{224,224} %write{223,223}
local	color	___702_subsurface_color_nonnegative_out	%read{589,589} %write{225,225}
local	float	___702_coat_clamped_low_tmp	%read{230,230} %write{226,226}
local	float	___702_coat_clamped_high_tmp	%read{229,229} %write{227,227}
local	float	___702_coat_clamped_out	%read{517,517} %write{230,230}
local	color	___702_subsurface_radius_scaled_out	%read{645,645} %write{231,231}
local	float	___702_subsurface_selector_out	%read{647,649} %write{233,233}
local	float	___702_base_color_nonnegative_in2_tmp	%read{235,235} %write{234,234}
local	color	___702_base_color_nonnegative_out	%read{590,590} %write{236,236}
local	color	___702_coat_attenuation_bg_tmp	%read{238,238} %write{237,237}
local	color	___702_coat_attenuation_out	%read{670,670} %write{238,238}
local	float	___702_one_minus_coat_ior_in1_tmp	%read{240,240} %write{239,239}
local	float	___702_one_minus_coat_ior_out	%read{518,518} %write{240,240}
local	float	___702_one_plus_coat_ior_in1_tmp	%read{242,242} %write{241,241}
local	float	___702_one_plus_coat_ior_out	%read{518,518} %write{242,242}
local	color	___702_emission_weight_out	%read{672,672} %write{243,243}
local	color	___702_opacity_luminance_out	%read{521,521} %write{244,247}
local	vector	___702_coat_tangent_rotate_out	%read{522,522} %write{248,365}
local	color	___702_artistic_ior_ior	%read{382,611} %write{366,381}
local	color	___702_artistic_ior_extinction	%read{611,611} %write{367,392}
local	float	___702_coat_affect_roughness_multiply2_out	%read{524,527} %write{393,393}
local	vector	___702_tangent_rotate_out	%read{525,525} %write{394,511}
local	float	___702_transmission_roughness_clamped_low_tmp	%read{516,516} %write{512,512}
local	float	___702_transmission_roughness_clamped_high_tmp	%read{515,515} %write{513,513}
local	float	___702_transmission_roughness_clamped_out	%read{527,527} %write{516,516}
local	float	___702_coat_gamma_multiply_out	%read{529,529} %write{517,517}
local	float	___702_coat_ior_to_F0_sqrt_out	%read{530,530} %write{518,518}
local	int	___702_opacity_luminance_float_index_tmp	%read{521,521} %write{519,519}
local	float	___702_opacity_luminance_float_out	%read{699,699} %write{521,521}
local	vector	___702_coat_tangent_rotate_normalize_out	%read{535,535} %write{522,522}
local	float	___702_coat_affected_roughness_fg_tmp	%read{524,524} %write{523,523}
local	float	___702_coat_affected_roughness_out	%read{542,542} %write{524,524}
local	vector	___702_tangent_rotate_normalize_out	%read{564,564} %write{525,525}
local	float	___702_coat_affected_transmission_roughness_fg_tmp	%read{527,527} %write{526,526}
local	float	___702_coat_affected_transmission_roughness_out	%read{571,571} %write{527,527}
local	float	___702_coat_gamma_in2_tmp	%read{529,529} %write{528,528}
local	float	___702_coat_gamma_out	%read{589,590} %write{529,529}
local	float	___702_coat_ior_to_F0_out	%read{592,592} %write{530,530}
local	float	___702_coat_tangent_value2_tmp	%read{532,532} %write{531,531}
local	vector	___702_coat_tangent_out	%read{607,607} %write{535,537}
local	float	___702_main_roughness_out.x	%read{555,623} %write{539,558} %mystruct{___702_main_roughness_out} %mystructfield{0}
local	float	___702_main_roughness_out.y	%read{557,623} %write{540,559} %mystruct{___702_main_roughness_out} %mystructfield{1}
local	float	___702_main_tangent_value2_tmp	%read{561,561} %write{560,560}
local	vector	___702_main_tangent_out	%read{611,635} %write{564,566}
local	float	___702_transmission_roughness_out.x	%read{584,635} %write{568,587} %mystruct{___702_transmission_roughness_out} %mystructfield{0}
local	float	___702_transmission_roughness_out.y	%read{586,635} %write{569,588} %mystruct{___702_transmission_roughness_out} %mystructfield{1}
local	color	___702_coat_affected_subsurface_color_out	%read{640,644} %write{589,589}
local	color	___702_coat_affected_diffuse_color_out	%read{651,651} %write{590,590}
local	float	___702_one_minus_coat_ior_to_F0_in1_tmp	%read{592,592} %write{591,591}
local	float	___702_one_minus_coat_ior_to_F0_out	%read{595,595} %write{592,592}
local	color	___702_emission_color0_out	%read{685,685} %write{593,596}
local	closure color	___702_coat_bsdf_out	%read{671,671} %write{597,608}
local	float	___702_metal_bsdf_weight_tmp	%read{612,612} %write{609,609}
local	string	___702_metal_bsdf_distribution_tmp	%read{611,611} %write{610,610}
local	closure color	___702_metal_bsdf_out	%read{668,668} %write{612,612}
local	closure color	___702_specular_bsdf_out	%read{664,664} %write{613,624}
local	closure color	___702_transmission_bsdf_out	%read{662,662} %write{625,636}
local	closure color	___702_sheen_bsdf_out	%read{658,658} %write{638,638}
local	float	___702_translucent_bsdf_weight_tmp	%read{641,641} %write{639,639}
local	closure color	___702_translucent_bsdf_out	%read{649,649} %write{641,641}
local	closure color	___702_subsurface_bsdf_out	%read{648,648} %write{642,645}
local	closure color	___702_selected_subsurface_bsdf_out	%read{656,656} %write{650,650}
local	closure color	___702_diffuse_bsdf_out	%read{655,655} %write{652,652}
local	closure color	___702_subsurface_mix_out	%read{658,658} %write{657,657}
local	closure color	___702_sheen_layer_out	%read{661,661} %write{658,658}
local	closure color	___702_transmission_mix_out	%read{664,664} %write{663,663}
local	closure color	___702_specular_layer_out	%read{667,667} %write{664,664}
local	closure color	___702_metalness_mix_out	%read{670,670} %write{669,669}
local	closure color	___702_thin_film_layer_attenuated_out	%read{671,671} %write{670,670}
local	closure color	___702_coat_layer_out	%read{696,696} %write{671,671}
local	closure color	___702_emission_edf_out	%read{673,689} %write{672,672}
local	closure color	___702_coat_tinted_emission_edf_out	%read{686,686} %write{673,673}
local	closure color	___702_coat_emission_edf_out	%read{690,690} %write{674,686}
local	closure color	___702_blended_coat_emission_edf_out	%read{697,697} %write{691,691}
local	closure color	___702_shader_constructor_out.bsdf	%read{702,702} %write{692,696} %mystruct{___702_shader_constructor_out} %mystructfield{0}
local	closure color	___702_shader_constructor_out.edf	%read{703,703} %write{693,697} %mystruct{___702_shader_constructor_out} %mystructfield{1}
local	float	___702_shader_constructor_out.opacity	%read{701,704} %write{694,701} %mystruct{___702_shader_constructor_out} %mystructfield{2}
local	float	___703_opacity_weight	%read{710,712} %write{708,708}
local	closure color	null_closure	%read{189,190} %write{0,0}
local	string	image_color_file_.filename	%read{30,68} %write{1,1} %mystruct{image_color_file_} %mystructfield{0}
local	string	image_color_file_.colorspace	%read{68,68} %write{2,2} %mystruct{image_color_file_} %mystructfield{1}
local	string	image_roughness_file_.filename	%read{86,124} %write{3,3} %mystruct{image_roughness_file_} %mystructfield{0}
local	string	image_roughness_file_.colorspace	%read{2147483647,-1} %write{4,4} %mystruct{image_roughness_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{254,651} %write{6,6}
local	vector	geomprop_Tworld_out1	%read{316,566} %write{11,11}
local	float	geomprop_UV0_out1.x	%read{17,73} %write{12,12} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{18,74} %write{13,13} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	image_color_out	%read{130,145} %write{14,69}
local	float	image_roughness_out	%read{222,524} %write{70,126}
local	color	image_color_out_cm_out	%read{217,236} %write{127,188}
local	closure color	SR_wood1_out.bsdf	%read{709,709} %write{189,702} %mystruct{SR_wood1_out} %mystructfield{0}
local	closure color	SR_wood1_out.edf	%read{709,709} %write{190,703} %mystruct{SR_wood1_out} %mystructfield{1}
local	float	SR_wood1_out.opacity	%read{707,707} %write{191,704} %mystruct{SR_wood1_out} %mystructfield{2}
local	closure color	Tiled_Wood_out	%read{715,715} %write{714,714}
const	int	$const1	0		%read{0,519} %write{2147483647,-1}
const	string	$const2	"transform"		%read{5,466} %write{2147483647,-1}
const	string	$const3	"common"		%read{6,6} %write{2147483647,-1}
temp	vector	$tmp1	%read{11,11} %write{10,10}
const	int	$const4	2		%read{7,505} %write{2147483647,-1}
temp	float	$tmp2	%read{10,10} %write{7,7}
const	float	$const5	0		%read{10,708} %write{2147483647,-1}
temp	float	$tmp3	%read{9,9} %write{8,8}
temp	float	$tmp4	%read{10,10} %write{9,9}
const	color	$const6	0 0 0		%read{14,685} %write{2147483647,-1}
const	string	$const7	"NG_tiledimage_color3"		%read{15,15} %write{2147483647,-1}
const	string	$const8	"__operator__mul__"		%read{16,81} %write{2147483647,-1}
const	string	$const9	"__operator__sub__"		%read{19,75} %write{2147483647,-1}
const	string	$const10	"__operator__div__"		%read{22,78} %write{2147483647,-1}
const	string	$const11	""		%read{30,124} %write{2147483647,-1}
const	string	$const12	"periodic"		%read{33,124} %write{2147483647,-1}
const	string	$const13	"mx_image_color3"		%read{29,29} %write{2147483647,-1}
temp	int	$tmp5	%read{31,31} %write{30,30}
temp	int	$tmp6	%read{32,46} %write{31,45}
const	string	$const14	"constant"		%read{33,104} %write{2147483647,-1}
temp	int	$tmp7	%read{34,34} %write{33,33}
temp	int	$tmp8	%read{35,44} %write{34,43}
temp	int	$tmp9	%read{37,37} %write{36,36}
temp	int	$tmp10	%read{38,42} %write{37,41}
const	float	$const15	1		%read{39,712} %write{2147483647,-1}
temp	int	$tmp11	%read{40,40} %write{39,39}
temp	int	$tmp12	%read{41,41} %write{40,40}
temp	int	$tmp13	%read{43,43} %write{42,42}
temp	int	$tmp14	%read{45,45} %write{44,44}
temp	int	$tmp15	%read{47,61} %write{46,60}
temp	int	$tmp16	%read{49,49} %write{48,48}
temp	int	$tmp17	%read{50,59} %write{49,58}
temp	int	$tmp18	%read{52,52} %write{51,51}
temp	int	$tmp19	%read{53,57} %write{52,56}
temp	int	$tmp20	%read{55,55} %write{54,54}
temp	int	$tmp21	%read{56,56} %write{55,55}
temp	int	$tmp22	%read{58,58} %write{57,57}
temp	int	$tmp23	%read{60,60} %write{59,59}
const	string	$const16	"mx_transform_uv"		%read{65,121} %write{2147483647,-1}
const	string	$const17	"subimage"		%read{68,124} %write{2147483647,-1}
const	string	$const18	"interp"		%read{68,124} %write{2147483647,-1}
const	string	$const19	"missingcolor"		%read{68,124} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{68,124} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{68,124} %write{2147483647,-1}
const	string	$const22	"colorspace"		%read{68,68} %write{2147483647,-1}
const	string	$const23	"NG_tiledimage_float"		%read{71,71} %write{2147483647,-1}
const	string	$const24	"mx_image_float"		%read{85,85} %write{2147483647,-1}
temp	int	$tmp24	%read{87,87} %write{86,86}
temp	int	$tmp25	%read{88,102} %write{87,101}
temp	int	$tmp26	%read{90,90} %write{89,89}
temp	int	$tmp27	%read{91,100} %write{90,99}
temp	int	$tmp28	%read{93,93} %write{92,92}
temp	int	$tmp29	%read{94,98} %write{93,97}
temp	int	$tmp30	%read{96,96} %write{95,95}
temp	int	$tmp31	%read{97,97} %write{96,96}
temp	int	$tmp32	%read{99,99} %write{98,98}
temp	int	$tmp33	%read{101,101} %write{100,100}
temp	int	$tmp34	%read{103,117} %write{102,116}
temp	int	$tmp35	%read{105,105} %write{104,104}
temp	int	$tmp36	%read{106,115} %write{105,114}
temp	int	$tmp37	%read{108,108} %write{107,107}
temp	int	$tmp38	%read{109,113} %write{108,112}
temp	int	$tmp39	%read{111,111} %write{110,110}
temp	int	$tmp40	%read{112,112} %write{111,111}
temp	int	$tmp41	%read{114,114} %write{113,113}
temp	int	$tmp42	%read{116,116} %write{115,115}
const	string	$const25	"NG_srgb_texture_to_lin_rec709_color3"		%read{128,128} %write{2147483647,-1}
const	float	$const26	0.055		%read{129,129} %write{2147483647,-1}
const	float	$const27	12.92		%read{131,131} %write{2147483647,-1}
const	string	$const28	"NG_separate3_color3"		%read{136,136} %write{2147483647,-1}
const	string	$const29	"mx_extract"		%read{138,520} %write{2147483647,-1}
const	int	$const30	1		%read{140,502} %write{2147483647,-1}
temp	color	$tmp43	%read{151,151} %write{150,150}
const	float	$const31	0.04045		%read{152,172} %write{2147483647,-1}
temp	int	$tmp44	%read{157,157} %write{155,155}
const	string	$const32	"mx_ternary"		%read{156,562} %write{2147483647,-1}
temp	int	$tmp45	%read{167,167} %write{165,165}
temp	int	$tmp46	%read{177,177} %write{175,175}
const	float	$const33	1.055		%read{182,182} %write{2147483647,-1}
const	float	$const34	2.4		%read{185,185} %write{2147483647,-1}
const	string	$const35	"NG_standard_surface_surfaceshader_100"		%read{192,192} %write{2147483647,-1}
const	string	$const36	"mx_roughness_anisotropy"		%read{196,570} %write{2147483647,-1}
temp	float	$tmp47	%read{199,199} %write{197,197}
const	float	$const37	1e-08		%read{200,574} %write{2147483647,-1}
const	string	$const38	"clamp"		%read{198,706} %write{2147483647,-1}
temp	float	$tmp48	%read{200,200} %write{199,199}
temp	int	$tmp49	%read{202,202} %write{201,201}
temp	float	$tmp50	%read{206,206} %write{205,205}
const	float	$const39	0.98		%read{204,578} %write{2147483647,-1}
temp	float	$tmp51	%read{205,205} %write{204,204}
temp	float	$tmp52	%read{207,207} %write{206,206}
temp	float	$tmp53	%read{209,209} %write{208,208}
const	float	$const40	360		%read{215,220} %write{2147483647,-1}
temp	color	$tmp54	%read{225,225} %write{224,224}
temp	float	$tmp55	%read{230,230} %write{229,229}
temp	float	$tmp56	%read{233,233} %write{232,232}
temp	color	$tmp57	%read{236,236} %write{235,235}
const	color	$const41	1 1 1		%read{237,606} %write{2147483647,-1}
const	color	$const42	0.272229 0.674082 0.053689		%read{246,246} %write{2147483647,-1}
const	string	$const43	"mx_luminance_color3"		%read{245,245} %write{2147483647,-1}
temp	float	$tmp59	%read{247,247} %write{246,246}
const	vector	$const44	0 0 0		%read{248,394} %write{2147483647,-1}
const	string	$const45	"mx_rotate_vector3"		%read{249,395} %write{2147483647,-1}
const	string	$const46	"radians"		%read{250,396} %write{2147483647,-1}
const	float	$const47	3.1415927		%read{251,397} %write{2147483647,-1}
const	float	$const48	180		%read{251,397} %write{2147483647,-1}
temp	float	$tmp60	%read{252,252} %write{251,251}
const	string	$const49	"rotationMatrix"		%read{253,399} %write{2147483647,-1}
temp	float	$tmp61	%read{259,259} %write{258,258}
temp	float	$tmp62	%read{261,261} %write{259,259}
temp	float	$tmp63	%read{261,261} %write{260,260}
temp	float	$tmp64	%read{262,262} %write{261,261}
temp	float	$tmp65	%read{315,315} %write{262,262}
temp	float	$tmp66	%read{264,264} %write{263,263}
temp	float	$tmp67	%read{266,266} %write{264,264}
temp	float	$tmp68	%read{266,266} %write{265,265}
temp	float	$tmp69	%read{269,269} %write{266,266}
temp	float	$tmp70	%read{268,268} %write{267,267}
temp	float	$tmp71	%read{269,269} %write{268,268}
temp	float	$tmp72	%read{315,315} %write{269,269}
temp	float	$tmp73	%read{271,271} %write{270,270}
temp	float	$tmp74	%read{273,273} %write{271,271}
temp	float	$tmp75	%read{273,273} %write{272,272}
temp	float	$tmp76	%read{276,276} %write{273,273}
temp	float	$tmp77	%read{275,275} %write{274,274}
temp	float	$tmp78	%read{276,276} %write{275,275}
temp	float	$tmp79	%read{315,315} %write{276,276}
temp	float	$tmp80	%read{278,278} %write{277,277}
temp	float	$tmp81	%read{280,280} %write{278,278}
temp	float	$tmp82	%read{280,280} %write{279,279}
temp	float	$tmp83	%read{283,283} %write{280,280}
temp	float	$tmp84	%read{282,282} %write{281,281}
temp	float	$tmp85	%read{283,283} %write{282,282}
temp	float	$tmp86	%read{315,315} %write{283,283}
temp	float	$tmp87	%read{285,285} %write{284,284}
temp	float	$tmp88	%read{287,287} %write{285,285}
temp	float	$tmp89	%read{287,287} %write{286,286}
temp	float	$tmp90	%read{288,288} %write{287,287}
temp	float	$tmp91	%read{315,315} %write{288,288}
temp	float	$tmp92	%read{290,290} %write{289,289}
temp	float	$tmp93	%read{292,292} %write{290,290}
temp	float	$tmp94	%read{292,292} %write{291,291}
temp	float	$tmp95	%read{295,295} %write{292,292}
temp	float	$tmp96	%read{294,294} %write{293,293}
temp	float	$tmp97	%read{295,295} %write{294,294}
temp	float	$tmp98	%read{315,315} %write{295,295}
temp	float	$tmp99	%read{297,297} %write{296,296}
temp	float	$tmp100	%read{299,299} %write{297,297}
temp	float	$tmp101	%read{299,299} %write{298,298}
temp	float	$tmp102	%read{302,302} %write{299,299}
temp	float	$tmp103	%read{301,301} %write{300,300}
temp	float	$tmp104	%read{302,302} %write{301,301}
temp	float	$tmp105	%read{315,315} %write{302,302}
temp	float	$tmp106	%read{304,304} %write{303,303}
temp	float	$tmp107	%read{306,306} %write{304,304}
temp	float	$tmp108	%read{306,306} %write{305,305}
temp	float	$tmp109	%read{309,309} %write{306,306}
temp	float	$tmp110	%read{308,308} %write{307,307}
temp	float	$tmp111	%read{309,309} %write{308,308}
temp	float	$tmp112	%read{315,315} %write{309,309}
temp	float	$tmp113	%read{311,311} %write{310,310}
temp	float	$tmp114	%read{313,313} %write{311,311}
temp	float	$tmp115	%read{313,313} %write{312,312}
temp	float	$tmp116	%read{314,314} %write{313,313}
temp	float	$tmp117	%read{315,315} %write{314,314}
temp	float	$tmp118.x	%read{322,355} %write{316,316}
temp	float	$tmp118.y	%read{324,357} %write{317,317}
temp	float	$tmp118.z	%read{327,360} %write{318,318}
temp	float	$tmp118.w	%read{330,363} %write{319,319}
temp	float	$tmp119	%read{322,322} %write{321,321}
temp	float	$tmp120	%read{325,325} %write{322,322}
temp	float	$tmp121	%read{324,324} %write{323,323}
temp	float	$tmp122	%read{325,325} %write{324,324}
temp	float	$tmp123	%read{328,328} %write{325,325}
temp	float	$tmp124	%read{327,327} %write{326,326}
temp	float	$tmp125	%read{328,328} %write{327,327}
temp	float	$tmp126	%read{331,331} %write{328,328}
const	int	$const50	3		%read{329,508} %write{2147483647,-1}
temp	float	$tmp127	%read{330,330} %write{329,329}
temp	float	$tmp128	%read{331,331} %write{330,330}
temp	float	$tmp129	%read{333,333} %write{332,332}
temp	float	$tmp130	%read{336,336} %write{333,333}
temp	float	$tmp131	%read{335,335} %write{334,334}
temp	float	$tmp132	%read{336,336} %write{335,335}
temp	float	$tmp133	%read{339,339} %write{336,336}
temp	float	$tmp134	%read{338,338} %write{337,337}
temp	float	$tmp135	%read{339,339} %write{338,338}
temp	float	$tmp136	%read{342,342} %write{339,339}
temp	float	$tmp137	%read{341,341} %write{340,340}
temp	float	$tmp138	%read{342,342} %write{341,341}
temp	float	$tmp139	%read{344,344} %write{343,343}
temp	float	$tmp140	%read{347,347} %write{344,344}
temp	float	$tmp141	%read{346,346} %write{345,345}
temp	float	$tmp142	%read{347,347} %write{346,346}
temp	float	$tmp143	%read{350,350} %write{347,347}
temp	float	$tmp144	%read{349,349} %write{348,348}
temp	float	$tmp145	%read{350,350} %write{349,349}
temp	float	$tmp146	%read{353,353} %write{350,350}
temp	float	$tmp147	%read{352,352} %write{351,351}
temp	float	$tmp148	%read{353,353} %write{352,352}
temp	float	$tmp149	%read{355,355} %write{354,354}
temp	float	$tmp150	%read{358,358} %write{355,355}
temp	float	$tmp151	%read{357,357} %write{356,356}
temp	float	$tmp152	%read{358,358} %write{357,357}
temp	float	$tmp153	%read{361,361} %write{358,358}
temp	float	$tmp154	%read{360,360} %write{359,359}
temp	float	$tmp155	%read{361,361} %write{360,360}
temp	float	$tmp156	%read{364,364} %write{361,361}
temp	float	$tmp157	%read{363,363} %write{362,362}
temp	float	$tmp158	%read{364,364} %write{363,363}
const	string	$const51	"mx_artistic_ior"		%read{368,368} %write{2147483647,-1}
temp	color	$tmp159	%read{373,373} %write{369,369}
const	float	$const52	0.99		%read{370,370} %write{2147483647,-1}
temp	color	$tmp160	%read{372,372} %write{370,370}
temp	color	$tmp161	%read{373,373} %write{372,372}
temp	color	$tmp162	%read{377,377} %write{375,375}
temp	color	$tmp163	%read{377,377} %write{376,376}
temp	color	$tmp164	%read{380,380} %write{378,378}
temp	color	$tmp165	%read{380,380} %write{379,379}
temp	color	$tmp166	%read{385,385} %write{384,384}
temp	color	$tmp167	%read{387,387} %write{385,385}
temp	color	$tmp168	%read{387,387} %write{386,386}
temp	color	$tmp169	%read{389,389} %write{387,387}
temp	color	$tmp170	%read{389,389} %write{388,388}
temp	color	$tmp171	%read{391,391} %write{390,390}
temp	float	$tmp172	%read{398,398} %write{397,397}
temp	float	$tmp173	%read{405,405} %write{404,404}
temp	float	$tmp174	%read{407,407} %write{405,405}
temp	float	$tmp175	%read{407,407} %write{406,406}
temp	float	$tmp176	%read{408,408} %write{407,407}
temp	float	$tmp177	%read{461,461} %write{408,408}
temp	float	$tmp178	%read{410,410} %write{409,409}
temp	float	$tmp179	%read{412,412} %write{410,410}
temp	float	$tmp180	%read{412,412} %write{411,411}
temp	float	$tmp181	%read{415,415} %write{412,412}
temp	float	$tmp182	%read{414,414} %write{413,413}
temp	float	$tmp183	%read{415,415} %write{414,414}
temp	float	$tmp184	%read{461,461} %write{415,415}
temp	float	$tmp185	%read{417,417} %write{416,416}
temp	float	$tmp186	%read{419,419} %write{417,417}
temp	float	$tmp187	%read{419,419} %write{418,418}
temp	float	$tmp188	%read{422,422} %write{419,419}
temp	float	$tmp189	%read{421,421} %write{420,420}
temp	float	$tmp190	%read{422,422} %write{421,421}
temp	float	$tmp191	%read{461,461} %write{422,422}
temp	float	$tmp192	%read{424,424} %write{423,423}
temp	float	$tmp193	%read{426,426} %write{424,424}
temp	float	$tmp194	%read{426,426} %write{425,425}
temp	float	$tmp195	%read{429,429} %write{426,426}
temp	float	$tmp196	%read{428,428} %write{427,427}
temp	float	$tmp197	%read{429,429} %write{428,428}
temp	float	$tmp198	%read{461,461} %write{429,429}
temp	float	$tmp199	%read{431,431} %write{430,430}
temp	float	$tmp200	%read{433,433} %write{431,431}
temp	float	$tmp201	%read{433,433} %write{432,432}
temp	float	$tmp202	%read{434,434} %write{433,433}
temp	float	$tmp203	%read{461,461} %write{434,434}
temp	float	$tmp204	%read{436,436} %write{435,435}
temp	float	$tmp205	%read{438,438} %write{436,436}
temp	float	$tmp206	%read{438,438} %write{437,437}
temp	float	$tmp207	%read{441,441} %write{438,438}
temp	float	$tmp208	%read{440,440} %write{439,439}
temp	float	$tmp209	%read{441,441} %write{440,440}
temp	float	$tmp210	%read{461,461} %write{441,441}
temp	float	$tmp211	%read{443,443} %write{442,442}
temp	float	$tmp212	%read{445,445} %write{443,443}
temp	float	$tmp213	%read{445,445} %write{444,444}
temp	float	$tmp214	%read{448,448} %write{445,445}
temp	float	$tmp215	%read{447,447} %write{446,446}
temp	float	$tmp216	%read{448,448} %write{447,447}
temp	float	$tmp217	%read{461,461} %write{448,448}
temp	float	$tmp218	%read{450,450} %write{449,449}
temp	float	$tmp219	%read{452,452} %write{450,450}
temp	float	$tmp220	%read{452,452} %write{451,451}
temp	float	$tmp221	%read{455,455} %write{452,452}
temp	float	$tmp222	%read{454,454} %write{453,453}
temp	float	$tmp223	%read{455,455} %write{454,454}
temp	float	$tmp224	%read{461,461} %write{455,455}
temp	float	$tmp225	%read{457,457} %write{456,456}
temp	float	$tmp226	%read{459,459} %write{457,457}
temp	float	$tmp227	%read{459,459} %write{458,458}
temp	float	$tmp228	%read{460,460} %write{459,459}
temp	float	$tmp229	%read{461,461} %write{460,460}
temp	float	$tmp230.x	%read{468,501} %write{462,462}
temp	float	$tmp230.y	%read{470,503} %write{463,463}
temp	float	$tmp230.z	%read{473,506} %write{464,464}
temp	float	$tmp230.w	%read{476,509} %write{465,465}
temp	float	$tmp231	%read{468,468} %write{467,467}
temp	float	$tmp232	%read{471,471} %write{468,468}
temp	float	$tmp233	%read{470,470} %write{469,469}
temp	float	$tmp234	%read{471,471} %write{470,470}
temp	float	$tmp235	%read{474,474} %write{471,471}
temp	float	$tmp236	%read{473,473} %write{472,472}
temp	float	$tmp237	%read{474,474} %write{473,473}
temp	float	$tmp238	%read{477,477} %write{474,474}
temp	float	$tmp239	%read{476,476} %write{475,475}
temp	float	$tmp240	%read{477,477} %write{476,476}
temp	float	$tmp241	%read{479,479} %write{478,478}
temp	float	$tmp242	%read{482,482} %write{479,479}
temp	float	$tmp243	%read{481,481} %write{480,480}
temp	float	$tmp244	%read{482,482} %write{481,481}
temp	float	$tmp245	%read{485,485} %write{482,482}
temp	float	$tmp246	%read{484,484} %write{483,483}
temp	float	$tmp247	%read{485,485} %write{484,484}
temp	float	$tmp248	%read{488,488} %write{485,485}
temp	float	$tmp249	%read{487,487} %write{486,486}
temp	float	$tmp250	%read{488,488} %write{487,487}
temp	float	$tmp251	%read{490,490} %write{489,489}
temp	float	$tmp252	%read{493,493} %write{490,490}
temp	float	$tmp253	%read{492,492} %write{491,491}
temp	float	$tmp254	%read{493,493} %write{492,492}
temp	float	$tmp255	%read{496,496} %write{493,493}
temp	float	$tmp256	%read{495,495} %write{494,494}
temp	float	$tmp257	%read{496,496} %write{495,495}
temp	float	$tmp258	%read{499,499} %write{496,496}
temp	float	$tmp259	%read{498,498} %write{497,497}
temp	float	$tmp260	%read{499,499} %write{498,498}
temp	float	$tmp261	%read{501,501} %write{500,500}
temp	float	$tmp262	%read{504,504} %write{501,501}
temp	float	$tmp263	%read{503,503} %write{502,502}
temp	float	$tmp264	%read{504,504} %write{503,503}
temp	float	$tmp265	%read{507,507} %write{504,504}
temp	float	$tmp266	%read{506,506} %write{505,505}
temp	float	$tmp267	%read{507,507} %write{506,506}
temp	float	$tmp268	%read{510,510} %write{507,507}
temp	float	$tmp269	%read{509,509} %write{508,508}
temp	float	$tmp270	%read{510,510} %write{509,509}
temp	float	$tmp271	%read{516,516} %write{515,515}
temp	int	$tmp272	%read{534,534} %write{532,532}
temp	float	$tmp273	%read{544,544} %write{542,542}
temp	float	$tmp274	%read{545,545} %write{544,544}
temp	int	$tmp275	%read{547,547} %write{546,546}
temp	float	$tmp276	%read{551,551} %write{550,550}
temp	float	$tmp277	%read{550,550} %write{549,549}
temp	float	$tmp278	%read{552,552} %write{551,551}
temp	float	$tmp279	%read{554,554} %write{553,553}
temp	int	$tmp280	%read{563,563} %write{561,561}
temp	float	$tmp281	%read{573,573} %write{571,571}
temp	float	$tmp282	%read{574,574} %write{573,573}
temp	int	$tmp283	%read{576,576} %write{575,575}
temp	float	$tmp284	%read{580,580} %write{579,579}
temp	float	$tmp285	%read{579,579} %write{578,578}
temp	float	$tmp286	%read{581,581} %write{580,580}
temp	float	$tmp287	%read{583,583} %write{582,582}
const	string	$const53	"NG_convert_float_color3"		%read{594,594} %write{2147483647,-1}
const	float	$const54	1.5		%read{607,635} %write{2147483647,-1}
const	string	$const55	"ggx"		%read{607,635} %write{2147483647,-1}
const	string	$const56	"R"		%read{599,631} %write{2147483647,-1}
const	string	$const57	"mx_dielectric_bsdf"		%read{598,626} %write{2147483647,-1}
const	string	$const58	"T"		%read{599,631} %write{2147483647,-1}
temp	int	$tmp289	%read{600,600} %write{599,599}
temp	int	$tmp290	%read{604,604} %write{603,603}
temp	closure color	$tmp291	%read{608,608} %write{607,607}
const	string	$const59	"thinfilm_thickness"		%read{607,635} %write{2147483647,-1}
const	string	$const60	"thinfilm_ior"		%read{607,635} %write{2147483647,-1}
const	string	$const61	"dielectric_bsdf"		%read{607,635} %write{2147483647,-1}
temp	closure color	$tmp292	%read{612,612} %write{611,611}
const	string	$const62	"conductor_bsdf"		%read{611,611} %write{2147483647,-1}
temp	int	$tmp293	%read{616,616} %write{615,615}
temp	int	$tmp294	%read{620,620} %write{619,619}
temp	closure color	$tmp295	%read{624,624} %write{623,623}
temp	int	$tmp296	%read{628,628} %write{627,627}
temp	int	$tmp297	%read{632,632} %write{631,631}
temp	closure color	$tmp298	%read{636,636} %write{635,635}
temp	closure color	$tmp299	%read{638,638} %write{637,637}
const	string	$const63	"sheen_bsdf"		%read{637,637} %write{2147483647,-1}
temp	closure color	$tmp300	%read{641,641} %write{640,640}
const	string	$const64	"translucent_bsdf"		%read{640,640} %write{2147483647,-1}
const	string	$const65	"mx_subsurface_bsdf"		%read{643,643} %write{2147483647,-1}
temp	color	$tmp301	%read{645,645} %write{644,644}
const	string	$const66	"subsurface_bssrdf"		%read{645,645} %write{2147483647,-1}
const	string	$const67	"mix"		%read{646,687} %write{2147483647,-1}
temp	float	$tmp302	%read{648,648} %write{647,647}
temp	closure color	$tmp303	%read{650,650} %write{648,648}
temp	closure color	$tmp304	%read{650,650} %write{649,649}
temp	closure color	$tmp305	%read{652,652} %write{651,651}
const	string	$const68	"oren_nayar_diffuse_bsdf"		%read{651,651} %write{2147483647,-1}
temp	float	$tmp306	%read{655,655} %write{654,654}
temp	closure color	$tmp307	%read{657,657} %write{655,655}
temp	closure color	$tmp308	%read{657,657} %write{656,656}
const	string	$const69	"layer"		%read{658,671} %write{2147483647,-1}
temp	float	$tmp309	%read{661,661} %write{660,660}
temp	closure color	$tmp310	%read{663,663} %write{661,661}
temp	closure color	$tmp311	%read{663,663} %write{662,662}
temp	float	$tmp312	%read{667,667} %write{666,666}
temp	closure color	$tmp313	%read{669,669} %write{667,667}
temp	closure color	$tmp314	%read{669,669} %write{668,668}
const	string	$const70	"uniform_edf"		%read{672,672} %write{2147483647,-1}
const	float	$const71	5		%read{684,684} %write{2147483647,-1}
const	string	$const72	"mx_generalized_schlick_edf"		%read{675,675} %write{2147483647,-1}
temp	float	$tmp316	%read{678,678} %write{677,677}
temp	vector	$tmp317	%read{677,677} %write{676,676}
const	string	$const73	"mx_fresnel_schlick"		%read{679,679} %write{2147483647,-1}
temp	float	$tmp318	%read{682,682} %write{680,680}
temp	float	$tmp319	%read{683,683} %write{682,682}
temp	float	$tmp320	%read{685,685} %write{684,684}
temp	float	$tmp321	%read{689,689} %write{688,688}
temp	closure color	$tmp322	%read{691,691} %write{689,689}
temp	closure color	$tmp323	%read{691,691} %write{690,690}
const	string	$const74	"mx_surface"		%read{695,695} %write{2147483647,-1}
temp	float	$tmp324	%read{700,700} %write{699,699}
const	string	$const75	"mx_surfacematerial"		%read{705,705} %write{2147483647,-1}
temp	float	$tmp325	%read{708,708} %write{707,707}
temp	closure color	$tmp326	%read{710,710} %write{709,709}
temp	closure color	$tmp327	%read{714,714} %write{710,710}
temp	closure color	$tmp328	%read{713,713} %write{711,711}
const	string	$const76	"transparent"		%read{711,711} %write{2147483647,-1}
temp	float	$tmp329	%read{713,713} %write{712,712}
temp	closure color	$tmp330	%read{714,714} %write{713,713}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:828
#     textureresource image_color_file_ = {image_color_file, image_color_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{828} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:829
#     textureresource image_roughness_file_ = {image_roughness_file, image_roughness_file_colorspace};
	assign		image_color_file_.filename image_color_file 	%line{829} %argrw{"wr"}
	assign		image_color_file_.colorspace image_color_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:830
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		image_roughness_file_.filename image_roughness_file 	%line{830} %argrw{"wr"}
	assign		image_roughness_file_.colorspace image_roughness_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:831
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 7 	%line{831} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:832
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{832} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:833
#     color image_color_out = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{833} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:834
#     NG_tiledimage_color3(image_color_file_, image_color_default, geomprop_UV0_out1, image_color_uvtiling, image_color_uvoffset, image_color_realworldimagesize, image_color_realworldtilesize, image_color_filtertype, image_color_framerange, image_color_frameoffset, image_color_frameendaction, image_color_out);
	assign		image_color_out $const6 	%line{834} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:835
#     float image_roughness_out = 0.0;
	functioncall	$const7 70 	%line{835} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const8 19 	%line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_color3_out.x geomprop_UV0_out1.x image_color_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_color3_out.y geomprop_UV0_out1.y image_color_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const9 22 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_color3_out.x ___672_N_mult_color3_out.x image_color_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_color3_out.y ___672_N_mult_color3_out.y image_color_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const10 25 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_color3_out.x ___672_N_sub_color3_out.x image_color_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_color3_out.y ___672_N_sub_color3_out.y image_color_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const8 28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_color3_out.x ___672_N_divtilesize_color3_out.x image_color_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_color3_out.y ___672_N_divtilesize_color3_out.y image_color_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:48
#     mx_image_color3(file, "", default1, N_multtilesize_color3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_color3_out);
	assign		___672_N_img_color3_out $const6 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:49
#     out = N_img_color3_out;
	functioncall	$const13 69 	%line{49} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp5 image_color_file_.filename $const11 	%line{25} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 33 46 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp7 $const12 $const14 	%line{26} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	if		$tmp8 44 44 	%argrw{"r"}
	lt		$tmp9 ___672_N_multtilesize_color3_out.x $const5 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const1 	%argrw{"wrr"}
	if		$tmp10 39 42 	%argrw{"r"}
	gt		$tmp11 ___672_N_multtilesize_color3_out.x $const15 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp10 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp13 	%argrw{"wr"}
	neq		$tmp14 $tmp8 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp6 $tmp14 	%line{25} %argrw{"wr"}
	neq		$tmp15 $tmp6 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp15 48 61 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:27
#     {
	eq		$tmp16 $const12 $const14 	%line{27} %argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 59 59 	%argrw{"r"}
	lt		$tmp18 ___672_N_multtilesize_color3_out.y $const5 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	if		$tmp19 54 57 	%argrw{"r"}
	gt		$tmp20 ___672_N_multtilesize_color3_out.y $const15 	%argrw{"wrr"}
	neq		$tmp21 $tmp20 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp21 	%argrw{"wr"}
	neq		$tmp22 $tmp19 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp17 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp15 $tmp23 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp15 64 64 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:29
#         return;
	assign		___672_N_img_color3_out image_color_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor image_color_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const16 68 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_color3_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_color3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_N_img_color3_out image_color_file_.filename ___670_st.x ___670_st.y $const17 $const11 $const18 image_color_filtertype $const19 ___670_missingColor $const20 $const12 $const21 $const12 $const22 image_color_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:50
# }
	assign		image_color_out ___672_N_img_color3_out 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:836
#     NG_tiledimage_float(image_roughness_file_, image_roughness_default, geomprop_UV0_out1, image_roughness_uvtiling, image_roughness_uvoffset, image_roughness_realworldimagesize, image_roughness_realworldtilesize, image_roughness_filtertype, image_roughness_framerange, image_roughness_frameoffset, image_roughness_frameendaction, image_roughness_out);
	assign		image_roughness_out $const5 	%line{836} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:837
#     color image_color_out_cm_out = color(0.0);
	functioncall	$const23 127 	%line{837} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const8 75 	%line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___675_N_mult_float_out.x geomprop_UV0_out1.x image_roughness_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___675_N_mult_float_out.y geomprop_UV0_out1.y image_roughness_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const9 78 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___675_N_sub_float_out.x ___675_N_mult_float_out.x image_roughness_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___675_N_sub_float_out.y ___675_N_mult_float_out.y image_roughness_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const10 81 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___675_N_divtilesize_float_out.x ___675_N_sub_float_out.x image_roughness_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___675_N_divtilesize_float_out.y ___675_N_sub_float_out.y image_roughness_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:845
# 
	functioncall	$const8 84 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{845} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___675_N_multtilesize_float_out.x ___675_N_divtilesize_float_out.x image_roughness_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___675_N_multtilesize_float_out.y ___675_N_divtilesize_float_out.y image_roughness_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:79
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___675_N_img_float_out $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:80
#     out = N_img_float_out;
	functioncall	$const24 126 	%line{80} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:56
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp24 image_roughness_file_.filename $const11 	%line{56} %argrw{"wrr"}
	neq		$tmp25 $tmp24 $const1 	%argrw{"wrr"}
	if		$tmp25 89 102 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:57
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp26 $const12 $const14 	%line{57} %argrw{"wrr"}
	neq		$tmp27 $tmp26 $const1 	%argrw{"wrr"}
	if		$tmp27 100 100 	%argrw{"r"}
	lt		$tmp28 ___675_N_multtilesize_float_out.x $const5 	%argrw{"wrr"}
	neq		$tmp29 $tmp28 $const1 	%argrw{"wrr"}
	if		$tmp29 95 98 	%argrw{"r"}
	gt		$tmp30 ___675_N_multtilesize_float_out.x $const15 	%argrw{"wrr"}
	neq		$tmp31 $tmp30 $const1 	%argrw{"wrr"}
	assign		$tmp29 $tmp31 	%argrw{"wr"}
	neq		$tmp32 $tmp29 $const1 	%argrw{"wrr"}
	assign		$tmp27 $tmp32 	%argrw{"wr"}
	neq		$tmp33 $tmp27 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:56
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp25 $tmp33 	%line{56} %argrw{"wr"}
	neq		$tmp34 $tmp25 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:57
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp34 104 117 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:58
#     {
	eq		$tmp35 $const12 $const14 	%line{58} %argrw{"wrr"}
	neq		$tmp36 $tmp35 $const1 	%argrw{"wrr"}
	if		$tmp36 115 115 	%argrw{"r"}
	lt		$tmp37 ___675_N_multtilesize_float_out.y $const5 	%argrw{"wrr"}
	neq		$tmp38 $tmp37 $const1 	%argrw{"wrr"}
	if		$tmp38 110 113 	%argrw{"r"}
	gt		$tmp39 ___675_N_multtilesize_float_out.y $const15 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const1 	%argrw{"wrr"}
	assign		$tmp38 $tmp40 	%argrw{"wr"}
	neq		$tmp41 $tmp38 $const1 	%argrw{"wrr"}
	assign		$tmp36 $tmp41 	%argrw{"wr"}
	neq		$tmp42 $tmp36 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:57
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp34 $tmp42 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:56
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp34 120 120 	%line{56} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:60
#         return;
	assign		___675_N_img_float_out image_roughness_default 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:61
#     }
	return	%line{61}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:64
#     vector2 st = mx_transform_uv(texcoord);
	assign		___673_missingColor image_roughness_default 	%line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:65
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const16 124 	%line{65} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:20
# }
	assign		___673_st.x ___675_N_multtilesize_float_out.x 	%line{20} %argrw{"wr"}
	assign		___673_st.y ___675_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:66
#                         "subimage", layer, "interp", filtertype,
	texture		___673_rgb image_roughness_file_.filename ___673_st.x ___673_st.y $const17 $const11 $const18 image_roughness_filtertype $const19 ___673_missingColor $const20 $const12 $const21 $const12 	%line{66} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:70
# }
	compref		___675_N_img_float_out ___673_rgb $const1 	%line{70} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:81
# }
	assign		image_roughness_out ___675_N_img_float_out 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:838
#     NG_srgb_texture_to_lin_rec709_color3(image_color_out, image_color_out_cm_out);
	assign		image_color_out_cm_out $const6 	%line{838} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:839
#     surfaceshader SR_wood1_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const25 189 	%line{839} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:99
#     color bias_out = in + bias_in2_tmp;
	assign		___677_bias_in2_tmp $const26 	%line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:100
#     float linSeg_in2_tmp = 12.920000;
	add		___677_bias_out image_color_out ___677_bias_in2_tmp 	%line{100} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:101
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___677_linSeg_in2_tmp $const27 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:102
#     float colorSeparate_outr = 0.0;
	div		___677_linSeg_out image_color_out ___677_linSeg_in2_tmp 	%line{102} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:103
#     float colorSeparate_outg = 0.0;
	assign		___677_colorSeparate_outr $const5 	%line{103} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:104
#     float colorSeparate_outb = 0.0;
	assign		___677_colorSeparate_outg $const5 	%line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:105
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___677_colorSeparate_outb $const5 	%line{105} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:106
#     float max_in2_tmp = 0.000000;
	functioncall	$const28 149 	%line{106} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:86
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___676_N_extract_0_index_tmp $const1 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:87
#     int N_extract_1_index_tmp = 1;
	functioncall	$const29 140 	%line{87} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___676_N_extract_0_out image_color_out ___676_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:88
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___676_N_extract_1_index_tmp $const30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:89
#     int N_extract_2_index_tmp = 2;
	functioncall	$const29 143 	%line{89} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___676_N_extract_1_out image_color_out ___676_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:90
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___676_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:91
#     outr = N_extract_0_out;
	functioncall	$const29 146 	%line{91} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___676_N_extract_2_out image_color_out ___676_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:92
#     outg = N_extract_1_out;
	assign		___677_colorSeparate_outr ___676_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:93
#     outb = N_extract_2_out;
	assign		___677_colorSeparate_outg ___676_N_extract_1_out 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:94
# }
	assign		___677_colorSeparate_outb ___676_N_extract_2_out 	%line{94} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:107
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___677_max_in2_tmp $const5 	%line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:108
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp43 ___677_max_in2_tmp 	%line{108} %argrw{"wr"}
	max		___677_max_out ___677_bias_out $tmp43 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:109
#     float isAboveR_in1_tmp = 1.000000;
	assign		___677_isAboveR_value2_tmp $const31 	%line{109} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:110
#     float isAboveR_in2_tmp = 0.000000;
	assign		___677_isAboveR_in1_tmp $const15 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:111
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___677_isAboveR_in2_tmp $const5 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:112
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp44 ___677_colorSeparate_outr ___677_isAboveR_value2_tmp 	%line{112} %argrw{"wrr"}
	functioncall	$const32 162 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp44 160 162 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_isAboveR_out ___677_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___677_isAboveR_out ___677_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:113
#     float isAboveG_in1_tmp = 1.000000;
	assign		___677_isAboveG_value2_tmp $const31 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:114
#     float isAboveG_in2_tmp = 0.000000;
	assign		___677_isAboveG_in1_tmp $const15 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:115
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___677_isAboveG_in2_tmp $const5 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:116
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp45 ___677_colorSeparate_outg ___677_isAboveG_value2_tmp 	%line{116} %argrw{"wrr"}
	functioncall	$const32 172 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp45 170 172 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_isAboveG_out ___677_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___677_isAboveG_out ___677_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:117
#     float isAboveB_in1_tmp = 1.000000;
	assign		___677_isAboveB_value2_tmp $const31 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{117} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:118
#     float isAboveB_in2_tmp = 0.000000;
	assign		___677_isAboveB_in1_tmp $const15 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:119
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___677_isAboveB_in2_tmp $const5 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:120
#     float scale_in2_tmp = 1.055000;
	gt		$tmp46 ___677_colorSeparate_outb ___677_isAboveB_value2_tmp 	%line{120} %argrw{"wrr"}
	functioncall	$const32 182 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp46 180 182 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_isAboveB_out ___677_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___677_isAboveB_out ___677_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:121
#     color scale_out = max_out / scale_in2_tmp;
	assign		___677_scale_in2_tmp $const33 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:122
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___677_scale_out ___677_max_out ___677_scale_in2_tmp 	%line{122} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:123
#     float powSeg_in2_tmp = 2.400000;
	color		___677_isAbove_out ___677_isAboveR_out ___677_isAboveG_out ___677_isAboveB_out 	%line{123} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:124
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___677_powSeg_in2_tmp $const34 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:125
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___677_powSeg_out ___677_scale_out ___677_powSeg_in2_tmp 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:126
#     out = mix_out;
	mix		___677_mix_out ___677_linSeg_out ___677_powSeg_out ___677_isAbove_out 	%line{126} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:127
# }
	assign		image_color_out_cm_out ___677_mix_out 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:840
#     NG_standard_surface_surfaceshader_100(SR_wood1_base, image_color_out_cm_out, SR_wood1_diffuse_roughness, SR_wood1_metalness, SR_wood1_specular, SR_wood1_specular_color, image_roughness_out, SR_wood1_specular_IOR, SR_wood1_specular_anisotropy, SR_wood1_specular_rotation, SR_wood1_transmission, SR_wood1_transmission_color, SR_wood1_transmission_depth, SR_wood1_transmission_scatter, SR_wood1_transmission_scatter_anisotropy, SR_wood1_transmission_dispersion, SR_wood1_transmission_extra_roughness, SR_wood1_subsurface, SR_wood1_subsurface_color, SR_wood1_subsurface_radius, SR_wood1_subsurface_scale, SR_wood1_subsurface_anisotropy, SR_wood1_sheen, SR_wood1_sheen_color, SR_wood1_sheen_roughness, SR_wood1_coat, SR_wood1_coat_color, SR_wood1_coat_roughness, SR_wood1_coat_anisotropy, SR_wood1_coat_rotation, SR_wood1_coat_IOR, geomprop_Nworld_out1, SR_wood1_coat_affect_color, SR_wood1_coat_affect_roughness, SR_wood1_thin_film_thickness, SR_wood1_thin_film_IOR, SR_wood1_emission, SR_wood1_emission_color, SR_wood1_opacity, SR_wood1_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_wood1_out);
	assign		SR_wood1_out.bsdf null_closure 	%line{840} %argrw{"wr"}
	assign		SR_wood1_out.edf null_closure 	%argrw{"wr"}
	assign		SR_wood1_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:841
#     MATERIAL Tiled_Wood_out = mx_surfacematerial(SR_wood1_out, backsurfaceshader, displacementshader1);
	functioncall	$const35 705 	%line{841} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:307
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___702_null_closure $const1 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:308
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___702_coat_roughness_vector_out.x $const5 	%line{308} %argrw{"wr"}
	assign		___702_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:309
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const36 215 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:132
#     if (anisotropy > 0.0)
	mul		$tmp47 SR_wood1_coat_roughness SR_wood1_coat_roughness 	%line{132} %argrw{"wrr"}
	functioncall	$const38 201 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp48 $tmp47 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp48 $const37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:133
#     {
	gt		$tmp49 SR_wood1_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{133} %argrw{"wrr"}
	if		$tmp49 213 215 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const38 206 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp51 SR_wood1_coat_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp50 $tmp51 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp52 $const15 $tmp50 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{135} %argrw{"wrr"}
	sqrt		___679_aspect $tmp52 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:136
#         result.y = roughness_sqr * aspect;
	div		$tmp53 ___678_roughness_sqr ___679_aspect 	%line{136} %argrw{"wrr"}
	min		___702_coat_roughness_vector_out.x $tmp53 $const15 	%argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:137
#     }
	mul		___702_coat_roughness_vector_out.y ___678_roughness_sqr ___679_aspect 	%line{137} %argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.y ___702_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:141
#         result.y = roughness_sqr;
	assign		___702_coat_roughness_vector_out.x ___678_roughness_sqr 	%line{141} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:142
#     }
	assign		___702_coat_roughness_vector_out.y ___678_roughness_sqr 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:310
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___702_coat_tangent_rotate_degree_in2_tmp $const40 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:311
#     color metal_reflectivity_out = base_color * base;
	mul		___702_coat_tangent_rotate_degree_out SR_wood1_coat_rotation ___702_coat_tangent_rotate_degree_in2_tmp 	%line{311} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:312
#     color metal_edgecolor_out = specular_color * specular;
	mul		___702_metal_reflectivity_out image_color_out_cm_out SR_wood1_base 	%line{312} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:313
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___702_metal_edgecolor_out SR_wood1_specular_color SR_wood1_specular 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:314
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___702_coat_affect_roughness_multiply1_out SR_wood1_coat_affect_roughness SR_wood1_coat 	%line{314} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:315
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___702_tangent_rotate_degree_in2_tmp $const40 	%line{315} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:316
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___702_tangent_rotate_degree_out SR_wood1_specular_rotation ___702_tangent_rotate_degree_in2_tmp 	%line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:317
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___702_transmission_roughness_add_out image_roughness_out SR_wood1_transmission_extra_roughness 	%line{317} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:318
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___702_subsurface_color_nonnegative_in2_tmp $const5 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:319
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp54 ___702_subsurface_color_nonnegative_in2_tmp 	%line{319} %argrw{"wr"}
	max		___702_subsurface_color_nonnegative_out SR_wood1_subsurface_color $tmp54 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:320
#     float coat_clamped_high_tmp = 1.000000;
	assign		___702_coat_clamped_low_tmp $const5 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:321
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___702_coat_clamped_high_tmp $const15 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:322
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const38 231 	%line{322} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp55 SR_wood1_coat ___702_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_coat_clamped_out $tmp55 ___702_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:323
#     float subsurface_selector_out = float(thin_walled);
	mul		___702_subsurface_radius_scaled_out SR_wood1_subsurface_radius SR_wood1_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{323} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:324
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp56 SR_wood1_thin_walled 	%line{324} %argrw{"wr"}
	assign		___702_subsurface_selector_out $tmp56 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:325
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___702_base_color_nonnegative_in2_tmp $const5 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:326
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp57 ___702_base_color_nonnegative_in2_tmp 	%line{326} %argrw{"wr"}
	max		___702_base_color_nonnegative_out image_color_out_cm_out $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:327
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___702_coat_attenuation_bg_tmp $const41 	%line{327} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:328
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___702_coat_attenuation_out ___702_coat_attenuation_bg_tmp SR_wood1_coat_color SR_wood1_coat 	%line{328} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:329
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___702_one_minus_coat_ior_in1_tmp $const15 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:330
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___702_one_minus_coat_ior_out ___702_one_minus_coat_ior_in1_tmp SR_wood1_coat_IOR 	%line{330} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:331
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___702_one_plus_coat_ior_in1_tmp $const15 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:332
#     color emission_weight_out = emission_color * emission1;
	add		___702_one_plus_coat_ior_out ___702_one_plus_coat_ior_in1_tmp SR_wood1_coat_IOR 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:333
#     color opacity_luminance_out = color(0.0);
	mul		___702_emission_weight_out SR_wood1_emission_color SR_wood1_emission 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:334
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___702_opacity_luminance_out $const6 	%line{334} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:335
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const43 248 	%line{335} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:148
# }
	dot		$tmp59 SR_wood1_opacity $const42 	%line{148} %argrw{"wrr"}
	assign		___702_opacity_luminance_out $tmp59 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:336
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___702_coat_tangent_rotate_out $const44 	%line{336} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:337
#     color artistic_ior_ior = color(0.0);
	functioncall	$const45 366 	%line{337} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:166
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const46 253 	%line{166} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp60 $const47 $const48 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_coat_tangent_rotate_degree_out $tmp60 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:167
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const49 316 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{167} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:153
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{153} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:154
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{154} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:155
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{155} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:156
# 
	sub		___682_oc $const15 ___682_c 	%line{156} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:158
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp61 ___682_nAxis $const1 	%line{158} %argrw{"wrr"}
	mul		$tmp62 ___682_oc $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	add		$tmp65 $tmp64 ___682_c 	%argrw{"wrr"}
	compref		$tmp66 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp67 ___682_oc $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp69 $tmp67 $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp71 $tmp70 ___682_s 	%argrw{"wrr"}
	sub		$tmp72 $tmp69 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp74 ___682_oc $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	compref		$tmp77 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp78 $tmp77 ___682_s 	%argrw{"wrr"}
	add		$tmp79 $tmp76 $tmp78 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:159
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp80 ___682_nAxis $const1 	%line{159} %argrw{"wrr"}
	mul		$tmp81 ___682_oc $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp83 $tmp81 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp85 $tmp84 ___682_s 	%argrw{"wrr"}
	add		$tmp86 $tmp83 $tmp85 	%argrw{"wrr"}
	compref		$tmp87 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp88 ___682_oc $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp90 $tmp88 $tmp89 	%argrw{"wrr"}
	add		$tmp91 $tmp90 ___682_c 	%argrw{"wrr"}
	compref		$tmp92 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp93 ___682_oc $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp95 $tmp93 $tmp94 	%argrw{"wrr"}
	compref		$tmp96 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp97 $tmp96 ___682_s 	%argrw{"wrr"}
	sub		$tmp98 $tmp95 $tmp97 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:160
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp99 ___682_nAxis $const4 	%line{160} %argrw{"wrr"}
	mul		$tmp100 ___682_oc $tmp99 	%argrw{"wrr"}
	compref		$tmp101 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp102 $tmp100 $tmp101 	%argrw{"wrr"}
	compref		$tmp103 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp104 $tmp103 ___682_s 	%argrw{"wrr"}
	sub		$tmp105 $tmp102 $tmp104 	%argrw{"wrr"}
	compref		$tmp106 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp107 ___682_oc $tmp106 	%argrw{"wrr"}
	compref		$tmp108 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp109 $tmp107 $tmp108 	%argrw{"wrr"}
	compref		$tmp110 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp111 $tmp110 ___682_s 	%argrw{"wrr"}
	add		$tmp112 $tmp109 $tmp111 	%argrw{"wrr"}
	compref		$tmp113 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp114 ___682_oc $tmp113 	%argrw{"wrr"}
	compref		$tmp115 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp116 $tmp114 $tmp115 	%argrw{"wrr"}
	add		$tmp117 $tmp116 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:158
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp65 $tmp72 $tmp79 $const5 $tmp86 $tmp91 $tmp98 $const5 $tmp105 $tmp112 $tmp117 $const5 $const5 $const5 $const5 $const15 	%line{158} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:168
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp118.x geomprop_Tworld_out1 $const1 	%line{168} %argrw{"wrr"}
	compref		$tmp118.y geomprop_Tworld_out1 $const30 	%argrw{"wrr"}
	compref		$tmp118.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp118.w $const15 	%argrw{"wr"}
	functioncall	$const2 365 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp119 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp118.x 	%argrw{"wrr"}
	mxcompref	$tmp121 ___683_m $const30 $const1 	%argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp118.y 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	mxcompref	$tmp124 ___683_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp118.z 	%argrw{"wrr"}
	add		$tmp126 $tmp123 $tmp125 	%argrw{"wrr"}
	mxcompref	$tmp127 ___683_m $const50 $const1 	%argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp118.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp126 $tmp128 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp129 ___683_m $const1 $const30 	%line{416} %argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp118.x 	%argrw{"wrr"}
	mxcompref	$tmp131 ___683_m $const30 $const30 	%argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp118.y 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	mxcompref	$tmp134 ___683_m $const4 $const30 	%argrw{"wrrr"}
	mul		$tmp135 $tmp134 $tmp118.z 	%argrw{"wrr"}
	add		$tmp136 $tmp133 $tmp135 	%argrw{"wrr"}
	mxcompref	$tmp137 ___683_m $const50 $const30 	%argrw{"wrrr"}
	mul		$tmp138 $tmp137 $tmp118.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp136 $tmp138 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp139 ___683_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp118.x 	%argrw{"wrr"}
	mxcompref	$tmp141 ___683_m $const30 $const4 	%argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp118.y 	%argrw{"wrr"}
	add		$tmp143 $tmp140 $tmp142 	%argrw{"wrr"}
	mxcompref	$tmp144 ___683_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp145 $tmp144 $tmp118.z 	%argrw{"wrr"}
	add		$tmp146 $tmp143 $tmp145 	%argrw{"wrr"}
	mxcompref	$tmp147 ___683_m $const50 $const4 	%argrw{"wrrr"}
	mul		$tmp148 $tmp147 $tmp118.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp146 $tmp148 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp149 ___683_m $const1 $const50 	%line{418} %argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp118.x 	%argrw{"wrr"}
	mxcompref	$tmp151 ___683_m $const30 $const50 	%argrw{"wrrr"}
	mul		$tmp152 $tmp151 $tmp118.y 	%argrw{"wrr"}
	add		$tmp153 $tmp150 $tmp152 	%argrw{"wrr"}
	mxcompref	$tmp154 ___683_m $const4 $const50 	%argrw{"wrrr"}
	mul		$tmp155 $tmp154 $tmp118.z 	%argrw{"wrr"}
	add		$tmp156 $tmp153 $tmp155 	%argrw{"wrr"}
	mxcompref	$tmp157 ___683_m $const50 $const50 	%argrw{"wrrr"}
	mul		$tmp158 $tmp157 $tmp118.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp156 $tmp158 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:169
# }
	vector		___702_coat_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{169} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:338
#     color artistic_ior_extinction = color(0.0);
	assign		___702_artistic_ior_ior $const6 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:339
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___702_artistic_ior_extinction $const6 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:340
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const51 393 	%line{340} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:177
#     color r_sqrt = sqrt(r);
	assign		$tmp159 $const5 	%line{177} %argrw{"wr"}
	assign		$tmp160 $const52 	%argrw{"wr"}
	functioncall	$const38 374 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp161 ___702_metal_reflectivity_out $tmp160 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___684_r $tmp161 $tmp159 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:178
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___684_r_sqrt ___684_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{178} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:179
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp162 $const15 ___684_r 	%line{179} %argrw{"wrr"}
	add		$tmp163 $const15 ___684_r 	%argrw{"wrr"}
	div		___684_n_min $tmp162 $tmp163 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:180
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp164 $const15 ___684_r_sqrt 	%line{180} %argrw{"wrr"}
	sub		$tmp165 $const15 ___684_r_sqrt 	%argrw{"wrr"}
	div		___684_n_max $tmp164 $tmp165 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:181
# 
	mix		___702_artistic_ior_ior ___684_n_max ___684_n_min ___702_metal_edgecolor_out 	%line{181} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:183
#     color nm1 = ior - 1.0;
	add		___684_np1 ___702_artistic_ior_ior $const15 	%line{183} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:184
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___684_nm1 ___702_artistic_ior_ior $const15 	%line{184} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:185
#     k2 = max(k2, 0.0);
	mul		$tmp166 ___684_np1 ___684_np1 	%line{185} %argrw{"wrr"}
	mul		$tmp167 $tmp166 ___684_r 	%argrw{"wrr"}
	mul		$tmp168 ___684_nm1 ___684_nm1 	%argrw{"wrr"}
	sub		$tmp169 $tmp167 $tmp168 	%argrw{"wrr"}
	sub		$tmp170 $const15 ___684_r 	%argrw{"wrr"}
	div		___684_k2 $tmp169 $tmp170 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:186
#     extinction = sqrt(k2);
	assign		$tmp171 $const5 	%line{186} %argrw{"wr"}
	max		___684_k2 ___684_k2 $tmp171 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:187
# }
	sqrt		___702_artistic_ior_extinction ___684_k2 	%line{187} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:341
#     vector tangent_rotate_out = vector(0.0);
	mul		___702_coat_affect_roughness_multiply2_out ___702_coat_affect_roughness_multiply1_out SR_wood1_coat_roughness 	%line{341} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:342
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___702_tangent_rotate_out $const44 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:343
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const45 512 	%line{343} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:166
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const46 399 	%line{166} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp172 $const47 $const48 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_tangent_rotate_degree_out $tmp172 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:167
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const49 462 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{167} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:153
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{153} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:154
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{154} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:155
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{155} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:156
# 
	sub		___682_oc $const15 ___682_c 	%line{156} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:158
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp173 ___682_nAxis $const1 	%line{158} %argrw{"wrr"}
	mul		$tmp174 ___682_oc $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	add		$tmp177 $tmp176 ___682_c 	%argrw{"wrr"}
	compref		$tmp178 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp179 ___682_oc $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp181 $tmp179 $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp183 $tmp182 ___682_s 	%argrw{"wrr"}
	sub		$tmp184 $tmp181 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp186 ___682_oc $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp188 $tmp186 $tmp187 	%argrw{"wrr"}
	compref		$tmp189 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp190 $tmp189 ___682_s 	%argrw{"wrr"}
	add		$tmp191 $tmp188 $tmp190 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:159
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp192 ___682_nAxis $const1 	%line{159} %argrw{"wrr"}
	mul		$tmp193 ___682_oc $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp195 $tmp193 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___682_s 	%argrw{"wrr"}
	add		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	compref		$tmp199 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp200 ___682_oc $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp202 $tmp200 $tmp201 	%argrw{"wrr"}
	add		$tmp203 $tmp202 ___682_c 	%argrw{"wrr"}
	compref		$tmp204 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp205 ___682_oc $tmp204 	%argrw{"wrr"}
	compref		$tmp206 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp207 $tmp205 $tmp206 	%argrw{"wrr"}
	compref		$tmp208 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp209 $tmp208 ___682_s 	%argrw{"wrr"}
	sub		$tmp210 $tmp207 $tmp209 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:160
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp211 ___682_nAxis $const4 	%line{160} %argrw{"wrr"}
	mul		$tmp212 ___682_oc $tmp211 	%argrw{"wrr"}
	compref		$tmp213 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp214 $tmp212 $tmp213 	%argrw{"wrr"}
	compref		$tmp215 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp216 $tmp215 ___682_s 	%argrw{"wrr"}
	sub		$tmp217 $tmp214 $tmp216 	%argrw{"wrr"}
	compref		$tmp218 ___682_nAxis $const30 	%argrw{"wrr"}
	mul		$tmp219 ___682_oc $tmp218 	%argrw{"wrr"}
	compref		$tmp220 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp221 $tmp219 $tmp220 	%argrw{"wrr"}
	compref		$tmp222 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp223 $tmp222 ___682_s 	%argrw{"wrr"}
	add		$tmp224 $tmp221 $tmp223 	%argrw{"wrr"}
	compref		$tmp225 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp226 ___682_oc $tmp225 	%argrw{"wrr"}
	compref		$tmp227 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp228 $tmp226 $tmp227 	%argrw{"wrr"}
	add		$tmp229 $tmp228 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:158
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp177 $tmp184 $tmp191 $const5 $tmp198 $tmp203 $tmp210 $const5 $tmp217 $tmp224 $tmp229 $const5 $const5 $const5 $const5 $const15 	%line{158} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:168
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp230.x geomprop_Tworld_out1 $const1 	%line{168} %argrw{"wrr"}
	compref		$tmp230.y geomprop_Tworld_out1 $const30 	%argrw{"wrr"}
	compref		$tmp230.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp230.w $const15 	%argrw{"wr"}
	functioncall	$const2 511 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp231 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp230.x 	%argrw{"wrr"}
	mxcompref	$tmp233 ___683_m $const30 $const1 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp230.y 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___683_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp230.z 	%argrw{"wrr"}
	add		$tmp238 $tmp235 $tmp237 	%argrw{"wrr"}
	mxcompref	$tmp239 ___683_m $const50 $const1 	%argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp230.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp238 $tmp240 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp241 ___683_m $const1 $const30 	%line{416} %argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp230.x 	%argrw{"wrr"}
	mxcompref	$tmp243 ___683_m $const30 $const30 	%argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp230.y 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	mxcompref	$tmp246 ___683_m $const4 $const30 	%argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp230.z 	%argrw{"wrr"}
	add		$tmp248 $tmp245 $tmp247 	%argrw{"wrr"}
	mxcompref	$tmp249 ___683_m $const50 $const30 	%argrw{"wrrr"}
	mul		$tmp250 $tmp249 $tmp230.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp248 $tmp250 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp251 ___683_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp230.x 	%argrw{"wrr"}
	mxcompref	$tmp253 ___683_m $const30 $const4 	%argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp230.y 	%argrw{"wrr"}
	add		$tmp255 $tmp252 $tmp254 	%argrw{"wrr"}
	mxcompref	$tmp256 ___683_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp257 $tmp256 $tmp230.z 	%argrw{"wrr"}
	add		$tmp258 $tmp255 $tmp257 	%argrw{"wrr"}
	mxcompref	$tmp259 ___683_m $const50 $const4 	%argrw{"wrrr"}
	mul		$tmp260 $tmp259 $tmp230.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp258 $tmp260 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp261 ___683_m $const1 $const50 	%line{418} %argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp230.x 	%argrw{"wrr"}
	mxcompref	$tmp263 ___683_m $const30 $const50 	%argrw{"wrrr"}
	mul		$tmp264 $tmp263 $tmp230.y 	%argrw{"wrr"}
	add		$tmp265 $tmp262 $tmp264 	%argrw{"wrr"}
	mxcompref	$tmp266 ___683_m $const4 $const50 	%argrw{"wrrr"}
	mul		$tmp267 $tmp266 $tmp230.z 	%argrw{"wrr"}
	add		$tmp268 $tmp265 $tmp267 	%argrw{"wrr"}
	mxcompref	$tmp269 ___683_m $const50 $const50 	%argrw{"wrrr"}
	mul		$tmp270 $tmp269 $tmp230.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp268 $tmp270 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:169
# }
	vector		___702_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{169} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:344
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___702_transmission_roughness_clamped_low_tmp $const5 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:345
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___702_transmission_roughness_clamped_high_tmp $const15 	%line{345} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:346
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const38 517 	%line{346} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp271 ___702_transmission_roughness_add_out ___702_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_transmission_roughness_clamped_out $tmp271 ___702_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:347
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___702_coat_gamma_multiply_out ___702_coat_clamped_out SR_wood1_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{347} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:348
#     int opacity_luminance_float_index_tmp = 0;
	div		___702_coat_ior_to_F0_sqrt_out ___702_one_minus_coat_ior_out ___702_one_plus_coat_ior_out 	%line{348} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:349
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___702_opacity_luminance_float_index_tmp $const1 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:350
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const29 522 	%line{350} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___702_opacity_luminance_float_out ___702_opacity_luminance_out ___702_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:351
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___702_coat_tangent_rotate_normalize_out ___702_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{351} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:352
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_roughness_fg_tmp $const15 	%line{352} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:353
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___702_coat_affected_roughness_out image_roughness_out ___702_coat_affected_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{353} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:354
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___702_tangent_rotate_normalize_out ___702_tangent_rotate_out 	%line{354} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:355
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_transmission_roughness_fg_tmp $const15 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:356
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___702_coat_affected_transmission_roughness_out ___702_transmission_roughness_clamped_out ___702_coat_affected_transmission_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{356} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:357
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___702_coat_gamma_in2_tmp $const15 	%line{357} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:358
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___702_coat_gamma_out ___702_coat_gamma_multiply_out ___702_coat_gamma_in2_tmp 	%line{358} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:359
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___702_coat_ior_to_F0_out ___702_coat_ior_to_F0_sqrt_out ___702_coat_ior_to_F0_sqrt_out 	%line{359} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:360
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___702_coat_tangent_value2_tmp $const5 	%line{360} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:361
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp272 SR_wood1_coat_anisotropy ___702_coat_tangent_value2_tmp 	%line{361} %argrw{"wrr"}
	functioncall	$const32 539 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp272 537 539 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_coat_tangent_out ___702_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:362
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___702_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{362} %argrw{"wr"}
	assign		___702_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:363
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const36 560 	%line{363} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:132
#     if (anisotropy > 0.0)
	mul		$tmp273 ___702_coat_affected_roughness_out ___702_coat_affected_roughness_out 	%line{132} %argrw{"wrr"}
	functioncall	$const38 546 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 $tmp273 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp274 $const37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:133
#     {
	gt		$tmp275 SR_wood1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{133} %argrw{"wrr"}
	if		$tmp275 558 560 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const38 551 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp277 SR_wood1_specular_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp276 $tmp277 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp278 $const15 $tmp276 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{135} %argrw{"wrr"}
	sqrt		___679_aspect $tmp278 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:136
#         result.y = roughness_sqr * aspect;
	div		$tmp279 ___678_roughness_sqr ___679_aspect 	%line{136} %argrw{"wrr"}
	min		___702_main_roughness_out.x $tmp279 $const15 	%argrw{"wrr"}
	assign		___702_main_roughness_out.x ___702_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:137
#     }
	mul		___702_main_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{137} %argrw{"wrr"}
	assign		___702_main_roughness_out.y ___702_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:141
#         result.y = roughness_sqr;
	assign		___702_main_roughness_out.x ___678_roughness_sqr 	%line{141} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:142
#     }
	assign		___702_main_roughness_out.y ___678_roughness_sqr 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:364
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___702_main_tangent_value2_tmp $const5 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:365
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp280 SR_wood1_specular_anisotropy ___702_main_tangent_value2_tmp 	%line{365} %argrw{"wrr"}
	functioncall	$const32 568 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp280 566 568 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_main_tangent_out ___702_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:366
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___702_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{366} %argrw{"wr"}
	assign		___702_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:367
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const36 589 	%line{367} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:132
#     if (anisotropy > 0.0)
	mul		$tmp281 ___702_coat_affected_transmission_roughness_out ___702_coat_affected_transmission_roughness_out 	%line{132} %argrw{"wrr"}
	functioncall	$const38 575 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp282 $tmp281 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp282 $const37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:133
#     {
	gt		$tmp283 SR_wood1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{133} %argrw{"wrr"}
	if		$tmp283 587 589 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const38 580 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp285 SR_wood1_specular_anisotropy $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp284 $tmp285 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:135
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp286 $const15 $tmp284 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{135} %argrw{"wrr"}
	sqrt		___679_aspect $tmp286 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:136
#         result.y = roughness_sqr * aspect;
	div		$tmp287 ___678_roughness_sqr ___679_aspect 	%line{136} %argrw{"wrr"}
	min		___702_transmission_roughness_out.x $tmp287 $const15 	%argrw{"wrr"}
	assign		___702_transmission_roughness_out.x ___702_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:137
#     }
	mul		___702_transmission_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{137} %argrw{"wrr"}
	assign		___702_transmission_roughness_out.y ___702_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:141
#         result.y = roughness_sqr;
	assign		___702_transmission_roughness_out.x ___678_roughness_sqr 	%line{141} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:142
#     }
	assign		___702_transmission_roughness_out.y ___678_roughness_sqr 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:368
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___702_coat_affected_subsurface_color_out ___702_subsurface_color_nonnegative_out ___702_coat_gamma_out 	%line{368} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:369
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___702_coat_affected_diffuse_color_out ___702_base_color_nonnegative_out ___702_coat_gamma_out 	%line{369} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:370
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___702_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:371
#     color emission_color0_out = color(0.0);
	sub		___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_in1_tmp ___702_coat_ior_to_F0_out 	%line{371} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:372
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___702_emission_color0_out $const6 	%line{372} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:373
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const53 597 	%line{373} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:208
#     out = combine_out;
	color		___687_combine_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out 	%line{208} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:209
# }
	assign		___702_emission_color0_out ___687_combine_out 	%line{209} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:374
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___702_coat_bsdf_out ___702_null_closure 	%line{374} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:375
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const57 609 	%line{375} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:192
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp289 $const56 $const58 	%line{192} %argrw{"wrr"}
	if		$tmp289 602 603 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint $const41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:193
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp290 $const56 $const56 	%line{193} %argrw{"wrr"}
	if		$tmp290 606 607 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint $const41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:194
# }
	closure		$tmp291 $const61 geomprop_Nworld_out1 ___702_coat_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.y SR_wood1_coat_IOR $const55 $const59 $const5 $const60 $const54 	%line{194} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_coat_bsdf_out $tmp291 SR_wood1_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:376
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___702_metal_bsdf_weight_tmp $const15 	%line{376} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:377
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___702_metal_bsdf_distribution_tmp $const55 	%line{377} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:378
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp292 $const62 geomprop_Nworld_out1 ___702_main_tangent_out ___702_main_roughness_out.x ___702_main_roughness_out.y ___702_artistic_ior_ior ___702_artistic_ior_extinction ___702_metal_bsdf_distribution_tmp $const59 SR_wood1_thin_film_thickness $const60 SR_wood1_thin_film_IOR 	%line{378} %argrw{"wrrrrrrrrrrrr"}
	mul		___702_metal_bsdf_out $tmp292 ___702_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:379
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___702_specular_bsdf_out ___702_null_closure 	%line{379} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:380
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const57 625 	%line{380} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:192
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp293 $const56 $const58 	%line{192} %argrw{"wrr"}
	if		$tmp293 618 619 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint SR_wood1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:193
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp294 $const56 $const56 	%line{193} %argrw{"wrr"}
	if		$tmp294 622 623 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint SR_wood1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:194
# }
	closure		$tmp295 $const61 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_main_roughness_out.x ___702_main_roughness_out.y SR_wood1_specular_IOR $const55 $const59 SR_wood1_thin_film_thickness $const60 SR_wood1_thin_film_IOR 	%line{194} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_specular_bsdf_out $tmp295 SR_wood1_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:381
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___702_transmission_bsdf_out ___702_null_closure 	%line{381} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:382
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const57 637 	%line{382} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:192
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp296 $const58 $const58 	%line{192} %argrw{"wrr"}
	if		$tmp296 630 631 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint SR_wood1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:193
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp297 $const58 $const56 	%line{193} %argrw{"wrr"}
	if		$tmp297 634 635 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint SR_wood1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:194
# }
	closure		$tmp298 $const61 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_transmission_roughness_out.x ___702_transmission_roughness_out.y SR_wood1_specular_IOR $const55 $const59 $const5 $const60 $const54 	%line{194} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_transmission_bsdf_out $tmp298 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:383
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp299 $const63 geomprop_Nworld_out1 SR_wood1_sheen_color SR_wood1_sheen_roughness 	%line{383} %argrw{"wrrrr"}
	mul		___702_sheen_bsdf_out $tmp299 SR_wood1_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:384
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___702_translucent_bsdf_weight_tmp $const15 	%line{384} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:385
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp300 $const64 geomprop_Nworld_out1 ___702_coat_affected_subsurface_color_out 	%line{385} %argrw{"wrrr"}
	mul		___702_translucent_bsdf_out $tmp300 ___702_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:386
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___702_subsurface_bsdf_out ___702_null_closure 	%line{386} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:387
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const65 646 	%line{387} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:202
# #endif
	mul		$tmp301 $const15 ___702_coat_affected_subsurface_color_out 	%line{202} %argrw{"wrr"}
	closure		___702_subsurface_bsdf_out $const66 geomprop_Nworld_out1 $tmp301 $const15 ___702_subsurface_radius_scaled_out SR_wood1_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:388
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const67 651 	%line{388} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp302 $const15 ___702_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp303 ___702_subsurface_bsdf_out $tmp302 	%argrw{"wrr"}
	mul		$tmp304 ___702_translucent_bsdf_out ___702_subsurface_selector_out 	%argrw{"wrr"}
	add		___702_selected_subsurface_bsdf_out $tmp303 $tmp304 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:389
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp305 $const68 geomprop_Nworld_out1 ___702_coat_affected_diffuse_color_out SR_wood1_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{389} %argrw{"wrrrr"}
	mul		___702_diffuse_bsdf_out $tmp305 SR_wood1_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:390
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const67 658 	%line{390} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp306 $const15 SR_wood1_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp307 ___702_diffuse_bsdf_out $tmp306 	%argrw{"wrr"}
	mul		$tmp308 ___702_selected_subsurface_bsdf_out SR_wood1_subsurface 	%argrw{"wrr"}
	add		___702_subsurface_mix_out $tmp307 $tmp308 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:391
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___702_sheen_layer_out $const69 ___702_sheen_bsdf_out ___702_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{391} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:392
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const67 664 	%line{392} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp309 $const15 SR_wood1_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp310 ___702_sheen_layer_out $tmp309 	%argrw{"wrr"}
	mul		$tmp311 ___702_transmission_bsdf_out SR_wood1_transmission 	%argrw{"wrr"}
	add		___702_transmission_mix_out $tmp310 $tmp311 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:393
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___702_specular_layer_out $const69 ___702_specular_bsdf_out ___702_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{393} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:394
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const67 670 	%line{394} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp312 $const15 SR_wood1_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp313 ___702_specular_layer_out $tmp312 	%argrw{"wrr"}
	mul		$tmp314 ___702_metal_bsdf_out SR_wood1_metalness 	%argrw{"wrr"}
	add		___702_metalness_mix_out $tmp313 $tmp314 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:395
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___702_thin_film_layer_attenuated_out ___702_metalness_mix_out ___702_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{395} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:396
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___702_coat_layer_out $const69 ___702_coat_bsdf_out ___702_thin_film_layer_attenuated_out 	%line{396} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:397
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___702_emission_edf_out $const70 ___702_emission_weight_out 	%line{397} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:398
#     EDF coat_emission_edf_out = null_closure;
	mul		___702_coat_tinted_emission_edf_out ___702_emission_edf_out SR_wood1_coat_color 	%line{398} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:399
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___702_coat_emission_edf_out ___702_null_closure 	%line{399} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:400
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const72 687 	%line{400} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:293
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp317 I 	%line{293} %argrw{"wr"}
	dot		$tmp316 N $tmp317 	%argrw{"wrr"}
	fabs		___700_NdotV $tmp316 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:294
#     result = base * f;
	functioncall	$const73 686 	%line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:287
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp318 $const15 ___700_NdotV 	%line{287} %argrw{"wrr"}
	functioncall	$const38 684 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp319 $tmp318 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_x $tmp319 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:288
# }
	pow		$tmp320 ___699_x $const71 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{288} %argrw{"wrr"}
	mix		___700_f ___702_emission_color0_out $const6 $tmp320 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:295
# }
	mul		___702_coat_emission_edf_out ___702_coat_tinted_emission_edf_out ___700_f 	%line{295} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:401
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const67 692 	%line{401} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp321 $const15 SR_wood1_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp322 ___702_emission_edf_out $tmp321 	%argrw{"wrr"}
	mul		$tmp323 ___702_coat_emission_edf_out SR_wood1_coat 	%argrw{"wrr"}
	add		___702_blended_coat_emission_edf_out $tmp322 $tmp323 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:402
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___702_shader_constructor_out.bsdf ___702_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{402} %argrw{"wr"}
	assign		___702_shader_constructor_out.edf ___702_null_closure 	%argrw{"wr"}
	assign		___702_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:403
#     out = shader_constructor_out;
	functioncall	$const74 702 	%line{403} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:300
#     result.edf     = edf;
	assign		___702_shader_constructor_out.bsdf ___702_coat_layer_out 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:301
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___702_shader_constructor_out.edf ___702_blended_coat_emission_edf_out 	%line{301} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:302
# }
	functioncall	$const38 701 	%line{302} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp324 ___702_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_shader_constructor_out.opacity $tmp324 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:302
# }
	assign		___702_shader_constructor_out.opacity ___702_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:404
# }
	assign		SR_wood1_out.bsdf ___702_shader_constructor_out.bsdf 	%line{404} %argrw{"wr"}
	assign		SR_wood1_out.edf ___702_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_wood1_out.opacity ___702_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:842
#     out = Tiled_Wood_out;
	functioncall	$const75 715 	%line{842} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:409
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const38 709 	%line{409} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp325 SR_wood1_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___703_opacity_weight $tmp325 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:410
# }
	add		$tmp326 SR_wood1_out.bsdf SR_wood1_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl"} %line{410} %argrw{"wrr"}
	mul		$tmp327 $tmp326 ___703_opacity_weight 	%argrw{"wrr"}
	closure		$tmp328 $const76 	%argrw{"wr"}
	sub		$tmp329 $const15 ___703_opacity_weight 	%argrw{"wrr"}
	mul		$tmp330 $tmp328 $tmp329 	%argrw{"wrr"}
	add		Tiled_Wood_out $tmp327 $tmp330 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\StandardSurface\\standard_surface_wood_tiled\\Tiled_Wood.osl:843
# }
	assign		out Tiled_Wood_out 	%line{843} %argrw{"wr"}
	end
