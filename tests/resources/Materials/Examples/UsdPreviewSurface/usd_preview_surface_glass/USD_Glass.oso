OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\Examples\UsdPreviewSurface\usd_preview_surface_glass\USD_Glass.oso
shader USD_Glass	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"USD_Glass"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	color	SR_glass_diffuseColor	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Diffuse Color"}  %read{87,270} %write{2147483647,-1}
param	color	SR_glass_emissiveColor	0 0 0		%meta{color,min,0,0,0} %meta{color,slidermax,1,1,1} %meta{string,label,"Emissive Color"}  %read{322,322} %write{2147483647,-1}
param	int	SR_glass_useSpecularWorkflow	0		%meta{int,min,0} %meta{int,max,1} %meta{int,sensitivity,1} %meta{string,label,"Use Specular Workflow"} %meta{string,widget,"number"}  %read{70,70} %write{2147483647,-1}
param	color	SR_glass_specularColor	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"}  %read{267,267} %write{2147483647,-1}
param	float	SR_glass_metallic	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metallic"} %meta{string,widget,"number"}  %read{69,314} %write{2147483647,-1}
param	float	SR_glass_roughness	0.00999999978		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Roughness"} %meta{string,widget,"number"}  %read{50,50} %write{2147483647,-1}
param	float	SR_glass_clearcoat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat"} %meta{string,widget,"number"}  %read{256,256} %write{2147483647,-1}
param	float	SR_glass_clearcoatRoughness	0.00999999978		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat Roughness"} %meta{string,widget,"number"}  %read{18,18} %write{2147483647,-1}
param	float	SR_glass_opacity	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity"} %meta{string,widget,"number"}  %read{79,126} %write{2147483647,-1}
param	int	SR_glass_opacityMode	0		%meta{string,label,"Opacity Mode"} %meta{string,widget,"number"}  %read{159,231} %write{2147483647,-1}
param	float	SR_glass_opacityThreshold	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity Threshold"} %meta{string,widget,"number"}  %read{74,112} %write{2147483647,-1}
param	float	SR_glass_ior	1.51999998		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,widget,"number"}  %read{12,284} %write{2147483647,-1}
param	vector	SR_glass_normal	0 0 1		%meta{vector,min,-1,-1,-1} %meta{vector,max,1,1,1} %meta{string,label,"Normal"}  %read{46,46} %write{2147483647,-1}
param	float	SR_glass_displacement	0		%meta{string,label,"Displacement"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_glass_occlusion	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Occlusion"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{346,346}
global	normal	N	%read{6,43} %write{2147483647,-1}
local	float	___669_roughness_sqr	%read{29,67} %write{21,53}
local	float	___670_aspect	%read{29,64} %write{28,60}
local	color	___672_r	%read{89,103} %write{88,88}
local	color	___672_r_sqrt	%read{93,94} %write{89,89}
local	color	___672_n_min	%read{96,96} %write{92,92}
local	color	___672_n_max	%read{96,96} %write{95,95}
local	color	___672_np1	%read{99,99} %write{97,97}
local	color	___672_nm1	%read{101,101} %write{98,98}
local	color	___672_k2	%read{106,107} %write{104,106}
local	vector	___673_decodedValue	%read{144,151} %write{141,143}
local	int	___677_ifgreater_10_value1_tmp	%read{159,159} %write{157,157}
local	float	___677_ifgreater_10_in2_tmp	%read{164,164} %write{158,158}
local	float	___677_ifgreater_10_out	%read{172,172} %write{162,164}
local	int	___677_ifgreater_9_value1_tmp	%read{167,167} %write{166,166}
local	float	___677_ifgreater_9_out	%read{180,180} %write{170,172}
local	int	___677_ifgreater_8_value1_tmp	%read{175,175} %write{174,174}
local	float	___677_ifgreater_8_out	%read{188,188} %write{178,180}
local	int	___677_ifgreater_7_value1_tmp	%read{183,183} %write{182,182}
local	float	___677_ifgreater_7_out	%read{196,196} %write{186,188}
local	int	___677_ifgreater_6_value1_tmp	%read{191,191} %write{190,190}
local	float	___677_ifgreater_6_out	%read{204,204} %write{194,196}
local	int	___677_ifgreater_5_value1_tmp	%read{199,199} %write{198,198}
local	float	___677_ifgreater_5_out	%read{212,212} %write{202,204}
local	int	___677_ifgreater_4_value1_tmp	%read{207,207} %write{206,206}
local	float	___677_ifgreater_4_out	%read{220,220} %write{210,212}
local	int	___677_ifgreater_3_value1_tmp	%read{215,215} %write{214,214}
local	float	___677_ifgreater_3_out	%read{228,228} %write{218,220}
local	int	___677_ifgreater_2_value1_tmp	%read{223,223} %write{222,222}
local	float	___677_ifgreater_2_out	%read{236,236} %write{226,228}
local	int	___677_ifgreater_1_value1_tmp	%read{231,231} %write{230,230}
local	float	___677_ifgreater_1_out	%read{238,238} %write{234,236}
local	color	___678_combine_out	%read{242,242} %write{241,241}
local	color	___679_reflection_tint	%read{255,308} %write{249,303}
local	color	___679_transmission_tint	%read{255,308} %write{253,307}
local	color	___680_reflection_tint	%read{284,284} %write{278,279}
local	color	___680_transmission_tint	%read{284,284} %write{282,283}
local	closure color	___682_null_closure	%read{245,324} %write{5,5}
local	vector	___682_geomprop_Tworld_out1	%read{145,308} %write{10,10}
local	float	___682_one_minus_ior_in1_tmp	%read{12,12} %write{11,11}
local	float	___682_one_minus_ior_out	%read{119,119} %write{12,12}
local	float	___682_one_plus_ior_in1_tmp	%read{14,14} %write{13,13}
local	float	___682_one_plus_ior_out	%read{119,119} %write{14,14}
local	float	___682_coat_roughness_out.x	%read{31,255} %write{15,34} %mystruct{___682_coat_roughness_out} %mystructfield{0}
local	float	___682_coat_roughness_out.y	%read{33,255} %write{16,35} %mystruct{___682_coat_roughness_out} %mystructfield{1}
local	string	___682_geomprop_Nworld_space_tmp	%read{38,38} %write{36,36}
local	vector	___682_geomprop_Nworld_out1	%read{152,152} %write{38,38}
local	vector	___682_geomprop_Bworld_out1	%read{148,148} %write{44,44}
local	float	___682_scale_normal_in2_tmp	%read{46,46} %write{45,45}
local	vector	___682_scale_normal_out	%read{121,121} %write{46,46}
local	float	___682_specular_roughness_out.x	%read{63,308} %write{47,66} %mystruct{___682_specular_roughness_out} %mystructfield{0}
local	float	___682_specular_roughness_out.y	%read{65,308} %write{48,67} %mystruct{___682_specular_roughness_out} %mystructfield{1}
local	float	___682_inverse_metalness_in1_tmp	%read{69,69} %write{68,68}
local	float	___682_inverse_metalness_out	%read{123,123} %write{69,69}
local	float	___682_use_specular_workflow_float_out	%read{123,319} %write{71,71}
local	float	___682_transmission_mix_amount_value2_tmp	%read{74,74} %write{72,72}
local	float	___682_transmission_mix_amount_in1_tmp	%read{77,77} %write{73,73}
local	float	___682_transmission_mix_amount_out	%read{287,289} %write{77,79}
local	color	___682_artistic_ior_ior	%read{97,296} %write{81,96}
local	color	___682_artistic_ior_extinction	%read{296,296} %write{82,107}
local	color	___682_specular_color_metallic_bg_tmp	%read{109,109} %write{108,108}
local	color	___682_specular_color_metallic_out	%read{243,308} %write{109,109}
local	float	___682_cutout_opacity_in1_tmp	%read{115,115} %write{110,110}
local	float	___682_cutout_opacity_in2_tmp	%read{117,117} %write{111,111}
local	float	___682_cutout_opacity_out	%read{131,234} %write{115,117}
local	float	___682_R_out	%read{133,133} %write{119,119}
local	float	___682_bias_normal_in2_tmp	%read{121,121} %write{120,120}
local	vector	___682_bias_normal_out	%read{139,142} %write{121,121}
local	float	___682_diffuse_bsdf_weight_fg_tmp	%read{123,123} %write{122,122}
local	float	___682_diffuse_bsdf_weight_out	%read{271,271} %write{123,123}
local	float	___682_opacity_presence_value2_tmp	%read{126,126} %write{124,124}
local	float	___682_opacity_presence_in1_tmp	%read{129,129} %write{125,125}
local	float	___682_opacity_presence_out	%read{226,226} %write{129,131}
local	float	___682_R_sq_out	%read{241,243} %write{133,133}
local	vector	___682_surface_normal_out	%read{255,308} %write{134,154}
local	float	___682_opacity_switch_out	%read{330,330} %write{155,238}
local	color	___682_coat_F0_out	%read{255,255} %write{239,242}
local	color	___682_specular_color_metallic_R_sq_out	%read{244,244} %write{243,243}
local	color	___682_F0_out	%read{308,308} %write{244,244}
local	closure color	___682_coat_dielectric_bsdf_out	%read{321,321} %write{245,256}
local	closure color	___682_specular_bsdf1_out	%read{291,291} %write{257,268}
local	float	___682_diffuse_bsdf_roughness_tmp	%read{270,270} %write{269,269}
local	closure color	___682_diffuse_bsdf_out	%read{289,289} %write{271,271}
local	closure color	___682_transmission_bsdf_out	%read{288,288} %write{272,285}
local	closure color	___682_transmission_mix_out	%read{291,310} %write{290,290}
local	closure color	___682_specular_workflow_bsdf_out	%read{319,319} %write{291,291}
local	float	___682_metalness_metal_bsdf_weight_tmp	%read{297,297} %write{292,292}
local	string	___682_metalness_metal_bsdf_distribution_tmp	%read{296,296} %write{293,293}
local	float	___682_metalness_metal_bsdf_thinfilm_thickness_tmp	%read{296,296} %write{294,294}
local	float	___682_metalness_metal_bsdf_thinfilm_ior_tmp	%read{296,296} %write{295,295}
local	closure color	___682_metalness_metal_bsdf_out	%read{314,314} %write{297,297}
local	closure color	___682_specular_bsdf2_out	%read{310,310} %write{298,309}
local	closure color	___682_metalness_specular_bsdf_out	%read{313,313} %write{310,310}
local	closure color	___682_metalness_workflow_bsdf_out	%read{318,318} %write{315,315}
local	closure color	___682_workflow_selector_bsdf_out	%read{321,321} %write{320,320}
local	closure color	___682_coat_bsdf_out	%read{327,327} %write{321,321}
local	closure color	___682_emission_edf_out	%read{328,328} %write{322,322}
local	closure color	___682_surface_constructor_out.bsdf	%read{333,333} %write{323,327} %mystruct{___682_surface_constructor_out} %mystructfield{0}
local	closure color	___682_surface_constructor_out.edf	%read{334,334} %write{324,328} %mystruct{___682_surface_constructor_out} %mystructfield{1}
local	float	___682_surface_constructor_out.opacity	%read{332,335} %write{325,332} %mystruct{___682_surface_constructor_out} %mystructfield{2}
local	float	___683_opacity_weight	%read{341,343} %write{339,339}
local	closure color	null_closure	%read{1,2} %write{0,0}
local	closure color	SR_glass_out.bsdf	%read{340,340} %write{1,333} %mystruct{SR_glass_out} %mystructfield{0}
local	closure color	SR_glass_out.edf	%read{340,340} %write{2,334} %mystruct{SR_glass_out} %mystructfield{1}
local	float	SR_glass_out.opacity	%read{338,338} %write{3,335} %mystruct{SR_glass_out} %mystructfield{2}
local	closure color	USD_Glass_out	%read{346,346} %write{345,345}
const	int	$const1	0		%read{0,144} %write{2147483647,-1}
const	float	$const2	1		%read{3,343} %write{2147483647,-1}
const	string	$const3	"IMP_UsdPreviewSurface_surfaceshader"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{10,10} %write{9,9}
const	int	$const4	2		%read{6,222} %write{2147483647,-1}
temp	float	$tmp2	%read{9,9} %write{6,6}
const	float	$const5	0		%read{9,339} %write{2147483647,-1}
temp	float	$tmp3	%read{8,8} %write{7,7}
temp	float	$tmp4	%read{9,9} %write{8,8}
const	string	$const6	"mx_roughness_anisotropy"		%read{17,49} %write{2147483647,-1}
temp	float	$tmp5	%read{20,20} %write{18,18}
const	float	$const7	1e-08		%read{21,53} %write{2147483647,-1}
const	string	$const8	"clamp"		%read{19,337} %write{2147483647,-1}
temp	float	$tmp6	%read{21,21} %write{20,20}
temp	int	$tmp7	%read{23,23} %write{22,22}
temp	float	$tmp8	%read{27,27} %write{26,26}
const	float	$const9	0.98		%read{25,57} %write{2147483647,-1}
temp	float	$tmp9	%read{26,26} %write{25,25}
temp	float	$tmp10	%read{28,28} %write{27,27}
temp	float	$tmp11	%read{30,30} %write{29,29}
const	string	$const10	"world"		%read{36,36} %write{2147483647,-1}
const	string	$const11	"transform"		%read{37,37} %write{2147483647,-1}
const	string	$const12	"common"		%read{38,38} %write{2147483647,-1}
temp	vector	$tmp12	%read{44,44} %write{43,43}
temp	vector	$tmp13	%read{43,43} %write{42,42}
temp	float	$tmp14	%read{42,42} %write{39,39}
temp	float	$tmp15	%read{41,41} %write{40,40}
temp	float	$tmp16	%read{42,42} %write{41,41}
const	float	$const13	0.5		%read{45,120} %write{2147483647,-1}
temp	float	$tmp17	%read{52,52} %write{50,50}
temp	float	$tmp18	%read{53,53} %write{52,52}
temp	int	$tmp19	%read{55,55} %write{54,54}
temp	float	$tmp20	%read{59,59} %write{58,58}
temp	float	$tmp21	%read{58,58} %write{57,57}
temp	float	$tmp22	%read{60,60} %write{59,59}
temp	float	$tmp23	%read{62,62} %write{61,61}
temp	float	$tmp24	%read{71,71} %write{70,70}
temp	int	$tmp25	%read{76,76} %write{74,74}
const	string	$const14	"mx_ternary"		%read{75,232} %write{2147483647,-1}
const	color	$const15	0 0 0		%read{81,306} %write{2147483647,-1}
const	string	$const16	"mx_artistic_ior"		%read{83,83} %write{2147483647,-1}
temp	color	$tmp26	%read{88,88} %write{84,84}
const	float	$const17	0.99		%read{85,85} %write{2147483647,-1}
temp	color	$tmp27	%read{87,87} %write{85,85}
temp	color	$tmp28	%read{88,88} %write{87,87}
temp	color	$tmp29	%read{92,92} %write{90,90}
temp	color	$tmp30	%read{92,92} %write{91,91}
temp	color	$tmp31	%read{95,95} %write{93,93}
temp	color	$tmp32	%read{95,95} %write{94,94}
temp	color	$tmp33	%read{100,100} %write{99,99}
temp	color	$tmp34	%read{102,102} %write{100,100}
temp	color	$tmp35	%read{102,102} %write{101,101}
temp	color	$tmp36	%read{104,104} %write{102,102}
temp	color	$tmp37	%read{104,104} %write{103,103}
temp	color	$tmp38	%read{106,106} %write{105,105}
const	color	$const18	1 1 1		%read{108,307} %write{2147483647,-1}
temp	int	$tmp39	%read{114,114} %write{112,112}
temp	int	$tmp40	%read{128,128} %write{126,126}
const	vector	$const19	0 0 0		%read{134,139} %write{2147483647,-1}
const	string	$const20	"mx_normalmap_float"		%read{135,135} %write{2147483647,-1}
temp	float	$tmp41.x	%read{146,146} %write{136,136}
temp	float	$tmp41.y	%read{149,149} %write{137,137}
const	string	$const21	"mx_normalmap_vector2"		%read{138,138} %write{2147483647,-1}
temp	int	$tmp43	%read{140,140} %write{139,139}
const	vector	$const22	0 0 1		%read{141,141} %write{2147483647,-1}
const	float	$const23	2		%read{142,142} %write{2147483647,-1}
temp	vector	$tmp44	%read{143,143} %write{142,142}
temp	float	$tmp45	%read{145,145} %write{144,144}
temp	vector	$tmp46	%read{146,146} %write{145,145}
temp	vector	$tmp47	%read{150,150} %write{146,146}
const	int	$const24	1		%read{147,230} %write{2147483647,-1}
temp	float	$tmp48	%read{148,148} %write{147,147}
temp	vector	$tmp49	%read{149,149} %write{148,148}
temp	vector	$tmp50	%read{150,150} %write{149,149}
temp	vector	$tmp51	%read{153,153} %write{150,150}
temp	float	$tmp52	%read{152,152} %write{151,151}
temp	vector	$tmp53	%read{153,153} %write{152,152}
temp	vector	$tmp54	%read{154,154} %write{153,153}
const	string	$const25	"NG_switch_floatI"		%read{156,156} %write{2147483647,-1}
const	int	$const26	10		%read{157,157} %write{2147483647,-1}
temp	int	$tmp55	%read{161,161} %write{159,159}
const	int	$const27	9		%read{166,166} %write{2147483647,-1}
temp	int	$tmp56	%read{169,169} %write{167,167}
const	int	$const28	8		%read{174,174} %write{2147483647,-1}
temp	int	$tmp57	%read{177,177} %write{175,175}
const	int	$const29	7		%read{182,182} %write{2147483647,-1}
temp	int	$tmp58	%read{185,185} %write{183,183}
const	int	$const30	6		%read{190,190} %write{2147483647,-1}
temp	int	$tmp59	%read{193,193} %write{191,191}
const	int	$const31	5		%read{198,198} %write{2147483647,-1}
temp	int	$tmp60	%read{201,201} %write{199,199}
const	int	$const32	4		%read{206,206} %write{2147483647,-1}
temp	int	$tmp61	%read{209,209} %write{207,207}
const	int	$const33	3		%read{214,214} %write{2147483647,-1}
temp	int	$tmp62	%read{217,217} %write{215,215}
temp	int	$tmp63	%read{225,225} %write{223,223}
temp	int	$tmp64	%read{233,233} %write{231,231}
const	string	$const34	"NG_convert_float_color3"		%read{240,240} %write{2147483647,-1}
const	float	$const35	5		%read{255,308} %write{2147483647,-1}
const	float	$const36	1.5		%read{255,308} %write{2147483647,-1}
const	string	$const37	"ggx"		%read{255,308} %write{2147483647,-1}
const	string	$const38	"R"		%read{247,304} %write{2147483647,-1}
const	string	$const39	"mx_generalized_schlick_bsdf"		%read{246,299} %write{2147483647,-1}
const	string	$const40	"T"		%read{247,300} %write{2147483647,-1}
temp	int	$tmp67	%read{248,248} %write{247,247}
temp	int	$tmp68	%read{252,252} %write{251,251}
temp	closure color	$tmp69	%read{256,256} %write{255,255}
const	string	$const41	"thinfilm_thickness"		%read{255,308} %write{2147483647,-1}
const	string	$const42	"thinfilm_ior"		%read{255,308} %write{2147483647,-1}
const	string	$const43	"generalized_schlick_bsdf"		%read{255,308} %write{2147483647,-1}
temp	int	$tmp72	%read{260,260} %write{259,259}
temp	int	$tmp73	%read{264,264} %write{263,263}
temp	closure color	$tmp74	%read{268,268} %write{267,267}
temp	closure color	$tmp75	%read{271,271} %write{270,270}
const	string	$const44	"oren_nayar_diffuse_bsdf"		%read{270,270} %write{2147483647,-1}
temp	float	$tmp77.x	%read{284,284} %write{273,273}
temp	float	$tmp77.y	%read{284,284} %write{274,274}
const	string	$const45	"mx_dielectric_bsdf"		%read{275,275} %write{2147483647,-1}
temp	int	$tmp78	%read{277,277} %write{276,276}
temp	int	$tmp79	%read{281,281} %write{280,280}
temp	closure color	$tmp80	%read{285,285} %write{284,284}
const	string	$const46	"dielectric_bsdf"		%read{284,284} %write{2147483647,-1}
const	string	$const47	"mix"		%read{286,316} %write{2147483647,-1}
temp	float	$tmp81	%read{288,288} %write{287,287}
temp	closure color	$tmp82	%read{290,290} %write{288,288}
temp	closure color	$tmp83	%read{290,290} %write{289,289}
const	string	$const48	"layer"		%read{291,321} %write{2147483647,-1}
temp	closure color	$tmp84	%read{297,297} %write{296,296}
const	string	$const49	"conductor_bsdf"		%read{296,296} %write{2147483647,-1}
temp	int	$tmp86	%read{301,301} %write{300,300}
temp	int	$tmp87	%read{305,305} %write{304,304}
temp	closure color	$tmp88	%read{309,309} %write{308,308}
temp	float	$tmp89	%read{313,313} %write{312,312}
temp	closure color	$tmp90	%read{315,315} %write{313,313}
temp	closure color	$tmp91	%read{315,315} %write{314,314}
temp	float	$tmp92	%read{318,318} %write{317,317}
temp	closure color	$tmp93	%read{320,320} %write{318,318}
temp	closure color	$tmp94	%read{320,320} %write{319,319}
const	string	$const50	"uniform_edf"		%read{322,322} %write{2147483647,-1}
const	string	$const51	"mx_surface"		%read{326,326} %write{2147483647,-1}
temp	float	$tmp95	%read{331,331} %write{330,330}
const	string	$const52	"mx_surfacematerial"		%read{336,336} %write{2147483647,-1}
temp	float	$tmp96	%read{339,339} %write{338,338}
temp	closure color	$tmp97	%read{341,341} %write{340,340}
temp	closure color	$tmp98	%read{345,345} %write{341,341}
temp	closure color	$tmp99	%read{344,344} %write{342,342}
const	string	$const53	"transparent"		%read{342,342} %write{2147483647,-1}
temp	float	$tmp100	%read{344,344} %write{343,343}
temp	closure color	$tmp101	%read{345,345} %write{344,344}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:316
#     surfaceshader SR_glass_out = surfaceshader(null_closure, null_closure, 1.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:317
#     IMP_UsdPreviewSurface_surfaceshader(SR_glass_diffuseColor, SR_glass_emissiveColor, SR_glass_useSpecularWorkflow, SR_glass_specularColor, SR_glass_metallic, SR_glass_roughness, SR_glass_clearcoat, SR_glass_clearcoatRoughness, SR_glass_opacity, SR_glass_opacityMode, SR_glass_opacityThreshold, SR_glass_ior, SR_glass_normal, SR_glass_displacement, SR_glass_occlusion, SR_glass_out);
	assign		SR_glass_out.bsdf null_closure 	%line{317} %argrw{"wr"}
	assign		SR_glass_out.edf null_closure 	%argrw{"wr"}
	assign		SR_glass_out.opacity $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:318
#     MATERIAL USD_Glass_out = mx_surfacematerial(SR_glass_out, backsurfaceshader, displacementshader1);
	functioncall	$const3 336 	%line{318} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:127
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	assign		___682_null_closure $const1 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:128
#     float one_minus_ior_in1_tmp = 1.000000;
	compref		$tmp2 N $const4 	%line{128} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	___682_geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:129
#     float one_minus_ior_out = one_minus_ior_in1_tmp - ior;
	assign		___682_one_minus_ior_in1_tmp $const2 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:130
#     float one_plus_ior_in1_tmp = 1.000000;
	sub		___682_one_minus_ior_out ___682_one_minus_ior_in1_tmp SR_glass_ior 	%line{130} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:131
#     float one_plus_ior_out = one_plus_ior_in1_tmp + ior;
	assign		___682_one_plus_ior_in1_tmp $const2 	%line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:132
#     vector2 coat_roughness_out = vector2(0.0, 0.0);
	add		___682_one_plus_ior_out ___682_one_plus_ior_in1_tmp SR_glass_ior 	%line{132} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:133
#     mx_roughness_anisotropy(clearcoatRoughness, 0.000000, coat_roughness_out);
	assign		___682_coat_roughness_out.x $const5 	%line{133} %argrw{"wr"}
	assign		___682_coat_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:134
#     string geomprop_Nworld_space_tmp = "world";
	functioncall	$const6 36 	%line{134} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:20
#     if (anisotropy > 0.0)
	mul		$tmp5 SR_glass_clearcoatRoughness SR_glass_clearcoatRoughness 	%line{20} %argrw{"wrr"}
	functioncall	$const8 22 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 $tmp5 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___669_roughness_sqr $tmp6 $const7 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:21
#     {
	gt		$tmp7 $const5 $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{21} %argrw{"wrr"}
	if		$tmp7 34 36 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const8 27 	%line{23} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp9 $const5 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp8 $tmp9 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp10 $const2 $tmp8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{23} %argrw{"wrr"}
	sqrt		___670_aspect $tmp10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:24
#         result.y = roughness_sqr * aspect;
	div		$tmp11 ___669_roughness_sqr ___670_aspect 	%line{24} %argrw{"wrr"}
	min		___682_coat_roughness_out.x $tmp11 $const2 	%argrw{"wrr"}
	assign		___682_coat_roughness_out.x ___682_coat_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:25
#     }
	mul		___682_coat_roughness_out.y ___669_roughness_sqr ___670_aspect 	%line{25} %argrw{"wrr"}
	assign		___682_coat_roughness_out.y ___682_coat_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:29
#         result.y = roughness_sqr;
	assign		___682_coat_roughness_out.x ___669_roughness_sqr 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:30
#     }
	assign		___682_coat_roughness_out.y ___669_roughness_sqr 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:135
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space_tmp, N);
	assign		___682_geomprop_Nworld_space_tmp $const10 	%line{135} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:136
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	functioncall	$const11 39 	%line{136} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	___682_geomprop_Nworld_out1 $const12 ___682_geomprop_Nworld_space_tmp N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:137
#     float scale_normal_in2_tmp = 0.500000;
	compref		$tmp14 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{137} %argrw{"wrr"}
	compref		$tmp15 N $const1 	%argrw{"wrr"}
	neg		$tmp16 $tmp15 	%argrw{"wr"}
	vector		$tmp13 $tmp14 $const5 $tmp16 	%argrw{"wrrr"}
	cross		$tmp12 N $tmp13 	%argrw{"wrr"}
	normalize	___682_geomprop_Bworld_out1 $tmp12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:138
#     vector scale_normal_out = normal1 * scale_normal_in2_tmp;
	assign		___682_scale_normal_in2_tmp $const13 	%line{138} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:139
#     vector2 specular_roughness_out = vector2(0.0, 0.0);
	mul		___682_scale_normal_out SR_glass_normal ___682_scale_normal_in2_tmp 	%line{139} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:140
#     mx_roughness_anisotropy(roughness, 0.000000, specular_roughness_out);
	assign		___682_specular_roughness_out.x $const5 	%line{140} %argrw{"wr"}
	assign		___682_specular_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:141
#     float inverse_metalness_in1_tmp = 1.000000;
	functioncall	$const6 68 	%line{141} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:20
#     if (anisotropy > 0.0)
	mul		$tmp17 SR_glass_roughness SR_glass_roughness 	%line{20} %argrw{"wrr"}
	functioncall	$const8 54 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp18 $tmp17 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___669_roughness_sqr $tmp18 $const7 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:21
#     {
	gt		$tmp19 $const5 $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{21} %argrw{"wrr"}
	if		$tmp19 66 68 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const8 59 	%line{23} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp21 $const5 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp20 $tmp21 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp22 $const2 $tmp20 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{23} %argrw{"wrr"}
	sqrt		___670_aspect $tmp22 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:24
#         result.y = roughness_sqr * aspect;
	div		$tmp23 ___669_roughness_sqr ___670_aspect 	%line{24} %argrw{"wrr"}
	min		___682_specular_roughness_out.x $tmp23 $const2 	%argrw{"wrr"}
	assign		___682_specular_roughness_out.x ___682_specular_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:25
#     }
	mul		___682_specular_roughness_out.y ___669_roughness_sqr ___670_aspect 	%line{25} %argrw{"wrr"}
	assign		___682_specular_roughness_out.y ___682_specular_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:29
#         result.y = roughness_sqr;
	assign		___682_specular_roughness_out.x ___669_roughness_sqr 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:30
#     }
	assign		___682_specular_roughness_out.y ___669_roughness_sqr 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:142
#     float inverse_metalness_out = inverse_metalness_in1_tmp - metallic;
	assign		___682_inverse_metalness_in1_tmp $const2 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:143
#     float use_specular_workflow_float_out = float(useSpecularWorkflow);
	sub		___682_inverse_metalness_out ___682_inverse_metalness_in1_tmp SR_glass_metallic 	%line{143} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:144
#     float transmission_mix_amount_value2_tmp = 0.000000;
	assign		$tmp24 SR_glass_useSpecularWorkflow 	%line{144} %argrw{"wr"}
	assign		___682_use_specular_workflow_float_out $tmp24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:145
#     float transmission_mix_amount_in1_tmp = 1.000000;
	assign		___682_transmission_mix_amount_value2_tmp $const5 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:146
#     float transmission_mix_amount_out = mx_ternary(opacityThreshold > transmission_mix_amount_value2_tmp, transmission_mix_amount_in1_tmp, opacity);
	assign		___682_transmission_mix_amount_in1_tmp $const2 	%line{146} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:147
#     color artistic_ior_ior = color(0.0);
	gt		$tmp25 SR_glass_opacityThreshold ___682_transmission_mix_amount_value2_tmp 	%line{147} %argrw{"wrr"}
	functioncall	$const14 81 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp25 79 81 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_transmission_mix_amount_out ___682_transmission_mix_amount_in1_tmp 	%argrw{"wr"}
	return
	assign		___682_transmission_mix_amount_out SR_glass_opacity 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:148
#     color artistic_ior_extinction = color(0.0);
	assign		___682_artistic_ior_ior $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{148} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:149
#     mx_artistic_ior(diffuseColor, diffuseColor, artistic_ior_ior, artistic_ior_extinction);
	assign		___682_artistic_ior_extinction $const15 	%line{149} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:150
#     color specular_color_metallic_bg_tmp = color(1.000000, 1.000000, 1.000000);
	functioncall	$const16 108 	%line{150} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:39
#     color r_sqrt = sqrt(r);
	assign		$tmp26 $const5 	%line{39} %argrw{"wr"}
	assign		$tmp27 $const17 	%argrw{"wr"}
	functioncall	$const8 89 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp28 SR_glass_diffuseColor $tmp27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___672_r $tmp28 $tmp26 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:40
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___672_r_sqrt ___672_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:41
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp29 $const2 ___672_r 	%line{41} %argrw{"wrr"}
	add		$tmp30 $const2 ___672_r 	%argrw{"wrr"}
	div		___672_n_min $tmp29 $tmp30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:42
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp31 $const2 ___672_r_sqrt 	%line{42} %argrw{"wrr"}
	sub		$tmp32 $const2 ___672_r_sqrt 	%argrw{"wrr"}
	div		___672_n_max $tmp31 $tmp32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:43
# 
	mix		___682_artistic_ior_ior ___672_n_max ___672_n_min SR_glass_diffuseColor 	%line{43} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:45
#     color nm1 = ior - 1.0;
	add		___672_np1 ___682_artistic_ior_ior $const2 	%line{45} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:46
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___672_nm1 ___682_artistic_ior_ior $const2 	%line{46} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:47
#     k2 = max(k2, 0.0);
	mul		$tmp33 ___672_np1 ___672_np1 	%line{47} %argrw{"wrr"}
	mul		$tmp34 $tmp33 ___672_r 	%argrw{"wrr"}
	mul		$tmp35 ___672_nm1 ___672_nm1 	%argrw{"wrr"}
	sub		$tmp36 $tmp34 $tmp35 	%argrw{"wrr"}
	sub		$tmp37 $const2 ___672_r 	%argrw{"wrr"}
	div		___672_k2 $tmp36 $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:48
#     extinction = sqrt(k2);
	assign		$tmp38 $const5 	%line{48} %argrw{"wr"}
	max		___672_k2 ___672_k2 $tmp38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:49
# }
	sqrt		___682_artistic_ior_extinction ___672_k2 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:151
#     color specular_color_metallic_out = mix(specular_color_metallic_bg_tmp, diffuseColor, metallic);
	assign		___682_specular_color_metallic_bg_tmp $const18 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:152
#     float cutout_opacity_in1_tmp = 1.000000;
	mix		___682_specular_color_metallic_out ___682_specular_color_metallic_bg_tmp SR_glass_diffuseColor SR_glass_metallic 	%line{152} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:153
#     float cutout_opacity_in2_tmp = 0.000000;
	assign		___682_cutout_opacity_in1_tmp $const2 	%line{153} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:154
#     float cutout_opacity_out = mx_ternary(opacity >= opacityThreshold, cutout_opacity_in1_tmp, cutout_opacity_in2_tmp);
	assign		___682_cutout_opacity_in2_tmp $const5 	%line{154} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:155
#     float R_out = one_minus_ior_out / one_plus_ior_out;
	ge		$tmp39 SR_glass_opacity SR_glass_opacityThreshold 	%line{155} %argrw{"wrr"}
	functioncall	$const14 119 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp39 117 119 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_cutout_opacity_out ___682_cutout_opacity_in1_tmp 	%argrw{"wr"}
	return
	assign		___682_cutout_opacity_out ___682_cutout_opacity_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:156
#     float bias_normal_in2_tmp = 0.500000;
	div		___682_R_out ___682_one_minus_ior_out ___682_one_plus_ior_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{156} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:157
#     vector bias_normal_out = scale_normal_out + bias_normal_in2_tmp;
	assign		___682_bias_normal_in2_tmp $const13 	%line{157} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:158
#     float diffuse_bsdf_weight_fg_tmp = 1.000000;
	add		___682_bias_normal_out ___682_scale_normal_out ___682_bias_normal_in2_tmp 	%line{158} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:159
#     float diffuse_bsdf_weight_out = mix(inverse_metalness_out, diffuse_bsdf_weight_fg_tmp, use_specular_workflow_float_out);
	assign		___682_diffuse_bsdf_weight_fg_tmp $const2 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:160
#     float opacity_presence_value2_tmp = 0.000000;
	mix		___682_diffuse_bsdf_weight_out ___682_inverse_metalness_out ___682_diffuse_bsdf_weight_fg_tmp ___682_use_specular_workflow_float_out 	%line{160} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:161
#     float opacity_presence_in1_tmp = 0.000000;
	assign		___682_opacity_presence_value2_tmp $const5 	%line{161} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:162
#     float opacity_presence_out = mx_ternary(opacity == opacity_presence_value2_tmp, opacity_presence_in1_tmp, cutout_opacity_out);
	assign		___682_opacity_presence_in1_tmp $const5 	%line{162} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:163
#     float R_sq_out = R_out * R_out;
	eq		$tmp40 SR_glass_opacity ___682_opacity_presence_value2_tmp 	%line{163} %argrw{"wrr"}
	functioncall	$const14 133 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp40 131 133 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_opacity_presence_out ___682_opacity_presence_in1_tmp 	%argrw{"wr"}
	return
	assign		___682_opacity_presence_out ___682_cutout_opacity_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:164
#     vector surface_normal_out = vector(0.0);
	mul		___682_R_sq_out ___682_R_out ___682_R_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{164} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:165
#     mx_normalmap_float(bias_normal_out, 1.000000, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, surface_normal_out);
	assign		___682_surface_normal_out $const19 	%line{165} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:166
#     float opacity_switch_out = 0.0;
	functioncall	$const20 155 	%line{166} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:69
# }
	assign		$tmp41.x $const2 	%line{69} %argrw{"wr"}
	assign		$tmp41.y $const2 	%argrw{"wr"}
	functioncall	$const21 155 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:55
#     {
	eq		$tmp43 ___682_bias_normal_out $const19 	%line{55} %argrw{"wrr"}
	if		$tmp43 142 144 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:57
#     }
	assign		___673_decodedValue $const22 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:61
#     }
	mul		$tmp44 ___682_bias_normal_out $const23 	%line{61} %argrw{"wrr"}
	sub		___673_decodedValue $tmp44 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:64
# }
	compref		$tmp45 ___673_decodedValue $const1 	%line{64} %argrw{"wrr"}
	mul		$tmp46 ___682_geomprop_Tworld_out1 $tmp45 	%argrw{"wrr"}
	mul		$tmp47 $tmp46 $tmp41.x 	%argrw{"wrr"}
	compref		$tmp48 ___673_decodedValue $const24 	%argrw{"wrr"}
	mul		$tmp49 ___682_geomprop_Bworld_out1 $tmp48 	%argrw{"wrr"}
	mul		$tmp50 $tmp49 $tmp41.y 	%argrw{"wrr"}
	add		$tmp51 $tmp47 $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___673_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp53 ___682_geomprop_Nworld_out1 $tmp52 	%argrw{"wrr"}
	add		$tmp54 $tmp51 $tmp53 	%argrw{"wrr"}
	normalize	___682_surface_normal_out $tmp54 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:167
#     NG_switch_floatI(cutout_opacity_out, opacity_presence_out, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, opacityMode, opacity_switch_out);
	assign		___682_opacity_switch_out $const5 	%line{167} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:168
#     color coat_F0_out = color(0.0);
	functioncall	$const25 239 	%line{168} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:74
#     float ifgreater_10_in2_tmp = 0.000000;
	assign		___677_ifgreater_10_value1_tmp $const26 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:75
#     float ifgreater_10_out = mx_ternary(ifgreater_10_value1_tmp > which, in10, ifgreater_10_in2_tmp);
	assign		___677_ifgreater_10_in2_tmp $const5 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:76
#     int ifgreater_9_value1_tmp = 9;
	gt		$tmp55 ___677_ifgreater_10_value1_tmp SR_glass_opacityMode 	%line{76} %argrw{"wrr"}
	functioncall	$const14 166 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp55 164 166 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_10_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_10_out ___677_ifgreater_10_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:77
#     float ifgreater_9_out = mx_ternary(ifgreater_9_value1_tmp > which, in9, ifgreater_10_out);
	assign		___677_ifgreater_9_value1_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:78
#     int ifgreater_8_value1_tmp = 8;
	gt		$tmp56 ___677_ifgreater_9_value1_tmp SR_glass_opacityMode 	%line{78} %argrw{"wrr"}
	functioncall	$const14 174 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp56 172 174 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_9_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_9_out ___677_ifgreater_10_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:79
#     float ifgreater_8_out = mx_ternary(ifgreater_8_value1_tmp > which, in8, ifgreater_9_out);
	assign		___677_ifgreater_8_value1_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:80
#     int ifgreater_7_value1_tmp = 7;
	gt		$tmp57 ___677_ifgreater_8_value1_tmp SR_glass_opacityMode 	%line{80} %argrw{"wrr"}
	functioncall	$const14 182 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp57 180 182 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_8_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_8_out ___677_ifgreater_9_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:81
#     float ifgreater_7_out = mx_ternary(ifgreater_7_value1_tmp > which, in7, ifgreater_8_out);
	assign		___677_ifgreater_7_value1_tmp $const29 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:82
#     int ifgreater_6_value1_tmp = 6;
	gt		$tmp58 ___677_ifgreater_7_value1_tmp SR_glass_opacityMode 	%line{82} %argrw{"wrr"}
	functioncall	$const14 190 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp58 188 190 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_7_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_7_out ___677_ifgreater_8_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:83
#     float ifgreater_6_out = mx_ternary(ifgreater_6_value1_tmp > which, in6, ifgreater_7_out);
	assign		___677_ifgreater_6_value1_tmp $const30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:84
#     int ifgreater_5_value1_tmp = 5;
	gt		$tmp59 ___677_ifgreater_6_value1_tmp SR_glass_opacityMode 	%line{84} %argrw{"wrr"}
	functioncall	$const14 198 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp59 196 198 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_6_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_6_out ___677_ifgreater_7_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:85
#     float ifgreater_5_out = mx_ternary(ifgreater_5_value1_tmp > which, in5, ifgreater_6_out);
	assign		___677_ifgreater_5_value1_tmp $const31 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:86
#     int ifgreater_4_value1_tmp = 4;
	gt		$tmp60 ___677_ifgreater_5_value1_tmp SR_glass_opacityMode 	%line{86} %argrw{"wrr"}
	functioncall	$const14 206 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp60 204 206 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_5_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_5_out ___677_ifgreater_6_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:87
#     float ifgreater_4_out = mx_ternary(ifgreater_4_value1_tmp > which, in4, ifgreater_5_out);
	assign		___677_ifgreater_4_value1_tmp $const32 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:88
#     int ifgreater_3_value1_tmp = 3;
	gt		$tmp61 ___677_ifgreater_4_value1_tmp SR_glass_opacityMode 	%line{88} %argrw{"wrr"}
	functioncall	$const14 214 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp61 212 214 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_4_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_4_out ___677_ifgreater_5_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:89
#     float ifgreater_3_out = mx_ternary(ifgreater_3_value1_tmp > which, in3, ifgreater_4_out);
	assign		___677_ifgreater_3_value1_tmp $const33 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:90
#     int ifgreater_2_value1_tmp = 2;
	gt		$tmp62 ___677_ifgreater_3_value1_tmp SR_glass_opacityMode 	%line{90} %argrw{"wrr"}
	functioncall	$const14 222 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp62 220 222 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_3_out $const5 	%argrw{"wr"}
	return
	assign		___677_ifgreater_3_out ___677_ifgreater_4_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:91
#     float ifgreater_2_out = mx_ternary(ifgreater_2_value1_tmp > which, in2, ifgreater_3_out);
	assign		___677_ifgreater_2_value1_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:92
#     int ifgreater_1_value1_tmp = 1;
	gt		$tmp63 ___677_ifgreater_2_value1_tmp SR_glass_opacityMode 	%line{92} %argrw{"wrr"}
	functioncall	$const14 230 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp63 228 230 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_2_out ___682_opacity_presence_out 	%argrw{"wr"}
	return
	assign		___677_ifgreater_2_out ___677_ifgreater_3_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:93
#     float ifgreater_1_out = mx_ternary(ifgreater_1_value1_tmp > which, in1, ifgreater_2_out);
	assign		___677_ifgreater_1_value1_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:94
#     out = ifgreater_1_out;
	gt		$tmp64 ___677_ifgreater_1_value1_tmp SR_glass_opacityMode 	%line{94} %argrw{"wrr"}
	functioncall	$const14 238 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp64 236 238 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___677_ifgreater_1_out ___682_cutout_opacity_out 	%argrw{"wr"}
	return
	assign		___677_ifgreater_1_out ___677_ifgreater_2_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:95
# }
	assign		___682_opacity_switch_out ___677_ifgreater_1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:169
#     NG_convert_float_color3(R_sq_out, coat_F0_out);
	assign		___682_coat_F0_out $const15 	%line{169} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:170
#     color specular_color_metallic_R_sq_out = specular_color_metallic_out * R_sq_out;
	functioncall	$const34 243 	%line{170} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:100
#     out = combine_out;
	color		___678_combine_out ___682_R_sq_out ___682_R_sq_out ___682_R_sq_out 	%line{100} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:101
# }
	assign		___682_coat_F0_out ___678_combine_out 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:171
#     color F0_out = mix(specular_color_metallic_R_sq_out, specular_color_metallic_out, metallic);
	mul		___682_specular_color_metallic_R_sq_out ___682_specular_color_metallic_out ___682_R_sq_out 	%line{171} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:172
#     BSDF coat_dielectric_bsdf_out = null_closure;
	mix		___682_F0_out ___682_specular_color_metallic_R_sq_out ___682_specular_color_metallic_out SR_glass_metallic 	%line{172} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:173
#     mx_generalized_schlick_bsdf(clearcoat, coat_F0_out, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, coat_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", coat_dielectric_bsdf_out);
	assign		___682_coat_dielectric_bsdf_out ___682_null_closure 	%line{173} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:174
#     BSDF specular_bsdf1_out = null_closure;
	functioncall	$const39 257 	%line{174} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:106
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp67 $const38 $const40 	%line{106} %argrw{"wrr"}
	if		$tmp67 250 251 	%argrw{"r"}
	assign		___679_reflection_tint $const15 	%argrw{"wr"}
	assign		___679_reflection_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:107
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp68 $const38 $const38 	%line{107} %argrw{"wrr"}
	if		$tmp68 254 255 	%argrw{"r"}
	assign		___679_transmission_tint $const15 	%argrw{"wr"}
	assign		___679_transmission_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:108
# }
	closure		$tmp69 $const43 ___682_surface_normal_out ___682_geomprop_Tworld_out1 ___679_reflection_tint ___679_transmission_tint ___682_coat_roughness_out.x ___682_coat_roughness_out.y ___682_coat_F0_out $const18 $const35 $const37 $const41 $const5 $const42 $const36 	%line{108} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___682_coat_dielectric_bsdf_out $tmp69 SR_glass_clearcoat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:175
#     mx_generalized_schlick_bsdf(1.000000, specularColor, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf1_out);
	assign		___682_specular_bsdf1_out ___682_null_closure 	%line{175} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:176
#     float diffuse_bsdf_roughness_tmp = 0.000000;
	functioncall	$const39 269 	%line{176} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:106
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp72 $const38 $const40 	%line{106} %argrw{"wrr"}
	if		$tmp72 262 263 	%argrw{"r"}
	assign		___679_reflection_tint $const15 	%argrw{"wr"}
	assign		___679_reflection_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:107
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp73 $const38 $const38 	%line{107} %argrw{"wrr"}
	if		$tmp73 266 267 	%argrw{"r"}
	assign		___679_transmission_tint $const15 	%argrw{"wr"}
	assign		___679_transmission_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:108
# }
	closure		$tmp74 $const43 ___682_surface_normal_out ___682_geomprop_Tworld_out1 ___679_reflection_tint ___679_transmission_tint ___682_specular_roughness_out.x ___682_specular_roughness_out.y SR_glass_specularColor $const18 $const35 $const37 $const41 $const5 $const42 $const36 	%line{108} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___682_specular_bsdf1_out $tmp74 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:177
#     BSDF diffuse_bsdf_out = diffuse_bsdf_weight_out * oren_nayar_diffuse_bsdf(surface_normal_out, diffuseColor, diffuse_bsdf_roughness_tmp);
	assign		___682_diffuse_bsdf_roughness_tmp $const5 	%line{177} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:178
#     BSDF transmission_bsdf_out = null_closure;
	closure		$tmp75 $const44 ___682_surface_normal_out SR_glass_diffuseColor ___682_diffuse_bsdf_roughness_tmp 	%line{178} %argrw{"wrrrr"}
	mul		___682_diffuse_bsdf_out $tmp75 ___682_diffuse_bsdf_weight_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:179
#     mx_dielectric_bsdf(1.000000, color(1.000000, 1.000000, 1.000000), ior, vector2(0.000000, 0.000000), 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "T", transmission_bsdf_out);
	assign		___682_transmission_bsdf_out ___682_null_closure 	%line{179} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:180
#     BSDF transmission_mix_out = mix(transmission_bsdf_out, diffuse_bsdf_out, transmission_mix_amount_out);
	assign		$tmp77.x $const5 	%line{180} %argrw{"wr"}
	assign		$tmp77.y $const5 	%argrw{"wr"}
	functioncall	$const45 286 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:113
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp78 $const40 $const40 	%line{113} %argrw{"wrr"}
	if		$tmp78 279 280 	%argrw{"r"}
	assign		___680_reflection_tint $const15 	%argrw{"wr"}
	assign		___680_reflection_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:114
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp79 $const40 $const38 	%line{114} %argrw{"wrr"}
	if		$tmp79 283 284 	%argrw{"r"}
	assign		___680_transmission_tint $const15 	%argrw{"wr"}
	assign		___680_transmission_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:115
# }
	closure		$tmp80 $const46 ___682_surface_normal_out ___682_geomprop_Tworld_out1 ___680_reflection_tint ___680_transmission_tint $tmp77.x $tmp77.y SR_glass_ior $const37 $const41 $const5 $const42 $const36 	%line{115} %argrw{"wrrrrrrrrrrrrr"}
	mul		___682_transmission_bsdf_out $tmp80 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:181
#     BSDF specular_workflow_bsdf_out = layer(specular_bsdf1_out, transmission_mix_out);
	functioncall	$const47 291 	%line{181} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp81 $const2 ___682_transmission_mix_amount_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp82 ___682_transmission_bsdf_out $tmp81 	%argrw{"wrr"}
	mul		$tmp83 ___682_diffuse_bsdf_out ___682_transmission_mix_amount_out 	%argrw{"wrr"}
	add		___682_transmission_mix_out $tmp82 $tmp83 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:182
#     float metalness_metal_bsdf_weight_tmp = 1.000000;
	closure		___682_specular_workflow_bsdf_out $const48 ___682_specular_bsdf1_out ___682_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{182} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:183
#     string metalness_metal_bsdf_distribution_tmp = "ggx";
	assign		___682_metalness_metal_bsdf_weight_tmp $const2 	%line{183} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:184
#     float metalness_metal_bsdf_thinfilm_thickness_tmp = 0.000000;
	assign		___682_metalness_metal_bsdf_distribution_tmp $const37 	%line{184} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:185
#     float metalness_metal_bsdf_thinfilm_ior_tmp = 1.500000;
	assign		___682_metalness_metal_bsdf_thinfilm_thickness_tmp $const5 	%line{185} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:186
#     BSDF metalness_metal_bsdf_out = metalness_metal_bsdf_weight_tmp * conductor_bsdf(surface_normal_out, geomprop_Tworld_out1, specular_roughness_out.x, specular_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metalness_metal_bsdf_distribution_tmp, "thinfilm_thickness", metalness_metal_bsdf_thinfilm_thickness_tmp, "thinfilm_ior", metalness_metal_bsdf_thinfilm_ior_tmp);
	assign		___682_metalness_metal_bsdf_thinfilm_ior_tmp $const36 	%line{186} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:187
#     BSDF specular_bsdf2_out = null_closure;
	closure		$tmp84 $const49 ___682_surface_normal_out ___682_geomprop_Tworld_out1 ___682_specular_roughness_out.x ___682_specular_roughness_out.y ___682_artistic_ior_ior ___682_artistic_ior_extinction ___682_metalness_metal_bsdf_distribution_tmp $const41 ___682_metalness_metal_bsdf_thinfilm_thickness_tmp $const42 ___682_metalness_metal_bsdf_thinfilm_ior_tmp 	%line{187} %argrw{"wrrrrrrrrrrrr"}
	mul		___682_metalness_metal_bsdf_out $tmp84 ___682_metalness_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:188
#     mx_generalized_schlick_bsdf(1.000000, F0_out, color(1.000000, 1.000000, 1.000000), specular_color_metallic_out, 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf2_out);
	assign		___682_specular_bsdf2_out ___682_null_closure 	%line{188} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:189
#     BSDF metalness_specular_bsdf_out = layer(specular_bsdf2_out, transmission_mix_out);
	functioncall	$const39 310 	%line{189} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:106
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp86 $const38 $const40 	%line{106} %argrw{"wrr"}
	if		$tmp86 303 304 	%argrw{"r"}
	assign		___679_reflection_tint $const15 	%argrw{"wr"}
	assign		___679_reflection_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:107
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp87 $const38 $const38 	%line{107} %argrw{"wrr"}
	if		$tmp87 307 308 	%argrw{"r"}
	assign		___679_transmission_tint $const15 	%argrw{"wr"}
	assign		___679_transmission_tint $const18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:108
# }
	closure		$tmp88 $const43 ___682_surface_normal_out ___682_geomprop_Tworld_out1 ___679_reflection_tint ___679_transmission_tint ___682_specular_roughness_out.x ___682_specular_roughness_out.y ___682_F0_out ___682_specular_color_metallic_out $const35 $const37 $const41 $const5 $const42 $const36 	%line{108} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___682_specular_bsdf2_out $tmp88 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:190
#     BSDF metalness_workflow_bsdf_out = mix(metalness_specular_bsdf_out, metalness_metal_bsdf_out, metallic);
	closure		___682_metalness_specular_bsdf_out $const48 ___682_specular_bsdf2_out ___682_transmission_mix_out 	%line{190} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:191
#     BSDF workflow_selector_bsdf_out = mix(metalness_workflow_bsdf_out, specular_workflow_bsdf_out, use_specular_workflow_float_out);
	functioncall	$const47 316 	%line{191} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp89 $const2 SR_glass_metallic 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp90 ___682_metalness_specular_bsdf_out $tmp89 	%argrw{"wrr"}
	mul		$tmp91 ___682_metalness_metal_bsdf_out SR_glass_metallic 	%argrw{"wrr"}
	add		___682_metalness_workflow_bsdf_out $tmp90 $tmp91 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:192
#     BSDF coat_bsdf_out = layer(coat_dielectric_bsdf_out, workflow_selector_bsdf_out);
	functioncall	$const47 321 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{192} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp92 $const2 ___682_use_specular_workflow_float_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp93 ___682_metalness_workflow_bsdf_out $tmp92 	%argrw{"wrr"}
	mul		$tmp94 ___682_specular_workflow_bsdf_out ___682_use_specular_workflow_float_out 	%argrw{"wrr"}
	add		___682_workflow_selector_bsdf_out $tmp93 $tmp94 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:193
#     EDF emission_edf_out = uniform_edf(emissiveColor);
	closure		___682_coat_bsdf_out $const48 ___682_coat_dielectric_bsdf_out ___682_workflow_selector_bsdf_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{193} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:194
#     surfaceshader surface_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	closure		___682_emission_edf_out $const50 SR_glass_emissiveColor 	%line{194} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:195
#     mx_surface(coat_bsdf_out, emission_edf_out, opacity_switch_out, 0, surface_constructor_out);
	assign		___682_surface_constructor_out.bsdf ___682_null_closure 	%line{195} %argrw{"wr"}
	assign		___682_surface_constructor_out.edf ___682_null_closure 	%argrw{"wr"}
	assign		___682_surface_constructor_out.opacity $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:196
#     out = surface_constructor_out;
	functioncall	$const51 333 	%line{196} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:120
#     result.edf     = edf;
	assign		___682_surface_constructor_out.bsdf ___682_coat_bsdf_out 	%line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:121
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___682_surface_constructor_out.edf ___682_emission_edf_out 	%line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:122
# }
	functioncall	$const8 332 	%line{122} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp95 ___682_opacity_switch_out $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___682_surface_constructor_out.opacity $tmp95 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:122
# }
	assign		___682_surface_constructor_out.opacity ___682_surface_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:197
# }
	assign		SR_glass_out.bsdf ___682_surface_constructor_out.bsdf 	%line{197} %argrw{"wr"}
	assign		SR_glass_out.edf ___682_surface_constructor_out.edf 	%argrw{"wr"}
	assign		SR_glass_out.opacity ___682_surface_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:319
#     out = USD_Glass_out;
	functioncall	$const52 346 	%line{319} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:202
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const8 340 	%line{202} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp96 SR_glass_out.opacity $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___683_opacity_weight $tmp96 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:203
# }
	add		$tmp97 SR_glass_out.bsdf SR_glass_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl"} %line{203} %argrw{"wrr"}
	mul		$tmp98 $tmp97 ___683_opacity_weight 	%argrw{"wrr"}
	closure		$tmp99 $const53 	%argrw{"wr"}
	sub		$tmp100 $const2 ___683_opacity_weight 	%argrw{"wrr"}
	mul		$tmp101 $tmp99 $tmp100 	%argrw{"wrr"}
	add		USD_Glass_out $tmp98 $tmp101 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\Examples\\UsdPreviewSurface\\usd_preview_surface_glass\\USD_Glass.osl:320
# }
	assign		out USD_Glass_out 	%line{320} %argrw{"wr"}
	end
