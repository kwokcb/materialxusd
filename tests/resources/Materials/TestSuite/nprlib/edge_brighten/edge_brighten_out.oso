OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\nprlib\edge_brighten\edge_brighten_out.oso
shader edge_brighten_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"out"} 
param	string	geomprop_Vworld_space	"world"		%read{1,1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{3,3} %write{2147483647,-1}
param	int	facingratio_float_faceforward	1		%meta{string,widget,"checkBox"}  %read{11,11} %write{2147483647,-1}
param	int	facingratio_float_invert	1		%meta{string,widget,"checkBox"}  %read{21,21} %write{2147483647,-1}
param	float	power_float_in2	3		%meta{string,widget,"number"}  %read{29,29} %write{2147483647,-1}
param	color	mix_color3_fg	0.735293984 0.735293984 0.735293984		%read{30,30} %write{2147483647,-1}
param	color	mix_color3_bg	0 0.0986189991 0.186275005		%read{30,30} %write{2147483647,-1}
oparam	color	out	0 0 0		%read{2147483647,-1} %write{31,31}
global	vector	I	%read{1,1} %write{2147483647,-1}
global	normal	N	%read{3,3} %write{2147483647,-1}
local	float	___669_N_dotproduct_out	%read{7,9} %write{6,6}
local	float	___669_N_absval_out	%read{14,14} %write{7,7}
local	float	___669_N_scale_in2_tmp	%read{9,9} %write{8,8}
local	float	___669_N_scale_out	%read{16,16} %write{9,9}
local	int	___669_N_facing_value2_tmp	%read{11,11} %write{10,10}
local	float	___669_N_facing_out	%read{19,26} %write{14,16}
local	float	___669_N_invert_amount_tmp	%read{19,19} %write{18,18}
local	float	___669_N_invert_out	%read{24,24} %write{19,19}
local	int	___669_N_result_value2_tmp	%read{21,21} %write{20,20}
local	float	___669_N_result_out	%read{28,28} %write{24,26}
local	vector	geomprop_Vworld_out1	%read{6,6} %write{1,1}
local	vector	geomprop_Nworld_out1	%read{6,6} %write{3,3}
local	float	facingratio_float_out	%read{29,29} %write{4,28}
local	float	power_float_out	%read{30,30} %write{29,29}
local	color	mix_color3_out	%read{31,31} %write{30,30}
const	string	$const1	"transform"		%read{0,2} %write{2147483647,-1}
const	string	$const2	"common"		%read{1,3} %write{2147483647,-1}
const	float	$const3	0		%read{4,4} %write{2147483647,-1}
const	string	$const4	"NG_facingratio_float"		%read{5,5} %write{2147483647,-1}
const	float	$const5	-1		%read{8,8} %write{2147483647,-1}
const	int	$const6	1		%read{10,20} %write{2147483647,-1}
temp	int	$tmp1	%read{13,13} %write{11,11}
const	string	$const7	"mx_ternary"		%read{12,22} %write{2147483647,-1}
const	float	$const8	1		%read{18,18} %write{2147483647,-1}
temp	int	$tmp2	%read{23,23} %write{21,21}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:58
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const1 2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl"} %line{58} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:262
# vector transform (string to, vector p) { return transform("common",to,p); }
	transformv	geomprop_Vworld_out1 $const2 geomprop_Vworld_space I 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{262} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:59
#     float facingratio_float_out = 0.0;
	functioncall	$const1 4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl"} %line{59} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const2 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:60
#     NG_facingratio_float(geomprop_Vworld_out1, geomprop_Nworld_out1, facingratio_float_faceforward, facingratio_float_invert, facingratio_float_out);
	assign		facingratio_float_out $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl"} %line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:61
#     float power_float_out = pow(facingratio_float_out, power_float_in2);
	functioncall	$const4 29 	%line{61} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:20
#     float N_absval_out = abs(N_dotproduct_out);
	dot		___669_N_dotproduct_out geomprop_Vworld_out1 geomprop_Nworld_out1 	%line{20} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:21
#     float N_scale_in2_tmp = -1.000000;
	abs		___669_N_absval_out ___669_N_dotproduct_out 	%line{21} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:22
#     float N_scale_out = N_dotproduct_out * N_scale_in2_tmp;
	assign		___669_N_scale_in2_tmp $const5 	%line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:23
#     int N_facing_value2_tmp = 1;
	mul		___669_N_scale_out ___669_N_dotproduct_out ___669_N_scale_in2_tmp 	%line{23} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:24
#     float N_facing_out = mx_ternary(faceforward1 == N_facing_value2_tmp, N_absval_out, N_scale_out);
	assign		___669_N_facing_value2_tmp $const6 	%line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:25
#     float N_invert_amount_tmp = 1.000000;
	eq		$tmp1 facingratio_float_faceforward ___669_N_facing_value2_tmp 	%line{25} %argrw{"wrr"}
	functioncall	$const7 18 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp1 16 18 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___669_N_facing_out ___669_N_absval_out 	%argrw{"wr"}
	return
	assign		___669_N_facing_out ___669_N_scale_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:26
#     float N_invert_out = N_invert_amount_tmp - N_facing_out;
	assign		___669_N_invert_amount_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:27
#     int N_result_value2_tmp = 1;
	sub		___669_N_invert_out ___669_N_invert_amount_tmp ___669_N_facing_out 	%line{27} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:28
#     float N_result_out = mx_ternary(invert == N_result_value2_tmp, N_invert_out, N_facing_out);
	assign		___669_N_result_value2_tmp $const6 	%line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:29
#     out = N_result_out;
	eq		$tmp2 facingratio_float_invert ___669_N_result_value2_tmp 	%line{29} %argrw{"wrr"}
	functioncall	$const7 28 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp2 26 28 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___669_N_result_out ___669_N_invert_out 	%argrw{"wr"}
	return
	assign		___669_N_result_out ___669_N_facing_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:30
# }
	assign		facingratio_float_out ___669_N_result_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl"} %line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:62
#     color mix_color3_out = mix(mix_color3_bg, mix_color3_fg, power_float_out);
	pow		power_float_out facingratio_float_out power_float_in2 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:63
#     out = mix_color3_out;
	mix		mix_color3_out mix_color3_bg mix_color3_fg power_float_out 	%line{63} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\edge_brighten\\edge_brighten_out.osl:64
# }
	assign		out mix_color3_out 	%line{64} %argrw{"wr"}
	end
