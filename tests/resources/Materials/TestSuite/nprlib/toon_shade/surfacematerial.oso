OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\nprlib\toon_shade\surfacematerial.oso
shader surfacematerial	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"surfacematerial"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	color	toon_shade1_base_color	0.400000006 0.400000006 0.400000006		%meta{string,label,"Base Color"}  %read{59,59} %write{2147483647,-1}
param	color	toon_shade1_ambient_color	0.100000001 0.100000001 0.100000001		%meta{string,label,"Ambient Color"}  %read{43,43} %write{2147483647,-1}
param	color	toon_shade1_specular_color	0.769336998 0.872861028 0.599691987		%meta{string,label,"Specular Color"}  %read{56,56} %write{2147483647,-1}
param	float	toon_shade1_glossiness	16		%meta{string,label,"Glossiness"} %meta{float,min,1} %meta{float,max,256} %meta{string,widget,"number"}  %read{46,46} %write{2147483647,-1}
param	color	toon_shade1_rim_color	0.5 0.5 0.5		%meta{string,label,"Rim Color"}  %read{51,51} %write{2147483647,-1}
param	vector	toon_shade1_light_direction	1 -0.5 -0.5		%meta{string,label,"Light Direction"} %meta{vector,min,-1,-1,-1} %meta{vector,max,1,1,1}  %read{6,6} %write{2147483647,-1}
param	color	toon_shade1_light_color	0.968214989 0.968214989 0.968214989		%meta{string,label,"Light Color"}  %read{38,38} %write{2147483647,-1}
param	float	surface_unlit_emission	1		%meta{string,help,"Surface emission amount."} %meta{string,widget,"number"}  %read{74,74} %write{2147483647,-1}
param	float	surface_unlit_transmission	0		%meta{string,help,"Surface transmission amount."} %meta{string,widget,"number"}  %read{66,66} %write{2147483647,-1}
param	color	surface_unlit_transmission_color	1 1 1		%meta{string,help,"Surface transmission color."}  %read{69,69} %write{2147483647,-1}
param	float	surface_unlit_opacity	1		%meta{string,help,"Surface cutout opacity."} %meta{string,widget,"number"}  %read{79,79} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{92,92}
global	vector	I	%read{9,9} %write{2147483647,-1}
global	normal	N	%read{5,5} %write{2147483647,-1}
local	float	___669_NdotI_out	%read{25,25} %write{23,23}
local	float	___669_NdotI_2_in2_tmp	%read{25,25} %write{24,24}
local	float	___669_NdotI_2_out	%read{26,26} %write{25,25}
local	vector	___669_NdotI_N_2_out	%read{27,27} %write{26,26}
local	vector	___669_reflection_vector_out	%read{28,28} %write{27,27}
local	color	___670_combine_out	%read{55,55} %write{54,54}
local	string	___671_normal_space_tmp	%read{5,5} %write{3,3}
local	vector	___671_normal_out	%read{16,16} %write{5,5}
local	vector	___671_unit_light_direction_out	%read{18,18} %write{6,6}
local	string	___671_viewdirection_vector3_space_tmp	%read{9,9} %write{7,7}
local	vector	___671_viewdirection_vector3_out	%read{19,19} %write{9,9}
local	float	___671_add_float_in1_tmp	%read{12,12} %write{10,10}
local	float	___671_add_float_in2_tmp	%read{12,12} %write{11,11}
local	float	___671_add_float_out	%read{47,47} %write{12,12}
local	float	___671_subtract_float_in1_tmp	%read{15,15} %write{13,13}
local	float	___671_subtract_float_in2_tmp	%read{15,15} %write{14,14}
local	float	___671_subtract_float_out	%read{47,47} %write{15,15}
local	vector	___671_unit_normal_out	%read{20,37} %write{16,16}
local	vector	___671_multiply_vector4_in2_tmp	%read{18,18} %write{17,17}
local	vector	___671_multiply_vector4_out	%read{20,36} %write{18,18}
local	vector	___671_unit_viewdirection_out	%read{23,30} %write{19,19}
local	float	___671_NdotL_out	%read{33,35} %write{20,20}
local	vector	___671_reflect_out	%read{36,36} %write{21,28}
local	vector	___671_multiply_vector3_in2_tmp	%read{30,30} %write{29,29}
local	vector	___671_multiply_vector3_out	%read{37,37} %write{30,30}
local	float	___671_smooth_gradient_low_tmp	%read{33,33} %write{31,31}
local	float	___671_smooth_gradient_high_tmp	%read{33,33} %write{32,32}
local	float	___671_smooth_gradient_out	%read{38,44} %write{33,33}
local	float	___671_rim_power_in2_tmp	%read{35,35} %write{34,34}
local	float	___671_rim_power_out	%read{45,45} %write{35,35}
local	float	___671_LdotV_out	%read{40,40} %write{36,36}
local	float	___671_NdotV_out	%read{42,42} %write{37,37}
local	color	___671_gradient_light_out	%read{43,43} %write{38,38}
local	float	___671_max_float_in2_tmp	%read{40,40} %write{39,39}
local	float	___671_max_float_out	%read{44,44} %write{40,40}
local	float	___671_NdotV_invert_amount_tmp	%read{42,42} %write{41,41}
local	float	___671_NdotV_invert_out	%read{45,45} %write{42,42}
local	color	___671_add_color3_out	%read{57,57} %write{43,43}
local	float	___671_multiply_float_out	%read{46,46} %write{44,44}
local	float	___671_rmi_intensity_out	%read{47,47} %write{45,45}
local	float	___671_specular_intensity_power_out	%read{50,50} %write{46,46}
local	float	___671_rim_gradient_out	%read{51,51} %write{47,47}
local	float	___671_specular_remap_low_tmp	%read{50,50} %write{48,48}
local	float	___671_specular_remap_high_tmp	%read{50,50} %write{49,49}
local	float	___671_specular_remap_out	%read{54,54} %write{50,50}
local	color	___671_rim_out	%read{58,58} %write{51,51}
local	color	___671_specular_intensity_color_out	%read{56,56} %write{52,55}
local	color	___671_specular_out	%read{57,57} %write{56,56}
local	color	___671_add_color4_out	%read{58,58} %write{57,57}
local	color	___671_add_color5_out	%read{59,59} %write{58,58}
local	color	___671_multiply_color3_out	%read{60,60} %write{59,59}
local	float	___672_trans	%read{69,73} %write{67,67}
local	float	___673_opacity_weight	%read{87,89} %write{85,85}
local	closure color	null_closure	%read{61,62} %write{0,0}
local	color	toon_shade1_output_color3	%read{75,75} %write{1,60}
local	closure color	surface_unlit_out.bsdf	%read{71,86} %write{61,71} %mystruct{surface_unlit_out} %mystructfield{0}
local	closure color	surface_unlit_out.edf	%read{77,86} %write{62,77} %mystruct{surface_unlit_out} %mystructfield{1}
local	float	surface_unlit_out.opacity	%read{81,84} %write{63,81} %mystruct{surface_unlit_out} %mystructfield{2}
local	closure color	surfacematerial_out	%read{92,92} %write{91,91}
const	int	$const1	0		%read{0,0} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,52} %write{2147483647,-1}
const	string	$const3	"NG_toon_sample"		%read{2,2} %write{2147483647,-1}
const	string	$const4	"world"		%read{3,7} %write{2147483647,-1}
const	string	$const5	"transform"		%read{4,8} %write{2147483647,-1}
const	string	$const6	"common"		%read{5,9} %write{2147483647,-1}
const	float	$const7	0.7		%read{10,13} %write{2147483647,-1}
const	float	$const8	0.01		%read{11,14} %write{2147483647,-1}
const	vector	$const9	-1 -1 -1		%read{17,29} %write{2147483647,-1}
const	vector	$const10	0 0 0		%read{21,21} %write{2147483647,-1}
const	string	$const11	"NG_reflect_vector3"		%read{22,22} %write{2147483647,-1}
const	float	$const12	2		%read{24,24} %write{2147483647,-1}
const	float	$const13	0		%read{31,85} %write{2147483647,-1}
const	float	$const14	0.001		%read{32,32} %write{2147483647,-1}
const	float	$const15	0.1		%read{34,34} %write{2147483647,-1}
const	float	$const16	1		%read{41,89} %write{2147483647,-1}
const	float	$const17	0.005		%read{48,48} %write{2147483647,-1}
const	float	$const18	0.008		%read{49,49} %write{2147483647,-1}
const	string	$const19	"NG_convert_float_color3"		%read{53,53} %write{2147483647,-1}
const	string	$const20	"mx_surface_unlit"		%read{64,64} %write{2147483647,-1}
const	string	$const21	"clamp"		%read{65,83} %write{2147483647,-1}
temp	float	$tmp1	%read{67,67} %write{66,66}
temp	closure color	$tmp2	%read{70,70} %write{68,68}
const	string	$const22	"transparent"		%read{68,88} %write{2147483647,-1}
temp	color	$tmp3	%read{70,70} %write{69,69}
temp	closure color	$tmp4	%read{76,76} %write{72,72}
const	string	$const23	"emission"		%read{72,72} %write{2147483647,-1}
temp	float	$tmp5	%read{74,74} %write{73,73}
temp	float	$tmp6	%read{75,75} %write{74,74}
temp	color	$tmp7	%read{76,76} %write{75,75}
temp	float	$tmp8	%read{80,80} %write{79,79}
const	string	$const24	"mx_surfacematerial"		%read{82,82} %write{2147483647,-1}
temp	float	$tmp9	%read{85,85} %write{84,84}
temp	closure color	$tmp10	%read{87,87} %write{86,86}
temp	closure color	$tmp11	%read{91,91} %write{87,87}
temp	closure color	$tmp12	%read{90,90} %write{88,88}
temp	float	$tmp13	%read{90,90} %write{89,89}
temp	closure color	$tmp14	%read{91,91} %write{90,90}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:163
#     color toon_shade1_output_color3 = color(0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:164
#     NG_toon_sample(toon_shade1_base_color, toon_shade1_ambient_color, toon_shade1_specular_color, toon_shade1_glossiness, toon_shade1_rim_color, toon_shade1_light_direction, toon_shade1_light_color, toon_shade1_output_color3);
	assign		toon_shade1_output_color3 $const2 	%line{164} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:165
#     surfaceshader surface_unlit_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const3 61 	%line{165} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:36
#     vector normal_out = transform(normal_space_tmp, N);
	assign		___671_normal_space_tmp $const4 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:37
#     vector unit_light_direction_out = normalize(light_direction);
	functioncall	$const5 6 	%line{37} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	___671_normal_out $const6 ___671_normal_space_tmp N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:38
#     string viewdirection_vector3_space_tmp = "world";
	normalize	___671_unit_light_direction_out toon_shade1_light_direction 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:39
#     vector viewdirection_vector3_out = transform(viewdirection_vector3_space_tmp, I);
	assign		___671_viewdirection_vector3_space_tmp $const4 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:40
#     float add_float_in1_tmp = 0.700000;
	functioncall	$const5 10 	%line{40} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:262
# vector transform (string to, vector p) { return transform("common",to,p); }
	transformv	___671_viewdirection_vector3_out $const6 ___671_viewdirection_vector3_space_tmp I 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{262} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:41
#     float add_float_in2_tmp = 0.010000;
	assign		___671_add_float_in1_tmp $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{41} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:42
#     float add_float_out = add_float_in1_tmp + add_float_in2_tmp;
	assign		___671_add_float_in2_tmp $const8 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:43
#     float subtract_float_in1_tmp = 0.700000;
	add		___671_add_float_out ___671_add_float_in1_tmp ___671_add_float_in2_tmp 	%line{43} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:44
#     float subtract_float_in2_tmp = 0.010000;
	assign		___671_subtract_float_in1_tmp $const7 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:45
#     float subtract_float_out = subtract_float_in1_tmp - subtract_float_in2_tmp;
	assign		___671_subtract_float_in2_tmp $const8 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:46
#     vector unit_normal_out = normalize(normal_out);
	sub		___671_subtract_float_out ___671_subtract_float_in1_tmp ___671_subtract_float_in2_tmp 	%line{46} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:47
#     vector multiply_vector4_in2_tmp = vector(-1.000000, -1.000000, -1.000000);
	normalize	___671_unit_normal_out ___671_normal_out 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:48
#     vector multiply_vector4_out = unit_light_direction_out * multiply_vector4_in2_tmp;
	assign		___671_multiply_vector4_in2_tmp $const9 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:49
#     vector unit_viewdirection_out = normalize(viewdirection_vector3_out);
	mul		___671_multiply_vector4_out ___671_unit_light_direction_out ___671_multiply_vector4_in2_tmp 	%line{49} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:50
#     float NdotL_out = dot(unit_normal_out, multiply_vector4_out);
	normalize	___671_unit_viewdirection_out ___671_viewdirection_vector3_out 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:51
#     vector reflect_out = vector(0.0);
	dot		___671_NdotL_out ___671_unit_normal_out ___671_multiply_vector4_out 	%line{51} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:52
#     NG_reflect_vector3(unit_viewdirection_out, unit_normal_out, reflect_out);
	assign		___671_reflect_out $const10 	%line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:53
#     vector multiply_vector3_in2_tmp = vector(-1.000000, -1.000000, -1.000000);
	functioncall	$const11 29 	%line{53} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:20
#     float NdotI_2_in2_tmp = 2.000000;
	dot		___669_NdotI_out ___671_unit_normal_out ___671_unit_viewdirection_out 	%line{20} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:21
#     float NdotI_2_out = NdotI_out * NdotI_2_in2_tmp;
	assign		___669_NdotI_2_in2_tmp $const12 	%line{21} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:22
#     vector NdotI_N_2_out = normal1 * NdotI_2_out;
	mul		___669_NdotI_2_out ___669_NdotI_out ___669_NdotI_2_in2_tmp 	%line{22} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:23
#     vector reflection_vector_out = in - NdotI_N_2_out;
	mul		___669_NdotI_N_2_out ___671_unit_normal_out ___669_NdotI_2_out 	%line{23} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:24
#     out = reflection_vector_out;
	sub		___669_reflection_vector_out ___671_unit_viewdirection_out ___669_NdotI_N_2_out 	%line{24} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:25
# }
	assign		___671_reflect_out ___669_reflection_vector_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:54
#     vector multiply_vector3_out = unit_viewdirection_out * multiply_vector3_in2_tmp;
	assign		___671_multiply_vector3_in2_tmp $const9 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:55
#     float smooth_gradient_low_tmp = 0.000000;
	mul		___671_multiply_vector3_out ___671_unit_viewdirection_out ___671_multiply_vector3_in2_tmp 	%line{55} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:56
#     float smooth_gradient_high_tmp = 0.001000;
	assign		___671_smooth_gradient_low_tmp $const13 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:57
#     float smooth_gradient_out = smoothstep(smooth_gradient_low_tmp, smooth_gradient_high_tmp, NdotL_out);
	assign		___671_smooth_gradient_high_tmp $const14 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:58
#     float rim_power_in2_tmp = 0.100000;
	smoothstep	___671_smooth_gradient_out ___671_smooth_gradient_low_tmp ___671_smooth_gradient_high_tmp ___671_NdotL_out 	%line{58} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:59
#     float rim_power_out = pow(NdotL_out, rim_power_in2_tmp);
	assign		___671_rim_power_in2_tmp $const15 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:60
#     float LdotV_out = dot(multiply_vector4_out, reflect_out);
	pow		___671_rim_power_out ___671_NdotL_out ___671_rim_power_in2_tmp 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:61
#     float NdotV_out = dot(unit_normal_out, multiply_vector3_out);
	dot		___671_LdotV_out ___671_multiply_vector4_out ___671_reflect_out 	%line{61} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:62
#     color gradient_light_out = light_color * smooth_gradient_out;
	dot		___671_NdotV_out ___671_unit_normal_out ___671_multiply_vector3_out 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:63
#     float max_float_in2_tmp = 0.000000;
	mul		___671_gradient_light_out toon_shade1_light_color ___671_smooth_gradient_out 	%line{63} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:64
#     float max_float_out = max(LdotV_out, max_float_in2_tmp);
	assign		___671_max_float_in2_tmp $const13 	%line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:65
#     float NdotV_invert_amount_tmp = 1.000000;
	max		___671_max_float_out ___671_LdotV_out ___671_max_float_in2_tmp 	%line{65} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:66
#     float NdotV_invert_out = NdotV_invert_amount_tmp - NdotV_out;
	assign		___671_NdotV_invert_amount_tmp $const16 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:67
#     color add_color3_out = gradient_light_out + ambient_color;
	sub		___671_NdotV_invert_out ___671_NdotV_invert_amount_tmp ___671_NdotV_out 	%line{67} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:68
#     float multiply_float_out = smooth_gradient_out * max_float_out;
	add		___671_add_color3_out ___671_gradient_light_out toon_shade1_ambient_color 	%line{68} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:69
#     float rmi_intensity_out = NdotV_invert_out * rim_power_out;
	mul		___671_multiply_float_out ___671_smooth_gradient_out ___671_max_float_out 	%line{69} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:70
#     float specular_intensity_power_out = pow(multiply_float_out, glossiness);
	mul		___671_rmi_intensity_out ___671_NdotV_invert_out ___671_rim_power_out 	%line{70} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:71
#     float rim_gradient_out = smoothstep(add_float_out, subtract_float_out, rmi_intensity_out);
	pow		___671_specular_intensity_power_out ___671_multiply_float_out toon_shade1_glossiness 	%line{71} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:72
#     float specular_remap_low_tmp = 0.005000;
	smoothstep	___671_rim_gradient_out ___671_add_float_out ___671_subtract_float_out ___671_rmi_intensity_out 	%line{72} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:73
#     float specular_remap_high_tmp = 0.008000;
	assign		___671_specular_remap_low_tmp $const17 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:74
#     float specular_remap_out = smoothstep(specular_remap_low_tmp, specular_remap_high_tmp, specular_intensity_power_out);
	assign		___671_specular_remap_high_tmp $const18 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:75
#     color rim_out = rim_color * rim_gradient_out;
	smoothstep	___671_specular_remap_out ___671_specular_remap_low_tmp ___671_specular_remap_high_tmp ___671_specular_intensity_power_out 	%line{75} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:76
#     color specular_intensity_color_out = color(0.0);
	mul		___671_rim_out toon_shade1_rim_color ___671_rim_gradient_out 	%line{76} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:77
#     NG_convert_float_color3(specular_remap_out, specular_intensity_color_out);
	assign		___671_specular_intensity_color_out $const2 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:78
#     color specular_out = specular_intensity_color_out * specular_color;
	functioncall	$const19 56 	%line{78} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:30
#     out = combine_out;
	color		___670_combine_out ___671_specular_remap_out ___671_specular_remap_out ___671_specular_remap_out 	%line{30} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:31
# }
	assign		___671_specular_intensity_color_out ___670_combine_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:79
#     color add_color4_out = add_color3_out + specular_out;
	mul		___671_specular_out ___671_specular_intensity_color_out toon_shade1_specular_color 	%line{79} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:80
#     color add_color5_out = add_color4_out + rim_out;
	add		___671_add_color4_out ___671_add_color3_out ___671_specular_out 	%line{80} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:81
#     color multiply_color3_out = base_color * add_color5_out;
	add		___671_add_color5_out ___671_add_color4_out ___671_rim_out 	%line{81} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:82
#     output_color3 = multiply_color3_out;
	mul		___671_multiply_color3_out toon_shade1_base_color ___671_add_color5_out 	%line{82} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:83
# }
	assign		toon_shade1_output_color3 ___671_multiply_color3_out 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:166
#     mx_surface_unlit(surface_unlit_emission, toon_shade1_output_color3, surface_unlit_transmission, surface_unlit_transmission_color, surface_unlit_opacity, surface_unlit_out);
	assign		surface_unlit_out.bsdf null_closure 	%line{166} %argrw{"wr"}
	assign		surface_unlit_out.edf null_closure 	%argrw{"wr"}
	assign		surface_unlit_out.opacity $const16 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:167
#     MATERIAL surfacematerial_out = mx_surfacematerial(surface_unlit_out, backsurfaceshader, displacementshader1);
	functioncall	$const20 82 	%line{167} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:88
#     result.bsdf = trans * transmission_color * transparent();
	functioncall	$const21 68 	%line{88} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 surface_unlit_transmission $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___672_trans $tmp1 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:89
#     result.edf  = (1.0 - trans) * emission_weight * emission_color * emission();
	closure		$tmp2 $const22 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{89} %argrw{"wr"}
	mul		$tmp3 ___672_trans surface_unlit_transmission_color 	%argrw{"wrr"}
	mul		surface_unlit_out.bsdf $tmp2 $tmp3 	%argrw{"wrr"}
	assign		surface_unlit_out.bsdf surface_unlit_out.bsdf 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:90
#     result.opacity = clamp(opacity, 0.0, 1.0);
	closure		$tmp4 $const23 	%line{90} %argrw{"wr"}
	sub		$tmp5 $const16 ___672_trans 	%argrw{"wrr"}
	mul		$tmp6 $tmp5 surface_unlit_emission 	%argrw{"wrr"}
	mul		$tmp7 $tmp6 toon_shade1_output_color3 	%argrw{"wrr"}
	mul		surface_unlit_out.edf $tmp4 $tmp7 	%argrw{"wrr"}
	assign		surface_unlit_out.edf surface_unlit_out.edf 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:91
# }
	functioncall	$const21 81 	%line{91} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp8 surface_unlit_opacity $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		surface_unlit_out.opacity $tmp8 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:91
# }
	assign		surface_unlit_out.opacity surface_unlit_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:168
#     out = surfacematerial_out;
	functioncall	$const24 92 	%line{168} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:96
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const21 86 	%line{96} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp9 surface_unlit_out.opacity $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_opacity_weight $tmp9 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:97
# }
	add		$tmp10 surface_unlit_out.bsdf surface_unlit_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl"} %line{97} %argrw{"wrr"}
	mul		$tmp11 $tmp10 ___673_opacity_weight 	%argrw{"wrr"}
	closure		$tmp12 $const22 	%argrw{"wr"}
	sub		$tmp13 $const16 ___673_opacity_weight 	%argrw{"wrr"}
	mul		$tmp14 $tmp12 $tmp13 	%argrw{"wrr"}
	add		surfacematerial_out $tmp11 $tmp14 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\nprlib\\toon_shade\\surfacematerial.osl:169
# }
	assign		out surfacematerial_out 	%line{169} %argrw{"wr"}
	end
