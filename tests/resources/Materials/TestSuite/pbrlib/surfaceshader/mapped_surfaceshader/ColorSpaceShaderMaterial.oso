OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\mapped_surfaceshader\ColorSpaceShaderMaterial.oso
shader ColorSpaceShaderMaterial	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"ColorSpaceShaderMaterial"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	color	color_gamma22_value_cm_in	0.5 0 0		%read{5,5} %write{2147483647,-1}
param	color	ColorSpaceShader_specular_color_cm_in	0.200000003 0.600000024 0.800000012		%read{13,13} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{63,63} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ColorSpaceShader_base	0.5		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{97,532} %write{2147483647,-1}
param	float	ColorSpaceShader_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{531,531} %write{2147483647,-1}
param	float	ColorSpaceShader_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{546,548} %write{2147483647,-1}
param	float	ColorSpaceShader_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{98,504} %write{2147483647,-1}
param	float	ColorSpaceShader_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{102,404} %write{2147483647,-1}
param	float	ColorSpaceShader_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{503,515} %write{2147483647,-1}
param	float	ColorSpaceShader_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{426,458} %write{2147483647,-1}
param	float	ColorSpaceShader_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{101,101} %write{2147483647,-1}
param	float	ColorSpaceShader_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{540,542} %write{2147483647,-1}
param	color	ColorSpaceShader_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{510,514} %write{2147483647,-1}
param	float	ColorSpaceShader_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	ColorSpaceShader_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ColorSpaceShader_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ColorSpaceShader_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	ColorSpaceShader_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{102,102} %write{2147483647,-1}
param	float	ColorSpaceShader_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{534,536} %write{2147483647,-1}
param	color	ColorSpaceShader_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{105,105} %write{2147483647,-1}
param	color	ColorSpaceShader_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{111,111} %write{2147483647,-1}
param	float	ColorSpaceShader_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{111,111} %write{2147483647,-1}
param	float	ColorSpaceShader_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{525,525} %write{2147483647,-1}
param	float	ColorSpaceShader_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{518,518} %write{2147483647,-1}
param	color	ColorSpaceShader_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{517,517} %write{2147483647,-1}
param	float	ColorSpaceShader_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{517,517} %write{2147483647,-1}
param	float	ColorSpaceShader_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{99,570} %write{2147483647,-1}
param	color	ColorSpaceShader_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{118,553} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{77,273} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{81,412} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{96,96} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{120,487} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{397,397} %write{2147483647,-1}
param	float	ColorSpaceShader_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{99,99} %write{2147483647,-1}
param	float	ColorSpaceShader_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{491,503} %write{2147483647,-1}
param	float	ColorSpaceShader_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{491,503} %write{2147483647,-1}
param	float	ColorSpaceShader_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{123,123} %write{2147483647,-1}
param	color	ColorSpaceShader_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{123,123} %write{2147483647,-1}
param	color	ColorSpaceShader_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{126,126} %write{2147483647,-1}
param	int	ColorSpaceShader_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{112,112} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{595,595}
global	vector	I	%read{556,556} %write{2147483647,-1}
global	normal	N	%read{63,557} %write{2147483647,-1}
local	float	___669_max_in2_tmp	%read{4,4} %write{3,3}
local	color	___669_max_out	%read{7,7} %write{5,5}
local	float	___669_gamma_in2_tmp	%read{7,7} %write{6,6}
local	color	___669_gamma_out	%read{8,8} %write{7,7}
local	int	___670_N_extract_0_index_tmp	%read{26,26} %write{24,24}
local	float	___670_N_extract_0_out	%read{33,33} %write{26,26}
local	int	___670_N_extract_1_index_tmp	%read{29,29} %write{27,27}
local	float	___670_N_extract_1_out	%read{34,34} %write{29,29}
local	int	___670_N_extract_2_index_tmp	%read{32,32} %write{30,30}
local	float	___670_N_extract_2_out	%read{35,35} %write{32,32}
local	float	___671_separate_outr	%read{36,36} %write{20,33}
local	float	___671_separate_outg	%read{36,36} %write{21,34}
local	float	___671_separate_outb	%read{36,36} %write{22,35}
local	vector	___671_combine_out	%read{37,37} %write{36,36}
local	int	___672_N_extract_0_index_tmp	%read{48,48} %write{46,46}
local	float	___672_N_extract_0_out	%read{55,55} %write{48,48}
local	int	___672_N_extract_1_index_tmp	%read{51,51} %write{49,49}
local	float	___672_N_extract_1_out	%read{56,56} %write{51,51}
local	int	___672_N_extract_2_index_tmp	%read{54,54} %write{52,52}
local	float	___672_N_extract_2_out	%read{57,57} %write{54,54}
local	float	___673_separate_outx	%read{58,58} %write{42,55}
local	float	___673_separate_outy	%read{58,58} %write{43,56}
local	float	___673_separate_outz	%read{58,58} %write{44,57}
local	color	___673_combine_out	%read{59,59} %write{58,58}
local	vector	___674_asVec_out	%read{39,39} %write{18,37}
local	matrix	___674_transform_mat_tmp	%read{39,39} %write{38,38}
local	vector	___674_transform_out	%read{48,54} %write{39,39}
local	color	___674_asColor_out	%read{60,60} %write{40,59}
local	float	___675_max_in2_tmp	%read{12,12} %write{11,11}
local	color	___675_max_out	%read{15,15} %write{13,13}
local	float	___675_gamma_in2_tmp	%read{15,15} %write{14,14}
local	color	___675_gamma_out	%read{26,32} %write{15,15}
local	color	___675_rec709_out	%read{61,61} %write{16,60}
local	float	___676_roughness_sqr	%read{88,468} %write{80,454}
local	float	___677_aspect	%read{88,465} %write{87,461}
local	vector	___680_nAxis	%read{138,338} %write{134,280}
local	float	___680_s	%read{148,334} %write{135,281}
local	float	___680_c	%read{137,340} %write{136,282}
local	float	___680_oc	%read{139,337} %write{137,283}
local	float	___681_rotationRadians	%read{135,282} %write{132,278}
local	matrix	___681_m	%read{201,388} %write{195,341}
local	float	___681_trans.x	%read{245,391} %write{211,357} %mystruct{___681_trans} %mystructfield{0}
local	float	___681_trans.y	%read{245,391} %write{222,368} %mystruct{___681_trans} %mystructfield{1}
local	float	___681_trans.z	%read{245,391} %write{233,379} %mystruct{___681_trans} %mystructfield{2}
local	float	___681_trans.w	%read{2147483647,-1} %write{244,390} %mystruct{___681_trans} %mystructfield{3}
local	color	___682_r	%read{254,268} %write{253,253}
local	color	___682_r_sqrt	%read{258,259} %write{254,254}
local	color	___682_n_min	%read{261,261} %write{257,257}
local	color	___682_n_max	%read{261,261} %write{260,260}
local	color	___682_np1	%read{264,264} %write{262,262}
local	color	___682_nm1	%read{266,266} %write{263,263}
local	color	___682_k2	%read{271,272} %write{269,271}
local	color	___683_reflection_tint	%read{487,515} %write{481,510}
local	color	___683_transmission_tint	%read{487,515} %write{485,514}
local	color	___685_combine_out	%read{476,476} %write{475,475}
local	float	___697_x	%read{564,564} %write{563,563}
local	float	___698_NdotV	%read{560,560} %write{558,558}
local	color	___698_f	%read{566,566} %write{565,565}
local	closure color	___700_null_closure	%read{477,573} %write{73,73}
local	float	___700_coat_roughness_vector_out.x	%read{90,487} %write{74,93} %mystruct{___700_coat_roughness_vector_out} %mystructfield{0}
local	float	___700_coat_roughness_vector_out.y	%read{92,487} %write{75,94} %mystruct{___700_coat_roughness_vector_out} %mystructfield{1}
local	float	___700_coat_tangent_rotate_degree_in2_tmp	%read{96,96} %write{95,95}
local	float	___700_coat_tangent_rotate_degree_out	%read{132,132} %write{96,96}
local	color	___700_metal_reflectivity_out	%read{252,252} %write{97,97}
local	color	___700_metal_edgecolor_out	%read{261,261} %write{98,98}
local	float	___700_coat_affect_roughness_multiply1_out	%read{273,273} %write{99,99}
local	float	___700_tangent_rotate_degree_in2_tmp	%read{101,101} %write{100,100}
local	float	___700_tangent_rotate_degree_out	%read{278,278} %write{101,101}
local	float	___700_transmission_roughness_add_out	%read{395,395} %write{102,102}
local	float	___700_subsurface_color_nonnegative_in2_tmp	%read{104,104} %write{103,103}
local	color	___700_subsurface_color_nonnegative_out	%read{469,469} %write{105,105}
local	float	___700_coat_clamped_low_tmp	%read{110,110} %write{106,106}
local	float	___700_coat_clamped_high_tmp	%read{109,109} %write{107,107}
local	float	___700_coat_clamped_out	%read{397,397} %write{110,110}
local	color	___700_subsurface_radius_scaled_out	%read{525,525} %write{111,111}
local	float	___700_subsurface_selector_out	%read{527,529} %write{113,113}
local	float	___700_base_color_nonnegative_in2_tmp	%read{115,115} %write{114,114}
local	color	___700_base_color_nonnegative_out	%read{470,470} %write{116,116}
local	color	___700_coat_attenuation_bg_tmp	%read{118,118} %write{117,117}
local	color	___700_coat_attenuation_out	%read{550,550} %write{118,118}
local	float	___700_one_minus_coat_ior_in1_tmp	%read{120,120} %write{119,119}
local	float	___700_one_minus_coat_ior_out	%read{398,398} %write{120,120}
local	float	___700_one_plus_coat_ior_in1_tmp	%read{122,122} %write{121,121}
local	float	___700_one_plus_coat_ior_out	%read{398,398} %write{122,122}
local	color	___700_emission_weight_out	%read{552,552} %write{123,123}
local	color	___700_opacity_luminance_out	%read{401,401} %write{124,127}
local	vector	___700_coat_tangent_rotate_out	%read{402,402} %write{128,245}
local	color	___700_artistic_ior_ior	%read{262,491} %write{246,261}
local	color	___700_artistic_ior_extinction	%read{491,491} %write{247,272}
local	float	___700_coat_affect_roughness_multiply2_out	%read{404,407} %write{273,273}
local	vector	___700_tangent_rotate_out	%read{405,405} %write{274,391}
local	float	___700_transmission_roughness_clamped_low_tmp	%read{396,396} %write{392,392}
local	float	___700_transmission_roughness_clamped_high_tmp	%read{395,395} %write{393,393}
local	float	___700_transmission_roughness_clamped_out	%read{407,407} %write{396,396}
local	float	___700_coat_gamma_multiply_out	%read{409,409} %write{397,397}
local	float	___700_coat_ior_to_F0_sqrt_out	%read{410,410} %write{398,398}
local	int	___700_opacity_luminance_float_index_tmp	%read{401,401} %write{399,399}
local	float	___700_opacity_luminance_float_out	%read{579,579} %write{401,401}
local	vector	___700_coat_tangent_rotate_normalize_out	%read{415,415} %write{402,402}
local	float	___700_coat_affected_roughness_fg_tmp	%read{404,404} %write{403,403}
local	float	___700_coat_affected_roughness_out	%read{422,422} %write{404,404}
local	vector	___700_tangent_rotate_normalize_out	%read{444,444} %write{405,405}
local	float	___700_coat_affected_transmission_roughness_fg_tmp	%read{407,407} %write{406,406}
local	float	___700_coat_affected_transmission_roughness_out	%read{451,451} %write{407,407}
local	float	___700_coat_gamma_in2_tmp	%read{409,409} %write{408,408}
local	float	___700_coat_gamma_out	%read{469,470} %write{409,409}
local	float	___700_coat_ior_to_F0_out	%read{472,472} %write{410,410}
local	float	___700_coat_tangent_value2_tmp	%read{412,412} %write{411,411}
local	vector	___700_coat_tangent_out	%read{487,487} %write{415,417}
local	float	___700_main_roughness_out.x	%read{435,503} %write{419,438} %mystruct{___700_main_roughness_out} %mystructfield{0}
local	float	___700_main_roughness_out.y	%read{437,503} %write{420,439} %mystruct{___700_main_roughness_out} %mystructfield{1}
local	float	___700_main_tangent_value2_tmp	%read{441,441} %write{440,440}
local	vector	___700_main_tangent_out	%read{491,515} %write{444,446}
local	float	___700_transmission_roughness_out.x	%read{464,515} %write{448,467} %mystruct{___700_transmission_roughness_out} %mystructfield{0}
local	float	___700_transmission_roughness_out.y	%read{466,515} %write{449,468} %mystruct{___700_transmission_roughness_out} %mystructfield{1}
local	color	___700_coat_affected_subsurface_color_out	%read{520,524} %write{469,469}
local	color	___700_coat_affected_diffuse_color_out	%read{531,531} %write{470,470}
local	float	___700_one_minus_coat_ior_to_F0_in1_tmp	%read{472,472} %write{471,471}
local	float	___700_one_minus_coat_ior_to_F0_out	%read{475,475} %write{472,472}
local	color	___700_emission_color0_out	%read{565,565} %write{473,476}
local	closure color	___700_coat_bsdf_out	%read{551,551} %write{477,488}
local	float	___700_metal_bsdf_weight_tmp	%read{492,492} %write{489,489}
local	string	___700_metal_bsdf_distribution_tmp	%read{491,491} %write{490,490}
local	closure color	___700_metal_bsdf_out	%read{548,548} %write{492,492}
local	closure color	___700_specular_bsdf_out	%read{544,544} %write{493,504}
local	closure color	___700_transmission_bsdf_out	%read{542,542} %write{505,516}
local	closure color	___700_sheen_bsdf_out	%read{538,538} %write{518,518}
local	float	___700_translucent_bsdf_weight_tmp	%read{521,521} %write{519,519}
local	closure color	___700_translucent_bsdf_out	%read{529,529} %write{521,521}
local	closure color	___700_subsurface_bsdf_out	%read{528,528} %write{522,525}
local	closure color	___700_selected_subsurface_bsdf_out	%read{536,536} %write{530,530}
local	closure color	___700_diffuse_bsdf_out	%read{535,535} %write{532,532}
local	closure color	___700_subsurface_mix_out	%read{538,538} %write{537,537}
local	closure color	___700_sheen_layer_out	%read{541,541} %write{538,538}
local	closure color	___700_transmission_mix_out	%read{544,544} %write{543,543}
local	closure color	___700_specular_layer_out	%read{547,547} %write{544,544}
local	closure color	___700_metalness_mix_out	%read{550,550} %write{549,549}
local	closure color	___700_thin_film_layer_attenuated_out	%read{551,551} %write{550,550}
local	closure color	___700_coat_layer_out	%read{576,576} %write{551,551}
local	closure color	___700_emission_edf_out	%read{553,569} %write{552,552}
local	closure color	___700_coat_tinted_emission_edf_out	%read{566,566} %write{553,553}
local	closure color	___700_coat_emission_edf_out	%read{570,570} %write{554,566}
local	closure color	___700_blended_coat_emission_edf_out	%read{577,577} %write{571,571}
local	closure color	___700_shader_constructor_out.bsdf	%read{582,582} %write{572,576} %mystruct{___700_shader_constructor_out} %mystructfield{0}
local	closure color	___700_shader_constructor_out.edf	%read{583,583} %write{573,577} %mystruct{___700_shader_constructor_out} %mystructfield{1}
local	float	___700_shader_constructor_out.opacity	%read{581,584} %write{574,581} %mystruct{___700_shader_constructor_out} %mystructfield{2}
local	float	___701_opacity_weight	%read{590,592} %write{588,588}
local	closure color	null_closure	%read{69,70} %write{0,0}
local	color	color_gamma22_value_cm_out	%read{97,116} %write{1,8}
local	color	ColorSpaceShader_specular_color_cm_out	%read{98,502} %write{9,61}
local	vector	geomprop_Nworld_out1	%read{134,531} %write{63,63}
local	vector	geomprop_Tworld_out1	%read{196,446} %write{68,68}
local	closure color	ColorSpaceShader_out.bsdf	%read{589,589} %write{69,582} %mystruct{ColorSpaceShader_out} %mystructfield{0}
local	closure color	ColorSpaceShader_out.edf	%read{589,589} %write{70,583} %mystruct{ColorSpaceShader_out} %mystructfield{1}
local	float	ColorSpaceShader_out.opacity	%read{587,587} %write{71,584} %mystruct{ColorSpaceShader_out} %mystructfield{2}
local	closure color	ColorSpaceShaderMaterial_out	%read{595,595} %write{594,594}
const	int	$const1	0		%read{0,399} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,565} %write{2147483647,-1}
const	string	$const3	"NG_g22_rec709_to_lin_rec709_color3"		%read{2,2} %write{2147483647,-1}
const	float	$const4	0		%read{3,588} %write{2147483647,-1}
temp	color	$tmp1	%read{5,5} %write{4,4}
const	float	$const5	2.2		%read{6,14} %write{2147483647,-1}
const	string	$const6	"NG_g22_ap1_to_lin_rec709_color3"		%read{10,10} %write{2147483647,-1}
temp	color	$tmp2	%read{13,13} %write{12,12}
const	string	$const7	"NG_acescg_to_lin_rec709_color3"		%read{17,17} %write{2147483647,-1}
const	vector	$const8	0 0 0		%read{18,274} %write{2147483647,-1}
const	string	$const9	"NG_convert_color3_vector3"		%read{19,19} %write{2147483647,-1}
const	string	$const10	"NG_separate3_color3"		%read{23,23} %write{2147483647,-1}
const	string	$const11	"mx_extract"		%read{25,400} %write{2147483647,-1}
const	int	$const12	1		%read{27,382} %write{2147483647,-1}
const	int	$const13	2		%read{30,385} %write{2147483647,-1}
const	float	$const14	1.705051		%read{38,38} %write{2147483647,-1}
const	float	$const15	-0.130256		%read{38,38} %write{2147483647,-1}
const	float	$const16	-0.024003		%read{38,38} %write{2147483647,-1}
const	float	$const17	-0.621792		%read{38,38} %write{2147483647,-1}
const	float	$const18	1.140805		%read{38,38} %write{2147483647,-1}
const	float	$const19	-0.128969		%read{38,38} %write{2147483647,-1}
const	float	$const20	-0.083259		%read{38,38} %write{2147483647,-1}
const	float	$const21	-0.010548		%read{38,38} %write{2147483647,-1}
const	float	$const22	1.152972		%read{38,38} %write{2147483647,-1}
const	float	$const23	1		%read{38,592} %write{2147483647,-1}
const	string	$const24	"NG_convert_vector3_color3"		%read{41,41} %write{2147483647,-1}
const	string	$const25	"NG_separate3_vector3"		%read{45,45} %write{2147483647,-1}
const	string	$const26	"transform"		%read{62,346} %write{2147483647,-1}
const	string	$const27	"common"		%read{63,63} %write{2147483647,-1}
temp	vector	$tmp3	%read{68,68} %write{67,67}
temp	float	$tmp4	%read{67,67} %write{64,64}
temp	float	$tmp5	%read{66,66} %write{65,65}
temp	float	$tmp6	%read{67,67} %write{66,66}
const	string	$const28	"NG_standard_surface_surfaceshader_100"		%read{72,72} %write{2147483647,-1}
const	string	$const29	"mx_roughness_anisotropy"		%read{76,450} %write{2147483647,-1}
temp	float	$tmp7	%read{79,79} %write{77,77}
const	float	$const30	1e-08		%read{80,454} %write{2147483647,-1}
const	string	$const31	"clamp"		%read{78,586} %write{2147483647,-1}
temp	float	$tmp8	%read{80,80} %write{79,79}
temp	int	$tmp9	%read{82,82} %write{81,81}
temp	float	$tmp10	%read{86,86} %write{85,85}
const	float	$const32	0.98		%read{84,458} %write{2147483647,-1}
temp	float	$tmp11	%read{85,85} %write{84,84}
temp	float	$tmp12	%read{87,87} %write{86,86}
temp	float	$tmp13	%read{89,89} %write{88,88}
const	float	$const33	360		%read{95,100} %write{2147483647,-1}
temp	color	$tmp14	%read{105,105} %write{104,104}
temp	float	$tmp15	%read{110,110} %write{109,109}
temp	float	$tmp16	%read{113,113} %write{112,112}
temp	color	$tmp17	%read{116,116} %write{115,115}
const	color	$const34	1 1 1		%read{117,486} %write{2147483647,-1}
const	color	$const35	0.272229 0.674082 0.053689		%read{126,126} %write{2147483647,-1}
const	string	$const36	"mx_luminance_color3"		%read{125,125} %write{2147483647,-1}
temp	float	$tmp19	%read{127,127} %write{126,126}
const	string	$const37	"mx_rotate_vector3"		%read{129,275} %write{2147483647,-1}
const	string	$const38	"radians"		%read{130,276} %write{2147483647,-1}
const	float	$const39	3.1415927		%read{131,277} %write{2147483647,-1}
const	float	$const40	180		%read{131,277} %write{2147483647,-1}
temp	float	$tmp20	%read{132,132} %write{131,131}
const	string	$const41	"rotationMatrix"		%read{133,279} %write{2147483647,-1}
temp	float	$tmp21	%read{139,139} %write{138,138}
temp	float	$tmp22	%read{141,141} %write{139,139}
temp	float	$tmp23	%read{141,141} %write{140,140}
temp	float	$tmp24	%read{142,142} %write{141,141}
temp	float	$tmp25	%read{195,195} %write{142,142}
temp	float	$tmp26	%read{144,144} %write{143,143}
temp	float	$tmp27	%read{146,146} %write{144,144}
temp	float	$tmp28	%read{146,146} %write{145,145}
temp	float	$tmp29	%read{149,149} %write{146,146}
temp	float	$tmp30	%read{148,148} %write{147,147}
temp	float	$tmp31	%read{149,149} %write{148,148}
temp	float	$tmp32	%read{195,195} %write{149,149}
temp	float	$tmp33	%read{151,151} %write{150,150}
temp	float	$tmp34	%read{153,153} %write{151,151}
temp	float	$tmp35	%read{153,153} %write{152,152}
temp	float	$tmp36	%read{156,156} %write{153,153}
temp	float	$tmp37	%read{155,155} %write{154,154}
temp	float	$tmp38	%read{156,156} %write{155,155}
temp	float	$tmp39	%read{195,195} %write{156,156}
temp	float	$tmp40	%read{158,158} %write{157,157}
temp	float	$tmp41	%read{160,160} %write{158,158}
temp	float	$tmp42	%read{160,160} %write{159,159}
temp	float	$tmp43	%read{163,163} %write{160,160}
temp	float	$tmp44	%read{162,162} %write{161,161}
temp	float	$tmp45	%read{163,163} %write{162,162}
temp	float	$tmp46	%read{195,195} %write{163,163}
temp	float	$tmp47	%read{165,165} %write{164,164}
temp	float	$tmp48	%read{167,167} %write{165,165}
temp	float	$tmp49	%read{167,167} %write{166,166}
temp	float	$tmp50	%read{168,168} %write{167,167}
temp	float	$tmp51	%read{195,195} %write{168,168}
temp	float	$tmp52	%read{170,170} %write{169,169}
temp	float	$tmp53	%read{172,172} %write{170,170}
temp	float	$tmp54	%read{172,172} %write{171,171}
temp	float	$tmp55	%read{175,175} %write{172,172}
temp	float	$tmp56	%read{174,174} %write{173,173}
temp	float	$tmp57	%read{175,175} %write{174,174}
temp	float	$tmp58	%read{195,195} %write{175,175}
temp	float	$tmp59	%read{177,177} %write{176,176}
temp	float	$tmp60	%read{179,179} %write{177,177}
temp	float	$tmp61	%read{179,179} %write{178,178}
temp	float	$tmp62	%read{182,182} %write{179,179}
temp	float	$tmp63	%read{181,181} %write{180,180}
temp	float	$tmp64	%read{182,182} %write{181,181}
temp	float	$tmp65	%read{195,195} %write{182,182}
temp	float	$tmp66	%read{184,184} %write{183,183}
temp	float	$tmp67	%read{186,186} %write{184,184}
temp	float	$tmp68	%read{186,186} %write{185,185}
temp	float	$tmp69	%read{189,189} %write{186,186}
temp	float	$tmp70	%read{188,188} %write{187,187}
temp	float	$tmp71	%read{189,189} %write{188,188}
temp	float	$tmp72	%read{195,195} %write{189,189}
temp	float	$tmp73	%read{191,191} %write{190,190}
temp	float	$tmp74	%read{193,193} %write{191,191}
temp	float	$tmp75	%read{193,193} %write{192,192}
temp	float	$tmp76	%read{194,194} %write{193,193}
temp	float	$tmp77	%read{195,195} %write{194,194}
temp	float	$tmp78.x	%read{202,235} %write{196,196}
temp	float	$tmp78.y	%read{204,237} %write{197,197}
temp	float	$tmp78.z	%read{207,240} %write{198,198}
temp	float	$tmp78.w	%read{210,243} %write{199,199}
temp	float	$tmp79	%read{202,202} %write{201,201}
temp	float	$tmp80	%read{205,205} %write{202,202}
temp	float	$tmp81	%read{204,204} %write{203,203}
temp	float	$tmp82	%read{205,205} %write{204,204}
temp	float	$tmp83	%read{208,208} %write{205,205}
temp	float	$tmp84	%read{207,207} %write{206,206}
temp	float	$tmp85	%read{208,208} %write{207,207}
temp	float	$tmp86	%read{211,211} %write{208,208}
const	int	$const42	3		%read{209,388} %write{2147483647,-1}
temp	float	$tmp87	%read{210,210} %write{209,209}
temp	float	$tmp88	%read{211,211} %write{210,210}
temp	float	$tmp89	%read{213,213} %write{212,212}
temp	float	$tmp90	%read{216,216} %write{213,213}
temp	float	$tmp91	%read{215,215} %write{214,214}
temp	float	$tmp92	%read{216,216} %write{215,215}
temp	float	$tmp93	%read{219,219} %write{216,216}
temp	float	$tmp94	%read{218,218} %write{217,217}
temp	float	$tmp95	%read{219,219} %write{218,218}
temp	float	$tmp96	%read{222,222} %write{219,219}
temp	float	$tmp97	%read{221,221} %write{220,220}
temp	float	$tmp98	%read{222,222} %write{221,221}
temp	float	$tmp99	%read{224,224} %write{223,223}
temp	float	$tmp100	%read{227,227} %write{224,224}
temp	float	$tmp101	%read{226,226} %write{225,225}
temp	float	$tmp102	%read{227,227} %write{226,226}
temp	float	$tmp103	%read{230,230} %write{227,227}
temp	float	$tmp104	%read{229,229} %write{228,228}
temp	float	$tmp105	%read{230,230} %write{229,229}
temp	float	$tmp106	%read{233,233} %write{230,230}
temp	float	$tmp107	%read{232,232} %write{231,231}
temp	float	$tmp108	%read{233,233} %write{232,232}
temp	float	$tmp109	%read{235,235} %write{234,234}
temp	float	$tmp110	%read{238,238} %write{235,235}
temp	float	$tmp111	%read{237,237} %write{236,236}
temp	float	$tmp112	%read{238,238} %write{237,237}
temp	float	$tmp113	%read{241,241} %write{238,238}
temp	float	$tmp114	%read{240,240} %write{239,239}
temp	float	$tmp115	%read{241,241} %write{240,240}
temp	float	$tmp116	%read{244,244} %write{241,241}
temp	float	$tmp117	%read{243,243} %write{242,242}
temp	float	$tmp118	%read{244,244} %write{243,243}
const	string	$const43	"mx_artistic_ior"		%read{248,248} %write{2147483647,-1}
temp	color	$tmp119	%read{253,253} %write{249,249}
const	float	$const44	0.99		%read{250,250} %write{2147483647,-1}
temp	color	$tmp120	%read{252,252} %write{250,250}
temp	color	$tmp121	%read{253,253} %write{252,252}
temp	color	$tmp122	%read{257,257} %write{255,255}
temp	color	$tmp123	%read{257,257} %write{256,256}
temp	color	$tmp124	%read{260,260} %write{258,258}
temp	color	$tmp125	%read{260,260} %write{259,259}
temp	color	$tmp126	%read{265,265} %write{264,264}
temp	color	$tmp127	%read{267,267} %write{265,265}
temp	color	$tmp128	%read{267,267} %write{266,266}
temp	color	$tmp129	%read{269,269} %write{267,267}
temp	color	$tmp130	%read{269,269} %write{268,268}
temp	color	$tmp131	%read{271,271} %write{270,270}
temp	float	$tmp132	%read{278,278} %write{277,277}
temp	float	$tmp133	%read{285,285} %write{284,284}
temp	float	$tmp134	%read{287,287} %write{285,285}
temp	float	$tmp135	%read{287,287} %write{286,286}
temp	float	$tmp136	%read{288,288} %write{287,287}
temp	float	$tmp137	%read{341,341} %write{288,288}
temp	float	$tmp138	%read{290,290} %write{289,289}
temp	float	$tmp139	%read{292,292} %write{290,290}
temp	float	$tmp140	%read{292,292} %write{291,291}
temp	float	$tmp141	%read{295,295} %write{292,292}
temp	float	$tmp142	%read{294,294} %write{293,293}
temp	float	$tmp143	%read{295,295} %write{294,294}
temp	float	$tmp144	%read{341,341} %write{295,295}
temp	float	$tmp145	%read{297,297} %write{296,296}
temp	float	$tmp146	%read{299,299} %write{297,297}
temp	float	$tmp147	%read{299,299} %write{298,298}
temp	float	$tmp148	%read{302,302} %write{299,299}
temp	float	$tmp149	%read{301,301} %write{300,300}
temp	float	$tmp150	%read{302,302} %write{301,301}
temp	float	$tmp151	%read{341,341} %write{302,302}
temp	float	$tmp152	%read{304,304} %write{303,303}
temp	float	$tmp153	%read{306,306} %write{304,304}
temp	float	$tmp154	%read{306,306} %write{305,305}
temp	float	$tmp155	%read{309,309} %write{306,306}
temp	float	$tmp156	%read{308,308} %write{307,307}
temp	float	$tmp157	%read{309,309} %write{308,308}
temp	float	$tmp158	%read{341,341} %write{309,309}
temp	float	$tmp159	%read{311,311} %write{310,310}
temp	float	$tmp160	%read{313,313} %write{311,311}
temp	float	$tmp161	%read{313,313} %write{312,312}
temp	float	$tmp162	%read{314,314} %write{313,313}
temp	float	$tmp163	%read{341,341} %write{314,314}
temp	float	$tmp164	%read{316,316} %write{315,315}
temp	float	$tmp165	%read{318,318} %write{316,316}
temp	float	$tmp166	%read{318,318} %write{317,317}
temp	float	$tmp167	%read{321,321} %write{318,318}
temp	float	$tmp168	%read{320,320} %write{319,319}
temp	float	$tmp169	%read{321,321} %write{320,320}
temp	float	$tmp170	%read{341,341} %write{321,321}
temp	float	$tmp171	%read{323,323} %write{322,322}
temp	float	$tmp172	%read{325,325} %write{323,323}
temp	float	$tmp173	%read{325,325} %write{324,324}
temp	float	$tmp174	%read{328,328} %write{325,325}
temp	float	$tmp175	%read{327,327} %write{326,326}
temp	float	$tmp176	%read{328,328} %write{327,327}
temp	float	$tmp177	%read{341,341} %write{328,328}
temp	float	$tmp178	%read{330,330} %write{329,329}
temp	float	$tmp179	%read{332,332} %write{330,330}
temp	float	$tmp180	%read{332,332} %write{331,331}
temp	float	$tmp181	%read{335,335} %write{332,332}
temp	float	$tmp182	%read{334,334} %write{333,333}
temp	float	$tmp183	%read{335,335} %write{334,334}
temp	float	$tmp184	%read{341,341} %write{335,335}
temp	float	$tmp185	%read{337,337} %write{336,336}
temp	float	$tmp186	%read{339,339} %write{337,337}
temp	float	$tmp187	%read{339,339} %write{338,338}
temp	float	$tmp188	%read{340,340} %write{339,339}
temp	float	$tmp189	%read{341,341} %write{340,340}
temp	float	$tmp190.x	%read{348,381} %write{342,342}
temp	float	$tmp190.y	%read{350,383} %write{343,343}
temp	float	$tmp190.z	%read{353,386} %write{344,344}
temp	float	$tmp190.w	%read{356,389} %write{345,345}
temp	float	$tmp191	%read{348,348} %write{347,347}
temp	float	$tmp192	%read{351,351} %write{348,348}
temp	float	$tmp193	%read{350,350} %write{349,349}
temp	float	$tmp194	%read{351,351} %write{350,350}
temp	float	$tmp195	%read{354,354} %write{351,351}
temp	float	$tmp196	%read{353,353} %write{352,352}
temp	float	$tmp197	%read{354,354} %write{353,353}
temp	float	$tmp198	%read{357,357} %write{354,354}
temp	float	$tmp199	%read{356,356} %write{355,355}
temp	float	$tmp200	%read{357,357} %write{356,356}
temp	float	$tmp201	%read{359,359} %write{358,358}
temp	float	$tmp202	%read{362,362} %write{359,359}
temp	float	$tmp203	%read{361,361} %write{360,360}
temp	float	$tmp204	%read{362,362} %write{361,361}
temp	float	$tmp205	%read{365,365} %write{362,362}
temp	float	$tmp206	%read{364,364} %write{363,363}
temp	float	$tmp207	%read{365,365} %write{364,364}
temp	float	$tmp208	%read{368,368} %write{365,365}
temp	float	$tmp209	%read{367,367} %write{366,366}
temp	float	$tmp210	%read{368,368} %write{367,367}
temp	float	$tmp211	%read{370,370} %write{369,369}
temp	float	$tmp212	%read{373,373} %write{370,370}
temp	float	$tmp213	%read{372,372} %write{371,371}
temp	float	$tmp214	%read{373,373} %write{372,372}
temp	float	$tmp215	%read{376,376} %write{373,373}
temp	float	$tmp216	%read{375,375} %write{374,374}
temp	float	$tmp217	%read{376,376} %write{375,375}
temp	float	$tmp218	%read{379,379} %write{376,376}
temp	float	$tmp219	%read{378,378} %write{377,377}
temp	float	$tmp220	%read{379,379} %write{378,378}
temp	float	$tmp221	%read{381,381} %write{380,380}
temp	float	$tmp222	%read{384,384} %write{381,381}
temp	float	$tmp223	%read{383,383} %write{382,382}
temp	float	$tmp224	%read{384,384} %write{383,383}
temp	float	$tmp225	%read{387,387} %write{384,384}
temp	float	$tmp226	%read{386,386} %write{385,385}
temp	float	$tmp227	%read{387,387} %write{386,386}
temp	float	$tmp228	%read{390,390} %write{387,387}
temp	float	$tmp229	%read{389,389} %write{388,388}
temp	float	$tmp230	%read{390,390} %write{389,389}
temp	float	$tmp231	%read{396,396} %write{395,395}
temp	int	$tmp232	%read{414,414} %write{412,412}
const	string	$const45	"mx_ternary"		%read{413,442} %write{2147483647,-1}
temp	float	$tmp233	%read{424,424} %write{422,422}
temp	float	$tmp234	%read{425,425} %write{424,424}
temp	int	$tmp235	%read{427,427} %write{426,426}
temp	float	$tmp236	%read{431,431} %write{430,430}
temp	float	$tmp237	%read{430,430} %write{429,429}
temp	float	$tmp238	%read{432,432} %write{431,431}
temp	float	$tmp239	%read{434,434} %write{433,433}
temp	int	$tmp240	%read{443,443} %write{441,441}
temp	float	$tmp241	%read{453,453} %write{451,451}
temp	float	$tmp242	%read{454,454} %write{453,453}
temp	int	$tmp243	%read{456,456} %write{455,455}
temp	float	$tmp244	%read{460,460} %write{459,459}
temp	float	$tmp245	%read{459,459} %write{458,458}
temp	float	$tmp246	%read{461,461} %write{460,460}
temp	float	$tmp247	%read{463,463} %write{462,462}
const	string	$const46	"NG_convert_float_color3"		%read{474,474} %write{2147483647,-1}
const	float	$const47	1.5		%read{487,515} %write{2147483647,-1}
const	string	$const48	"ggx"		%read{487,515} %write{2147483647,-1}
const	string	$const49	"R"		%read{479,511} %write{2147483647,-1}
const	string	$const50	"mx_dielectric_bsdf"		%read{478,506} %write{2147483647,-1}
const	string	$const51	"T"		%read{479,511} %write{2147483647,-1}
temp	int	$tmp249	%read{480,480} %write{479,479}
temp	int	$tmp250	%read{484,484} %write{483,483}
temp	closure color	$tmp251	%read{488,488} %write{487,487}
const	string	$const52	"thinfilm_thickness"		%read{487,515} %write{2147483647,-1}
const	string	$const53	"thinfilm_ior"		%read{487,515} %write{2147483647,-1}
const	string	$const54	"dielectric_bsdf"		%read{487,515} %write{2147483647,-1}
temp	closure color	$tmp252	%read{492,492} %write{491,491}
const	string	$const55	"conductor_bsdf"		%read{491,491} %write{2147483647,-1}
temp	int	$tmp253	%read{496,496} %write{495,495}
temp	int	$tmp254	%read{500,500} %write{499,499}
temp	closure color	$tmp255	%read{504,504} %write{503,503}
temp	int	$tmp256	%read{508,508} %write{507,507}
temp	int	$tmp257	%read{512,512} %write{511,511}
temp	closure color	$tmp258	%read{516,516} %write{515,515}
temp	closure color	$tmp259	%read{518,518} %write{517,517}
const	string	$const56	"sheen_bsdf"		%read{517,517} %write{2147483647,-1}
temp	closure color	$tmp260	%read{521,521} %write{520,520}
const	string	$const57	"translucent_bsdf"		%read{520,520} %write{2147483647,-1}
const	string	$const58	"mx_subsurface_bsdf"		%read{523,523} %write{2147483647,-1}
temp	color	$tmp261	%read{525,525} %write{524,524}
const	string	$const59	"subsurface_bssrdf"		%read{525,525} %write{2147483647,-1}
const	string	$const60	"mix"		%read{526,567} %write{2147483647,-1}
temp	float	$tmp262	%read{528,528} %write{527,527}
temp	closure color	$tmp263	%read{530,530} %write{528,528}
temp	closure color	$tmp264	%read{530,530} %write{529,529}
temp	closure color	$tmp265	%read{532,532} %write{531,531}
const	string	$const61	"oren_nayar_diffuse_bsdf"		%read{531,531} %write{2147483647,-1}
temp	float	$tmp266	%read{535,535} %write{534,534}
temp	closure color	$tmp267	%read{537,537} %write{535,535}
temp	closure color	$tmp268	%read{537,537} %write{536,536}
const	string	$const62	"layer"		%read{538,551} %write{2147483647,-1}
temp	float	$tmp269	%read{541,541} %write{540,540}
temp	closure color	$tmp270	%read{543,543} %write{541,541}
temp	closure color	$tmp271	%read{543,543} %write{542,542}
temp	float	$tmp272	%read{547,547} %write{546,546}
temp	closure color	$tmp273	%read{549,549} %write{547,547}
temp	closure color	$tmp274	%read{549,549} %write{548,548}
const	string	$const63	"uniform_edf"		%read{552,552} %write{2147483647,-1}
const	float	$const64	5		%read{564,564} %write{2147483647,-1}
const	string	$const65	"mx_generalized_schlick_edf"		%read{555,555} %write{2147483647,-1}
temp	float	$tmp276	%read{558,558} %write{557,557}
temp	vector	$tmp277	%read{557,557} %write{556,556}
const	string	$const66	"mx_fresnel_schlick"		%read{559,559} %write{2147483647,-1}
temp	float	$tmp278	%read{562,562} %write{560,560}
temp	float	$tmp279	%read{563,563} %write{562,562}
temp	float	$tmp280	%read{565,565} %write{564,564}
temp	float	$tmp281	%read{569,569} %write{568,568}
temp	closure color	$tmp282	%read{571,571} %write{569,569}
temp	closure color	$tmp283	%read{571,571} %write{570,570}
const	string	$const67	"mx_surface"		%read{575,575} %write{2147483647,-1}
temp	float	$tmp284	%read{580,580} %write{579,579}
const	string	$const68	"mx_surfacematerial"		%read{585,585} %write{2147483647,-1}
temp	float	$tmp285	%read{588,588} %write{587,587}
temp	closure color	$tmp286	%read{590,590} %write{589,589}
temp	closure color	$tmp287	%read{594,594} %write{590,590}
temp	closure color	$tmp288	%read{593,593} %write{591,591}
const	string	$const69	"transparent"		%read{591,591} %write{2147483647,-1}
temp	float	$tmp289	%read{593,593} %write{592,592}
temp	closure color	$tmp290	%read{594,594} %write{593,593}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:749
#     color color_gamma22_value_cm_out = color(0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{749} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:750
#     NG_g22_rec709_to_lin_rec709_color3(color_gamma22_value_cm_in, color_gamma22_value_cm_out);
	assign		color_gamma22_value_cm_out $const2 	%line{750} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:751
#     color ColorSpaceShader_specular_color_cm_out = color(0.0);
	functioncall	$const3 9 	%line{751} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:20
#     color max_out = max(in, max_in2_tmp);
	assign		___669_max_in2_tmp $const4 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:21
#     float gamma_in2_tmp = 2.200000;
	assign		$tmp1 ___669_max_in2_tmp 	%line{21} %argrw{"wr"}
	max		___669_max_out color_gamma22_value_cm_in $tmp1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:22
#     color gamma_out = pow(max_out, gamma_in2_tmp);
	assign		___669_gamma_in2_tmp $const5 	%line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:23
#     out = gamma_out;
	pow		___669_gamma_out ___669_max_out ___669_gamma_in2_tmp 	%line{23} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:24
# }
	assign		color_gamma22_value_cm_out ___669_gamma_out 	%line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:752
#     NG_g22_ap1_to_lin_rec709_color3(ColorSpaceShader_specular_color_cm_in, ColorSpaceShader_specular_color_cm_out);
	assign		ColorSpaceShader_specular_color_cm_out $const2 	%line{752} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:753
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const6 62 	%line{753} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:86
#     color max_out = max(in, max_in2_tmp);
	assign		___675_max_in2_tmp $const4 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:87
#     float gamma_in2_tmp = 2.200000;
	assign		$tmp2 ___675_max_in2_tmp 	%line{87} %argrw{"wr"}
	max		___675_max_out ColorSpaceShader_specular_color_cm_in $tmp2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:88
#     color gamma_out = pow(max_out, gamma_in2_tmp);
	assign		___675_gamma_in2_tmp $const5 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:89
#     color rec709_out = color(0.0);
	pow		___675_gamma_out ___675_max_out ___675_gamma_in2_tmp 	%line{89} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:90
#     NG_acescg_to_lin_rec709_color3(gamma_out, rec709_out);
	assign		___675_rec709_out $const2 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:91
#     out = rec709_out;
	functioncall	$const7 61 	%line{91} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:75
#     NG_convert_color3_vector3(in, asVec_out);
	assign		___674_asVec_out $const8 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:76
#     matrix transform_mat_tmp = matrix(1.705051,  -0.130256,  -0.024003, 0.000,  -0.621792,  1.140805,  -0.128969, 0.000,  -0.083259,  -0.010548,  1.152972, 0.000, 0.000, 0.000, 0.000, 1.000);
	functioncall	$const9 38 	%line{76} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:42
#     float separate_outg = 0.0;
	assign		___671_separate_outr $const4 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:43
#     float separate_outb = 0.0;
	assign		___671_separate_outg $const4 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:44
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___671_separate_outb $const4 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:45
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const10 36 	%line{45} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:29
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:30
#     int N_extract_1_index_tmp = 1;
	functioncall	$const11 27 	%line{30} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___670_N_extract_0_out ___675_gamma_out ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:31
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const12 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:32
#     int N_extract_2_index_tmp = 2;
	functioncall	$const11 30 	%line{32} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___670_N_extract_1_out ___675_gamma_out ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:33
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:34
#     outr = N_extract_0_out;
	functioncall	$const11 33 	%line{34} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___670_N_extract_2_out ___675_gamma_out ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:35
#     outg = N_extract_1_out;
	assign		___671_separate_outr ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{35} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:36
#     outb = N_extract_2_out;
	assign		___671_separate_outg ___670_N_extract_1_out 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:37
# }
	assign		___671_separate_outb ___670_N_extract_2_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:46
#     out = combine_out;
	vector		___671_combine_out ___671_separate_outr ___671_separate_outg ___671_separate_outb 	%line{46} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:47
# }
	assign		___674_asVec_out ___671_combine_out 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:77
#     vector transform_out = transform(transform_mat_tmp, asVec_out);
	matrix		___674_transform_mat_tmp $const14 $const15 $const16 $const4 $const17 $const18 $const19 $const4 $const20 $const21 $const22 $const4 $const4 $const4 $const4 $const23 	%line{77} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:78
#     color asColor_out = color(0.0);
	transformv	___674_transform_out ___674_transform_mat_tmp ___674_asVec_out 	%line{78} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:79
#     NG_convert_vector3_color3(transform_out, asColor_out);
	assign		___674_asColor_out $const2 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:80
#     out = asColor_out;
	functioncall	$const24 60 	%line{80} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:65
#     float separate_outy = 0.0;
	assign		___673_separate_outx $const4 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:66
#     float separate_outz = 0.0;
	assign		___673_separate_outy $const4 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:67
#     NG_separate3_vector3(in, separate_outx, separate_outy, separate_outz);
	assign		___673_separate_outz $const4 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:68
#     color combine_out = color( separate_outx,separate_outy,separate_outz );
	functioncall	$const25 58 	%line{68} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:52
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:53
#     int N_extract_1_index_tmp = 1;
	functioncall	$const11 49 	%line{53} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___672_N_extract_0_out ___674_transform_out ___672_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:54
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const12 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:55
#     int N_extract_2_index_tmp = 2;
	functioncall	$const11 52 	%line{55} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___672_N_extract_1_out ___674_transform_out ___672_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:56
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:57
#     outx = N_extract_0_out;
	functioncall	$const11 55 	%line{57} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___672_N_extract_2_out ___674_transform_out ___672_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:58
#     outy = N_extract_1_out;
	assign		___673_separate_outx ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:59
#     outz = N_extract_2_out;
	assign		___673_separate_outy ___672_N_extract_1_out 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:60
# }
	assign		___673_separate_outz ___672_N_extract_2_out 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:69
#     out = combine_out;
	color		___673_combine_out ___673_separate_outx ___673_separate_outy ___673_separate_outz 	%line{69} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:70
# }
	assign		___674_asColor_out ___673_combine_out 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:81
# }
	assign		___675_rec709_out ___674_asColor_out 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:92
# }
	assign		ColorSpaceShader_specular_color_cm_out ___675_rec709_out 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:754
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const26 64 	%line{754} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const27 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:755
#     surfaceshader ColorSpaceShader_out = surfaceshader(null_closure, null_closure, 1.0);
	compref		$tmp4 N $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{755} %argrw{"wrr"}
	compref		$tmp5 N $const1 	%argrw{"wrr"}
	neg		$tmp6 $tmp5 	%argrw{"wr"}
	vector		$tmp3 $tmp4 $const4 $tmp6 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:756
#     NG_standard_surface_surfaceshader_100(ColorSpaceShader_base, color_gamma22_value_cm_out, ColorSpaceShader_diffuse_roughness, ColorSpaceShader_metalness, ColorSpaceShader_specular, ColorSpaceShader_specular_color_cm_out, ColorSpaceShader_specular_roughness, ColorSpaceShader_specular_IOR, ColorSpaceShader_specular_anisotropy, ColorSpaceShader_specular_rotation, ColorSpaceShader_transmission, ColorSpaceShader_transmission_color, ColorSpaceShader_transmission_depth, ColorSpaceShader_transmission_scatter, ColorSpaceShader_transmission_scatter_anisotropy, ColorSpaceShader_transmission_dispersion, ColorSpaceShader_transmission_extra_roughness, ColorSpaceShader_subsurface, ColorSpaceShader_subsurface_color, ColorSpaceShader_subsurface_radius, ColorSpaceShader_subsurface_scale, ColorSpaceShader_subsurface_anisotropy, ColorSpaceShader_sheen, ColorSpaceShader_sheen_color, ColorSpaceShader_sheen_roughness, ColorSpaceShader_coat, ColorSpaceShader_coat_color, ColorSpaceShader_coat_roughness, ColorSpaceShader_coat_anisotropy, ColorSpaceShader_coat_rotation, ColorSpaceShader_coat_IOR, geomprop_Nworld_out1, ColorSpaceShader_coat_affect_color, ColorSpaceShader_coat_affect_roughness, ColorSpaceShader_thin_film_thickness, ColorSpaceShader_thin_film_IOR, ColorSpaceShader_emission, ColorSpaceShader_emission_color, ColorSpaceShader_opacity, ColorSpaceShader_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, ColorSpaceShader_out);
	assign		ColorSpaceShader_out.bsdf null_closure 	%line{756} %argrw{"wr"}
	assign		ColorSpaceShader_out.edf null_closure 	%argrw{"wr"}
	assign		ColorSpaceShader_out.opacity $const23 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:757
#     MATERIAL ColorSpaceShaderMaterial_out = mx_surfacematerial(ColorSpaceShader_out, backsurfaceshader, displacementshader1);
	functioncall	$const28 585 	%line{757} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:272
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___700_null_closure $const1 	%line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:273
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___700_coat_roughness_vector_out.x $const4 	%line{273} %argrw{"wr"}
	assign		___700_coat_roughness_vector_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:274
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const29 95 	%line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:97
#     if (anisotropy > 0.0)
	mul		$tmp7 ColorSpaceShader_coat_roughness ColorSpaceShader_coat_roughness 	%line{97} %argrw{"wrr"}
	functioncall	$const31 81 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp8 $tmp7 $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp8 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:98
#     {
	gt		$tmp9 ColorSpaceShader_coat_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{98} %argrw{"wrr"}
	if		$tmp9 93 95 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const31 86 	%line{100} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp11 ColorSpaceShader_coat_anisotropy $const32 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp10 $tmp11 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp12 $const23 $tmp10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{100} %argrw{"wrr"}
	sqrt		___677_aspect $tmp12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:101
#         result.y = roughness_sqr * aspect;
	div		$tmp13 ___676_roughness_sqr ___677_aspect 	%line{101} %argrw{"wrr"}
	min		___700_coat_roughness_vector_out.x $tmp13 $const23 	%argrw{"wrr"}
	assign		___700_coat_roughness_vector_out.x ___700_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:102
#     }
	mul		___700_coat_roughness_vector_out.y ___676_roughness_sqr ___677_aspect 	%line{102} %argrw{"wrr"}
	assign		___700_coat_roughness_vector_out.y ___700_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:106
#         result.y = roughness_sqr;
	assign		___700_coat_roughness_vector_out.x ___676_roughness_sqr 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:107
#     }
	assign		___700_coat_roughness_vector_out.y ___676_roughness_sqr 	%line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:275
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___700_coat_tangent_rotate_degree_in2_tmp $const33 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:276
#     color metal_reflectivity_out = base_color * base;
	mul		___700_coat_tangent_rotate_degree_out ColorSpaceShader_coat_rotation ___700_coat_tangent_rotate_degree_in2_tmp 	%line{276} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:277
#     color metal_edgecolor_out = specular_color * specular;
	mul		___700_metal_reflectivity_out color_gamma22_value_cm_out ColorSpaceShader_base 	%line{277} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:278
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___700_metal_edgecolor_out ColorSpaceShader_specular_color_cm_out ColorSpaceShader_specular 	%line{278} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:279
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___700_coat_affect_roughness_multiply1_out ColorSpaceShader_coat_affect_roughness ColorSpaceShader_coat 	%line{279} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:280
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___700_tangent_rotate_degree_in2_tmp $const33 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:281
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___700_tangent_rotate_degree_out ColorSpaceShader_specular_rotation ___700_tangent_rotate_degree_in2_tmp 	%line{281} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:282
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___700_transmission_roughness_add_out ColorSpaceShader_specular_roughness ColorSpaceShader_transmission_extra_roughness 	%line{282} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:283
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___700_subsurface_color_nonnegative_in2_tmp $const4 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:284
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp14 ___700_subsurface_color_nonnegative_in2_tmp 	%line{284} %argrw{"wr"}
	max		___700_subsurface_color_nonnegative_out ColorSpaceShader_subsurface_color $tmp14 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:285
#     float coat_clamped_high_tmp = 1.000000;
	assign		___700_coat_clamped_low_tmp $const4 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:286
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___700_coat_clamped_high_tmp $const23 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:287
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const31 111 	%line{287} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp15 ColorSpaceShader_coat ___700_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_coat_clamped_out $tmp15 ___700_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:288
#     float subsurface_selector_out = float(thin_walled);
	mul		___700_subsurface_radius_scaled_out ColorSpaceShader_subsurface_radius ColorSpaceShader_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{288} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:289
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp16 ColorSpaceShader_thin_walled 	%line{289} %argrw{"wr"}
	assign		___700_subsurface_selector_out $tmp16 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:290
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___700_base_color_nonnegative_in2_tmp $const4 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:291
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp17 ___700_base_color_nonnegative_in2_tmp 	%line{291} %argrw{"wr"}
	max		___700_base_color_nonnegative_out color_gamma22_value_cm_out $tmp17 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:292
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___700_coat_attenuation_bg_tmp $const34 	%line{292} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:293
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___700_coat_attenuation_out ___700_coat_attenuation_bg_tmp ColorSpaceShader_coat_color ColorSpaceShader_coat 	%line{293} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:294
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___700_one_minus_coat_ior_in1_tmp $const23 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:295
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___700_one_minus_coat_ior_out ___700_one_minus_coat_ior_in1_tmp ColorSpaceShader_coat_IOR 	%line{295} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:296
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___700_one_plus_coat_ior_in1_tmp $const23 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:297
#     color emission_weight_out = emission_color * emission1;
	add		___700_one_plus_coat_ior_out ___700_one_plus_coat_ior_in1_tmp ColorSpaceShader_coat_IOR 	%line{297} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:298
#     color opacity_luminance_out = color(0.0);
	mul		___700_emission_weight_out ColorSpaceShader_emission_color ColorSpaceShader_emission 	%line{298} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:299
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___700_opacity_luminance_out $const2 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:300
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const36 128 	%line{300} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:113
# }
	dot		$tmp19 ColorSpaceShader_opacity $const35 	%line{113} %argrw{"wrr"}
	assign		___700_opacity_luminance_out $tmp19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:301
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___700_coat_tangent_rotate_out $const8 	%line{301} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:302
#     color artistic_ior_ior = color(0.0);
	functioncall	$const37 246 	%line{302} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:131
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 133 	%line{131} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp20 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___681_rotationRadians ___700_coat_tangent_rotate_degree_out $tmp20 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:132
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 196 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{132} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:118
#     float s = sin(angle);
	normalize	___680_nAxis geomprop_Nworld_out1 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:119
#     float c = cos(angle);
	sin		___680_s ___681_rotationRadians 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:120
#     float oc = 1.0 - c;
	cos		___680_c ___681_rotationRadians 	%line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:121
# 
	sub		___680_oc $const23 ___680_c 	%line{121} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:123
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp21 ___680_nAxis $const1 	%line{123} %argrw{"wrr"}
	mul		$tmp22 ___680_oc $tmp21 	%argrw{"wrr"}
	compref		$tmp23 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp24 $tmp22 $tmp23 	%argrw{"wrr"}
	add		$tmp25 $tmp24 ___680_c 	%argrw{"wrr"}
	compref		$tmp26 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp27 ___680_oc $tmp26 	%argrw{"wrr"}
	compref		$tmp28 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
	compref		$tmp30 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp31 $tmp30 ___680_s 	%argrw{"wrr"}
	sub		$tmp32 $tmp29 $tmp31 	%argrw{"wrr"}
	compref		$tmp33 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp34 ___680_oc $tmp33 	%argrw{"wrr"}
	compref		$tmp35 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp36 $tmp34 $tmp35 	%argrw{"wrr"}
	compref		$tmp37 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp38 $tmp37 ___680_s 	%argrw{"wrr"}
	add		$tmp39 $tmp36 $tmp38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:124
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp40 ___680_nAxis $const1 	%line{124} %argrw{"wrr"}
	mul		$tmp41 ___680_oc $tmp40 	%argrw{"wrr"}
	compref		$tmp42 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp43 $tmp41 $tmp42 	%argrw{"wrr"}
	compref		$tmp44 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp45 $tmp44 ___680_s 	%argrw{"wrr"}
	add		$tmp46 $tmp43 $tmp45 	%argrw{"wrr"}
	compref		$tmp47 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp48 ___680_oc $tmp47 	%argrw{"wrr"}
	compref		$tmp49 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp50 $tmp48 $tmp49 	%argrw{"wrr"}
	add		$tmp51 $tmp50 ___680_c 	%argrw{"wrr"}
	compref		$tmp52 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp53 ___680_oc $tmp52 	%argrw{"wrr"}
	compref		$tmp54 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp55 $tmp53 $tmp54 	%argrw{"wrr"}
	compref		$tmp56 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp57 $tmp56 ___680_s 	%argrw{"wrr"}
	sub		$tmp58 $tmp55 $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:125
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp59 ___680_nAxis $const13 	%line{125} %argrw{"wrr"}
	mul		$tmp60 ___680_oc $tmp59 	%argrw{"wrr"}
	compref		$tmp61 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp62 $tmp60 $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp64 $tmp63 ___680_s 	%argrw{"wrr"}
	sub		$tmp65 $tmp62 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp67 ___680_oc $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp69 $tmp67 $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp71 $tmp70 ___680_s 	%argrw{"wrr"}
	add		$tmp72 $tmp69 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp74 ___680_oc $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	add		$tmp77 $tmp76 ___680_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:123
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___681_m $tmp25 $tmp32 $tmp39 $const4 $tmp46 $tmp51 $tmp58 $const4 $tmp65 $tmp72 $tmp77 $const4 $const4 $const4 $const4 $const23 	%line{123} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:133
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp78.x geomprop_Tworld_out1 $const1 	%line{133} %argrw{"wrr"}
	compref		$tmp78.y geomprop_Tworld_out1 $const12 	%argrw{"wrr"}
	compref		$tmp78.z geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	assign		$tmp78.w $const23 	%argrw{"wr"}
	functioncall	$const26 245 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp79 ___681_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp80 $tmp79 $tmp78.x 	%argrw{"wrr"}
	mxcompref	$tmp81 ___681_m $const12 $const1 	%argrw{"wrrr"}
	mul		$tmp82 $tmp81 $tmp78.y 	%argrw{"wrr"}
	add		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	mxcompref	$tmp84 ___681_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp85 $tmp84 $tmp78.z 	%argrw{"wrr"}
	add		$tmp86 $tmp83 $tmp85 	%argrw{"wrr"}
	mxcompref	$tmp87 ___681_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp88 $tmp87 $tmp78.w 	%argrw{"wrr"}
	add		___681_trans.x $tmp86 $tmp88 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp89 ___681_m $const1 $const12 	%line{416} %argrw{"wrrr"}
	mul		$tmp90 $tmp89 $tmp78.x 	%argrw{"wrr"}
	mxcompref	$tmp91 ___681_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp92 $tmp91 $tmp78.y 	%argrw{"wrr"}
	add		$tmp93 $tmp90 $tmp92 	%argrw{"wrr"}
	mxcompref	$tmp94 ___681_m $const13 $const12 	%argrw{"wrrr"}
	mul		$tmp95 $tmp94 $tmp78.z 	%argrw{"wrr"}
	add		$tmp96 $tmp93 $tmp95 	%argrw{"wrr"}
	mxcompref	$tmp97 ___681_m $const42 $const12 	%argrw{"wrrr"}
	mul		$tmp98 $tmp97 $tmp78.w 	%argrw{"wrr"}
	add		___681_trans.y $tmp96 $tmp98 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp99 ___681_m $const1 $const13 	%line{417} %argrw{"wrrr"}
	mul		$tmp100 $tmp99 $tmp78.x 	%argrw{"wrr"}
	mxcompref	$tmp101 ___681_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp102 $tmp101 $tmp78.y 	%argrw{"wrr"}
	add		$tmp103 $tmp100 $tmp102 	%argrw{"wrr"}
	mxcompref	$tmp104 ___681_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp105 $tmp104 $tmp78.z 	%argrw{"wrr"}
	add		$tmp106 $tmp103 $tmp105 	%argrw{"wrr"}
	mxcompref	$tmp107 ___681_m $const42 $const13 	%argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp78.w 	%argrw{"wrr"}
	add		___681_trans.z $tmp106 $tmp108 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp109 ___681_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp110 $tmp109 $tmp78.x 	%argrw{"wrr"}
	mxcompref	$tmp111 ___681_m $const12 $const42 	%argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp78.y 	%argrw{"wrr"}
	add		$tmp113 $tmp110 $tmp112 	%argrw{"wrr"}
	mxcompref	$tmp114 ___681_m $const13 $const42 	%argrw{"wrrr"}
	mul		$tmp115 $tmp114 $tmp78.z 	%argrw{"wrr"}
	add		$tmp116 $tmp113 $tmp115 	%argrw{"wrr"}
	mxcompref	$tmp117 ___681_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp78.w 	%argrw{"wrr"}
	add		___681_trans.w $tmp116 $tmp118 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:134
# }
	vector		___700_coat_tangent_rotate_out ___681_trans.x ___681_trans.y ___681_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{134} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:303
#     color artistic_ior_extinction = color(0.0);
	assign		___700_artistic_ior_ior $const2 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:304
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___700_artistic_ior_extinction $const2 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:305
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const43 273 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:142
#     color r_sqrt = sqrt(r);
	assign		$tmp119 $const4 	%line{142} %argrw{"wr"}
	assign		$tmp120 $const44 	%argrw{"wr"}
	functioncall	$const31 254 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp121 ___700_metal_reflectivity_out $tmp120 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___682_r $tmp121 $tmp119 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:143
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___682_r_sqrt ___682_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{143} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:144
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp122 $const23 ___682_r 	%line{144} %argrw{"wrr"}
	add		$tmp123 $const23 ___682_r 	%argrw{"wrr"}
	div		___682_n_min $tmp122 $tmp123 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:145
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp124 $const23 ___682_r_sqrt 	%line{145} %argrw{"wrr"}
	sub		$tmp125 $const23 ___682_r_sqrt 	%argrw{"wrr"}
	div		___682_n_max $tmp124 $tmp125 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:146
# 
	mix		___700_artistic_ior_ior ___682_n_max ___682_n_min ___700_metal_edgecolor_out 	%line{146} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:148
#     color nm1 = ior - 1.0;
	add		___682_np1 ___700_artistic_ior_ior $const23 	%line{148} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:149
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___682_nm1 ___700_artistic_ior_ior $const23 	%line{149} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:150
#     k2 = max(k2, 0.0);
	mul		$tmp126 ___682_np1 ___682_np1 	%line{150} %argrw{"wrr"}
	mul		$tmp127 $tmp126 ___682_r 	%argrw{"wrr"}
	mul		$tmp128 ___682_nm1 ___682_nm1 	%argrw{"wrr"}
	sub		$tmp129 $tmp127 $tmp128 	%argrw{"wrr"}
	sub		$tmp130 $const23 ___682_r 	%argrw{"wrr"}
	div		___682_k2 $tmp129 $tmp130 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:151
#     extinction = sqrt(k2);
	assign		$tmp131 $const4 	%line{151} %argrw{"wr"}
	max		___682_k2 ___682_k2 $tmp131 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:152
# }
	sqrt		___700_artistic_ior_extinction ___682_k2 	%line{152} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:306
#     vector tangent_rotate_out = vector(0.0);
	mul		___700_coat_affect_roughness_multiply2_out ___700_coat_affect_roughness_multiply1_out ColorSpaceShader_coat_roughness 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:307
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___700_tangent_rotate_out $const8 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:308
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const37 392 	%line{308} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:131
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 279 	%line{131} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp132 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___681_rotationRadians ___700_tangent_rotate_degree_out $tmp132 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:132
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 342 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{132} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:118
#     float s = sin(angle);
	normalize	___680_nAxis geomprop_Nworld_out1 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:119
#     float c = cos(angle);
	sin		___680_s ___681_rotationRadians 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:120
#     float oc = 1.0 - c;
	cos		___680_c ___681_rotationRadians 	%line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:121
# 
	sub		___680_oc $const23 ___680_c 	%line{121} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:123
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp133 ___680_nAxis $const1 	%line{123} %argrw{"wrr"}
	mul		$tmp134 ___680_oc $tmp133 	%argrw{"wrr"}
	compref		$tmp135 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp136 $tmp134 $tmp135 	%argrw{"wrr"}
	add		$tmp137 $tmp136 ___680_c 	%argrw{"wrr"}
	compref		$tmp138 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp139 ___680_oc $tmp138 	%argrw{"wrr"}
	compref		$tmp140 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp141 $tmp139 $tmp140 	%argrw{"wrr"}
	compref		$tmp142 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp143 $tmp142 ___680_s 	%argrw{"wrr"}
	sub		$tmp144 $tmp141 $tmp143 	%argrw{"wrr"}
	compref		$tmp145 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp146 ___680_oc $tmp145 	%argrw{"wrr"}
	compref		$tmp147 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp148 $tmp146 $tmp147 	%argrw{"wrr"}
	compref		$tmp149 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp150 $tmp149 ___680_s 	%argrw{"wrr"}
	add		$tmp151 $tmp148 $tmp150 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:124
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp152 ___680_nAxis $const1 	%line{124} %argrw{"wrr"}
	mul		$tmp153 ___680_oc $tmp152 	%argrw{"wrr"}
	compref		$tmp154 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp155 $tmp153 $tmp154 	%argrw{"wrr"}
	compref		$tmp156 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp157 $tmp156 ___680_s 	%argrw{"wrr"}
	add		$tmp158 $tmp155 $tmp157 	%argrw{"wrr"}
	compref		$tmp159 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp160 ___680_oc $tmp159 	%argrw{"wrr"}
	compref		$tmp161 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp162 $tmp160 $tmp161 	%argrw{"wrr"}
	add		$tmp163 $tmp162 ___680_c 	%argrw{"wrr"}
	compref		$tmp164 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp165 ___680_oc $tmp164 	%argrw{"wrr"}
	compref		$tmp166 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp167 $tmp165 $tmp166 	%argrw{"wrr"}
	compref		$tmp168 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp169 $tmp168 ___680_s 	%argrw{"wrr"}
	sub		$tmp170 $tmp167 $tmp169 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:125
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp171 ___680_nAxis $const13 	%line{125} %argrw{"wrr"}
	mul		$tmp172 ___680_oc $tmp171 	%argrw{"wrr"}
	compref		$tmp173 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp174 $tmp172 $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp176 $tmp175 ___680_s 	%argrw{"wrr"}
	sub		$tmp177 $tmp174 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___680_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp179 ___680_oc $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp181 $tmp179 $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp183 $tmp182 ___680_s 	%argrw{"wrr"}
	add		$tmp184 $tmp181 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp186 ___680_oc $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___680_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp188 $tmp186 $tmp187 	%argrw{"wrr"}
	add		$tmp189 $tmp188 ___680_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:123
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___681_m $tmp137 $tmp144 $tmp151 $const4 $tmp158 $tmp163 $tmp170 $const4 $tmp177 $tmp184 $tmp189 $const4 $const4 $const4 $const4 $const23 	%line{123} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:133
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp190.x geomprop_Tworld_out1 $const1 	%line{133} %argrw{"wrr"}
	compref		$tmp190.y geomprop_Tworld_out1 $const12 	%argrw{"wrr"}
	compref		$tmp190.z geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	assign		$tmp190.w $const23 	%argrw{"wr"}
	functioncall	$const26 391 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp191 ___681_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp192 $tmp191 $tmp190.x 	%argrw{"wrr"}
	mxcompref	$tmp193 ___681_m $const12 $const1 	%argrw{"wrrr"}
	mul		$tmp194 $tmp193 $tmp190.y 	%argrw{"wrr"}
	add		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	mxcompref	$tmp196 ___681_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp197 $tmp196 $tmp190.z 	%argrw{"wrr"}
	add		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	mxcompref	$tmp199 ___681_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp200 $tmp199 $tmp190.w 	%argrw{"wrr"}
	add		___681_trans.x $tmp198 $tmp200 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp201 ___681_m $const1 $const12 	%line{416} %argrw{"wrrr"}
	mul		$tmp202 $tmp201 $tmp190.x 	%argrw{"wrr"}
	mxcompref	$tmp203 ___681_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp204 $tmp203 $tmp190.y 	%argrw{"wrr"}
	add		$tmp205 $tmp202 $tmp204 	%argrw{"wrr"}
	mxcompref	$tmp206 ___681_m $const13 $const12 	%argrw{"wrrr"}
	mul		$tmp207 $tmp206 $tmp190.z 	%argrw{"wrr"}
	add		$tmp208 $tmp205 $tmp207 	%argrw{"wrr"}
	mxcompref	$tmp209 ___681_m $const42 $const12 	%argrw{"wrrr"}
	mul		$tmp210 $tmp209 $tmp190.w 	%argrw{"wrr"}
	add		___681_trans.y $tmp208 $tmp210 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp211 ___681_m $const1 $const13 	%line{417} %argrw{"wrrr"}
	mul		$tmp212 $tmp211 $tmp190.x 	%argrw{"wrr"}
	mxcompref	$tmp213 ___681_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp214 $tmp213 $tmp190.y 	%argrw{"wrr"}
	add		$tmp215 $tmp212 $tmp214 	%argrw{"wrr"}
	mxcompref	$tmp216 ___681_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp217 $tmp216 $tmp190.z 	%argrw{"wrr"}
	add		$tmp218 $tmp215 $tmp217 	%argrw{"wrr"}
	mxcompref	$tmp219 ___681_m $const42 $const13 	%argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp190.w 	%argrw{"wrr"}
	add		___681_trans.z $tmp218 $tmp220 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp221 ___681_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp190.x 	%argrw{"wrr"}
	mxcompref	$tmp223 ___681_m $const12 $const42 	%argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp190.y 	%argrw{"wrr"}
	add		$tmp225 $tmp222 $tmp224 	%argrw{"wrr"}
	mxcompref	$tmp226 ___681_m $const13 $const42 	%argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp190.z 	%argrw{"wrr"}
	add		$tmp228 $tmp225 $tmp227 	%argrw{"wrr"}
	mxcompref	$tmp229 ___681_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp190.w 	%argrw{"wrr"}
	add		___681_trans.w $tmp228 $tmp230 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:134
# }
	vector		___700_tangent_rotate_out ___681_trans.x ___681_trans.y ___681_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{134} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:309
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___700_transmission_roughness_clamped_low_tmp $const4 	%line{309} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:310
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___700_transmission_roughness_clamped_high_tmp $const23 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:311
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const31 397 	%line{311} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp231 ___700_transmission_roughness_add_out ___700_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_transmission_roughness_clamped_out $tmp231 ___700_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:312
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___700_coat_gamma_multiply_out ___700_coat_clamped_out ColorSpaceShader_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{312} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:313
#     int opacity_luminance_float_index_tmp = 0;
	div		___700_coat_ior_to_F0_sqrt_out ___700_one_minus_coat_ior_out ___700_one_plus_coat_ior_out 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:314
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___700_opacity_luminance_float_index_tmp $const1 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:315
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const11 402 	%line{315} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___700_opacity_luminance_float_out ___700_opacity_luminance_out ___700_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:316
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___700_coat_tangent_rotate_normalize_out ___700_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:317
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___700_coat_affected_roughness_fg_tmp $const23 	%line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:318
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___700_coat_affected_roughness_out ColorSpaceShader_specular_roughness ___700_coat_affected_roughness_fg_tmp ___700_coat_affect_roughness_multiply2_out 	%line{318} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:319
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___700_tangent_rotate_normalize_out ___700_tangent_rotate_out 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:320
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___700_coat_affected_transmission_roughness_fg_tmp $const23 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:321
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___700_coat_affected_transmission_roughness_out ___700_transmission_roughness_clamped_out ___700_coat_affected_transmission_roughness_fg_tmp ___700_coat_affect_roughness_multiply2_out 	%line{321} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:322
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___700_coat_gamma_in2_tmp $const23 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:323
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___700_coat_gamma_out ___700_coat_gamma_multiply_out ___700_coat_gamma_in2_tmp 	%line{323} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:324
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___700_coat_ior_to_F0_out ___700_coat_ior_to_F0_sqrt_out ___700_coat_ior_to_F0_sqrt_out 	%line{324} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:325
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___700_coat_tangent_value2_tmp $const4 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:326
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp232 ColorSpaceShader_coat_anisotropy ___700_coat_tangent_value2_tmp 	%line{326} %argrw{"wrr"}
	functioncall	$const45 419 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp232 417 419 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___700_coat_tangent_out ___700_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___700_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:327
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___700_main_roughness_out.x $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{327} %argrw{"wr"}
	assign		___700_main_roughness_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:328
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const29 440 	%line{328} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:97
#     if (anisotropy > 0.0)
	mul		$tmp233 ___700_coat_affected_roughness_out ___700_coat_affected_roughness_out 	%line{97} %argrw{"wrr"}
	functioncall	$const31 426 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp234 $tmp233 $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp234 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:98
#     {
	gt		$tmp235 ColorSpaceShader_specular_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{98} %argrw{"wrr"}
	if		$tmp235 438 440 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const31 431 	%line{100} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp237 ColorSpaceShader_specular_anisotropy $const32 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp236 $tmp237 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp238 $const23 $tmp236 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{100} %argrw{"wrr"}
	sqrt		___677_aspect $tmp238 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:101
#         result.y = roughness_sqr * aspect;
	div		$tmp239 ___676_roughness_sqr ___677_aspect 	%line{101} %argrw{"wrr"}
	min		___700_main_roughness_out.x $tmp239 $const23 	%argrw{"wrr"}
	assign		___700_main_roughness_out.x ___700_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:102
#     }
	mul		___700_main_roughness_out.y ___676_roughness_sqr ___677_aspect 	%line{102} %argrw{"wrr"}
	assign		___700_main_roughness_out.y ___700_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:106
#         result.y = roughness_sqr;
	assign		___700_main_roughness_out.x ___676_roughness_sqr 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:107
#     }
	assign		___700_main_roughness_out.y ___676_roughness_sqr 	%line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:329
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___700_main_tangent_value2_tmp $const4 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:330
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp240 ColorSpaceShader_specular_anisotropy ___700_main_tangent_value2_tmp 	%line{330} %argrw{"wrr"}
	functioncall	$const45 448 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp240 446 448 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___700_main_tangent_out ___700_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___700_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:331
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___700_transmission_roughness_out.x $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{331} %argrw{"wr"}
	assign		___700_transmission_roughness_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:332
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const29 469 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:97
#     if (anisotropy > 0.0)
	mul		$tmp241 ___700_coat_affected_transmission_roughness_out ___700_coat_affected_transmission_roughness_out 	%line{97} %argrw{"wrr"}
	functioncall	$const31 455 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp242 $tmp241 $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp242 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:98
#     {
	gt		$tmp243 ColorSpaceShader_specular_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{98} %argrw{"wrr"}
	if		$tmp243 467 469 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const31 460 	%line{100} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp245 ColorSpaceShader_specular_anisotropy $const32 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp244 $tmp245 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:100
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp246 $const23 $tmp244 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{100} %argrw{"wrr"}
	sqrt		___677_aspect $tmp246 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:101
#         result.y = roughness_sqr * aspect;
	div		$tmp247 ___676_roughness_sqr ___677_aspect 	%line{101} %argrw{"wrr"}
	min		___700_transmission_roughness_out.x $tmp247 $const23 	%argrw{"wrr"}
	assign		___700_transmission_roughness_out.x ___700_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:102
#     }
	mul		___700_transmission_roughness_out.y ___676_roughness_sqr ___677_aspect 	%line{102} %argrw{"wrr"}
	assign		___700_transmission_roughness_out.y ___700_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:106
#         result.y = roughness_sqr;
	assign		___700_transmission_roughness_out.x ___676_roughness_sqr 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:107
#     }
	assign		___700_transmission_roughness_out.y ___676_roughness_sqr 	%line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:333
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___700_coat_affected_subsurface_color_out ___700_subsurface_color_nonnegative_out ___700_coat_gamma_out 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:334
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___700_coat_affected_diffuse_color_out ___700_base_color_nonnegative_out ___700_coat_gamma_out 	%line{334} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:335
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___700_one_minus_coat_ior_to_F0_in1_tmp $const23 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:336
#     color emission_color0_out = color(0.0);
	sub		___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_in1_tmp ___700_coat_ior_to_F0_out 	%line{336} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:337
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___700_emission_color0_out $const2 	%line{337} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:338
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const46 477 	%line{338} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:173
#     out = combine_out;
	color		___685_combine_out ___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_out 	%line{173} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:174
# }
	assign		___700_emission_color0_out ___685_combine_out 	%line{174} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:339
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___700_coat_bsdf_out ___700_null_closure 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:340
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const50 489 	%line{340} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:157
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp249 $const49 $const51 	%line{157} %argrw{"wrr"}
	if		$tmp249 482 483 	%argrw{"r"}
	assign		___683_reflection_tint $const2 	%argrw{"wr"}
	assign		___683_reflection_tint $const34 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:158
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp250 $const49 $const49 	%line{158} %argrw{"wrr"}
	if		$tmp250 486 487 	%argrw{"r"}
	assign		___683_transmission_tint $const2 	%argrw{"wr"}
	assign		___683_transmission_tint $const34 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:159
# }
	closure		$tmp251 $const54 geomprop_Nworld_out1 ___700_coat_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_coat_roughness_vector_out.x ___700_coat_roughness_vector_out.y ColorSpaceShader_coat_IOR $const48 $const52 $const4 $const53 $const47 	%line{159} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_coat_bsdf_out $tmp251 ColorSpaceShader_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:341
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___700_metal_bsdf_weight_tmp $const23 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:342
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___700_metal_bsdf_distribution_tmp $const48 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:343
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp252 $const55 geomprop_Nworld_out1 ___700_main_tangent_out ___700_main_roughness_out.x ___700_main_roughness_out.y ___700_artistic_ior_ior ___700_artistic_ior_extinction ___700_metal_bsdf_distribution_tmp $const52 ColorSpaceShader_thin_film_thickness $const53 ColorSpaceShader_thin_film_IOR 	%line{343} %argrw{"wrrrrrrrrrrrr"}
	mul		___700_metal_bsdf_out $tmp252 ___700_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:344
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___700_specular_bsdf_out ___700_null_closure 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:345
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const50 505 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:157
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp253 $const49 $const51 	%line{157} %argrw{"wrr"}
	if		$tmp253 498 499 	%argrw{"r"}
	assign		___683_reflection_tint $const2 	%argrw{"wr"}
	assign		___683_reflection_tint ColorSpaceShader_specular_color_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:158
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp254 $const49 $const49 	%line{158} %argrw{"wrr"}
	if		$tmp254 502 503 	%argrw{"r"}
	assign		___683_transmission_tint $const2 	%argrw{"wr"}
	assign		___683_transmission_tint ColorSpaceShader_specular_color_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:159
# }
	closure		$tmp255 $const54 geomprop_Nworld_out1 ___700_main_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_main_roughness_out.x ___700_main_roughness_out.y ColorSpaceShader_specular_IOR $const48 $const52 ColorSpaceShader_thin_film_thickness $const53 ColorSpaceShader_thin_film_IOR 	%line{159} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_specular_bsdf_out $tmp255 ColorSpaceShader_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:346
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___700_transmission_bsdf_out ___700_null_closure 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:347
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const50 517 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:157
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp256 $const51 $const51 	%line{157} %argrw{"wrr"}
	if		$tmp256 510 511 	%argrw{"r"}
	assign		___683_reflection_tint $const2 	%argrw{"wr"}
	assign		___683_reflection_tint ColorSpaceShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:158
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp257 $const51 $const49 	%line{158} %argrw{"wrr"}
	if		$tmp257 514 515 	%argrw{"r"}
	assign		___683_transmission_tint $const2 	%argrw{"wr"}
	assign		___683_transmission_tint ColorSpaceShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:159
# }
	closure		$tmp258 $const54 geomprop_Nworld_out1 ___700_main_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_transmission_roughness_out.x ___700_transmission_roughness_out.y ColorSpaceShader_specular_IOR $const48 $const52 $const4 $const53 $const47 	%line{159} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_transmission_bsdf_out $tmp258 $const23 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:348
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp259 $const56 geomprop_Nworld_out1 ColorSpaceShader_sheen_color ColorSpaceShader_sheen_roughness 	%line{348} %argrw{"wrrrr"}
	mul		___700_sheen_bsdf_out $tmp259 ColorSpaceShader_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:349
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___700_translucent_bsdf_weight_tmp $const23 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:350
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp260 $const57 geomprop_Nworld_out1 ___700_coat_affected_subsurface_color_out 	%line{350} %argrw{"wrrr"}
	mul		___700_translucent_bsdf_out $tmp260 ___700_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:351
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___700_subsurface_bsdf_out ___700_null_closure 	%line{351} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:352
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const58 526 	%line{352} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:167
# #endif
	mul		$tmp261 $const23 ___700_coat_affected_subsurface_color_out 	%line{167} %argrw{"wrr"}
	closure		___700_subsurface_bsdf_out $const59 geomprop_Nworld_out1 $tmp261 $const23 ___700_subsurface_radius_scaled_out ColorSpaceShader_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:353
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const60 531 	%line{353} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp262 $const23 ___700_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp263 ___700_subsurface_bsdf_out $tmp262 	%argrw{"wrr"}
	mul		$tmp264 ___700_translucent_bsdf_out ___700_subsurface_selector_out 	%argrw{"wrr"}
	add		___700_selected_subsurface_bsdf_out $tmp263 $tmp264 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:354
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp265 $const61 geomprop_Nworld_out1 ___700_coat_affected_diffuse_color_out ColorSpaceShader_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{354} %argrw{"wrrrr"}
	mul		___700_diffuse_bsdf_out $tmp265 ColorSpaceShader_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:355
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const60 538 	%line{355} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp266 $const23 ColorSpaceShader_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp267 ___700_diffuse_bsdf_out $tmp266 	%argrw{"wrr"}
	mul		$tmp268 ___700_selected_subsurface_bsdf_out ColorSpaceShader_subsurface 	%argrw{"wrr"}
	add		___700_subsurface_mix_out $tmp267 $tmp268 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:356
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___700_sheen_layer_out $const62 ___700_sheen_bsdf_out ___700_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{356} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:357
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const60 544 	%line{357} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp269 $const23 ColorSpaceShader_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp270 ___700_sheen_layer_out $tmp269 	%argrw{"wrr"}
	mul		$tmp271 ___700_transmission_bsdf_out ColorSpaceShader_transmission 	%argrw{"wrr"}
	add		___700_transmission_mix_out $tmp270 $tmp271 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:358
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___700_specular_layer_out $const62 ___700_specular_bsdf_out ___700_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{358} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:359
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const60 550 	%line{359} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp272 $const23 ColorSpaceShader_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp273 ___700_specular_layer_out $tmp272 	%argrw{"wrr"}
	mul		$tmp274 ___700_metal_bsdf_out ColorSpaceShader_metalness 	%argrw{"wrr"}
	add		___700_metalness_mix_out $tmp273 $tmp274 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:360
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___700_thin_film_layer_attenuated_out ___700_metalness_mix_out ___700_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{360} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:361
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___700_coat_layer_out $const62 ___700_coat_bsdf_out ___700_thin_film_layer_attenuated_out 	%line{361} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:362
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___700_emission_edf_out $const63 ___700_emission_weight_out 	%line{362} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:363
#     EDF coat_emission_edf_out = null_closure;
	mul		___700_coat_tinted_emission_edf_out ___700_emission_edf_out ColorSpaceShader_coat_color 	%line{363} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:364
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___700_coat_emission_edf_out ___700_null_closure 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:365
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const65 567 	%line{365} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:258
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp277 I 	%line{258} %argrw{"wr"}
	dot		$tmp276 N $tmp277 	%argrw{"wrr"}
	fabs		___698_NdotV $tmp276 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:259
#     result = base * f;
	functioncall	$const66 566 	%line{259} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:252
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp278 $const23 ___698_NdotV 	%line{252} %argrw{"wrr"}
	functioncall	$const31 564 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp279 $tmp278 $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_x $tmp279 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:253
# }
	pow		$tmp280 ___697_x $const64 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{253} %argrw{"wrr"}
	mix		___698_f ___700_emission_color0_out $const2 $tmp280 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:260
# }
	mul		___700_coat_emission_edf_out ___700_coat_tinted_emission_edf_out ___698_f 	%line{260} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:366
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const60 572 	%line{366} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp281 $const23 ColorSpaceShader_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp282 ___700_emission_edf_out $tmp281 	%argrw{"wrr"}
	mul		$tmp283 ___700_coat_emission_edf_out ColorSpaceShader_coat 	%argrw{"wrr"}
	add		___700_blended_coat_emission_edf_out $tmp282 $tmp283 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:367
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___700_shader_constructor_out.bsdf ___700_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{367} %argrw{"wr"}
	assign		___700_shader_constructor_out.edf ___700_null_closure 	%argrw{"wr"}
	assign		___700_shader_constructor_out.opacity $const23 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:368
#     out = shader_constructor_out;
	functioncall	$const67 582 	%line{368} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:265
#     result.edf     = edf;
	assign		___700_shader_constructor_out.bsdf ___700_coat_layer_out 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:266
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___700_shader_constructor_out.edf ___700_blended_coat_emission_edf_out 	%line{266} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:267
# }
	functioncall	$const31 581 	%line{267} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp284 ___700_opacity_luminance_float_out $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_shader_constructor_out.opacity $tmp284 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:267
# }
	assign		___700_shader_constructor_out.opacity ___700_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:369
# }
	assign		ColorSpaceShader_out.bsdf ___700_shader_constructor_out.bsdf 	%line{369} %argrw{"wr"}
	assign		ColorSpaceShader_out.edf ___700_shader_constructor_out.edf 	%argrw{"wr"}
	assign		ColorSpaceShader_out.opacity ___700_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:758
#     out = ColorSpaceShaderMaterial_out;
	functioncall	$const68 595 	%line{758} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:374
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const31 589 	%line{374} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp285 ColorSpaceShader_out.opacity $const23 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_opacity_weight $tmp285 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:375
# }
	add		$tmp286 ColorSpaceShader_out.bsdf ColorSpaceShader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl"} %line{375} %argrw{"wrr"}
	mul		$tmp287 $tmp286 ___701_opacity_weight 	%argrw{"wrr"}
	closure		$tmp288 $const69 	%argrw{"wr"}
	sub		$tmp289 $const23 ___701_opacity_weight 	%argrw{"wrr"}
	mul		$tmp290 $tmp288 $tmp289 	%argrw{"wrr"}
	add		ColorSpaceShaderMaterial_out $tmp287 $tmp290 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\ColorSpaceShaderMaterial.osl:759
# }
	assign		out ColorSpaceShaderMaterial_out 	%line{759} %argrw{"wr"}
	end
