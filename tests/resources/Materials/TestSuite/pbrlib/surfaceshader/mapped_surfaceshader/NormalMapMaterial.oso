OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\mapped_surfaceshader\NormalMapMaterial.oso
shader NormalMapMaterial	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"NormalMapMaterial"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Bworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Bworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/mesh_wire_norm.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	tiledimage_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	vector	tiledimage_default	0 0 0		%read{66,68} %write{2147483647,-1}
param	struct vector2	tiledimage_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvtiling.x	10		%read{21,21} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage_uvtiling.y	10		%read{22,22} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvoffset.x	0		%read{24,24} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage_uvoffset.y	0		%read{25,25} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldimagesize.x	1		%read{27,27} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldimagesize.y	1		%read{28,28} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldtilesize.x	1		%read{30,30} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldtilesize.y	1		%read{31,31} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{1} %derivs
param	string	tiledimage_filtertype	"linear"		%read{72,72} %write{2147483647,-1}
param	string	tiledimage_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	normalmap_scale	1		%meta{string,widget,"number"}  %read{76,77} %write{2147483647,-1}
param	float	NormalMapShader_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{123,558} %write{2147483647,-1}
param	color	NormalMapShader_base_color	0.200000003 0.5 0.899999976		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{123,142} %write{2147483647,-1}
param	float	NormalMapShader_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{557,557} %write{2147483647,-1}
param	float	NormalMapShader_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{572,574} %write{2147483647,-1}
param	float	NormalMapShader_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{124,530} %write{2147483647,-1}
param	color	NormalMapShader_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{124,528} %write{2147483647,-1}
param	float	NormalMapShader_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{128,430} %write{2147483647,-1}
param	float	NormalMapShader_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{529,541} %write{2147483647,-1}
param	float	NormalMapShader_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{452,484} %write{2147483647,-1}
param	float	NormalMapShader_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{127,127} %write{2147483647,-1}
param	float	NormalMapShader_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{566,568} %write{2147483647,-1}
param	color	NormalMapShader_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{536,540} %write{2147483647,-1}
param	float	NormalMapShader_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	NormalMapShader_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMapShader_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMapShader_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMapShader_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{128,128} %write{2147483647,-1}
param	float	NormalMapShader_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{560,562} %write{2147483647,-1}
param	color	NormalMapShader_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{131,131} %write{2147483647,-1}
param	color	NormalMapShader_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{137,137} %write{2147483647,-1}
param	float	NormalMapShader_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{137,137} %write{2147483647,-1}
param	float	NormalMapShader_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{551,551} %write{2147483647,-1}
param	float	NormalMapShader_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{544,544} %write{2147483647,-1}
param	color	NormalMapShader_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{543,543} %write{2147483647,-1}
param	float	NormalMapShader_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{543,543} %write{2147483647,-1}
param	float	NormalMapShader_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{125,596} %write{2147483647,-1}
param	color	NormalMapShader_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{144,579} %write{2147483647,-1}
param	float	NormalMapShader_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{103,299} %write{2147483647,-1}
param	float	NormalMapShader_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{107,438} %write{2147483647,-1}
param	float	NormalMapShader_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{122,122} %write{2147483647,-1}
param	float	NormalMapShader_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{146,513} %write{2147483647,-1}
param	float	NormalMapShader_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{423,423} %write{2147483647,-1}
param	float	NormalMapShader_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{125,125} %write{2147483647,-1}
param	float	NormalMapShader_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{517,529} %write{2147483647,-1}
param	float	NormalMapShader_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{517,529} %write{2147483647,-1}
param	float	NormalMapShader_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{149,149} %write{2147483647,-1}
param	color	NormalMapShader_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{149,149} %write{2147483647,-1}
param	color	NormalMapShader_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{152,152} %write{2147483647,-1}
param	int	NormalMapShader_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{138,138} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{621,621}
global	vector	I	%read{582,582} %write{2147483647,-1}
global	normal	N	%read{4,583} %write{2147483647,-1}
global	float	u	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{17,17} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{72,72} %write{68,68}
local	float	___670_st.x	%read{72,72} %write{70,70} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{72,72} %write{71,71} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_N_mult_vector3_out.x	%read{24,24} %write{21,21} %mystruct{___672_N_mult_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_mult_vector3_out.y	%read{25,25} %write{22,22} %mystruct{___672_N_mult_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_sub_vector3_out.x	%read{27,27} %write{24,24} %mystruct{___672_N_sub_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_sub_vector3_out.y	%read{28,28} %write{25,25} %mystruct{___672_N_sub_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_vector3_out.x	%read{30,30} %write{27,27} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_vector3_out.y	%read{31,31} %write{28,28} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_vector3_out.x	%read{40,70} %write{30,30} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_vector3_out.y	%read{55,71} %write{31,31} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{1} %derivs
local	vector	___672_N_img_vector3_out	%read{73,73} %write{32,72}
local	vector	___673_decodedValue	%read{84,91} %write{81,83}
local	float	___677_roughness_sqr	%read{114,494} %write{106,480}
local	float	___678_aspect	%read{114,491} %write{113,487}
local	vector	___681_nAxis	%read{164,364} %write{160,306}
local	float	___681_s	%read{174,360} %write{161,307}
local	float	___681_c	%read{163,366} %write{162,308}
local	float	___681_oc	%read{165,363} %write{163,309}
local	float	___682_rotationRadians	%read{161,308} %write{158,304}
local	matrix	___682_m	%read{227,414} %write{221,367}
local	float	___682_trans.x	%read{271,417} %write{237,383} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{271,417} %write{248,394} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{271,417} %write{259,405} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{270,416} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{280,294} %write{279,279}
local	color	___683_r_sqrt	%read{284,285} %write{280,280}
local	color	___683_n_min	%read{287,287} %write{283,283}
local	color	___683_n_max	%read{287,287} %write{286,286}
local	color	___683_np1	%read{290,290} %write{288,288}
local	color	___683_nm1	%read{292,292} %write{289,289}
local	color	___683_k2	%read{297,298} %write{295,297}
local	color	___684_reflection_tint	%read{513,541} %write{507,536}
local	color	___684_transmission_tint	%read{513,541} %write{511,540}
local	color	___686_combine_out	%read{502,502} %write{501,501}
local	float	___698_x	%read{590,590} %write{589,589}
local	float	___699_NdotV	%read{586,586} %write{584,584}
local	color	___699_f	%read{592,592} %write{591,591}
local	closure color	___701_null_closure	%read{503,599} %write{99,99}
local	float	___701_coat_roughness_vector_out.x	%read{116,513} %write{100,119} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{118,513} %write{101,120} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{122,122} %write{121,121}
local	float	___701_coat_tangent_rotate_degree_out	%read{158,158} %write{122,122}
local	color	___701_metal_reflectivity_out	%read{278,278} %write{123,123}
local	color	___701_metal_edgecolor_out	%read{287,287} %write{124,124}
local	float	___701_coat_affect_roughness_multiply1_out	%read{299,299} %write{125,125}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{127,127} %write{126,126}
local	float	___701_tangent_rotate_degree_out	%read{304,304} %write{127,127}
local	float	___701_transmission_roughness_add_out	%read{421,421} %write{128,128}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{130,130} %write{129,129}
local	color	___701_subsurface_color_nonnegative_out	%read{495,495} %write{131,131}
local	float	___701_coat_clamped_low_tmp	%read{136,136} %write{132,132}
local	float	___701_coat_clamped_high_tmp	%read{135,135} %write{133,133}
local	float	___701_coat_clamped_out	%read{423,423} %write{136,136}
local	color	___701_subsurface_radius_scaled_out	%read{551,551} %write{137,137}
local	float	___701_subsurface_selector_out	%read{553,555} %write{139,139}
local	float	___701_base_color_nonnegative_in2_tmp	%read{141,141} %write{140,140}
local	color	___701_base_color_nonnegative_out	%read{496,496} %write{142,142}
local	color	___701_coat_attenuation_bg_tmp	%read{144,144} %write{143,143}
local	color	___701_coat_attenuation_out	%read{576,576} %write{144,144}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{146,146} %write{145,145}
local	float	___701_one_minus_coat_ior_out	%read{424,424} %write{146,146}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{148,148} %write{147,147}
local	float	___701_one_plus_coat_ior_out	%read{424,424} %write{148,148}
local	color	___701_emission_weight_out	%read{578,578} %write{149,149}
local	color	___701_opacity_luminance_out	%read{427,427} %write{150,153}
local	vector	___701_coat_tangent_rotate_out	%read{428,428} %write{154,271}
local	color	___701_artistic_ior_ior	%read{288,517} %write{272,287}
local	color	___701_artistic_ior_extinction	%read{517,517} %write{273,298}
local	float	___701_coat_affect_roughness_multiply2_out	%read{430,433} %write{299,299}
local	vector	___701_tangent_rotate_out	%read{431,431} %write{300,417}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{422,422} %write{418,418}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{421,421} %write{419,419}
local	float	___701_transmission_roughness_clamped_out	%read{433,433} %write{422,422}
local	float	___701_coat_gamma_multiply_out	%read{435,435} %write{423,423}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{436,436} %write{424,424}
local	int	___701_opacity_luminance_float_index_tmp	%read{427,427} %write{425,425}
local	float	___701_opacity_luminance_float_out	%read{605,605} %write{427,427}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{441,441} %write{428,428}
local	float	___701_coat_affected_roughness_fg_tmp	%read{430,430} %write{429,429}
local	float	___701_coat_affected_roughness_out	%read{448,448} %write{430,430}
local	vector	___701_tangent_rotate_normalize_out	%read{470,470} %write{431,431}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{433,433} %write{432,432}
local	float	___701_coat_affected_transmission_roughness_out	%read{477,477} %write{433,433}
local	float	___701_coat_gamma_in2_tmp	%read{435,435} %write{434,434}
local	float	___701_coat_gamma_out	%read{495,496} %write{435,435}
local	float	___701_coat_ior_to_F0_out	%read{498,498} %write{436,436}
local	float	___701_coat_tangent_value2_tmp	%read{438,438} %write{437,437}
local	vector	___701_coat_tangent_out	%read{513,513} %write{441,443}
local	float	___701_main_roughness_out.x	%read{461,529} %write{445,464} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{463,529} %write{446,465} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{467,467} %write{466,466}
local	vector	___701_main_tangent_out	%read{517,541} %write{470,472}
local	float	___701_transmission_roughness_out.x	%read{490,541} %write{474,493} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{492,541} %write{475,494} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{546,550} %write{495,495}
local	color	___701_coat_affected_diffuse_color_out	%read{557,557} %write{496,496}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{498,498} %write{497,497}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{501,501} %write{498,498}
local	color	___701_emission_color0_out	%read{591,591} %write{499,502}
local	closure color	___701_coat_bsdf_out	%read{577,577} %write{503,514}
local	float	___701_metal_bsdf_weight_tmp	%read{518,518} %write{515,515}
local	string	___701_metal_bsdf_distribution_tmp	%read{517,517} %write{516,516}
local	closure color	___701_metal_bsdf_out	%read{574,574} %write{518,518}
local	closure color	___701_specular_bsdf_out	%read{570,570} %write{519,530}
local	closure color	___701_transmission_bsdf_out	%read{568,568} %write{531,542}
local	closure color	___701_sheen_bsdf_out	%read{564,564} %write{544,544}
local	float	___701_translucent_bsdf_weight_tmp	%read{547,547} %write{545,545}
local	closure color	___701_translucent_bsdf_out	%read{555,555} %write{547,547}
local	closure color	___701_subsurface_bsdf_out	%read{554,554} %write{548,551}
local	closure color	___701_selected_subsurface_bsdf_out	%read{562,562} %write{556,556}
local	closure color	___701_diffuse_bsdf_out	%read{561,561} %write{558,558}
local	closure color	___701_subsurface_mix_out	%read{564,564} %write{563,563}
local	closure color	___701_sheen_layer_out	%read{567,567} %write{564,564}
local	closure color	___701_transmission_mix_out	%read{570,570} %write{569,569}
local	closure color	___701_specular_layer_out	%read{573,573} %write{570,570}
local	closure color	___701_metalness_mix_out	%read{576,576} %write{575,575}
local	closure color	___701_thin_film_layer_attenuated_out	%read{577,577} %write{576,576}
local	closure color	___701_coat_layer_out	%read{602,602} %write{577,577}
local	closure color	___701_emission_edf_out	%read{579,595} %write{578,578}
local	closure color	___701_coat_tinted_emission_edf_out	%read{592,592} %write{579,579}
local	closure color	___701_coat_emission_edf_out	%read{596,596} %write{580,592}
local	closure color	___701_blended_coat_emission_edf_out	%read{603,603} %write{597,597}
local	closure color	___701_shader_constructor_out.bsdf	%read{608,608} %write{598,602} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{609,609} %write{599,603} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{607,610} %write{600,607} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{616,618} %write{614,614}
local	closure color	null_closure	%read{95,96} %write{0,0}
local	string	tiledimage_file_.filename	%read{34,72} %write{1,1} %mystruct{tiledimage_file_} %mystructfield{0}
local	string	tiledimage_file_.colorspace	%read{2147483647,-1} %write{2,2} %mystruct{tiledimage_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{92,513} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{85,472} %write{9,9}
local	vector	geomprop_Bworld_out1	%read{88,88} %write{15,15}
local	float	geomprop_UV0_out1.x	%read{21,21} %write{16,16} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{22,22} %write{17,17} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	vector	tiledimage_out	%read{79,82} %write{18,73}
local	vector	normalmap_out	%read{306,557} %write{74,94}
local	closure color	NormalMapShader_out.bsdf	%read{615,615} %write{95,608} %mystruct{NormalMapShader_out} %mystructfield{0}
local	closure color	NormalMapShader_out.edf	%read{615,615} %write{96,609} %mystruct{NormalMapShader_out} %mystructfield{1}
local	float	NormalMapShader_out.opacity	%read{613,613} %write{97,610} %mystruct{NormalMapShader_out} %mystructfield{2}
local	closure color	NormalMapMaterial_out	%read{621,621} %write{620,620}
const	int	$const1	0		%read{0,425} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,372} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,411} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,614} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	vector	$tmp5	%read{15,15} %write{14,14}
temp	vector	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{13,13} %write{10,10}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	vector	$const6	0 0 0		%read{18,300} %write{2147483647,-1}
const	string	$const7	"NG_tiledimage_vector3"		%read{19,19} %write{2147483647,-1}
const	string	$const8	"__operator__mul__"		%read{20,29} %write{2147483647,-1}
const	string	$const9	"__operator__sub__"		%read{23,23} %write{2147483647,-1}
const	string	$const10	"__operator__div__"		%read{26,26} %write{2147483647,-1}
const	string	$const11	""		%read{34,72} %write{2147483647,-1}
const	string	$const12	"periodic"		%read{37,72} %write{2147483647,-1}
const	string	$const13	"mx_image_vector3"		%read{33,33} %write{2147483647,-1}
temp	int	$tmp10	%read{35,35} %write{34,34}
temp	int	$tmp11	%read{36,50} %write{35,49}
const	string	$const14	"constant"		%read{37,52} %write{2147483647,-1}
temp	int	$tmp12	%read{38,38} %write{37,37}
temp	int	$tmp13	%read{39,48} %write{38,47}
temp	int	$tmp14	%read{41,41} %write{40,40}
temp	int	$tmp15	%read{42,46} %write{41,45}
const	float	$const15	1		%read{43,618} %write{2147483647,-1}
temp	int	$tmp16	%read{44,44} %write{43,43}
temp	int	$tmp17	%read{45,45} %write{44,44}
temp	int	$tmp18	%read{47,47} %write{46,46}
temp	int	$tmp19	%read{49,49} %write{48,48}
temp	int	$tmp20	%read{51,65} %write{50,64}
temp	int	$tmp21	%read{53,53} %write{52,52}
temp	int	$tmp22	%read{54,63} %write{53,62}
temp	int	$tmp23	%read{56,56} %write{55,55}
temp	int	$tmp24	%read{57,61} %write{56,60}
temp	int	$tmp25	%read{59,59} %write{58,58}
temp	int	$tmp26	%read{60,60} %write{59,59}
temp	int	$tmp27	%read{62,62} %write{61,61}
temp	int	$tmp28	%read{64,64} %write{63,63}
const	string	$const16	"mx_transform_uv"		%read{69,69} %write{2147483647,-1}
const	string	$const17	"subimage"		%read{72,72} %write{2147483647,-1}
const	string	$const18	"interp"		%read{72,72} %write{2147483647,-1}
const	string	$const19	"missingcolor"		%read{72,72} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{72,72} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{72,72} %write{2147483647,-1}
const	string	$const22	"mx_normalmap_float"		%read{75,75} %write{2147483647,-1}
temp	float	$tmp29.x	%read{86,86} %write{76,76}
temp	float	$tmp29.y	%read{89,89} %write{77,77}
const	string	$const23	"mx_normalmap_vector2"		%read{78,78} %write{2147483647,-1}
temp	int	$tmp31	%read{80,80} %write{79,79}
const	vector	$const24	0 0 1		%read{81,81} %write{2147483647,-1}
const	float	$const25	2		%read{82,82} %write{2147483647,-1}
temp	vector	$tmp32	%read{83,83} %write{82,82}
temp	float	$tmp33	%read{85,85} %write{84,84}
temp	vector	$tmp34	%read{86,86} %write{85,85}
temp	vector	$tmp35	%read{90,90} %write{86,86}
const	int	$const26	1		%read{87,408} %write{2147483647,-1}
temp	float	$tmp36	%read{88,88} %write{87,87}
temp	vector	$tmp37	%read{89,89} %write{88,88}
temp	vector	$tmp38	%read{90,90} %write{89,89}
temp	vector	$tmp39	%read{93,93} %write{90,90}
temp	float	$tmp40	%read{92,92} %write{91,91}
temp	vector	$tmp41	%read{93,93} %write{92,92}
temp	vector	$tmp42	%read{94,94} %write{93,93}
const	string	$const27	"NG_standard_surface_surfaceshader_100"		%read{98,98} %write{2147483647,-1}
const	string	$const28	"mx_roughness_anisotropy"		%read{102,476} %write{2147483647,-1}
temp	float	$tmp43	%read{105,105} %write{103,103}
const	float	$const29	1e-08		%read{106,480} %write{2147483647,-1}
const	string	$const30	"clamp"		%read{104,612} %write{2147483647,-1}
temp	float	$tmp44	%read{106,106} %write{105,105}
temp	int	$tmp45	%read{108,108} %write{107,107}
temp	float	$tmp46	%read{112,112} %write{111,111}
const	float	$const31	0.98		%read{110,484} %write{2147483647,-1}
temp	float	$tmp47	%read{111,111} %write{110,110}
temp	float	$tmp48	%read{113,113} %write{112,112}
temp	float	$tmp49	%read{115,115} %write{114,114}
const	float	$const32	360		%read{121,126} %write{2147483647,-1}
temp	color	$tmp50	%read{131,131} %write{130,130}
temp	float	$tmp51	%read{136,136} %write{135,135}
temp	float	$tmp52	%read{139,139} %write{138,138}
temp	color	$tmp53	%read{142,142} %write{141,141}
const	color	$const33	1 1 1		%read{143,512} %write{2147483647,-1}
const	color	$const34	0 0 0		%read{150,591} %write{2147483647,-1}
const	color	$const35	0.272229 0.674082 0.053689		%read{152,152} %write{2147483647,-1}
const	string	$const36	"mx_luminance_color3"		%read{151,151} %write{2147483647,-1}
temp	float	$tmp55	%read{153,153} %write{152,152}
const	string	$const37	"mx_rotate_vector3"		%read{155,301} %write{2147483647,-1}
const	string	$const38	"radians"		%read{156,302} %write{2147483647,-1}
const	float	$const39	3.1415927		%read{157,303} %write{2147483647,-1}
const	float	$const40	180		%read{157,303} %write{2147483647,-1}
temp	float	$tmp56	%read{158,158} %write{157,157}
const	string	$const41	"rotationMatrix"		%read{159,305} %write{2147483647,-1}
temp	float	$tmp57	%read{165,165} %write{164,164}
temp	float	$tmp58	%read{167,167} %write{165,165}
temp	float	$tmp59	%read{167,167} %write{166,166}
temp	float	$tmp60	%read{168,168} %write{167,167}
temp	float	$tmp61	%read{221,221} %write{168,168}
temp	float	$tmp62	%read{170,170} %write{169,169}
temp	float	$tmp63	%read{172,172} %write{170,170}
temp	float	$tmp64	%read{172,172} %write{171,171}
temp	float	$tmp65	%read{175,175} %write{172,172}
temp	float	$tmp66	%read{174,174} %write{173,173}
temp	float	$tmp67	%read{175,175} %write{174,174}
temp	float	$tmp68	%read{221,221} %write{175,175}
temp	float	$tmp69	%read{177,177} %write{176,176}
temp	float	$tmp70	%read{179,179} %write{177,177}
temp	float	$tmp71	%read{179,179} %write{178,178}
temp	float	$tmp72	%read{182,182} %write{179,179}
temp	float	$tmp73	%read{181,181} %write{180,180}
temp	float	$tmp74	%read{182,182} %write{181,181}
temp	float	$tmp75	%read{221,221} %write{182,182}
temp	float	$tmp76	%read{184,184} %write{183,183}
temp	float	$tmp77	%read{186,186} %write{184,184}
temp	float	$tmp78	%read{186,186} %write{185,185}
temp	float	$tmp79	%read{189,189} %write{186,186}
temp	float	$tmp80	%read{188,188} %write{187,187}
temp	float	$tmp81	%read{189,189} %write{188,188}
temp	float	$tmp82	%read{221,221} %write{189,189}
temp	float	$tmp83	%read{191,191} %write{190,190}
temp	float	$tmp84	%read{193,193} %write{191,191}
temp	float	$tmp85	%read{193,193} %write{192,192}
temp	float	$tmp86	%read{194,194} %write{193,193}
temp	float	$tmp87	%read{221,221} %write{194,194}
temp	float	$tmp88	%read{196,196} %write{195,195}
temp	float	$tmp89	%read{198,198} %write{196,196}
temp	float	$tmp90	%read{198,198} %write{197,197}
temp	float	$tmp91	%read{201,201} %write{198,198}
temp	float	$tmp92	%read{200,200} %write{199,199}
temp	float	$tmp93	%read{201,201} %write{200,200}
temp	float	$tmp94	%read{221,221} %write{201,201}
temp	float	$tmp95	%read{203,203} %write{202,202}
temp	float	$tmp96	%read{205,205} %write{203,203}
temp	float	$tmp97	%read{205,205} %write{204,204}
temp	float	$tmp98	%read{208,208} %write{205,205}
temp	float	$tmp99	%read{207,207} %write{206,206}
temp	float	$tmp100	%read{208,208} %write{207,207}
temp	float	$tmp101	%read{221,221} %write{208,208}
temp	float	$tmp102	%read{210,210} %write{209,209}
temp	float	$tmp103	%read{212,212} %write{210,210}
temp	float	$tmp104	%read{212,212} %write{211,211}
temp	float	$tmp105	%read{215,215} %write{212,212}
temp	float	$tmp106	%read{214,214} %write{213,213}
temp	float	$tmp107	%read{215,215} %write{214,214}
temp	float	$tmp108	%read{221,221} %write{215,215}
temp	float	$tmp109	%read{217,217} %write{216,216}
temp	float	$tmp110	%read{219,219} %write{217,217}
temp	float	$tmp111	%read{219,219} %write{218,218}
temp	float	$tmp112	%read{220,220} %write{219,219}
temp	float	$tmp113	%read{221,221} %write{220,220}
temp	float	$tmp114.x	%read{228,261} %write{222,222}
temp	float	$tmp114.y	%read{230,263} %write{223,223}
temp	float	$tmp114.z	%read{233,266} %write{224,224}
temp	float	$tmp114.w	%read{236,269} %write{225,225}
temp	float	$tmp115	%read{228,228} %write{227,227}
temp	float	$tmp116	%read{231,231} %write{228,228}
temp	float	$tmp117	%read{230,230} %write{229,229}
temp	float	$tmp118	%read{231,231} %write{230,230}
temp	float	$tmp119	%read{234,234} %write{231,231}
temp	float	$tmp120	%read{233,233} %write{232,232}
temp	float	$tmp121	%read{234,234} %write{233,233}
temp	float	$tmp122	%read{237,237} %write{234,234}
const	int	$const42	3		%read{235,414} %write{2147483647,-1}
temp	float	$tmp123	%read{236,236} %write{235,235}
temp	float	$tmp124	%read{237,237} %write{236,236}
temp	float	$tmp125	%read{239,239} %write{238,238}
temp	float	$tmp126	%read{242,242} %write{239,239}
temp	float	$tmp127	%read{241,241} %write{240,240}
temp	float	$tmp128	%read{242,242} %write{241,241}
temp	float	$tmp129	%read{245,245} %write{242,242}
temp	float	$tmp130	%read{244,244} %write{243,243}
temp	float	$tmp131	%read{245,245} %write{244,244}
temp	float	$tmp132	%read{248,248} %write{245,245}
temp	float	$tmp133	%read{247,247} %write{246,246}
temp	float	$tmp134	%read{248,248} %write{247,247}
temp	float	$tmp135	%read{250,250} %write{249,249}
temp	float	$tmp136	%read{253,253} %write{250,250}
temp	float	$tmp137	%read{252,252} %write{251,251}
temp	float	$tmp138	%read{253,253} %write{252,252}
temp	float	$tmp139	%read{256,256} %write{253,253}
temp	float	$tmp140	%read{255,255} %write{254,254}
temp	float	$tmp141	%read{256,256} %write{255,255}
temp	float	$tmp142	%read{259,259} %write{256,256}
temp	float	$tmp143	%read{258,258} %write{257,257}
temp	float	$tmp144	%read{259,259} %write{258,258}
temp	float	$tmp145	%read{261,261} %write{260,260}
temp	float	$tmp146	%read{264,264} %write{261,261}
temp	float	$tmp147	%read{263,263} %write{262,262}
temp	float	$tmp148	%read{264,264} %write{263,263}
temp	float	$tmp149	%read{267,267} %write{264,264}
temp	float	$tmp150	%read{266,266} %write{265,265}
temp	float	$tmp151	%read{267,267} %write{266,266}
temp	float	$tmp152	%read{270,270} %write{267,267}
temp	float	$tmp153	%read{269,269} %write{268,268}
temp	float	$tmp154	%read{270,270} %write{269,269}
const	string	$const43	"mx_artistic_ior"		%read{274,274} %write{2147483647,-1}
temp	color	$tmp155	%read{279,279} %write{275,275}
const	float	$const44	0.99		%read{276,276} %write{2147483647,-1}
temp	color	$tmp156	%read{278,278} %write{276,276}
temp	color	$tmp157	%read{279,279} %write{278,278}
temp	color	$tmp158	%read{283,283} %write{281,281}
temp	color	$tmp159	%read{283,283} %write{282,282}
temp	color	$tmp160	%read{286,286} %write{284,284}
temp	color	$tmp161	%read{286,286} %write{285,285}
temp	color	$tmp162	%read{291,291} %write{290,290}
temp	color	$tmp163	%read{293,293} %write{291,291}
temp	color	$tmp164	%read{293,293} %write{292,292}
temp	color	$tmp165	%read{295,295} %write{293,293}
temp	color	$tmp166	%read{295,295} %write{294,294}
temp	color	$tmp167	%read{297,297} %write{296,296}
temp	float	$tmp168	%read{304,304} %write{303,303}
temp	float	$tmp169	%read{311,311} %write{310,310}
temp	float	$tmp170	%read{313,313} %write{311,311}
temp	float	$tmp171	%read{313,313} %write{312,312}
temp	float	$tmp172	%read{314,314} %write{313,313}
temp	float	$tmp173	%read{367,367} %write{314,314}
temp	float	$tmp174	%read{316,316} %write{315,315}
temp	float	$tmp175	%read{318,318} %write{316,316}
temp	float	$tmp176	%read{318,318} %write{317,317}
temp	float	$tmp177	%read{321,321} %write{318,318}
temp	float	$tmp178	%read{320,320} %write{319,319}
temp	float	$tmp179	%read{321,321} %write{320,320}
temp	float	$tmp180	%read{367,367} %write{321,321}
temp	float	$tmp181	%read{323,323} %write{322,322}
temp	float	$tmp182	%read{325,325} %write{323,323}
temp	float	$tmp183	%read{325,325} %write{324,324}
temp	float	$tmp184	%read{328,328} %write{325,325}
temp	float	$tmp185	%read{327,327} %write{326,326}
temp	float	$tmp186	%read{328,328} %write{327,327}
temp	float	$tmp187	%read{367,367} %write{328,328}
temp	float	$tmp188	%read{330,330} %write{329,329}
temp	float	$tmp189	%read{332,332} %write{330,330}
temp	float	$tmp190	%read{332,332} %write{331,331}
temp	float	$tmp191	%read{335,335} %write{332,332}
temp	float	$tmp192	%read{334,334} %write{333,333}
temp	float	$tmp193	%read{335,335} %write{334,334}
temp	float	$tmp194	%read{367,367} %write{335,335}
temp	float	$tmp195	%read{337,337} %write{336,336}
temp	float	$tmp196	%read{339,339} %write{337,337}
temp	float	$tmp197	%read{339,339} %write{338,338}
temp	float	$tmp198	%read{340,340} %write{339,339}
temp	float	$tmp199	%read{367,367} %write{340,340}
temp	float	$tmp200	%read{342,342} %write{341,341}
temp	float	$tmp201	%read{344,344} %write{342,342}
temp	float	$tmp202	%read{344,344} %write{343,343}
temp	float	$tmp203	%read{347,347} %write{344,344}
temp	float	$tmp204	%read{346,346} %write{345,345}
temp	float	$tmp205	%read{347,347} %write{346,346}
temp	float	$tmp206	%read{367,367} %write{347,347}
temp	float	$tmp207	%read{349,349} %write{348,348}
temp	float	$tmp208	%read{351,351} %write{349,349}
temp	float	$tmp209	%read{351,351} %write{350,350}
temp	float	$tmp210	%read{354,354} %write{351,351}
temp	float	$tmp211	%read{353,353} %write{352,352}
temp	float	$tmp212	%read{354,354} %write{353,353}
temp	float	$tmp213	%read{367,367} %write{354,354}
temp	float	$tmp214	%read{356,356} %write{355,355}
temp	float	$tmp215	%read{358,358} %write{356,356}
temp	float	$tmp216	%read{358,358} %write{357,357}
temp	float	$tmp217	%read{361,361} %write{358,358}
temp	float	$tmp218	%read{360,360} %write{359,359}
temp	float	$tmp219	%read{361,361} %write{360,360}
temp	float	$tmp220	%read{367,367} %write{361,361}
temp	float	$tmp221	%read{363,363} %write{362,362}
temp	float	$tmp222	%read{365,365} %write{363,363}
temp	float	$tmp223	%read{365,365} %write{364,364}
temp	float	$tmp224	%read{366,366} %write{365,365}
temp	float	$tmp225	%read{367,367} %write{366,366}
temp	float	$tmp226.x	%read{374,407} %write{368,368}
temp	float	$tmp226.y	%read{376,409} %write{369,369}
temp	float	$tmp226.z	%read{379,412} %write{370,370}
temp	float	$tmp226.w	%read{382,415} %write{371,371}
temp	float	$tmp227	%read{374,374} %write{373,373}
temp	float	$tmp228	%read{377,377} %write{374,374}
temp	float	$tmp229	%read{376,376} %write{375,375}
temp	float	$tmp230	%read{377,377} %write{376,376}
temp	float	$tmp231	%read{380,380} %write{377,377}
temp	float	$tmp232	%read{379,379} %write{378,378}
temp	float	$tmp233	%read{380,380} %write{379,379}
temp	float	$tmp234	%read{383,383} %write{380,380}
temp	float	$tmp235	%read{382,382} %write{381,381}
temp	float	$tmp236	%read{383,383} %write{382,382}
temp	float	$tmp237	%read{385,385} %write{384,384}
temp	float	$tmp238	%read{388,388} %write{385,385}
temp	float	$tmp239	%read{387,387} %write{386,386}
temp	float	$tmp240	%read{388,388} %write{387,387}
temp	float	$tmp241	%read{391,391} %write{388,388}
temp	float	$tmp242	%read{390,390} %write{389,389}
temp	float	$tmp243	%read{391,391} %write{390,390}
temp	float	$tmp244	%read{394,394} %write{391,391}
temp	float	$tmp245	%read{393,393} %write{392,392}
temp	float	$tmp246	%read{394,394} %write{393,393}
temp	float	$tmp247	%read{396,396} %write{395,395}
temp	float	$tmp248	%read{399,399} %write{396,396}
temp	float	$tmp249	%read{398,398} %write{397,397}
temp	float	$tmp250	%read{399,399} %write{398,398}
temp	float	$tmp251	%read{402,402} %write{399,399}
temp	float	$tmp252	%read{401,401} %write{400,400}
temp	float	$tmp253	%read{402,402} %write{401,401}
temp	float	$tmp254	%read{405,405} %write{402,402}
temp	float	$tmp255	%read{404,404} %write{403,403}
temp	float	$tmp256	%read{405,405} %write{404,404}
temp	float	$tmp257	%read{407,407} %write{406,406}
temp	float	$tmp258	%read{410,410} %write{407,407}
temp	float	$tmp259	%read{409,409} %write{408,408}
temp	float	$tmp260	%read{410,410} %write{409,409}
temp	float	$tmp261	%read{413,413} %write{410,410}
temp	float	$tmp262	%read{412,412} %write{411,411}
temp	float	$tmp263	%read{413,413} %write{412,412}
temp	float	$tmp264	%read{416,416} %write{413,413}
temp	float	$tmp265	%read{415,415} %write{414,414}
temp	float	$tmp266	%read{416,416} %write{415,415}
temp	float	$tmp267	%read{422,422} %write{421,421}
const	string	$const45	"mx_extract"		%read{426,426} %write{2147483647,-1}
temp	int	$tmp268	%read{440,440} %write{438,438}
const	string	$const46	"mx_ternary"		%read{439,468} %write{2147483647,-1}
temp	float	$tmp269	%read{450,450} %write{448,448}
temp	float	$tmp270	%read{451,451} %write{450,450}
temp	int	$tmp271	%read{453,453} %write{452,452}
temp	float	$tmp272	%read{457,457} %write{456,456}
temp	float	$tmp273	%read{456,456} %write{455,455}
temp	float	$tmp274	%read{458,458} %write{457,457}
temp	float	$tmp275	%read{460,460} %write{459,459}
temp	int	$tmp276	%read{469,469} %write{467,467}
temp	float	$tmp277	%read{479,479} %write{477,477}
temp	float	$tmp278	%read{480,480} %write{479,479}
temp	int	$tmp279	%read{482,482} %write{481,481}
temp	float	$tmp280	%read{486,486} %write{485,485}
temp	float	$tmp281	%read{485,485} %write{484,484}
temp	float	$tmp282	%read{487,487} %write{486,486}
temp	float	$tmp283	%read{489,489} %write{488,488}
const	string	$const47	"NG_convert_float_color3"		%read{500,500} %write{2147483647,-1}
const	float	$const48	1.5		%read{513,541} %write{2147483647,-1}
const	string	$const49	"ggx"		%read{513,541} %write{2147483647,-1}
const	string	$const50	"R"		%read{505,537} %write{2147483647,-1}
const	string	$const51	"mx_dielectric_bsdf"		%read{504,532} %write{2147483647,-1}
const	string	$const52	"T"		%read{505,537} %write{2147483647,-1}
temp	int	$tmp285	%read{506,506} %write{505,505}
temp	int	$tmp286	%read{510,510} %write{509,509}
temp	closure color	$tmp287	%read{514,514} %write{513,513}
const	string	$const53	"thinfilm_thickness"		%read{513,541} %write{2147483647,-1}
const	string	$const54	"thinfilm_ior"		%read{513,541} %write{2147483647,-1}
const	string	$const55	"dielectric_bsdf"		%read{513,541} %write{2147483647,-1}
temp	closure color	$tmp288	%read{518,518} %write{517,517}
const	string	$const56	"conductor_bsdf"		%read{517,517} %write{2147483647,-1}
temp	int	$tmp289	%read{522,522} %write{521,521}
temp	int	$tmp290	%read{526,526} %write{525,525}
temp	closure color	$tmp291	%read{530,530} %write{529,529}
temp	int	$tmp292	%read{534,534} %write{533,533}
temp	int	$tmp293	%read{538,538} %write{537,537}
temp	closure color	$tmp294	%read{542,542} %write{541,541}
temp	closure color	$tmp295	%read{544,544} %write{543,543}
const	string	$const57	"sheen_bsdf"		%read{543,543} %write{2147483647,-1}
temp	closure color	$tmp296	%read{547,547} %write{546,546}
const	string	$const58	"translucent_bsdf"		%read{546,546} %write{2147483647,-1}
const	string	$const59	"mx_subsurface_bsdf"		%read{549,549} %write{2147483647,-1}
temp	color	$tmp297	%read{551,551} %write{550,550}
const	string	$const60	"subsurface_bssrdf"		%read{551,551} %write{2147483647,-1}
const	string	$const61	"mix"		%read{552,593} %write{2147483647,-1}
temp	float	$tmp298	%read{554,554} %write{553,553}
temp	closure color	$tmp299	%read{556,556} %write{554,554}
temp	closure color	$tmp300	%read{556,556} %write{555,555}
temp	closure color	$tmp301	%read{558,558} %write{557,557}
const	string	$const62	"oren_nayar_diffuse_bsdf"		%read{557,557} %write{2147483647,-1}
temp	float	$tmp302	%read{561,561} %write{560,560}
temp	closure color	$tmp303	%read{563,563} %write{561,561}
temp	closure color	$tmp304	%read{563,563} %write{562,562}
const	string	$const63	"layer"		%read{564,577} %write{2147483647,-1}
temp	float	$tmp305	%read{567,567} %write{566,566}
temp	closure color	$tmp306	%read{569,569} %write{567,567}
temp	closure color	$tmp307	%read{569,569} %write{568,568}
temp	float	$tmp308	%read{573,573} %write{572,572}
temp	closure color	$tmp309	%read{575,575} %write{573,573}
temp	closure color	$tmp310	%read{575,575} %write{574,574}
const	string	$const64	"uniform_edf"		%read{578,578} %write{2147483647,-1}
const	float	$const65	5		%read{590,590} %write{2147483647,-1}
const	string	$const66	"mx_generalized_schlick_edf"		%read{581,581} %write{2147483647,-1}
temp	float	$tmp312	%read{584,584} %write{583,583}
temp	vector	$tmp313	%read{583,583} %write{582,582}
const	string	$const67	"mx_fresnel_schlick"		%read{585,585} %write{2147483647,-1}
temp	float	$tmp314	%read{588,588} %write{586,586}
temp	float	$tmp315	%read{589,589} %write{588,588}
temp	float	$tmp316	%read{591,591} %write{590,590}
temp	float	$tmp317	%read{595,595} %write{594,594}
temp	closure color	$tmp318	%read{597,597} %write{595,595}
temp	closure color	$tmp319	%read{597,597} %write{596,596}
const	string	$const68	"mx_surface"		%read{601,601} %write{2147483647,-1}
temp	float	$tmp320	%read{606,606} %write{605,605}
const	string	$const69	"mx_surfacematerial"		%read{611,611} %write{2147483647,-1}
temp	float	$tmp321	%read{614,614} %write{613,613}
temp	closure color	$tmp322	%read{616,616} %write{615,615}
temp	closure color	$tmp323	%read{620,620} %write{616,616}
temp	closure color	$tmp324	%read{619,619} %write{617,617}
const	string	$const70	"transparent"		%read{617,617} %write{2147483647,-1}
temp	float	$tmp325	%read{619,619} %write{618,618}
temp	closure color	$tmp326	%read{620,620} %write{619,619}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:773
#     textureresource tiledimage_file_ = {tiledimage_file, tiledimage_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{773} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:774
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		tiledimage_file_.filename tiledimage_file 	%line{774} %argrw{"wr"}
	assign		tiledimage_file_.colorspace tiledimage_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:775
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{775} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:776
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{776} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:777
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp7 N $const4 	%line{777} %argrw{"wrr"}
	compref		$tmp8 N $const1 	%argrw{"wrr"}
	neg		$tmp9 $tmp8 	%argrw{"wr"}
	vector		$tmp6 $tmp7 $const5 $tmp9 	%argrw{"wrrr"}
	cross		$tmp5 N $tmp6 	%argrw{"wrr"}
	normalize	geomprop_Bworld_out1 $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:778
#     vector tiledimage_out = vector(0.0);
	assign		geomprop_UV0_out1.x u 	%line{778} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:779
#     NG_tiledimage_vector3(tiledimage_file_, tiledimage_default, geomprop_UV0_out1, tiledimage_uvtiling, tiledimage_uvoffset, tiledimage_realworldimagesize, tiledimage_realworldtilesize, tiledimage_filtertype, tiledimage_framerange, tiledimage_frameoffset, tiledimage_frameendaction, tiledimage_out);
	assign		tiledimage_out $const6 	%line{779} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:780
#     vector normalmap_out = vector(0.0);
	functioncall	$const7 74 	%line{780} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:788
# 
	functioncall	$const8 23 	%line{788} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector3_out.x geomprop_UV0_out1.x tiledimage_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector3_out.y geomprop_UV0_out1.y tiledimage_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:788
# 
	functioncall	$const9 26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{788} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector3_out.x ___672_N_mult_vector3_out.x tiledimage_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector3_out.y ___672_N_mult_vector3_out.y tiledimage_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:788
# 
	functioncall	$const10 29 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{788} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector3_out.x ___672_N_sub_vector3_out.x tiledimage_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector3_out.y ___672_N_sub_vector3_out.y tiledimage_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:788
# 
	functioncall	$const8 32 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{788} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector3_out.x ___672_N_divtilesize_vector3_out.x tiledimage_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector3_out.y ___672_N_divtilesize_vector3_out.y tiledimage_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:47
#     mx_image_vector3(file, "", default1, N_multtilesize_vector3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector3_out);
	assign		___672_N_img_vector3_out $const6 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:48
#     out = N_img_vector3_out;
	functioncall	$const13 73 	%line{48} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp10 tiledimage_file_.filename $const11 	%line{25} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 37 50 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp12 $const12 $const14 	%line{26} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 48 48 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_vector3_out.x $const5 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 43 46 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_vector3_out.x $const15 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp11 $tmp19 	%line{25} %argrw{"wr"}
	neq		$tmp20 $tmp11 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp20 52 65 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:27
#     {
	eq		$tmp21 $const12 $const14 	%line{27} %argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	if		$tmp22 63 63 	%argrw{"r"}
	lt		$tmp23 ___672_N_multtilesize_vector3_out.y $const5 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 58 61 	%argrw{"r"}
	gt		$tmp25 ___672_N_multtilesize_vector3_out.y $const15 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	neq		$tmp27 $tmp24 $const1 	%argrw{"wrr"}
	assign		$tmp22 $tmp27 	%argrw{"wr"}
	neq		$tmp28 $tmp22 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp20 $tmp28 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp20 68 68 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:29
#         return;
	assign		___672_N_img_vector3_out tiledimage_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tiledimage_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const16 72 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector3_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_N_img_vector3_out tiledimage_file_.filename ___670_st.x ___670_st.y $const17 $const11 $const18 tiledimage_filtertype $const19 ___670_missingColor $const20 $const12 $const21 $const12 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:49
# }
	assign		tiledimage_out ___672_N_img_vector3_out 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:781
#     mx_normalmap_float(tiledimage_out, normalmap_scale, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, normalmap_out);
	assign		normalmap_out $const6 	%line{781} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:782
#     surfaceshader NormalMapShader_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const22 95 	%line{782} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:69
# }
	assign		$tmp29.x normalmap_scale 	%line{69} %argrw{"wr"}
	assign		$tmp29.y normalmap_scale 	%argrw{"wr"}
	functioncall	$const23 95 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:55
#     {
	eq		$tmp31 tiledimage_out $const6 	%line{55} %argrw{"wrr"}
	if		$tmp31 82 84 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:57
#     }
	assign		___673_decodedValue $const24 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:61
#     }
	mul		$tmp32 tiledimage_out $const25 	%line{61} %argrw{"wrr"}
	sub		___673_decodedValue $tmp32 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:64
# }
	compref		$tmp33 ___673_decodedValue $const1 	%line{64} %argrw{"wrr"}
	mul		$tmp34 geomprop_Tworld_out1 $tmp33 	%argrw{"wrr"}
	mul		$tmp35 $tmp34 $tmp29.x 	%argrw{"wrr"}
	compref		$tmp36 ___673_decodedValue $const26 	%argrw{"wrr"}
	mul		$tmp37 geomprop_Bworld_out1 $tmp36 	%argrw{"wrr"}
	mul		$tmp38 $tmp37 $tmp29.y 	%argrw{"wrr"}
	add		$tmp39 $tmp35 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___673_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp41 geomprop_Nworld_out1 $tmp40 	%argrw{"wrr"}
	add		$tmp42 $tmp39 $tmp41 	%argrw{"wrr"}
	normalize	normalmap_out $tmp42 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:783
#     NG_standard_surface_surfaceshader_100(NormalMapShader_base, NormalMapShader_base_color, NormalMapShader_diffuse_roughness, NormalMapShader_metalness, NormalMapShader_specular, NormalMapShader_specular_color, NormalMapShader_specular_roughness, NormalMapShader_specular_IOR, NormalMapShader_specular_anisotropy, NormalMapShader_specular_rotation, NormalMapShader_transmission, NormalMapShader_transmission_color, NormalMapShader_transmission_depth, NormalMapShader_transmission_scatter, NormalMapShader_transmission_scatter_anisotropy, NormalMapShader_transmission_dispersion, NormalMapShader_transmission_extra_roughness, NormalMapShader_subsurface, NormalMapShader_subsurface_color, NormalMapShader_subsurface_radius, NormalMapShader_subsurface_scale, NormalMapShader_subsurface_anisotropy, NormalMapShader_sheen, NormalMapShader_sheen_color, NormalMapShader_sheen_roughness, NormalMapShader_coat, NormalMapShader_coat_color, NormalMapShader_coat_roughness, NormalMapShader_coat_anisotropy, NormalMapShader_coat_rotation, NormalMapShader_coat_IOR, geomprop_Nworld_out1, NormalMapShader_coat_affect_color, NormalMapShader_coat_affect_roughness, NormalMapShader_thin_film_thickness, NormalMapShader_thin_film_IOR, NormalMapShader_emission, NormalMapShader_emission_color, NormalMapShader_opacity, NormalMapShader_thin_walled, normalmap_out, geomprop_Tworld_out1, NormalMapShader_out);
	assign		NormalMapShader_out.bsdf null_closure 	%line{783} %argrw{"wr"}
	assign		NormalMapShader_out.edf null_closure 	%argrw{"wr"}
	assign		NormalMapShader_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:784
#     MATERIAL NormalMapMaterial_out = mx_surfacematerial(NormalMapShader_out, backsurfaceshader, displacementshader1);
	functioncall	$const27 611 	%line{784} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:249
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:250
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const5 	%line{250} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:251
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const28 121 	%line{251} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp43 NormalMapShader_coat_roughness NormalMapShader_coat_roughness 	%line{74} %argrw{"wrr"}
	functioncall	$const30 107 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp44 $tmp43 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp44 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:75
#     {
	gt		$tmp45 NormalMapShader_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp45 119 121 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 112 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp47 NormalMapShader_coat_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp46 $tmp47 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp48 $const15 $tmp46 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp48 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp49 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp49 $const15 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:79
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:84
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:252
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const32 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:253
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out NormalMapShader_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:254
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out NormalMapShader_base_color NormalMapShader_base 	%line{254} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:255
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out NormalMapShader_specular_color NormalMapShader_specular 	%line{255} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:256
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out NormalMapShader_coat_affect_roughness NormalMapShader_coat 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:257
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const32 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:258
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out NormalMapShader_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{258} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:259
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out NormalMapShader_specular_roughness NormalMapShader_transmission_extra_roughness 	%line{259} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:260
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const5 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:261
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp50 ___701_subsurface_color_nonnegative_in2_tmp 	%line{261} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out NormalMapShader_subsurface_color $tmp50 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:262
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const5 	%line{262} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:263
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const15 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:264
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const30 137 	%line{264} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp51 NormalMapShader_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp51 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:265
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out NormalMapShader_subsurface_radius NormalMapShader_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{265} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:266
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp52 NormalMapShader_thin_walled 	%line{266} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp52 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:267
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const5 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:268
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp53 ___701_base_color_nonnegative_in2_tmp 	%line{268} %argrw{"wr"}
	max		___701_base_color_nonnegative_out NormalMapShader_base_color $tmp53 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:269
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const33 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:270
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp NormalMapShader_coat_color NormalMapShader_coat 	%line{270} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:271
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const15 	%line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:272
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp NormalMapShader_coat_IOR 	%line{272} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:273
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const15 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:274
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp NormalMapShader_coat_IOR 	%line{274} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:275
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out NormalMapShader_emission_color NormalMapShader_emission 	%line{275} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:276
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const34 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:277
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const36 154 	%line{277} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:90
# }
	dot		$tmp55 NormalMapShader_opacity $const35 	%line{90} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp55 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:278
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const6 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:279
#     color artistic_ior_ior = color(0.0);
	functioncall	$const37 272 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 159 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp56 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp56 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 222 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp57 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp58 ___681_oc $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
	add		$tmp61 $tmp60 ___681_c 	%argrw{"wrr"}
	compref		$tmp62 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp63 ___681_oc $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___681_s 	%argrw{"wrr"}
	sub		$tmp68 $tmp65 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp70 ___681_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp74 $tmp73 ___681_s 	%argrw{"wrr"}
	add		$tmp75 $tmp72 $tmp74 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp76 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp77 ___681_oc $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp81 $tmp80 ___681_s 	%argrw{"wrr"}
	add		$tmp82 $tmp79 $tmp81 	%argrw{"wrr"}
	compref		$tmp83 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp84 ___681_oc $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
	add		$tmp87 $tmp86 ___681_c 	%argrw{"wrr"}
	compref		$tmp88 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp89 ___681_oc $tmp88 	%argrw{"wrr"}
	compref		$tmp90 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	compref		$tmp92 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp93 $tmp92 ___681_s 	%argrw{"wrr"}
	sub		$tmp94 $tmp91 $tmp93 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp95 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp96 ___681_oc $tmp95 	%argrw{"wrr"}
	compref		$tmp97 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp98 $tmp96 $tmp97 	%argrw{"wrr"}
	compref		$tmp99 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp100 $tmp99 ___681_s 	%argrw{"wrr"}
	sub		$tmp101 $tmp98 $tmp100 	%argrw{"wrr"}
	compref		$tmp102 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp103 ___681_oc $tmp102 	%argrw{"wrr"}
	compref		$tmp104 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp105 $tmp103 $tmp104 	%argrw{"wrr"}
	compref		$tmp106 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp107 $tmp106 ___681_s 	%argrw{"wrr"}
	add		$tmp108 $tmp105 $tmp107 	%argrw{"wrr"}
	compref		$tmp109 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp110 ___681_oc $tmp109 	%argrw{"wrr"}
	compref		$tmp111 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp112 $tmp110 $tmp111 	%argrw{"wrr"}
	add		$tmp113 $tmp112 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp61 $tmp68 $tmp75 $const5 $tmp82 $tmp87 $tmp94 $const5 $tmp101 $tmp108 $tmp113 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp114.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp114.y geomprop_Tworld_out1 $const26 	%argrw{"wrr"}
	compref		$tmp114.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp114.w $const15 	%argrw{"wr"}
	functioncall	$const2 271 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp115 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp116 $tmp115 $tmp114.x 	%argrw{"wrr"}
	mxcompref	$tmp117 ___682_m $const26 $const1 	%argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp114.y 	%argrw{"wrr"}
	add		$tmp119 $tmp116 $tmp118 	%argrw{"wrr"}
	mxcompref	$tmp120 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp121 $tmp120 $tmp114.z 	%argrw{"wrr"}
	add		$tmp122 $tmp119 $tmp121 	%argrw{"wrr"}
	mxcompref	$tmp123 ___682_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp124 $tmp123 $tmp114.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp122 $tmp124 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp125 ___682_m $const1 $const26 	%line{416} %argrw{"wrrr"}
	mul		$tmp126 $tmp125 $tmp114.x 	%argrw{"wrr"}
	mxcompref	$tmp127 ___682_m $const26 $const26 	%argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp114.y 	%argrw{"wrr"}
	add		$tmp129 $tmp126 $tmp128 	%argrw{"wrr"}
	mxcompref	$tmp130 ___682_m $const4 $const26 	%argrw{"wrrr"}
	mul		$tmp131 $tmp130 $tmp114.z 	%argrw{"wrr"}
	add		$tmp132 $tmp129 $tmp131 	%argrw{"wrr"}
	mxcompref	$tmp133 ___682_m $const42 $const26 	%argrw{"wrrr"}
	mul		$tmp134 $tmp133 $tmp114.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp132 $tmp134 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp135 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp114.x 	%argrw{"wrr"}
	mxcompref	$tmp137 ___682_m $const26 $const4 	%argrw{"wrrr"}
	mul		$tmp138 $tmp137 $tmp114.y 	%argrw{"wrr"}
	add		$tmp139 $tmp136 $tmp138 	%argrw{"wrr"}
	mxcompref	$tmp140 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp141 $tmp140 $tmp114.z 	%argrw{"wrr"}
	add		$tmp142 $tmp139 $tmp141 	%argrw{"wrr"}
	mxcompref	$tmp143 ___682_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp144 $tmp143 $tmp114.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp142 $tmp144 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp145 ___682_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp146 $tmp145 $tmp114.x 	%argrw{"wrr"}
	mxcompref	$tmp147 ___682_m $const26 $const42 	%argrw{"wrrr"}
	mul		$tmp148 $tmp147 $tmp114.y 	%argrw{"wrr"}
	add		$tmp149 $tmp146 $tmp148 	%argrw{"wrr"}
	mxcompref	$tmp150 ___682_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp151 $tmp150 $tmp114.z 	%argrw{"wrr"}
	add		$tmp152 $tmp149 $tmp151 	%argrw{"wrr"}
	mxcompref	$tmp153 ___682_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp154 $tmp153 $tmp114.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp152 $tmp154 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:111
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:280
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const34 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:281
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const34 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:282
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const43 299 	%line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:119
#     color r_sqrt = sqrt(r);
	assign		$tmp155 $const5 	%line{119} %argrw{"wr"}
	assign		$tmp156 $const44 	%argrw{"wr"}
	functioncall	$const30 280 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp157 ___701_metal_reflectivity_out $tmp156 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp157 $tmp155 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:120
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:121
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp158 $const15 ___683_r 	%line{121} %argrw{"wrr"}
	add		$tmp159 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp158 $tmp159 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:122
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp160 $const15 ___683_r_sqrt 	%line{122} %argrw{"wrr"}
	sub		$tmp161 $const15 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp160 $tmp161 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:123
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{123} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:125
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const15 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:126
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const15 	%line{126} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:127
#     k2 = max(k2, 0.0);
	mul		$tmp162 ___683_np1 ___683_np1 	%line{127} %argrw{"wrr"}
	mul		$tmp163 $tmp162 ___683_r 	%argrw{"wrr"}
	mul		$tmp164 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	sub		$tmp166 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp165 $tmp166 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:128
#     extinction = sqrt(k2);
	assign		$tmp167 $const5 	%line{128} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:129
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:283
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out NormalMapShader_coat_roughness 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:284
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const6 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:285
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const37 418 	%line{285} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 305 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp168 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 368 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis normalmap_out 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp169 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp170 ___681_oc $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp172 $tmp170 $tmp171 	%argrw{"wrr"}
	add		$tmp173 $tmp172 ___681_c 	%argrw{"wrr"}
	compref		$tmp174 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp175 ___681_oc $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp177 $tmp175 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp179 $tmp178 ___681_s 	%argrw{"wrr"}
	sub		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp182 ___681_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___681_s 	%argrw{"wrr"}
	add		$tmp187 $tmp184 $tmp186 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp188 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp189 ___681_oc $tmp188 	%argrw{"wrr"}
	compref		$tmp190 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp191 $tmp189 $tmp190 	%argrw{"wrr"}
	compref		$tmp192 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp193 $tmp192 ___681_s 	%argrw{"wrr"}
	add		$tmp194 $tmp191 $tmp193 	%argrw{"wrr"}
	compref		$tmp195 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp196 ___681_oc $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp198 $tmp196 $tmp197 	%argrw{"wrr"}
	add		$tmp199 $tmp198 ___681_c 	%argrw{"wrr"}
	compref		$tmp200 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp201 ___681_oc $tmp200 	%argrw{"wrr"}
	compref		$tmp202 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp203 $tmp201 $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp205 $tmp204 ___681_s 	%argrw{"wrr"}
	sub		$tmp206 $tmp203 $tmp205 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp207 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp208 ___681_oc $tmp207 	%argrw{"wrr"}
	compref		$tmp209 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp210 $tmp208 $tmp209 	%argrw{"wrr"}
	compref		$tmp211 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp212 $tmp211 ___681_s 	%argrw{"wrr"}
	sub		$tmp213 $tmp210 $tmp212 	%argrw{"wrr"}
	compref		$tmp214 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp215 ___681_oc $tmp214 	%argrw{"wrr"}
	compref		$tmp216 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp217 $tmp215 $tmp216 	%argrw{"wrr"}
	compref		$tmp218 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp219 $tmp218 ___681_s 	%argrw{"wrr"}
	add		$tmp220 $tmp217 $tmp219 	%argrw{"wrr"}
	compref		$tmp221 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp222 ___681_oc $tmp221 	%argrw{"wrr"}
	compref		$tmp223 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp224 $tmp222 $tmp223 	%argrw{"wrr"}
	add		$tmp225 $tmp224 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp173 $tmp180 $tmp187 $const5 $tmp194 $tmp199 $tmp206 $const5 $tmp213 $tmp220 $tmp225 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp226.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp226.y geomprop_Tworld_out1 $const26 	%argrw{"wrr"}
	compref		$tmp226.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp226.w $const15 	%argrw{"wr"}
	functioncall	$const2 417 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp227 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp228 $tmp227 $tmp226.x 	%argrw{"wrr"}
	mxcompref	$tmp229 ___682_m $const26 $const1 	%argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp226.y 	%argrw{"wrr"}
	add		$tmp231 $tmp228 $tmp230 	%argrw{"wrr"}
	mxcompref	$tmp232 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp233 $tmp232 $tmp226.z 	%argrw{"wrr"}
	add		$tmp234 $tmp231 $tmp233 	%argrw{"wrr"}
	mxcompref	$tmp235 ___682_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp236 $tmp235 $tmp226.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp234 $tmp236 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp237 ___682_m $const1 $const26 	%line{416} %argrw{"wrrr"}
	mul		$tmp238 $tmp237 $tmp226.x 	%argrw{"wrr"}
	mxcompref	$tmp239 ___682_m $const26 $const26 	%argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp226.y 	%argrw{"wrr"}
	add		$tmp241 $tmp238 $tmp240 	%argrw{"wrr"}
	mxcompref	$tmp242 ___682_m $const4 $const26 	%argrw{"wrrr"}
	mul		$tmp243 $tmp242 $tmp226.z 	%argrw{"wrr"}
	add		$tmp244 $tmp241 $tmp243 	%argrw{"wrr"}
	mxcompref	$tmp245 ___682_m $const42 $const26 	%argrw{"wrrr"}
	mul		$tmp246 $tmp245 $tmp226.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp244 $tmp246 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp247 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp226.x 	%argrw{"wrr"}
	mxcompref	$tmp249 ___682_m $const26 $const4 	%argrw{"wrrr"}
	mul		$tmp250 $tmp249 $tmp226.y 	%argrw{"wrr"}
	add		$tmp251 $tmp248 $tmp250 	%argrw{"wrr"}
	mxcompref	$tmp252 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp253 $tmp252 $tmp226.z 	%argrw{"wrr"}
	add		$tmp254 $tmp251 $tmp253 	%argrw{"wrr"}
	mxcompref	$tmp255 ___682_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp256 $tmp255 $tmp226.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp254 $tmp256 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp257 ___682_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp258 $tmp257 $tmp226.x 	%argrw{"wrr"}
	mxcompref	$tmp259 ___682_m $const26 $const42 	%argrw{"wrrr"}
	mul		$tmp260 $tmp259 $tmp226.y 	%argrw{"wrr"}
	add		$tmp261 $tmp258 $tmp260 	%argrw{"wrr"}
	mxcompref	$tmp262 ___682_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp263 $tmp262 $tmp226.z 	%argrw{"wrr"}
	add		$tmp264 $tmp261 $tmp263 	%argrw{"wrr"}
	mxcompref	$tmp265 ___682_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp266 $tmp265 $tmp226.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp264 $tmp266 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:111
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:286
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const5 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:287
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const15 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:288
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const30 423 	%line{288} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp267 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp267 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:289
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out NormalMapShader_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:290
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:291
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:292
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const45 428 	%line{292} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:293
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:294
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const15 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:295
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out NormalMapShader_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{295} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:296
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:297
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const15 	%line{297} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:298
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{298} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:299
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const15 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:300
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{300} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:301
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:302
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const5 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:303
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp268 NormalMapShader_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{303} %argrw{"wrr"}
	functioncall	$const46 445 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp268 443 445 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:304
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{304} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:305
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const28 466 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp269 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const30 452 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp270 $tmp269 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp270 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:75
#     {
	gt		$tmp271 NormalMapShader_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp271 464 466 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 457 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp273 NormalMapShader_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp272 $tmp273 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp274 $const15 $tmp272 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp274 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp275 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp275 $const15 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:79
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:84
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:306
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const5 	%line{306} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:307
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp276 NormalMapShader_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{307} %argrw{"wrr"}
	functioncall	$const46 474 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp276 472 474 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:308
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{308} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:309
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const28 495 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp277 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const30 481 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp278 $tmp277 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp278 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:75
#     {
	gt		$tmp279 NormalMapShader_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp279 493 495 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 486 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp281 NormalMapShader_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp280 $tmp281 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp282 $const15 $tmp280 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp282 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp283 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp283 $const15 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:79
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:84
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:310
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:311
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{311} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:312
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:313
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:314
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const34 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:315
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const47 503 	%line{315} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:150
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{150} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:151
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:316
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:317
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const51 515 	%line{317} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp285 $const50 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp285 508 509 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp286 $const50 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp286 512 513 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:136
# }
	closure		$tmp287 $const55 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y NormalMapShader_coat_IOR $const49 $const53 $const5 $const54 $const48 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp287 NormalMapShader_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:318
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const15 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:319
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const49 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:320
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp288 $const56 normalmap_out ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const53 NormalMapShader_thin_film_thickness $const54 NormalMapShader_thin_film_IOR 	%line{320} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp288 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:321
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:322
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const51 531 	%line{322} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp289 $const50 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp289 524 525 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMapShader_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp290 $const50 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp290 528 529 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMapShader_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:136
# }
	closure		$tmp291 $const55 normalmap_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y NormalMapShader_specular_IOR $const49 $const53 NormalMapShader_thin_film_thickness $const54 NormalMapShader_thin_film_IOR 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp291 NormalMapShader_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:323
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:324
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const51 543 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp292 $const52 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp292 536 537 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMapShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp293 $const52 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp293 540 541 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMapShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:136
# }
	closure		$tmp294 $const55 normalmap_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y NormalMapShader_specular_IOR $const49 $const53 $const5 $const54 $const48 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp294 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:325
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp295 $const57 normalmap_out NormalMapShader_sheen_color NormalMapShader_sheen_roughness 	%line{325} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp295 NormalMapShader_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:326
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const15 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:327
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp296 $const58 normalmap_out ___701_coat_affected_subsurface_color_out 	%line{327} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp296 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:328
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:329
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const59 552 	%line{329} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:144
# #endif
	mul		$tmp297 $const15 ___701_coat_affected_subsurface_color_out 	%line{144} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const60 normalmap_out $tmp297 $const15 ___701_subsurface_radius_scaled_out NormalMapShader_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:330
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const61 557 	%line{330} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp298 $const15 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp299 ___701_subsurface_bsdf_out $tmp298 	%argrw{"wrr"}
	mul		$tmp300 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp299 $tmp300 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:331
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp301 $const62 normalmap_out ___701_coat_affected_diffuse_color_out NormalMapShader_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{331} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp301 NormalMapShader_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:332
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const61 564 	%line{332} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp302 $const15 NormalMapShader_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp303 ___701_diffuse_bsdf_out $tmp302 	%argrw{"wrr"}
	mul		$tmp304 ___701_selected_subsurface_bsdf_out NormalMapShader_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp303 $tmp304 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:333
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const63 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{333} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:334
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const61 570 	%line{334} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp305 $const15 NormalMapShader_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp306 ___701_sheen_layer_out $tmp305 	%argrw{"wrr"}
	mul		$tmp307 ___701_transmission_bsdf_out NormalMapShader_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp306 $tmp307 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:335
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const63 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{335} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:336
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const61 576 	%line{336} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp308 $const15 NormalMapShader_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp309 ___701_specular_layer_out $tmp308 	%argrw{"wrr"}
	mul		$tmp310 ___701_metal_bsdf_out NormalMapShader_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp309 $tmp310 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:337
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:338
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const63 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{338} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:339
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const64 ___701_emission_weight_out 	%line{339} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:340
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out NormalMapShader_coat_color 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:341
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:342
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const66 593 	%line{342} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:235
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp313 I 	%line{235} %argrw{"wr"}
	dot		$tmp312 N $tmp313 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp312 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:236
#     result = base * f;
	functioncall	$const67 592 	%line{236} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:229
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp314 $const15 ___699_NdotV 	%line{229} %argrw{"wrr"}
	functioncall	$const30 590 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp315 $tmp314 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp315 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:230
# }
	pow		$tmp316 ___698_x $const65 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{230} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const34 $tmp316 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:237
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:343
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const61 598 	%line{343} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp317 $const15 NormalMapShader_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp318 ___701_emission_edf_out $tmp317 	%argrw{"wrr"}
	mul		$tmp319 ___701_coat_emission_edf_out NormalMapShader_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp318 $tmp319 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:344
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{344} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:345
#     out = shader_constructor_out;
	functioncall	$const68 608 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:242
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:243
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:244
# }
	functioncall	$const30 607 	%line{244} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp320 ___701_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp320 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:244
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:346
# }
	assign		NormalMapShader_out.bsdf ___701_shader_constructor_out.bsdf 	%line{346} %argrw{"wr"}
	assign		NormalMapShader_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		NormalMapShader_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:785
#     out = NormalMapMaterial_out;
	functioncall	$const69 621 	%line{785} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:351
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const30 615 	%line{351} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp321 NormalMapShader_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp321 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:352
# }
	add		$tmp322 NormalMapShader_out.bsdf NormalMapShader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl"} %line{352} %argrw{"wrr"}
	mul		$tmp323 $tmp322 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp324 $const70 	%argrw{"wr"}
	sub		$tmp325 $const15 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp326 $tmp324 $tmp325 	%argrw{"wrr"}
	add		NormalMapMaterial_out $tmp323 $tmp326 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\mapped_surfaceshader\\NormalMapMaterial.osl:786
# }
	assign		out NormalMapMaterial_out 	%line{786} %argrw{"wr"}
	end
