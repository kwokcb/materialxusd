OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\network_surfaceshader\N_surfacematerial.oso
shader N_surfacematerial	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"N_surfacematerial"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	N_surfaceshader_base_color_filename	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	N_surfaceshader_base_color_filename_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{673,673}
global	vector	I	%read{631,631} %write{2147483647,-1}
global	normal	N	%read{10,632} %write{2147483647,-1}
global	float	u	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{17,17} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{80,80} %write{76,76}
local	float	___670_st.x	%read{80,80} %write{78,78} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{80,80} %write{79,79} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_N_mult_color3_out.x	%read{32,32} %write{29,29} %mystruct{___672_N_mult_color3_out} %mystructfield{0} %derivs
local	float	___672_N_mult_color3_out.y	%read{33,33} %write{30,30} %mystruct{___672_N_mult_color3_out} %mystructfield{1} %derivs
local	float	___672_N_sub_color3_out.x	%read{35,35} %write{32,32} %mystruct{___672_N_sub_color3_out} %mystructfield{0} %derivs
local	float	___672_N_sub_color3_out.y	%read{36,36} %write{33,33} %mystruct{___672_N_sub_color3_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_color3_out.x	%read{38,38} %write{35,35} %mystruct{___672_N_divtilesize_color3_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_color3_out.y	%read{39,39} %write{36,36} %mystruct{___672_N_divtilesize_color3_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_color3_out.x	%read{48,78} %write{38,38} %mystruct{___672_N_multtilesize_color3_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_color3_out.y	%read{63,79} %write{39,39} %mystruct{___672_N_multtilesize_color3_out} %mystructfield{1} %derivs
local	color	___672_N_img_color3_out	%read{81,81} %write{40,80}
local	int	___673_N_extract_0_index_tmp	%read{94,94} %write{92,92}
local	float	___673_N_extract_0_out	%read{101,101} %write{94,94}
local	int	___673_N_extract_1_index_tmp	%read{97,97} %write{95,95}
local	float	___673_N_extract_1_out	%read{102,102} %write{97,97}
local	int	___673_N_extract_2_index_tmp	%read{100,100} %write{98,98}
local	float	___673_N_extract_2_out	%read{103,103} %write{100,100}
local	float	___674_bias_in2_tmp	%read{85,85} %write{84,84}
local	color	___674_bias_out	%read{106,106} %write{85,85}
local	float	___674_linSeg_in2_tmp	%read{87,87} %write{86,86}
local	color	___674_linSeg_out	%read{142,142} %write{87,87}
local	float	___674_colorSeparate_outr	%read{110,110} %write{88,101}
local	float	___674_colorSeparate_outg	%read{120,120} %write{89,102}
local	float	___674_colorSeparate_outb	%read{130,130} %write{90,103}
local	float	___674_max_in2_tmp	%read{105,105} %write{104,104}
local	color	___674_max_out	%read{138,138} %write{106,106}
local	float	___674_isAboveR_value2_tmp	%read{110,110} %write{107,107}
local	float	___674_isAboveR_in1_tmp	%read{113,113} %write{108,108}
local	float	___674_isAboveR_in2_tmp	%read{115,115} %write{109,109}
local	float	___674_isAboveR_out	%read{139,139} %write{113,115}
local	float	___674_isAboveG_value2_tmp	%read{120,120} %write{117,117}
local	float	___674_isAboveG_in1_tmp	%read{123,123} %write{118,118}
local	float	___674_isAboveG_in2_tmp	%read{125,125} %write{119,119}
local	float	___674_isAboveG_out	%read{139,139} %write{123,125}
local	float	___674_isAboveB_value2_tmp	%read{130,130} %write{127,127}
local	float	___674_isAboveB_in1_tmp	%read{133,133} %write{128,128}
local	float	___674_isAboveB_in2_tmp	%read{135,135} %write{129,129}
local	float	___674_isAboveB_out	%read{139,139} %write{133,135}
local	float	___674_scale_in2_tmp	%read{138,138} %write{137,137}
local	color	___674_scale_out	%read{141,141} %write{138,138}
local	color	___674_isAbove_out	%read{142,142} %write{139,139}
local	float	___674_powSeg_in2_tmp	%read{141,141} %write{140,140}
local	color	___674_powSeg_out	%read{142,142} %write{141,141}
local	color	___674_mix_out	%read{143,143} %write{142,142}
local	float	___675_roughness_sqr	%read{163,543} %write{155,529}
local	float	___676_aspect	%read{163,540} %write{162,536}
local	vector	___679_nAxis	%read{213,413} %write{209,355}
local	float	___679_s	%read{223,409} %write{210,356}
local	float	___679_c	%read{212,415} %write{211,357}
local	float	___679_oc	%read{214,412} %write{212,358}
local	float	___680_rotationRadians	%read{210,357} %write{207,353}
local	matrix	___680_m	%read{276,463} %write{270,416}
local	float	___680_trans.x	%read{320,466} %write{286,432} %mystruct{___680_trans} %mystructfield{0}
local	float	___680_trans.y	%read{320,466} %write{297,443} %mystruct{___680_trans} %mystructfield{1}
local	float	___680_trans.z	%read{320,466} %write{308,454} %mystruct{___680_trans} %mystructfield{2}
local	float	___680_trans.w	%read{2147483647,-1} %write{319,465} %mystruct{___680_trans} %mystructfield{3}
local	color	___681_r	%read{329,343} %write{328,328}
local	color	___681_r_sqrt	%read{333,334} %write{329,329}
local	color	___681_n_min	%read{336,336} %write{332,332}
local	color	___681_n_max	%read{336,336} %write{335,335}
local	color	___681_np1	%read{339,339} %write{337,337}
local	color	___681_nm1	%read{341,341} %write{338,338}
local	color	___681_k2	%read{346,347} %write{344,346}
local	color	___682_reflection_tint	%read{562,590} %write{556,585}
local	color	___682_transmission_tint	%read{562,590} %write{560,589}
local	color	___684_combine_out	%read{551,551} %write{550,550}
local	float	___696_x	%read{639,639} %write{638,638}
local	float	___697_NdotV	%read{635,635} %write{633,633}
local	color	___697_f	%read{641,641} %write{640,640}
local	closure color	___699_null_closure	%read{552,648} %write{148,148}
local	float	___699_coat_roughness_vector_out.x	%read{165,562} %write{149,168} %mystruct{___699_coat_roughness_vector_out} %mystructfield{0}
local	float	___699_coat_roughness_vector_out.y	%read{167,562} %write{150,169} %mystruct{___699_coat_roughness_vector_out} %mystructfield{1}
local	float	___699_coat_tangent_rotate_degree_in2_tmp	%read{171,171} %write{170,170}
local	float	___699_coat_tangent_rotate_degree_out	%read{207,207} %write{171,171}
local	color	___699_metal_reflectivity_out	%read{327,327} %write{172,172}
local	color	___699_metal_edgecolor_out	%read{336,336} %write{173,173}
local	float	___699_coat_affect_roughness_multiply1_out	%read{348,348} %write{174,174}
local	float	___699_tangent_rotate_degree_in2_tmp	%read{176,176} %write{175,175}
local	float	___699_tangent_rotate_degree_out	%read{353,353} %write{176,176}
local	float	___699_transmission_roughness_add_out	%read{470,470} %write{177,177}
local	float	___699_subsurface_color_nonnegative_in2_tmp	%read{179,179} %write{178,178}
local	color	___699_subsurface_color_nonnegative_out	%read{544,544} %write{180,180}
local	float	___699_coat_clamped_low_tmp	%read{185,185} %write{181,181}
local	float	___699_coat_clamped_high_tmp	%read{184,184} %write{182,182}
local	float	___699_coat_clamped_out	%read{472,472} %write{185,185}
local	color	___699_subsurface_radius_scaled_out	%read{600,600} %write{186,186}
local	float	___699_subsurface_selector_out	%read{602,604} %write{188,188}
local	float	___699_base_color_nonnegative_in2_tmp	%read{190,190} %write{189,189}
local	color	___699_base_color_nonnegative_out	%read{545,545} %write{191,191}
local	color	___699_coat_attenuation_bg_tmp	%read{193,193} %write{192,192}
local	color	___699_coat_attenuation_out	%read{625,625} %write{193,193}
local	float	___699_one_minus_coat_ior_in1_tmp	%read{195,195} %write{194,194}
local	float	___699_one_minus_coat_ior_out	%read{473,473} %write{195,195}
local	float	___699_one_plus_coat_ior_in1_tmp	%read{197,197} %write{196,196}
local	float	___699_one_plus_coat_ior_out	%read{473,473} %write{197,197}
local	color	___699_emission_weight_out	%read{627,627} %write{198,198}
local	color	___699_opacity_luminance_out	%read{476,476} %write{199,202}
local	vector	___699_coat_tangent_rotate_out	%read{477,477} %write{203,320}
local	color	___699_artistic_ior_ior	%read{337,566} %write{321,336}
local	color	___699_artistic_ior_extinction	%read{566,566} %write{322,347}
local	float	___699_coat_affect_roughness_multiply2_out	%read{479,482} %write{348,348}
local	vector	___699_tangent_rotate_out	%read{480,480} %write{349,466}
local	float	___699_transmission_roughness_clamped_low_tmp	%read{471,471} %write{467,467}
local	float	___699_transmission_roughness_clamped_high_tmp	%read{470,470} %write{468,468}
local	float	___699_transmission_roughness_clamped_out	%read{482,482} %write{471,471}
local	float	___699_coat_gamma_multiply_out	%read{484,484} %write{472,472}
local	float	___699_coat_ior_to_F0_sqrt_out	%read{485,485} %write{473,473}
local	int	___699_opacity_luminance_float_index_tmp	%read{476,476} %write{474,474}
local	float	___699_opacity_luminance_float_out	%read{654,654} %write{476,476}
local	vector	___699_coat_tangent_rotate_normalize_out	%read{490,490} %write{477,477}
local	float	___699_coat_affected_roughness_fg_tmp	%read{479,479} %write{478,478}
local	float	___699_coat_affected_roughness_out	%read{497,497} %write{479,479}
local	vector	___699_tangent_rotate_normalize_out	%read{519,519} %write{480,480}
local	float	___699_coat_affected_transmission_roughness_fg_tmp	%read{482,482} %write{481,481}
local	float	___699_coat_affected_transmission_roughness_out	%read{526,526} %write{482,482}
local	float	___699_coat_gamma_in2_tmp	%read{484,484} %write{483,483}
local	float	___699_coat_gamma_out	%read{544,545} %write{484,484}
local	float	___699_coat_ior_to_F0_out	%read{547,547} %write{485,485}
local	float	___699_coat_tangent_value2_tmp	%read{487,487} %write{486,486}
local	vector	___699_coat_tangent_out	%read{562,562} %write{490,492}
local	float	___699_main_roughness_out.x	%read{510,578} %write{494,513} %mystruct{___699_main_roughness_out} %mystructfield{0}
local	float	___699_main_roughness_out.y	%read{512,578} %write{495,514} %mystruct{___699_main_roughness_out} %mystructfield{1}
local	float	___699_main_tangent_value2_tmp	%read{516,516} %write{515,515}
local	vector	___699_main_tangent_out	%read{566,590} %write{519,521}
local	float	___699_transmission_roughness_out.x	%read{539,590} %write{523,542} %mystruct{___699_transmission_roughness_out} %mystructfield{0}
local	float	___699_transmission_roughness_out.y	%read{541,590} %write{524,543} %mystruct{___699_transmission_roughness_out} %mystructfield{1}
local	color	___699_coat_affected_subsurface_color_out	%read{595,599} %write{544,544}
local	color	___699_coat_affected_diffuse_color_out	%read{606,606} %write{545,545}
local	float	___699_one_minus_coat_ior_to_F0_in1_tmp	%read{547,547} %write{546,546}
local	float	___699_one_minus_coat_ior_to_F0_out	%read{550,550} %write{547,547}
local	color	___699_emission_color0_out	%read{640,640} %write{548,551}
local	closure color	___699_coat_bsdf_out	%read{626,626} %write{552,563}
local	float	___699_metal_bsdf_weight_tmp	%read{567,567} %write{564,564}
local	string	___699_metal_bsdf_distribution_tmp	%read{566,566} %write{565,565}
local	closure color	___699_metal_bsdf_out	%read{623,623} %write{567,567}
local	closure color	___699_specular_bsdf_out	%read{619,619} %write{568,579}
local	closure color	___699_transmission_bsdf_out	%read{617,617} %write{580,591}
local	closure color	___699_sheen_bsdf_out	%read{613,613} %write{593,593}
local	float	___699_translucent_bsdf_weight_tmp	%read{596,596} %write{594,594}
local	closure color	___699_translucent_bsdf_out	%read{604,604} %write{596,596}
local	closure color	___699_subsurface_bsdf_out	%read{603,603} %write{597,600}
local	closure color	___699_selected_subsurface_bsdf_out	%read{611,611} %write{605,605}
local	closure color	___699_diffuse_bsdf_out	%read{610,610} %write{607,607}
local	closure color	___699_subsurface_mix_out	%read{613,613} %write{612,612}
local	closure color	___699_sheen_layer_out	%read{616,616} %write{613,613}
local	closure color	___699_transmission_mix_out	%read{619,619} %write{618,618}
local	closure color	___699_specular_layer_out	%read{622,622} %write{619,619}
local	closure color	___699_metalness_mix_out	%read{625,625} %write{624,624}
local	closure color	___699_thin_film_layer_attenuated_out	%read{626,626} %write{625,625}
local	closure color	___699_coat_layer_out	%read{651,651} %write{626,626}
local	closure color	___699_emission_edf_out	%read{628,644} %write{627,627}
local	closure color	___699_coat_tinted_emission_edf_out	%read{641,641} %write{628,628}
local	closure color	___699_coat_emission_edf_out	%read{645,645} %write{629,641}
local	closure color	___699_blended_coat_emission_edf_out	%read{652,652} %write{646,646}
local	closure color	___699_shader_constructor_out.bsdf	%read{657,657} %write{647,651} %mystruct{___699_shader_constructor_out} %mystructfield{0}
local	closure color	___699_shader_constructor_out.edf	%read{658,658} %write{648,652} %mystruct{___699_shader_constructor_out} %mystructfield{1}
local	float	___699_shader_constructor_out.opacity	%read{656,659} %write{649,656} %mystruct{___699_shader_constructor_out} %mystructfield{2}
local	closure color	___700_null_closure	%read{144,145} %write{7,7}
local	string	___700_geomprop_Nworld_space_tmp	%read{10,10} %write{8,8}
local	vector	___700_geomprop_Nworld_out1	%read{209,606} %write{10,10}
local	vector	___700_geomprop_Tworld_out1	%read{271,521} %write{15,15}
local	float	___700_geomprop_UV0_out1.x	%read{29,29} %write{16,16} %mystruct{___700_geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	___700_geomprop_UV0_out1.y	%read{30,30} %write{17,17} %mystruct{___700_geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	___700_base_color_image_out	%read{85,100} %write{18,81}
local	color	___700_base_color_image_out_cm_out	%read{172,191} %write{82,143}
local	closure color	___700_standard_surface_out.bsdf	%read{660,660} %write{144,657} %mystruct{___700_standard_surface_out} %mystructfield{0}
local	closure color	___700_standard_surface_out.edf	%read{661,661} %write{145,658} %mystruct{___700_standard_surface_out} %mystructfield{1}
local	float	___700_standard_surface_out.opacity	%read{662,662} %write{146,659} %mystruct{___700_standard_surface_out} %mystructfield{2}
local	float	___701_opacity_weight	%read{668,670} %write{666,666}
local	closure color	null_closure	%read{3,4} %write{0,0}
local	string	N_surfaceshader_base_color_filename_.filename	%read{42,80} %write{1,1} %mystruct{N_surfaceshader_base_color_filename_} %mystructfield{0}
local	string	N_surfaceshader_base_color_filename_.colorspace	%read{80,80} %write{2,2} %mystruct{N_surfaceshader_base_color_filename_} %mystructfield{1}
local	closure color	N_surfaceshader_out.bsdf	%read{667,667} %write{3,660} %mystruct{N_surfaceshader_out} %mystructfield{0}
local	closure color	N_surfaceshader_out.edf	%read{667,667} %write{4,661} %mystruct{N_surfaceshader_out} %mystructfield{1}
local	float	N_surfaceshader_out.opacity	%read{665,665} %write{5,662} %mystruct{N_surfaceshader_out} %mystructfield{2}
local	closure color	N_surfacematerial_out	%read{673,673} %write{672,672}
const	int	$const1	0		%read{0,474} %write{2147483647,-1}
const	float	$const2	1		%read{5,670} %write{2147483647,-1}
const	string	$const3	"NG_network_surface"		%read{6,6} %write{2147483647,-1}
const	string	$const4	"world"		%read{8,8} %write{2147483647,-1}
const	string	$const5	"transform"		%read{9,421} %write{2147483647,-1}
const	string	$const6	"common"		%read{10,10} %write{2147483647,-1}
temp	vector	$tmp1	%read{15,15} %write{14,14}
const	int	$const7	2		%read{11,460} %write{2147483647,-1}
temp	float	$tmp2	%read{14,14} %write{11,11}
const	float	$const8	0		%read{14,666} %write{2147483647,-1}
temp	float	$tmp3	%read{13,13} %write{12,12}
temp	float	$tmp4	%read{14,14} %write{13,13}
const	color	$const9	0 0 0		%read{18,640} %write{2147483647,-1}
temp	float	$tmp6.x	%read{29,29} %write{19,19} %derivs
temp	float	$tmp6.y	%read{30,30} %write{20,20} %derivs
temp	float	$tmp7.x	%read{32,32} %write{21,21} %derivs
temp	float	$tmp7.y	%read{33,33} %write{22,22} %derivs
temp	float	$tmp8.x	%read{35,35} %write{23,23} %derivs
temp	float	$tmp8.y	%read{36,36} %write{24,24} %derivs
temp	float	$tmp9.x	%read{38,38} %write{25,25} %derivs
temp	float	$tmp9.y	%read{39,39} %write{26,26} %derivs
const	string	$const10	"linear"		%read{80,80} %write{2147483647,-1}
const	string	$const11	""		%read{42,80} %write{2147483647,-1}
const	string	$const12	"constant"		%read{45,60} %write{2147483647,-1}
const	string	$const13	"NG_tiledimage_color3"		%read{27,27} %write{2147483647,-1}
const	string	$const14	"__operator__mul__"		%read{28,37} %write{2147483647,-1}
const	string	$const15	"__operator__sub__"		%read{31,31} %write{2147483647,-1}
const	string	$const16	"__operator__div__"		%read{34,34} %write{2147483647,-1}
const	string	$const17	"periodic"		%read{45,80} %write{2147483647,-1}
const	string	$const18	"mx_image_color3"		%read{41,41} %write{2147483647,-1}
temp	int	$tmp10	%read{43,43} %write{42,42}
temp	int	$tmp11	%read{44,58} %write{43,57}
temp	int	$tmp12	%read{46,46} %write{45,45}
temp	int	$tmp13	%read{47,56} %write{46,55}
temp	int	$tmp14	%read{49,49} %write{48,48}
temp	int	$tmp15	%read{50,54} %write{49,53}
temp	int	$tmp16	%read{52,52} %write{51,51}
temp	int	$tmp17	%read{53,53} %write{52,52}
temp	int	$tmp18	%read{55,55} %write{54,54}
temp	int	$tmp19	%read{57,57} %write{56,56}
temp	int	$tmp20	%read{59,73} %write{58,72}
temp	int	$tmp21	%read{61,61} %write{60,60}
temp	int	$tmp22	%read{62,71} %write{61,70}
temp	int	$tmp23	%read{64,64} %write{63,63}
temp	int	$tmp24	%read{65,69} %write{64,68}
temp	int	$tmp25	%read{67,67} %write{66,66}
temp	int	$tmp26	%read{68,68} %write{67,67}
temp	int	$tmp27	%read{70,70} %write{69,69}
temp	int	$tmp28	%read{72,72} %write{71,71}
const	string	$const19	"mx_transform_uv"		%read{77,77} %write{2147483647,-1}
const	string	$const20	"subimage"		%read{80,80} %write{2147483647,-1}
const	string	$const21	"interp"		%read{80,80} %write{2147483647,-1}
const	string	$const22	"missingcolor"		%read{80,80} %write{2147483647,-1}
const	string	$const23	"swrap"		%read{80,80} %write{2147483647,-1}
const	string	$const24	"twrap"		%read{80,80} %write{2147483647,-1}
const	string	$const25	"colorspace"		%read{80,80} %write{2147483647,-1}
const	string	$const26	"NG_srgb_texture_to_lin_rec709_color3"		%read{83,83} %write{2147483647,-1}
const	float	$const27	0.055		%read{84,84} %write{2147483647,-1}
const	float	$const28	12.92		%read{86,86} %write{2147483647,-1}
const	string	$const29	"NG_separate3_color3"		%read{91,91} %write{2147483647,-1}
const	string	$const30	"mx_extract"		%read{93,475} %write{2147483647,-1}
const	int	$const31	1		%read{95,457} %write{2147483647,-1}
temp	color	$tmp29	%read{106,106} %write{105,105}
const	float	$const32	0.04045		%read{107,127} %write{2147483647,-1}
temp	int	$tmp30	%read{112,112} %write{110,110}
const	string	$const33	"mx_ternary"		%read{111,517} %write{2147483647,-1}
temp	int	$tmp31	%read{122,122} %write{120,120}
temp	int	$tmp32	%read{132,132} %write{130,130}
const	float	$const34	1.055		%read{137,137} %write{2147483647,-1}
const	float	$const35	2.4		%read{140,140} %write{2147483647,-1}
const	color	$const36	1 1 1		%read{173,628} %write{2147483647,-1}
const	float	$const37	0.2		%read{177,479} %write{2147483647,-1}
const	float	$const38	1.5		%read{195,590} %write{2147483647,-1}
const	float	$const39	0.3		%read{592,592} %write{2147483647,-1}
const	float	$const40	0.1		%read{152,348} %write{2147483647,-1}
const	string	$const41	"NG_standard_surface_surfaceshader_100"		%read{147,147} %write{2147483647,-1}
const	string	$const42	"mx_roughness_anisotropy"		%read{151,525} %write{2147483647,-1}
temp	float	$tmp42	%read{154,154} %write{152,152}
const	float	$const43	1e-08		%read{155,529} %write{2147483647,-1}
const	string	$const44	"clamp"		%read{153,664} %write{2147483647,-1}
temp	float	$tmp43	%read{155,155} %write{154,154}
temp	int	$tmp44	%read{157,157} %write{156,156}
temp	float	$tmp45	%read{161,161} %write{160,160}
const	float	$const45	0.98		%read{159,533} %write{2147483647,-1}
temp	float	$tmp46	%read{160,160} %write{159,159}
temp	float	$tmp47	%read{162,162} %write{161,161}
temp	float	$tmp48	%read{164,164} %write{163,163}
const	float	$const46	360		%read{170,175} %write{2147483647,-1}
temp	color	$tmp49	%read{180,180} %write{179,179}
temp	float	$tmp50	%read{185,185} %write{184,184}
temp	float	$tmp51	%read{188,188} %write{187,187}
temp	color	$tmp52	%read{191,191} %write{190,190}
const	color	$const47	0.272229 0.674082 0.053689		%read{201,201} %write{2147483647,-1}
const	string	$const48	"mx_luminance_color3"		%read{200,200} %write{2147483647,-1}
temp	float	$tmp54	%read{202,202} %write{201,201}
const	vector	$const49	0 0 0		%read{203,349} %write{2147483647,-1}
const	string	$const50	"mx_rotate_vector3"		%read{204,350} %write{2147483647,-1}
const	string	$const51	"radians"		%read{205,351} %write{2147483647,-1}
const	float	$const52	3.1415927		%read{206,352} %write{2147483647,-1}
const	float	$const53	180		%read{206,352} %write{2147483647,-1}
temp	float	$tmp55	%read{207,207} %write{206,206}
const	string	$const54	"rotationMatrix"		%read{208,354} %write{2147483647,-1}
temp	float	$tmp56	%read{214,214} %write{213,213}
temp	float	$tmp57	%read{216,216} %write{214,214}
temp	float	$tmp58	%read{216,216} %write{215,215}
temp	float	$tmp59	%read{217,217} %write{216,216}
temp	float	$tmp60	%read{270,270} %write{217,217}
temp	float	$tmp61	%read{219,219} %write{218,218}
temp	float	$tmp62	%read{221,221} %write{219,219}
temp	float	$tmp63	%read{221,221} %write{220,220}
temp	float	$tmp64	%read{224,224} %write{221,221}
temp	float	$tmp65	%read{223,223} %write{222,222}
temp	float	$tmp66	%read{224,224} %write{223,223}
temp	float	$tmp67	%read{270,270} %write{224,224}
temp	float	$tmp68	%read{226,226} %write{225,225}
temp	float	$tmp69	%read{228,228} %write{226,226}
temp	float	$tmp70	%read{228,228} %write{227,227}
temp	float	$tmp71	%read{231,231} %write{228,228}
temp	float	$tmp72	%read{230,230} %write{229,229}
temp	float	$tmp73	%read{231,231} %write{230,230}
temp	float	$tmp74	%read{270,270} %write{231,231}
temp	float	$tmp75	%read{233,233} %write{232,232}
temp	float	$tmp76	%read{235,235} %write{233,233}
temp	float	$tmp77	%read{235,235} %write{234,234}
temp	float	$tmp78	%read{238,238} %write{235,235}
temp	float	$tmp79	%read{237,237} %write{236,236}
temp	float	$tmp80	%read{238,238} %write{237,237}
temp	float	$tmp81	%read{270,270} %write{238,238}
temp	float	$tmp82	%read{240,240} %write{239,239}
temp	float	$tmp83	%read{242,242} %write{240,240}
temp	float	$tmp84	%read{242,242} %write{241,241}
temp	float	$tmp85	%read{243,243} %write{242,242}
temp	float	$tmp86	%read{270,270} %write{243,243}
temp	float	$tmp87	%read{245,245} %write{244,244}
temp	float	$tmp88	%read{247,247} %write{245,245}
temp	float	$tmp89	%read{247,247} %write{246,246}
temp	float	$tmp90	%read{250,250} %write{247,247}
temp	float	$tmp91	%read{249,249} %write{248,248}
temp	float	$tmp92	%read{250,250} %write{249,249}
temp	float	$tmp93	%read{270,270} %write{250,250}
temp	float	$tmp94	%read{252,252} %write{251,251}
temp	float	$tmp95	%read{254,254} %write{252,252}
temp	float	$tmp96	%read{254,254} %write{253,253}
temp	float	$tmp97	%read{257,257} %write{254,254}
temp	float	$tmp98	%read{256,256} %write{255,255}
temp	float	$tmp99	%read{257,257} %write{256,256}
temp	float	$tmp100	%read{270,270} %write{257,257}
temp	float	$tmp101	%read{259,259} %write{258,258}
temp	float	$tmp102	%read{261,261} %write{259,259}
temp	float	$tmp103	%read{261,261} %write{260,260}
temp	float	$tmp104	%read{264,264} %write{261,261}
temp	float	$tmp105	%read{263,263} %write{262,262}
temp	float	$tmp106	%read{264,264} %write{263,263}
temp	float	$tmp107	%read{270,270} %write{264,264}
temp	float	$tmp108	%read{266,266} %write{265,265}
temp	float	$tmp109	%read{268,268} %write{266,266}
temp	float	$tmp110	%read{268,268} %write{267,267}
temp	float	$tmp111	%read{269,269} %write{268,268}
temp	float	$tmp112	%read{270,270} %write{269,269}
temp	float	$tmp113.x	%read{277,310} %write{271,271}
temp	float	$tmp113.y	%read{279,312} %write{272,272}
temp	float	$tmp113.z	%read{282,315} %write{273,273}
temp	float	$tmp113.w	%read{285,318} %write{274,274}
temp	float	$tmp114	%read{277,277} %write{276,276}
temp	float	$tmp115	%read{280,280} %write{277,277}
temp	float	$tmp116	%read{279,279} %write{278,278}
temp	float	$tmp117	%read{280,280} %write{279,279}
temp	float	$tmp118	%read{283,283} %write{280,280}
temp	float	$tmp119	%read{282,282} %write{281,281}
temp	float	$tmp120	%read{283,283} %write{282,282}
temp	float	$tmp121	%read{286,286} %write{283,283}
const	int	$const55	3		%read{284,463} %write{2147483647,-1}
temp	float	$tmp122	%read{285,285} %write{284,284}
temp	float	$tmp123	%read{286,286} %write{285,285}
temp	float	$tmp124	%read{288,288} %write{287,287}
temp	float	$tmp125	%read{291,291} %write{288,288}
temp	float	$tmp126	%read{290,290} %write{289,289}
temp	float	$tmp127	%read{291,291} %write{290,290}
temp	float	$tmp128	%read{294,294} %write{291,291}
temp	float	$tmp129	%read{293,293} %write{292,292}
temp	float	$tmp130	%read{294,294} %write{293,293}
temp	float	$tmp131	%read{297,297} %write{294,294}
temp	float	$tmp132	%read{296,296} %write{295,295}
temp	float	$tmp133	%read{297,297} %write{296,296}
temp	float	$tmp134	%read{299,299} %write{298,298}
temp	float	$tmp135	%read{302,302} %write{299,299}
temp	float	$tmp136	%read{301,301} %write{300,300}
temp	float	$tmp137	%read{302,302} %write{301,301}
temp	float	$tmp138	%read{305,305} %write{302,302}
temp	float	$tmp139	%read{304,304} %write{303,303}
temp	float	$tmp140	%read{305,305} %write{304,304}
temp	float	$tmp141	%read{308,308} %write{305,305}
temp	float	$tmp142	%read{307,307} %write{306,306}
temp	float	$tmp143	%read{308,308} %write{307,307}
temp	float	$tmp144	%read{310,310} %write{309,309}
temp	float	$tmp145	%read{313,313} %write{310,310}
temp	float	$tmp146	%read{312,312} %write{311,311}
temp	float	$tmp147	%read{313,313} %write{312,312}
temp	float	$tmp148	%read{316,316} %write{313,313}
temp	float	$tmp149	%read{315,315} %write{314,314}
temp	float	$tmp150	%read{316,316} %write{315,315}
temp	float	$tmp151	%read{319,319} %write{316,316}
temp	float	$tmp152	%read{318,318} %write{317,317}
temp	float	$tmp153	%read{319,319} %write{318,318}
const	string	$const56	"mx_artistic_ior"		%read{323,323} %write{2147483647,-1}
temp	color	$tmp154	%read{328,328} %write{324,324}
const	float	$const57	0.99		%read{325,325} %write{2147483647,-1}
temp	color	$tmp155	%read{327,327} %write{325,325}
temp	color	$tmp156	%read{328,328} %write{327,327}
temp	color	$tmp157	%read{332,332} %write{330,330}
temp	color	$tmp158	%read{332,332} %write{331,331}
temp	color	$tmp159	%read{335,335} %write{333,333}
temp	color	$tmp160	%read{335,335} %write{334,334}
temp	color	$tmp161	%read{340,340} %write{339,339}
temp	color	$tmp162	%read{342,342} %write{340,340}
temp	color	$tmp163	%read{342,342} %write{341,341}
temp	color	$tmp164	%read{344,344} %write{342,342}
temp	color	$tmp165	%read{344,344} %write{343,343}
temp	color	$tmp166	%read{346,346} %write{345,345}
temp	float	$tmp167	%read{353,353} %write{352,352}
temp	float	$tmp168	%read{360,360} %write{359,359}
temp	float	$tmp169	%read{362,362} %write{360,360}
temp	float	$tmp170	%read{362,362} %write{361,361}
temp	float	$tmp171	%read{363,363} %write{362,362}
temp	float	$tmp172	%read{416,416} %write{363,363}
temp	float	$tmp173	%read{365,365} %write{364,364}
temp	float	$tmp174	%read{367,367} %write{365,365}
temp	float	$tmp175	%read{367,367} %write{366,366}
temp	float	$tmp176	%read{370,370} %write{367,367}
temp	float	$tmp177	%read{369,369} %write{368,368}
temp	float	$tmp178	%read{370,370} %write{369,369}
temp	float	$tmp179	%read{416,416} %write{370,370}
temp	float	$tmp180	%read{372,372} %write{371,371}
temp	float	$tmp181	%read{374,374} %write{372,372}
temp	float	$tmp182	%read{374,374} %write{373,373}
temp	float	$tmp183	%read{377,377} %write{374,374}
temp	float	$tmp184	%read{376,376} %write{375,375}
temp	float	$tmp185	%read{377,377} %write{376,376}
temp	float	$tmp186	%read{416,416} %write{377,377}
temp	float	$tmp187	%read{379,379} %write{378,378}
temp	float	$tmp188	%read{381,381} %write{379,379}
temp	float	$tmp189	%read{381,381} %write{380,380}
temp	float	$tmp190	%read{384,384} %write{381,381}
temp	float	$tmp191	%read{383,383} %write{382,382}
temp	float	$tmp192	%read{384,384} %write{383,383}
temp	float	$tmp193	%read{416,416} %write{384,384}
temp	float	$tmp194	%read{386,386} %write{385,385}
temp	float	$tmp195	%read{388,388} %write{386,386}
temp	float	$tmp196	%read{388,388} %write{387,387}
temp	float	$tmp197	%read{389,389} %write{388,388}
temp	float	$tmp198	%read{416,416} %write{389,389}
temp	float	$tmp199	%read{391,391} %write{390,390}
temp	float	$tmp200	%read{393,393} %write{391,391}
temp	float	$tmp201	%read{393,393} %write{392,392}
temp	float	$tmp202	%read{396,396} %write{393,393}
temp	float	$tmp203	%read{395,395} %write{394,394}
temp	float	$tmp204	%read{396,396} %write{395,395}
temp	float	$tmp205	%read{416,416} %write{396,396}
temp	float	$tmp206	%read{398,398} %write{397,397}
temp	float	$tmp207	%read{400,400} %write{398,398}
temp	float	$tmp208	%read{400,400} %write{399,399}
temp	float	$tmp209	%read{403,403} %write{400,400}
temp	float	$tmp210	%read{402,402} %write{401,401}
temp	float	$tmp211	%read{403,403} %write{402,402}
temp	float	$tmp212	%read{416,416} %write{403,403}
temp	float	$tmp213	%read{405,405} %write{404,404}
temp	float	$tmp214	%read{407,407} %write{405,405}
temp	float	$tmp215	%read{407,407} %write{406,406}
temp	float	$tmp216	%read{410,410} %write{407,407}
temp	float	$tmp217	%read{409,409} %write{408,408}
temp	float	$tmp218	%read{410,410} %write{409,409}
temp	float	$tmp219	%read{416,416} %write{410,410}
temp	float	$tmp220	%read{412,412} %write{411,411}
temp	float	$tmp221	%read{414,414} %write{412,412}
temp	float	$tmp222	%read{414,414} %write{413,413}
temp	float	$tmp223	%read{415,415} %write{414,414}
temp	float	$tmp224	%read{416,416} %write{415,415}
temp	float	$tmp225.x	%read{423,456} %write{417,417}
temp	float	$tmp225.y	%read{425,458} %write{418,418}
temp	float	$tmp225.z	%read{428,461} %write{419,419}
temp	float	$tmp225.w	%read{431,464} %write{420,420}
temp	float	$tmp226	%read{423,423} %write{422,422}
temp	float	$tmp227	%read{426,426} %write{423,423}
temp	float	$tmp228	%read{425,425} %write{424,424}
temp	float	$tmp229	%read{426,426} %write{425,425}
temp	float	$tmp230	%read{429,429} %write{426,426}
temp	float	$tmp231	%read{428,428} %write{427,427}
temp	float	$tmp232	%read{429,429} %write{428,428}
temp	float	$tmp233	%read{432,432} %write{429,429}
temp	float	$tmp234	%read{431,431} %write{430,430}
temp	float	$tmp235	%read{432,432} %write{431,431}
temp	float	$tmp236	%read{434,434} %write{433,433}
temp	float	$tmp237	%read{437,437} %write{434,434}
temp	float	$tmp238	%read{436,436} %write{435,435}
temp	float	$tmp239	%read{437,437} %write{436,436}
temp	float	$tmp240	%read{440,440} %write{437,437}
temp	float	$tmp241	%read{439,439} %write{438,438}
temp	float	$tmp242	%read{440,440} %write{439,439}
temp	float	$tmp243	%read{443,443} %write{440,440}
temp	float	$tmp244	%read{442,442} %write{441,441}
temp	float	$tmp245	%read{443,443} %write{442,442}
temp	float	$tmp246	%read{445,445} %write{444,444}
temp	float	$tmp247	%read{448,448} %write{445,445}
temp	float	$tmp248	%read{447,447} %write{446,446}
temp	float	$tmp249	%read{448,448} %write{447,447}
temp	float	$tmp250	%read{451,451} %write{448,448}
temp	float	$tmp251	%read{450,450} %write{449,449}
temp	float	$tmp252	%read{451,451} %write{450,450}
temp	float	$tmp253	%read{454,454} %write{451,451}
temp	float	$tmp254	%read{453,453} %write{452,452}
temp	float	$tmp255	%read{454,454} %write{453,453}
temp	float	$tmp256	%read{456,456} %write{455,455}
temp	float	$tmp257	%read{459,459} %write{456,456}
temp	float	$tmp258	%read{458,458} %write{457,457}
temp	float	$tmp259	%read{459,459} %write{458,458}
temp	float	$tmp260	%read{462,462} %write{459,459}
temp	float	$tmp261	%read{461,461} %write{460,460}
temp	float	$tmp262	%read{462,462} %write{461,461}
temp	float	$tmp263	%read{465,465} %write{462,462}
temp	float	$tmp264	%read{464,464} %write{463,463}
temp	float	$tmp265	%read{465,465} %write{464,464}
temp	float	$tmp266	%read{471,471} %write{470,470}
temp	int	$tmp267	%read{489,489} %write{487,487}
temp	float	$tmp268	%read{499,499} %write{497,497}
temp	float	$tmp269	%read{500,500} %write{499,499}
temp	int	$tmp270	%read{502,502} %write{501,501}
temp	float	$tmp271	%read{506,506} %write{505,505}
temp	float	$tmp272	%read{505,505} %write{504,504}
temp	float	$tmp273	%read{507,507} %write{506,506}
temp	float	$tmp274	%read{509,509} %write{508,508}
temp	int	$tmp275	%read{518,518} %write{516,516}
temp	float	$tmp276	%read{528,528} %write{526,526}
temp	float	$tmp277	%read{529,529} %write{528,528}
temp	int	$tmp278	%read{531,531} %write{530,530}
temp	float	$tmp279	%read{535,535} %write{534,534}
temp	float	$tmp280	%read{534,534} %write{533,533}
temp	float	$tmp281	%read{536,536} %write{535,535}
temp	float	$tmp282	%read{538,538} %write{537,537}
const	string	$const58	"NG_convert_float_color3"		%read{549,549} %write{2147483647,-1}
const	string	$const59	"ggx"		%read{562,590} %write{2147483647,-1}
const	string	$const60	"R"		%read{554,586} %write{2147483647,-1}
const	string	$const61	"mx_dielectric_bsdf"		%read{553,581} %write{2147483647,-1}
const	string	$const62	"T"		%read{554,586} %write{2147483647,-1}
temp	int	$tmp284	%read{555,555} %write{554,554}
temp	int	$tmp285	%read{559,559} %write{558,558}
temp	closure color	$tmp286	%read{563,563} %write{562,562}
const	string	$const63	"thinfilm_thickness"		%read{562,590} %write{2147483647,-1}
const	string	$const64	"thinfilm_ior"		%read{562,590} %write{2147483647,-1}
const	string	$const65	"dielectric_bsdf"		%read{562,590} %write{2147483647,-1}
temp	closure color	$tmp287	%read{567,567} %write{566,566}
const	string	$const66	"conductor_bsdf"		%read{566,566} %write{2147483647,-1}
temp	int	$tmp288	%read{571,571} %write{570,570}
temp	int	$tmp289	%read{575,575} %write{574,574}
temp	closure color	$tmp290	%read{579,579} %write{578,578}
temp	int	$tmp291	%read{583,583} %write{582,582}
temp	int	$tmp292	%read{587,587} %write{586,586}
temp	closure color	$tmp293	%read{591,591} %write{590,590}
temp	closure color	$tmp294	%read{593,593} %write{592,592}
const	string	$const67	"sheen_bsdf"		%read{592,592} %write{2147483647,-1}
temp	closure color	$tmp295	%read{596,596} %write{595,595}
const	string	$const68	"translucent_bsdf"		%read{595,595} %write{2147483647,-1}
const	string	$const69	"mx_subsurface_bsdf"		%read{598,598} %write{2147483647,-1}
temp	color	$tmp296	%read{600,600} %write{599,599}
const	string	$const70	"subsurface_bssrdf"		%read{600,600} %write{2147483647,-1}
const	string	$const71	"mix"		%read{601,642} %write{2147483647,-1}
temp	float	$tmp297	%read{603,603} %write{602,602}
temp	closure color	$tmp298	%read{605,605} %write{603,603}
temp	closure color	$tmp299	%read{605,605} %write{604,604}
temp	closure color	$tmp300	%read{607,607} %write{606,606}
const	string	$const72	"oren_nayar_diffuse_bsdf"		%read{606,606} %write{2147483647,-1}
temp	float	$tmp301	%read{610,610} %write{609,609}
temp	closure color	$tmp302	%read{612,612} %write{610,610}
temp	closure color	$tmp303	%read{612,612} %write{611,611}
const	string	$const73	"layer"		%read{613,626} %write{2147483647,-1}
temp	float	$tmp304	%read{616,616} %write{615,615}
temp	closure color	$tmp305	%read{618,618} %write{616,616}
temp	closure color	$tmp306	%read{618,618} %write{617,617}
temp	float	$tmp307	%read{622,622} %write{621,621}
temp	closure color	$tmp308	%read{624,624} %write{622,622}
temp	closure color	$tmp309	%read{624,624} %write{623,623}
const	string	$const74	"uniform_edf"		%read{627,627} %write{2147483647,-1}
const	float	$const75	5		%read{639,639} %write{2147483647,-1}
const	string	$const76	"mx_generalized_schlick_edf"		%read{630,630} %write{2147483647,-1}
temp	float	$tmp311	%read{633,633} %write{632,632}
temp	vector	$tmp312	%read{632,632} %write{631,631}
const	string	$const77	"mx_fresnel_schlick"		%read{634,634} %write{2147483647,-1}
temp	float	$tmp313	%read{637,637} %write{635,635}
temp	float	$tmp314	%read{638,638} %write{637,637}
temp	float	$tmp315	%read{640,640} %write{639,639}
temp	float	$tmp316	%read{644,644} %write{643,643}
temp	closure color	$tmp317	%read{646,646} %write{644,644}
temp	closure color	$tmp318	%read{646,646} %write{645,645}
const	string	$const78	"mx_surface"		%read{650,650} %write{2147483647,-1}
temp	float	$tmp319	%read{655,655} %write{654,654}
const	string	$const79	"mx_surfacematerial"		%read{663,663} %write{2147483647,-1}
temp	float	$tmp320	%read{666,666} %write{665,665}
temp	closure color	$tmp321	%read{668,668} %write{667,667}
temp	closure color	$tmp322	%read{672,672} %write{668,668}
temp	closure color	$tmp323	%read{671,671} %write{669,669}
const	string	$const80	"transparent"		%read{669,669} %write{2147483647,-1}
temp	float	$tmp324	%read{671,671} %write{670,670}
temp	closure color	$tmp325	%read{672,672} %write{671,671}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:417
#     textureresource N_surfaceshader_base_color_filename_ = {N_surfaceshader_base_color_filename, N_surfaceshader_base_color_filename_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{417} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:418
#     surfaceshader N_surfaceshader_out = surfaceshader(null_closure, null_closure, 1.0);
	assign		N_surfaceshader_base_color_filename_.filename N_surfaceshader_base_color_filename 	%line{418} %argrw{"wr"}
	assign		N_surfaceshader_base_color_filename_.colorspace N_surfaceshader_base_color_filename_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:419
#     NG_network_surface(N_surfaceshader_base_color_filename_, N_surfaceshader_out);
	assign		N_surfaceshader_out.bsdf null_closure 	%line{419} %argrw{"wr"}
	assign		N_surfaceshader_out.edf null_closure 	%argrw{"wr"}
	assign		N_surfaceshader_out.opacity $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:420
#     MATERIAL N_surfacematerial_out = mx_surfacematerial(N_surfaceshader_out, backsurfaceshader, displacementshader1);
	functioncall	$const3 663 	%line{420} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:378
#     string geomprop_Nworld_space_tmp = "world";
	assign		___700_null_closure $const1 	%line{378} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:379
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space_tmp, N);
	assign		___700_geomprop_Nworld_space_tmp $const4 	%line{379} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:380
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const5 11 	%line{380} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	___700_geomprop_Nworld_out1 $const6 ___700_geomprop_Nworld_space_tmp N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:381
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{381} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const8 $tmp4 	%argrw{"wrrr"}
	normalize	___700_geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:382
#     color base_color_image_out = color(0.0);
	assign		___700_geomprop_UV0_out1.x u 	%line{382} %argrw{"wr"}
	assign		___700_geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:383
#     NG_tiledimage_color3(base_color_filename, color(0.000000, 0.000000, 0.000000), geomprop_UV0_out1, vector2(1.000000, 1.000000), vector2(0.000000, 0.000000), vector2(1.000000, 1.000000), vector2(1.000000, 1.000000), "linear", "", 0, "constant", base_color_image_out);
	assign		___700_base_color_image_out $const9 	%line{383} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:384
#     color base_color_image_out_cm_out = color(0.0);
	assign		$tmp6.x $const2 	%line{384} %argrw{"wr"}
	assign		$tmp6.y $const2 	%argrw{"wr"}
	assign		$tmp7.x $const8 	%argrw{"wr"}
	assign		$tmp7.y $const8 	%argrw{"wr"}
	assign		$tmp8.x $const2 	%argrw{"wr"}
	assign		$tmp8.y $const2 	%argrw{"wr"}
	assign		$tmp9.x $const2 	%argrw{"wr"}
	assign		$tmp9.y $const2 	%argrw{"wr"}
	functioncall	$const13 82 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:424
# 
	functioncall	$const14 31 	%line{424} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_color3_out.x ___700_geomprop_UV0_out1.x $tmp6.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_color3_out.y ___700_geomprop_UV0_out1.y $tmp6.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:424
# 
	functioncall	$const15 34 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{424} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_color3_out.x ___672_N_mult_color3_out.x $tmp7.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_color3_out.y ___672_N_mult_color3_out.y $tmp7.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:424
# 
	functioncall	$const16 37 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{424} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_color3_out.x ___672_N_sub_color3_out.x $tmp8.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_color3_out.y ___672_N_sub_color3_out.y $tmp8.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:424
# 
	functioncall	$const14 40 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{424} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_color3_out.x ___672_N_divtilesize_color3_out.x $tmp9.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_color3_out.y ___672_N_divtilesize_color3_out.y $tmp9.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:48
#     mx_image_color3(file, "", default1, N_multtilesize_color3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_color3_out);
	assign		___672_N_img_color3_out $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:49
#     out = N_img_color3_out;
	functioncall	$const18 81 	%line{49} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp10 N_surfaceshader_base_color_filename_.filename $const11 	%line{25} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 45 58 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp12 $const17 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 56 56 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_color3_out.x $const8 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 51 54 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_color3_out.x $const2 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp11 $tmp19 	%line{25} %argrw{"wr"}
	neq		$tmp20 $tmp11 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp20 60 73 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:27
#     {
	eq		$tmp21 $const17 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	if		$tmp22 71 71 	%argrw{"r"}
	lt		$tmp23 ___672_N_multtilesize_color3_out.y $const8 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 66 69 	%argrw{"r"}
	gt		$tmp25 ___672_N_multtilesize_color3_out.y $const2 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	neq		$tmp27 $tmp24 $const1 	%argrw{"wrr"}
	assign		$tmp22 $tmp27 	%argrw{"wr"}
	neq		$tmp28 $tmp22 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp20 $tmp28 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp20 76 76 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:29
#         return;
	assign		___672_N_img_color3_out $const9 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor $const9 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const19 80 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_color3_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_color3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_N_img_color3_out N_surfaceshader_base_color_filename_.filename ___670_st.x ___670_st.y $const20 $const11 $const21 $const10 $const22 ___670_missingColor $const23 $const17 $const24 $const17 $const25 N_surfaceshader_base_color_filename_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:50
# }
	assign		___700_base_color_image_out ___672_N_img_color3_out 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:385
#     NG_srgb_texture_to_lin_rec709_color3(base_color_image_out, base_color_image_out_cm_out);
	assign		___700_base_color_image_out_cm_out $const9 	%line{385} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:386
#     surfaceshader standard_surface_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const26 144 	%line{386} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:68
#     color bias_out = in + bias_in2_tmp;
	assign		___674_bias_in2_tmp $const27 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:69
#     float linSeg_in2_tmp = 12.920000;
	add		___674_bias_out ___700_base_color_image_out ___674_bias_in2_tmp 	%line{69} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:70
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___674_linSeg_in2_tmp $const28 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:71
#     float colorSeparate_outr = 0.0;
	div		___674_linSeg_out ___700_base_color_image_out ___674_linSeg_in2_tmp 	%line{71} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:72
#     float colorSeparate_outg = 0.0;
	assign		___674_colorSeparate_outr $const8 	%line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:73
#     float colorSeparate_outb = 0.0;
	assign		___674_colorSeparate_outg $const8 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:74
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___674_colorSeparate_outb $const8 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:75
#     float max_in2_tmp = 0.000000;
	functioncall	$const29 104 	%line{75} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:55
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___673_N_extract_0_index_tmp $const1 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:56
#     int N_extract_1_index_tmp = 1;
	functioncall	$const30 95 	%line{56} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___673_N_extract_0_out ___700_base_color_image_out ___673_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:57
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___673_N_extract_1_index_tmp $const31 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:58
#     int N_extract_2_index_tmp = 2;
	functioncall	$const30 98 	%line{58} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___673_N_extract_1_out ___700_base_color_image_out ___673_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:59
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___673_N_extract_2_index_tmp $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:60
#     outr = N_extract_0_out;
	functioncall	$const30 101 	%line{60} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___673_N_extract_2_out ___700_base_color_image_out ___673_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:61
#     outg = N_extract_1_out;
	assign		___674_colorSeparate_outr ___673_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:62
#     outb = N_extract_2_out;
	assign		___674_colorSeparate_outg ___673_N_extract_1_out 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:63
# }
	assign		___674_colorSeparate_outb ___673_N_extract_2_out 	%line{63} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:76
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___674_max_in2_tmp $const8 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:77
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp29 ___674_max_in2_tmp 	%line{77} %argrw{"wr"}
	max		___674_max_out ___674_bias_out $tmp29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:78
#     float isAboveR_in1_tmp = 1.000000;
	assign		___674_isAboveR_value2_tmp $const32 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:79
#     float isAboveR_in2_tmp = 0.000000;
	assign		___674_isAboveR_in1_tmp $const2 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:80
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___674_isAboveR_in2_tmp $const8 	%line{80} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:81
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp30 ___674_colorSeparate_outr ___674_isAboveR_value2_tmp 	%line{81} %argrw{"wrr"}
	functioncall	$const33 117 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp30 115 117 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___674_isAboveR_out ___674_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___674_isAboveR_out ___674_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:82
#     float isAboveG_in1_tmp = 1.000000;
	assign		___674_isAboveG_value2_tmp $const32 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:83
#     float isAboveG_in2_tmp = 0.000000;
	assign		___674_isAboveG_in1_tmp $const2 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:84
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___674_isAboveG_in2_tmp $const8 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:85
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp31 ___674_colorSeparate_outg ___674_isAboveG_value2_tmp 	%line{85} %argrw{"wrr"}
	functioncall	$const33 127 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp31 125 127 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___674_isAboveG_out ___674_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___674_isAboveG_out ___674_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:86
#     float isAboveB_in1_tmp = 1.000000;
	assign		___674_isAboveB_value2_tmp $const32 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:87
#     float isAboveB_in2_tmp = 0.000000;
	assign		___674_isAboveB_in1_tmp $const2 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:88
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___674_isAboveB_in2_tmp $const8 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:89
#     float scale_in2_tmp = 1.055000;
	gt		$tmp32 ___674_colorSeparate_outb ___674_isAboveB_value2_tmp 	%line{89} %argrw{"wrr"}
	functioncall	$const33 137 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp32 135 137 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___674_isAboveB_out ___674_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___674_isAboveB_out ___674_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:90
#     color scale_out = max_out / scale_in2_tmp;
	assign		___674_scale_in2_tmp $const34 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:91
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___674_scale_out ___674_max_out ___674_scale_in2_tmp 	%line{91} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:92
#     float powSeg_in2_tmp = 2.400000;
	color		___674_isAbove_out ___674_isAboveR_out ___674_isAboveG_out ___674_isAboveB_out 	%line{92} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:93
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___674_powSeg_in2_tmp $const35 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:94
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___674_powSeg_out ___674_scale_out ___674_powSeg_in2_tmp 	%line{94} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:95
#     out = mix_out;
	mix		___674_mix_out ___674_linSeg_out ___674_powSeg_out ___674_isAbove_out 	%line{95} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:96
# }
	assign		___700_base_color_image_out_cm_out ___674_mix_out 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:387
#     NG_standard_surface_surfaceshader_100(1.000000, base_color_image_out_cm_out, 0.000000, 0.000000, 1.000000, color(1.000000, 1.000000, 1.000000), 0.200000, 1.500000, 0.000000, 0.000000, 0.000000, color(1.000000, 1.000000, 1.000000), 0.000000, color(0.000000, 0.000000, 0.000000), 0.000000, 0.000000, 0.000000, 0.000000, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 1.000000, 0.000000, 0.000000, color(1.000000, 1.000000, 1.000000), 0.300000, 0.000000, color(1.000000, 1.000000, 1.000000), 0.100000, 0.000000, 0.000000, 1.500000, geomprop_Nworld_out1, 0.000000, 0.000000, 0.000000, 1.500000, 0.000000, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 0, geomprop_Nworld_out1, geomprop_Tworld_out1, standard_surface_out);
	assign		___700_standard_surface_out.bsdf ___700_null_closure 	%line{387} %argrw{"wr"}
	assign		___700_standard_surface_out.edf ___700_null_closure 	%argrw{"wr"}
	assign		___700_standard_surface_out.opacity $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:388
#     out = standard_surface_out;
	functioncall	$const41 660 	%line{388} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:276
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___699_null_closure $const1 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:277
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___699_coat_roughness_vector_out.x $const8 	%line{277} %argrw{"wr"}
	assign		___699_coat_roughness_vector_out.y $const8 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:278
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const42 170 	%line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp42 $const40 $const40 	%line{101} %argrw{"wrr"}
	functioncall	$const44 156 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp43 $tmp42 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp43 $const43 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:102
#     {
	gt		$tmp44 $const8 $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{102} %argrw{"wrr"}
	if		$tmp44 168 170 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const44 161 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp46 $const8 $const45 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp45 $tmp46 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp47 $const2 $tmp45 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{104} %argrw{"wrr"}
	sqrt		___676_aspect $tmp47 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp48 ___675_roughness_sqr ___676_aspect 	%line{105} %argrw{"wrr"}
	min		___699_coat_roughness_vector_out.x $tmp48 $const2 	%argrw{"wrr"}
	assign		___699_coat_roughness_vector_out.x ___699_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:106
#     }
	mul		___699_coat_roughness_vector_out.y ___675_roughness_sqr ___676_aspect 	%line{106} %argrw{"wrr"}
	assign		___699_coat_roughness_vector_out.y ___699_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:110
#         result.y = roughness_sqr;
	assign		___699_coat_roughness_vector_out.x ___675_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:111
#     }
	assign		___699_coat_roughness_vector_out.y ___675_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:279
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___699_coat_tangent_rotate_degree_in2_tmp $const46 	%line{279} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:280
#     color metal_reflectivity_out = base_color * base;
	mul		___699_coat_tangent_rotate_degree_out $const8 ___699_coat_tangent_rotate_degree_in2_tmp 	%line{280} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:281
#     color metal_edgecolor_out = specular_color * specular;
	mul		___699_metal_reflectivity_out ___700_base_color_image_out_cm_out $const2 	%line{281} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:282
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___699_metal_edgecolor_out $const36 $const2 	%line{282} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:283
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___699_coat_affect_roughness_multiply1_out $const8 $const8 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:284
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___699_tangent_rotate_degree_in2_tmp $const46 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:285
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___699_tangent_rotate_degree_out $const8 ___699_tangent_rotate_degree_in2_tmp 	%line{285} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:286
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___699_transmission_roughness_add_out $const37 $const8 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:287
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___699_subsurface_color_nonnegative_in2_tmp $const8 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:288
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp49 ___699_subsurface_color_nonnegative_in2_tmp 	%line{288} %argrw{"wr"}
	max		___699_subsurface_color_nonnegative_out $const36 $tmp49 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:289
#     float coat_clamped_high_tmp = 1.000000;
	assign		___699_coat_clamped_low_tmp $const8 	%line{289} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:290
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___699_coat_clamped_high_tmp $const2 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:291
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const44 186 	%line{291} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp50 $const8 ___699_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_coat_clamped_out $tmp50 ___699_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:292
#     float subsurface_selector_out = float(thin_walled);
	mul		___699_subsurface_radius_scaled_out $const36 $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{292} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:293
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp51 $const1 	%line{293} %argrw{"wr"}
	assign		___699_subsurface_selector_out $tmp51 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:294
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___699_base_color_nonnegative_in2_tmp $const8 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:295
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp52 ___699_base_color_nonnegative_in2_tmp 	%line{295} %argrw{"wr"}
	max		___699_base_color_nonnegative_out ___700_base_color_image_out_cm_out $tmp52 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:296
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___699_coat_attenuation_bg_tmp $const36 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:297
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___699_coat_attenuation_out ___699_coat_attenuation_bg_tmp $const36 $const8 	%line{297} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:298
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___699_one_minus_coat_ior_in1_tmp $const2 	%line{298} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:299
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___699_one_minus_coat_ior_out ___699_one_minus_coat_ior_in1_tmp $const38 	%line{299} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:300
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___699_one_plus_coat_ior_in1_tmp $const2 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:301
#     color emission_weight_out = emission_color * emission1;
	add		___699_one_plus_coat_ior_out ___699_one_plus_coat_ior_in1_tmp $const38 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:302
#     color opacity_luminance_out = color(0.0);
	mul		___699_emission_weight_out $const36 $const8 	%line{302} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:303
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___699_opacity_luminance_out $const9 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:304
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const48 203 	%line{304} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:117
# }
	dot		$tmp54 $const36 $const47 	%line{117} %argrw{"wrr"}
	assign		___699_opacity_luminance_out $tmp54 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:305
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___699_coat_tangent_rotate_out $const49 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:306
#     color artistic_ior_ior = color(0.0);
	functioncall	$const50 321 	%line{306} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:135
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const51 208 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp55 $const52 $const53 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___680_rotationRadians ___699_coat_tangent_rotate_degree_out $tmp55 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:136
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const54 271 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{136} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:122
#     float s = sin(angle);
	normalize	___679_nAxis ___700_geomprop_Nworld_out1 	%line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:123
#     float c = cos(angle);
	sin		___679_s ___680_rotationRadians 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:124
#     float oc = 1.0 - c;
	cos		___679_c ___680_rotationRadians 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:125
# 
	sub		___679_oc $const2 ___679_c 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp56 ___679_nAxis $const1 	%line{127} %argrw{"wrr"}
	mul		$tmp57 ___679_oc $tmp56 	%argrw{"wrr"}
	compref		$tmp58 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp59 $tmp57 $tmp58 	%argrw{"wrr"}
	add		$tmp60 $tmp59 ___679_c 	%argrw{"wrr"}
	compref		$tmp61 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp62 ___679_oc $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp66 $tmp65 ___679_s 	%argrw{"wrr"}
	sub		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp69 ___679_oc $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp73 $tmp72 ___679_s 	%argrw{"wrr"}
	add		$tmp74 $tmp71 $tmp73 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:128
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp75 ___679_nAxis $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp76 ___679_oc $tmp75 	%argrw{"wrr"}
	compref		$tmp77 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp78 $tmp76 $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp80 $tmp79 ___679_s 	%argrw{"wrr"}
	add		$tmp81 $tmp78 $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp83 ___679_oc $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp85 $tmp83 $tmp84 	%argrw{"wrr"}
	add		$tmp86 $tmp85 ___679_c 	%argrw{"wrr"}
	compref		$tmp87 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp88 ___679_oc $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp90 $tmp88 $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp92 $tmp91 ___679_s 	%argrw{"wrr"}
	sub		$tmp93 $tmp90 $tmp92 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:129
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp94 ___679_nAxis $const7 	%line{129} %argrw{"wrr"}
	mul		$tmp95 ___679_oc $tmp94 	%argrw{"wrr"}
	compref		$tmp96 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp99 $tmp98 ___679_s 	%argrw{"wrr"}
	sub		$tmp100 $tmp97 $tmp99 	%argrw{"wrr"}
	compref		$tmp101 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp102 ___679_oc $tmp101 	%argrw{"wrr"}
	compref		$tmp103 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp104 $tmp102 $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp106 $tmp105 ___679_s 	%argrw{"wrr"}
	add		$tmp107 $tmp104 $tmp106 	%argrw{"wrr"}
	compref		$tmp108 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp109 ___679_oc $tmp108 	%argrw{"wrr"}
	compref		$tmp110 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp111 $tmp109 $tmp110 	%argrw{"wrr"}
	add		$tmp112 $tmp111 ___679_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___680_m $tmp60 $tmp67 $tmp74 $const8 $tmp81 $tmp86 $tmp93 $const8 $tmp100 $tmp107 $tmp112 $const8 $const8 $const8 $const8 $const2 	%line{127} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:137
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp113.x ___700_geomprop_Tworld_out1 $const1 	%line{137} %argrw{"wrr"}
	compref		$tmp113.y ___700_geomprop_Tworld_out1 $const31 	%argrw{"wrr"}
	compref		$tmp113.z ___700_geomprop_Tworld_out1 $const7 	%argrw{"wrr"}
	assign		$tmp113.w $const2 	%argrw{"wr"}
	functioncall	$const5 320 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp114 ___680_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp115 $tmp114 $tmp113.x 	%argrw{"wrr"}
	mxcompref	$tmp116 ___680_m $const31 $const1 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp113.y 	%argrw{"wrr"}
	add		$tmp118 $tmp115 $tmp117 	%argrw{"wrr"}
	mxcompref	$tmp119 ___680_m $const7 $const1 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp113.z 	%argrw{"wrr"}
	add		$tmp121 $tmp118 $tmp120 	%argrw{"wrr"}
	mxcompref	$tmp122 ___680_m $const55 $const1 	%argrw{"wrrr"}
	mul		$tmp123 $tmp122 $tmp113.w 	%argrw{"wrr"}
	add		___680_trans.x $tmp121 $tmp123 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp124 ___680_m $const1 $const31 	%line{416} %argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp113.x 	%argrw{"wrr"}
	mxcompref	$tmp126 ___680_m $const31 $const31 	%argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp113.y 	%argrw{"wrr"}
	add		$tmp128 $tmp125 $tmp127 	%argrw{"wrr"}
	mxcompref	$tmp129 ___680_m $const7 $const31 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp113.z 	%argrw{"wrr"}
	add		$tmp131 $tmp128 $tmp130 	%argrw{"wrr"}
	mxcompref	$tmp132 ___680_m $const55 $const31 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp113.w 	%argrw{"wrr"}
	add		___680_trans.y $tmp131 $tmp133 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp134 ___680_m $const1 $const7 	%line{417} %argrw{"wrrr"}
	mul		$tmp135 $tmp134 $tmp113.x 	%argrw{"wrr"}
	mxcompref	$tmp136 ___680_m $const31 $const7 	%argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp113.y 	%argrw{"wrr"}
	add		$tmp138 $tmp135 $tmp137 	%argrw{"wrr"}
	mxcompref	$tmp139 ___680_m $const7 $const7 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp113.z 	%argrw{"wrr"}
	add		$tmp141 $tmp138 $tmp140 	%argrw{"wrr"}
	mxcompref	$tmp142 ___680_m $const55 $const7 	%argrw{"wrrr"}
	mul		$tmp143 $tmp142 $tmp113.w 	%argrw{"wrr"}
	add		___680_trans.z $tmp141 $tmp143 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp144 ___680_m $const1 $const55 	%line{418} %argrw{"wrrr"}
	mul		$tmp145 $tmp144 $tmp113.x 	%argrw{"wrr"}
	mxcompref	$tmp146 ___680_m $const31 $const55 	%argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp113.y 	%argrw{"wrr"}
	add		$tmp148 $tmp145 $tmp147 	%argrw{"wrr"}
	mxcompref	$tmp149 ___680_m $const7 $const55 	%argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp113.z 	%argrw{"wrr"}
	add		$tmp151 $tmp148 $tmp150 	%argrw{"wrr"}
	mxcompref	$tmp152 ___680_m $const55 $const55 	%argrw{"wrrr"}
	mul		$tmp153 $tmp152 $tmp113.w 	%argrw{"wrr"}
	add		___680_trans.w $tmp151 $tmp153 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:138
# }
	vector		___699_coat_tangent_rotate_out ___680_trans.x ___680_trans.y ___680_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{138} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:307
#     color artistic_ior_extinction = color(0.0);
	assign		___699_artistic_ior_ior $const9 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:308
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___699_artistic_ior_extinction $const9 	%line{308} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:309
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const56 348 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:146
#     color r_sqrt = sqrt(r);
	assign		$tmp154 $const8 	%line{146} %argrw{"wr"}
	assign		$tmp155 $const57 	%argrw{"wr"}
	functioncall	$const44 329 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp156 ___699_metal_reflectivity_out $tmp155 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___681_r $tmp156 $tmp154 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:147
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___681_r_sqrt ___681_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{147} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:148
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp157 $const2 ___681_r 	%line{148} %argrw{"wrr"}
	add		$tmp158 $const2 ___681_r 	%argrw{"wrr"}
	div		___681_n_min $tmp157 $tmp158 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:149
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp159 $const2 ___681_r_sqrt 	%line{149} %argrw{"wrr"}
	sub		$tmp160 $const2 ___681_r_sqrt 	%argrw{"wrr"}
	div		___681_n_max $tmp159 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:150
# 
	mix		___699_artistic_ior_ior ___681_n_max ___681_n_min ___699_metal_edgecolor_out 	%line{150} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:152
#     color nm1 = ior - 1.0;
	add		___681_np1 ___699_artistic_ior_ior $const2 	%line{152} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:153
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___681_nm1 ___699_artistic_ior_ior $const2 	%line{153} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:154
#     k2 = max(k2, 0.0);
	mul		$tmp161 ___681_np1 ___681_np1 	%line{154} %argrw{"wrr"}
	mul		$tmp162 $tmp161 ___681_r 	%argrw{"wrr"}
	mul		$tmp163 ___681_nm1 ___681_nm1 	%argrw{"wrr"}
	sub		$tmp164 $tmp162 $tmp163 	%argrw{"wrr"}
	sub		$tmp165 $const2 ___681_r 	%argrw{"wrr"}
	div		___681_k2 $tmp164 $tmp165 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:155
#     extinction = sqrt(k2);
	assign		$tmp166 $const8 	%line{155} %argrw{"wr"}
	max		___681_k2 ___681_k2 $tmp166 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:156
# }
	sqrt		___699_artistic_ior_extinction ___681_k2 	%line{156} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:310
#     vector tangent_rotate_out = vector(0.0);
	mul		___699_coat_affect_roughness_multiply2_out ___699_coat_affect_roughness_multiply1_out $const40 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:311
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___699_tangent_rotate_out $const49 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:312
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const50 467 	%line{312} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:135
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const51 354 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp167 $const52 $const53 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___680_rotationRadians ___699_tangent_rotate_degree_out $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:136
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const54 417 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{136} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:122
#     float s = sin(angle);
	normalize	___679_nAxis ___700_geomprop_Nworld_out1 	%line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:123
#     float c = cos(angle);
	sin		___679_s ___680_rotationRadians 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:124
#     float oc = 1.0 - c;
	cos		___679_c ___680_rotationRadians 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:125
# 
	sub		___679_oc $const2 ___679_c 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp168 ___679_nAxis $const1 	%line{127} %argrw{"wrr"}
	mul		$tmp169 ___679_oc $tmp168 	%argrw{"wrr"}
	compref		$tmp170 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp171 $tmp169 $tmp170 	%argrw{"wrr"}
	add		$tmp172 $tmp171 ___679_c 	%argrw{"wrr"}
	compref		$tmp173 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp174 ___679_oc $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp178 $tmp177 ___679_s 	%argrw{"wrr"}
	sub		$tmp179 $tmp176 $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp181 ___679_oc $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp183 $tmp181 $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp185 $tmp184 ___679_s 	%argrw{"wrr"}
	add		$tmp186 $tmp183 $tmp185 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:128
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp187 ___679_nAxis $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp188 ___679_oc $tmp187 	%argrw{"wrr"}
	compref		$tmp189 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp190 $tmp188 $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp192 $tmp191 ___679_s 	%argrw{"wrr"}
	add		$tmp193 $tmp190 $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp195 ___679_oc $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp197 $tmp195 $tmp196 	%argrw{"wrr"}
	add		$tmp198 $tmp197 ___679_c 	%argrw{"wrr"}
	compref		$tmp199 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp200 ___679_oc $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp202 $tmp200 $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp204 $tmp203 ___679_s 	%argrw{"wrr"}
	sub		$tmp205 $tmp202 $tmp204 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:129
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp206 ___679_nAxis $const7 	%line{129} %argrw{"wrr"}
	mul		$tmp207 ___679_oc $tmp206 	%argrw{"wrr"}
	compref		$tmp208 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp211 $tmp210 ___679_s 	%argrw{"wrr"}
	sub		$tmp212 $tmp209 $tmp211 	%argrw{"wrr"}
	compref		$tmp213 ___679_nAxis $const31 	%argrw{"wrr"}
	mul		$tmp214 ___679_oc $tmp213 	%argrw{"wrr"}
	compref		$tmp215 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp216 $tmp214 $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp218 $tmp217 ___679_s 	%argrw{"wrr"}
	add		$tmp219 $tmp216 $tmp218 	%argrw{"wrr"}
	compref		$tmp220 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp221 ___679_oc $tmp220 	%argrw{"wrr"}
	compref		$tmp222 ___679_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp223 $tmp221 $tmp222 	%argrw{"wrr"}
	add		$tmp224 $tmp223 ___679_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___680_m $tmp172 $tmp179 $tmp186 $const8 $tmp193 $tmp198 $tmp205 $const8 $tmp212 $tmp219 $tmp224 $const8 $const8 $const8 $const8 $const2 	%line{127} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:137
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp225.x ___700_geomprop_Tworld_out1 $const1 	%line{137} %argrw{"wrr"}
	compref		$tmp225.y ___700_geomprop_Tworld_out1 $const31 	%argrw{"wrr"}
	compref		$tmp225.z ___700_geomprop_Tworld_out1 $const7 	%argrw{"wrr"}
	assign		$tmp225.w $const2 	%argrw{"wr"}
	functioncall	$const5 466 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp226 ___680_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp225.x 	%argrw{"wrr"}
	mxcompref	$tmp228 ___680_m $const31 $const1 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp225.y 	%argrw{"wrr"}
	add		$tmp230 $tmp227 $tmp229 	%argrw{"wrr"}
	mxcompref	$tmp231 ___680_m $const7 $const1 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp225.z 	%argrw{"wrr"}
	add		$tmp233 $tmp230 $tmp232 	%argrw{"wrr"}
	mxcompref	$tmp234 ___680_m $const55 $const1 	%argrw{"wrrr"}
	mul		$tmp235 $tmp234 $tmp225.w 	%argrw{"wrr"}
	add		___680_trans.x $tmp233 $tmp235 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp236 ___680_m $const1 $const31 	%line{416} %argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp225.x 	%argrw{"wrr"}
	mxcompref	$tmp238 ___680_m $const31 $const31 	%argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp225.y 	%argrw{"wrr"}
	add		$tmp240 $tmp237 $tmp239 	%argrw{"wrr"}
	mxcompref	$tmp241 ___680_m $const7 $const31 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp225.z 	%argrw{"wrr"}
	add		$tmp243 $tmp240 $tmp242 	%argrw{"wrr"}
	mxcompref	$tmp244 ___680_m $const55 $const31 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp225.w 	%argrw{"wrr"}
	add		___680_trans.y $tmp243 $tmp245 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp246 ___680_m $const1 $const7 	%line{417} %argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp225.x 	%argrw{"wrr"}
	mxcompref	$tmp248 ___680_m $const31 $const7 	%argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp225.y 	%argrw{"wrr"}
	add		$tmp250 $tmp247 $tmp249 	%argrw{"wrr"}
	mxcompref	$tmp251 ___680_m $const7 $const7 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp225.z 	%argrw{"wrr"}
	add		$tmp253 $tmp250 $tmp252 	%argrw{"wrr"}
	mxcompref	$tmp254 ___680_m $const55 $const7 	%argrw{"wrrr"}
	mul		$tmp255 $tmp254 $tmp225.w 	%argrw{"wrr"}
	add		___680_trans.z $tmp253 $tmp255 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp256 ___680_m $const1 $const55 	%line{418} %argrw{"wrrr"}
	mul		$tmp257 $tmp256 $tmp225.x 	%argrw{"wrr"}
	mxcompref	$tmp258 ___680_m $const31 $const55 	%argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp225.y 	%argrw{"wrr"}
	add		$tmp260 $tmp257 $tmp259 	%argrw{"wrr"}
	mxcompref	$tmp261 ___680_m $const7 $const55 	%argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp225.z 	%argrw{"wrr"}
	add		$tmp263 $tmp260 $tmp262 	%argrw{"wrr"}
	mxcompref	$tmp264 ___680_m $const55 $const55 	%argrw{"wrrr"}
	mul		$tmp265 $tmp264 $tmp225.w 	%argrw{"wrr"}
	add		___680_trans.w $tmp263 $tmp265 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:138
# }
	vector		___699_tangent_rotate_out ___680_trans.x ___680_trans.y ___680_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{138} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:313
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___699_transmission_roughness_clamped_low_tmp $const8 	%line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:314
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___699_transmission_roughness_clamped_high_tmp $const2 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:315
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const44 472 	%line{315} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp266 ___699_transmission_roughness_add_out ___699_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_transmission_roughness_clamped_out $tmp266 ___699_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:316
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___699_coat_gamma_multiply_out ___699_coat_clamped_out $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:317
#     int opacity_luminance_float_index_tmp = 0;
	div		___699_coat_ior_to_F0_sqrt_out ___699_one_minus_coat_ior_out ___699_one_plus_coat_ior_out 	%line{317} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:318
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___699_opacity_luminance_float_index_tmp $const1 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:319
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const30 477 	%line{319} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___699_opacity_luminance_float_out ___699_opacity_luminance_out ___699_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:320
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___699_coat_tangent_rotate_normalize_out ___699_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:321
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___699_coat_affected_roughness_fg_tmp $const2 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:322
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___699_coat_affected_roughness_out $const37 ___699_coat_affected_roughness_fg_tmp ___699_coat_affect_roughness_multiply2_out 	%line{322} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:323
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___699_tangent_rotate_normalize_out ___699_tangent_rotate_out 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:324
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___699_coat_affected_transmission_roughness_fg_tmp $const2 	%line{324} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:325
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___699_coat_affected_transmission_roughness_out ___699_transmission_roughness_clamped_out ___699_coat_affected_transmission_roughness_fg_tmp ___699_coat_affect_roughness_multiply2_out 	%line{325} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:326
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___699_coat_gamma_in2_tmp $const2 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:327
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___699_coat_gamma_out ___699_coat_gamma_multiply_out ___699_coat_gamma_in2_tmp 	%line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:328
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___699_coat_ior_to_F0_out ___699_coat_ior_to_F0_sqrt_out ___699_coat_ior_to_F0_sqrt_out 	%line{328} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:329
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___699_coat_tangent_value2_tmp $const8 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:330
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp267 $const8 ___699_coat_tangent_value2_tmp 	%line{330} %argrw{"wrr"}
	functioncall	$const33 494 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp267 492 494 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___699_coat_tangent_out ___699_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___699_coat_tangent_out ___700_geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:331
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___699_main_roughness_out.x $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{331} %argrw{"wr"}
	assign		___699_main_roughness_out.y $const8 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:332
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const42 515 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp268 ___699_coat_affected_roughness_out ___699_coat_affected_roughness_out 	%line{101} %argrw{"wrr"}
	functioncall	$const44 501 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp269 $tmp268 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp269 $const43 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:102
#     {
	gt		$tmp270 $const8 $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{102} %argrw{"wrr"}
	if		$tmp270 513 515 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const44 506 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp272 $const8 $const45 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp271 $tmp272 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp273 $const2 $tmp271 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{104} %argrw{"wrr"}
	sqrt		___676_aspect $tmp273 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp274 ___675_roughness_sqr ___676_aspect 	%line{105} %argrw{"wrr"}
	min		___699_main_roughness_out.x $tmp274 $const2 	%argrw{"wrr"}
	assign		___699_main_roughness_out.x ___699_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:106
#     }
	mul		___699_main_roughness_out.y ___675_roughness_sqr ___676_aspect 	%line{106} %argrw{"wrr"}
	assign		___699_main_roughness_out.y ___699_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:110
#         result.y = roughness_sqr;
	assign		___699_main_roughness_out.x ___675_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:111
#     }
	assign		___699_main_roughness_out.y ___675_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:333
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___699_main_tangent_value2_tmp $const8 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:334
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp275 $const8 ___699_main_tangent_value2_tmp 	%line{334} %argrw{"wrr"}
	functioncall	$const33 523 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp275 521 523 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___699_main_tangent_out ___699_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___699_main_tangent_out ___700_geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:335
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___699_transmission_roughness_out.x $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{335} %argrw{"wr"}
	assign		___699_transmission_roughness_out.y $const8 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:336
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const42 544 	%line{336} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp276 ___699_coat_affected_transmission_roughness_out ___699_coat_affected_transmission_roughness_out 	%line{101} %argrw{"wrr"}
	functioncall	$const44 530 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp277 $tmp276 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp277 $const43 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:102
#     {
	gt		$tmp278 $const8 $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{102} %argrw{"wrr"}
	if		$tmp278 542 544 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const44 535 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp280 $const8 $const45 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp279 $tmp280 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp281 $const2 $tmp279 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{104} %argrw{"wrr"}
	sqrt		___676_aspect $tmp281 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp282 ___675_roughness_sqr ___676_aspect 	%line{105} %argrw{"wrr"}
	min		___699_transmission_roughness_out.x $tmp282 $const2 	%argrw{"wrr"}
	assign		___699_transmission_roughness_out.x ___699_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:106
#     }
	mul		___699_transmission_roughness_out.y ___675_roughness_sqr ___676_aspect 	%line{106} %argrw{"wrr"}
	assign		___699_transmission_roughness_out.y ___699_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:110
#         result.y = roughness_sqr;
	assign		___699_transmission_roughness_out.x ___675_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:111
#     }
	assign		___699_transmission_roughness_out.y ___675_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:337
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___699_coat_affected_subsurface_color_out ___699_subsurface_color_nonnegative_out ___699_coat_gamma_out 	%line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:338
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___699_coat_affected_diffuse_color_out ___699_base_color_nonnegative_out ___699_coat_gamma_out 	%line{338} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:339
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___699_one_minus_coat_ior_to_F0_in1_tmp $const2 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:340
#     color emission_color0_out = color(0.0);
	sub		___699_one_minus_coat_ior_to_F0_out ___699_one_minus_coat_ior_to_F0_in1_tmp ___699_coat_ior_to_F0_out 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:341
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___699_emission_color0_out $const9 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:342
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const58 552 	%line{342} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:177
#     out = combine_out;
	color		___684_combine_out ___699_one_minus_coat_ior_to_F0_out ___699_one_minus_coat_ior_to_F0_out ___699_one_minus_coat_ior_to_F0_out 	%line{177} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:178
# }
	assign		___699_emission_color0_out ___684_combine_out 	%line{178} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:343
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___699_coat_bsdf_out ___699_null_closure 	%line{343} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:344
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const61 564 	%line{344} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp284 $const60 $const62 	%line{161} %argrw{"wrr"}
	if		$tmp284 557 558 	%argrw{"r"}
	assign		___682_reflection_tint $const9 	%argrw{"wr"}
	assign		___682_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp285 $const60 $const60 	%line{162} %argrw{"wrr"}
	if		$tmp285 561 562 	%argrw{"r"}
	assign		___682_transmission_tint $const9 	%argrw{"wr"}
	assign		___682_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:163
# }
	closure		$tmp286 $const65 ___700_geomprop_Nworld_out1 ___699_coat_tangent_out ___682_reflection_tint ___682_transmission_tint ___699_coat_roughness_vector_out.x ___699_coat_roughness_vector_out.y $const38 $const59 $const63 $const8 $const64 $const38 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___699_coat_bsdf_out $tmp286 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:345
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___699_metal_bsdf_weight_tmp $const2 	%line{345} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:346
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___699_metal_bsdf_distribution_tmp $const59 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:347
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp287 $const66 ___700_geomprop_Nworld_out1 ___699_main_tangent_out ___699_main_roughness_out.x ___699_main_roughness_out.y ___699_artistic_ior_ior ___699_artistic_ior_extinction ___699_metal_bsdf_distribution_tmp $const63 $const8 $const64 $const38 	%line{347} %argrw{"wrrrrrrrrrrrr"}
	mul		___699_metal_bsdf_out $tmp287 ___699_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:348
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___699_specular_bsdf_out ___699_null_closure 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:349
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const61 580 	%line{349} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp288 $const60 $const62 	%line{161} %argrw{"wrr"}
	if		$tmp288 573 574 	%argrw{"r"}
	assign		___682_reflection_tint $const9 	%argrw{"wr"}
	assign		___682_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp289 $const60 $const60 	%line{162} %argrw{"wrr"}
	if		$tmp289 577 578 	%argrw{"r"}
	assign		___682_transmission_tint $const9 	%argrw{"wr"}
	assign		___682_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:163
# }
	closure		$tmp290 $const65 ___700_geomprop_Nworld_out1 ___699_main_tangent_out ___682_reflection_tint ___682_transmission_tint ___699_main_roughness_out.x ___699_main_roughness_out.y $const38 $const59 $const63 $const8 $const64 $const38 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___699_specular_bsdf_out $tmp290 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:350
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___699_transmission_bsdf_out ___699_null_closure 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:351
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const61 592 	%line{351} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp291 $const62 $const62 	%line{161} %argrw{"wrr"}
	if		$tmp291 585 586 	%argrw{"r"}
	assign		___682_reflection_tint $const9 	%argrw{"wr"}
	assign		___682_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp292 $const62 $const60 	%line{162} %argrw{"wrr"}
	if		$tmp292 589 590 	%argrw{"r"}
	assign		___682_transmission_tint $const9 	%argrw{"wr"}
	assign		___682_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:163
# }
	closure		$tmp293 $const65 ___700_geomprop_Nworld_out1 ___699_main_tangent_out ___682_reflection_tint ___682_transmission_tint ___699_transmission_roughness_out.x ___699_transmission_roughness_out.y $const38 $const59 $const63 $const8 $const64 $const38 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___699_transmission_bsdf_out $tmp293 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:352
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp294 $const67 ___700_geomprop_Nworld_out1 $const36 $const39 	%line{352} %argrw{"wrrrr"}
	mul		___699_sheen_bsdf_out $tmp294 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:353
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___699_translucent_bsdf_weight_tmp $const2 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:354
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp295 $const68 ___700_geomprop_Nworld_out1 ___699_coat_affected_subsurface_color_out 	%line{354} %argrw{"wrrr"}
	mul		___699_translucent_bsdf_out $tmp295 ___699_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:355
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___699_subsurface_bsdf_out ___699_null_closure 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:356
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const69 601 	%line{356} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:171
# #endif
	mul		$tmp296 $const2 ___699_coat_affected_subsurface_color_out 	%line{171} %argrw{"wrr"}
	closure		___699_subsurface_bsdf_out $const70 ___700_geomprop_Nworld_out1 $tmp296 $const2 ___699_subsurface_radius_scaled_out $const8 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:357
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const71 606 	%line{357} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp297 $const2 ___699_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp298 ___699_subsurface_bsdf_out $tmp297 	%argrw{"wrr"}
	mul		$tmp299 ___699_translucent_bsdf_out ___699_subsurface_selector_out 	%argrw{"wrr"}
	add		___699_selected_subsurface_bsdf_out $tmp298 $tmp299 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:358
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp300 $const72 ___700_geomprop_Nworld_out1 ___699_coat_affected_diffuse_color_out $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{358} %argrw{"wrrrr"}
	mul		___699_diffuse_bsdf_out $tmp300 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:359
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const71 613 	%line{359} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp301 $const2 $const8 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp302 ___699_diffuse_bsdf_out $tmp301 	%argrw{"wrr"}
	mul		$tmp303 ___699_selected_subsurface_bsdf_out $const8 	%argrw{"wrr"}
	add		___699_subsurface_mix_out $tmp302 $tmp303 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:360
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___699_sheen_layer_out $const73 ___699_sheen_bsdf_out ___699_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{360} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:361
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const71 619 	%line{361} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp304 $const2 $const8 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp305 ___699_sheen_layer_out $tmp304 	%argrw{"wrr"}
	mul		$tmp306 ___699_transmission_bsdf_out $const8 	%argrw{"wrr"}
	add		___699_transmission_mix_out $tmp305 $tmp306 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:362
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___699_specular_layer_out $const73 ___699_specular_bsdf_out ___699_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{362} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:363
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const71 625 	%line{363} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp307 $const2 $const8 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp308 ___699_specular_layer_out $tmp307 	%argrw{"wrr"}
	mul		$tmp309 ___699_metal_bsdf_out $const8 	%argrw{"wrr"}
	add		___699_metalness_mix_out $tmp308 $tmp309 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:364
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___699_thin_film_layer_attenuated_out ___699_metalness_mix_out ___699_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{364} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:365
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___699_coat_layer_out $const73 ___699_coat_bsdf_out ___699_thin_film_layer_attenuated_out 	%line{365} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:366
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___699_emission_edf_out $const74 ___699_emission_weight_out 	%line{366} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:367
#     EDF coat_emission_edf_out = null_closure;
	mul		___699_coat_tinted_emission_edf_out ___699_emission_edf_out $const36 	%line{367} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:368
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___699_coat_emission_edf_out ___699_null_closure 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:369
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const76 642 	%line{369} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:262
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp312 I 	%line{262} %argrw{"wr"}
	dot		$tmp311 N $tmp312 	%argrw{"wrr"}
	fabs		___697_NdotV $tmp311 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:263
#     result = base * f;
	functioncall	$const77 641 	%line{263} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:256
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp313 $const2 ___697_NdotV 	%line{256} %argrw{"wrr"}
	functioncall	$const44 639 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp314 $tmp313 $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___696_x $tmp314 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:257
# }
	pow		$tmp315 ___696_x $const75 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{257} %argrw{"wrr"}
	mix		___697_f ___699_emission_color0_out $const9 $tmp315 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:264
# }
	mul		___699_coat_emission_edf_out ___699_coat_tinted_emission_edf_out ___697_f 	%line{264} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:370
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const71 647 	%line{370} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp316 $const2 $const8 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp317 ___699_emission_edf_out $tmp316 	%argrw{"wrr"}
	mul		$tmp318 ___699_coat_emission_edf_out $const8 	%argrw{"wrr"}
	add		___699_blended_coat_emission_edf_out $tmp317 $tmp318 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:371
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___699_shader_constructor_out.bsdf ___699_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{371} %argrw{"wr"}
	assign		___699_shader_constructor_out.edf ___699_null_closure 	%argrw{"wr"}
	assign		___699_shader_constructor_out.opacity $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:372
#     out = shader_constructor_out;
	functioncall	$const78 657 	%line{372} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:269
#     result.edf     = edf;
	assign		___699_shader_constructor_out.bsdf ___699_coat_layer_out 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:270
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___699_shader_constructor_out.edf ___699_blended_coat_emission_edf_out 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:271
# }
	functioncall	$const44 656 	%line{271} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp319 ___699_opacity_luminance_float_out $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_shader_constructor_out.opacity $tmp319 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:271
# }
	assign		___699_shader_constructor_out.opacity ___699_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:373
# }
	assign		___700_standard_surface_out.bsdf ___699_shader_constructor_out.bsdf 	%line{373} %argrw{"wr"}
	assign		___700_standard_surface_out.edf ___699_shader_constructor_out.edf 	%argrw{"wr"}
	assign		___700_standard_surface_out.opacity ___699_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:389
# }
	assign		N_surfaceshader_out.bsdf ___700_standard_surface_out.bsdf 	%line{389} %argrw{"wr"}
	assign		N_surfaceshader_out.edf ___700_standard_surface_out.edf 	%argrw{"wr"}
	assign		N_surfaceshader_out.opacity ___700_standard_surface_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:421
#     out = N_surfacematerial_out;
	functioncall	$const79 673 	%line{421} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:394
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const44 667 	%line{394} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp320 N_surfaceshader_out.opacity $const2 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_opacity_weight $tmp320 $const8 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:395
# }
	add		$tmp321 N_surfaceshader_out.bsdf N_surfaceshader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl"} %line{395} %argrw{"wrr"}
	mul		$tmp322 $tmp321 ___701_opacity_weight 	%argrw{"wrr"}
	closure		$tmp323 $const80 	%argrw{"wr"}
	sub		$tmp324 $const2 ___701_opacity_weight 	%argrw{"wrr"}
	mul		$tmp325 $tmp323 $tmp324 	%argrw{"wrr"}
	add		N_surfacematerial_out $tmp322 $tmp325 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\network_surfaceshader\\N_surfacematerial.osl:422
# }
	assign		out N_surfacematerial_out 	%line{422} %argrw{"wr"}
	end
