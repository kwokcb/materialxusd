OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\normalmapped_surfaceshader\NormalMappedMaterial.oso
shader NormalMappedMaterial	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"NormalMappedMaterial"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Bworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Bworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	tiledimage_realworldimagesize_unit_in1			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldimagesize_unit_in1.x	1		%read{22,22} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize_unit_in1} %mystructfield{0} %derivs
param	float	tiledimage_realworldimagesize_unit_in1.y	2		%read{23,23} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize_unit_in1} %mystructfield{1} %derivs
param	float	tiledimage_realworldimagesize_unit_in2	0.00999999978		%meta{string,widget,"number"}  %read{19,20} %write{2147483647,-1} %derivs
param	struct vector2	tiledimage_realworldtilesize_unit_in1			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldtilesize_unit_in1.x	3		%read{28,28} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize_unit_in1} %mystructfield{0} %derivs
param	float	tiledimage_realworldtilesize_unit_in1.y	2		%read{29,29} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize_unit_in1} %mystructfield{1} %derivs
param	float	tiledimage_realworldtilesize_unit_in2	0.00999999978		%meta{string,widget,"number"}  %read{25,26} %write{2147483647,-1} %derivs
param	string	tiledimage_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/images/mesh_wire_norm.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	tiledimage_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	vector	tiledimage_default	0 0 0		%read{78,80} %write{2147483647,-1}
param	struct vector2	tiledimage_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvtiling.x	12		%read{33,33} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage_uvtiling.y	10		%read{34,34} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvoffset.x	0		%read{36,36} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage_uvoffset.y	0		%read{37,37} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{1} %derivs
param	string	tiledimage_filtertype	"linear"		%read{84,84} %write{2147483647,-1}
param	string	tiledimage_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	normalmap_scale	1.10000002		%meta{string,widget,"number"}  %read{88,89} %write{2147483647,-1}
param	float	NormalMappedShader_base	0.600000024		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{135,570} %write{2147483647,-1}
param	color	NormalMappedShader_base_color	0.800000012 0.800000012 0.800000012		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{135,154} %write{2147483647,-1}
param	float	NormalMappedShader_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{569,569} %write{2147483647,-1}
param	float	NormalMappedShader_metalness	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{584,586} %write{2147483647,-1}
param	float	NormalMappedShader_specular	0.699999988		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{136,542} %write{2147483647,-1}
param	color	NormalMappedShader_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{136,540} %write{2147483647,-1}
param	float	NormalMappedShader_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{140,442} %write{2147483647,-1}
param	float	NormalMappedShader_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{541,553} %write{2147483647,-1}
param	float	NormalMappedShader_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{464,496} %write{2147483647,-1}
param	float	NormalMappedShader_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{139,139} %write{2147483647,-1}
param	float	NormalMappedShader_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{578,580} %write{2147483647,-1}
param	color	NormalMappedShader_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{548,552} %write{2147483647,-1}
param	float	NormalMappedShader_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	NormalMappedShader_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{140,140} %write{2147483647,-1}
param	float	NormalMappedShader_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{572,574} %write{2147483647,-1}
param	color	NormalMappedShader_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{143,143} %write{2147483647,-1}
param	color	NormalMappedShader_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{149,149} %write{2147483647,-1}
param	float	NormalMappedShader_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{149,149} %write{2147483647,-1}
param	float	NormalMappedShader_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{563,563} %write{2147483647,-1}
param	float	NormalMappedShader_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{556,556} %write{2147483647,-1}
param	color	NormalMappedShader_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{555,555} %write{2147483647,-1}
param	float	NormalMappedShader_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{555,555} %write{2147483647,-1}
param	float	NormalMappedShader_coat	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{137,608} %write{2147483647,-1}
param	color	NormalMappedShader_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{156,591} %write{2147483647,-1}
param	float	NormalMappedShader_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{115,311} %write{2147483647,-1}
param	float	NormalMappedShader_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{119,450} %write{2147483647,-1}
param	float	NormalMappedShader_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{134,134} %write{2147483647,-1}
param	float	NormalMappedShader_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{158,525} %write{2147483647,-1}
param	float	NormalMappedShader_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{435,435} %write{2147483647,-1}
param	float	NormalMappedShader_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{137,137} %write{2147483647,-1}
param	float	NormalMappedShader_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{529,541} %write{2147483647,-1}
param	float	NormalMappedShader_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{529,541} %write{2147483647,-1}
param	float	NormalMappedShader_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{161,161} %write{2147483647,-1}
param	color	NormalMappedShader_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{161,161} %write{2147483647,-1}
param	color	NormalMappedShader_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{164,164} %write{2147483647,-1}
param	int	NormalMappedShader_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{150,150} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{633,633}
global	vector	I	%read{594,594} %write{2147483647,-1}
global	normal	N	%read{4,595} %write{2147483647,-1}
global	float	u	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{17,17} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{84,84} %write{80,80}
local	float	___670_st.x	%read{84,84} %write{82,82} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{84,84} %write{83,83} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_N_mult_vector3_out.x	%read{36,36} %write{33,33} %mystruct{___672_N_mult_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_mult_vector3_out.y	%read{37,37} %write{34,34} %mystruct{___672_N_mult_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_sub_vector3_out.x	%read{39,39} %write{36,36} %mystruct{___672_N_sub_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_sub_vector3_out.y	%read{40,40} %write{37,37} %mystruct{___672_N_sub_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_vector3_out.x	%read{42,42} %write{39,39} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_vector3_out.y	%read{43,43} %write{40,40} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_vector3_out.x	%read{52,82} %write{42,42} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_vector3_out.y	%read{67,83} %write{43,43} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{1} %derivs
local	vector	___672_N_img_vector3_out	%read{85,85} %write{44,84}
local	vector	___673_decodedValue	%read{96,103} %write{93,95}
local	float	___677_roughness_sqr	%read{126,506} %write{118,492}
local	float	___678_aspect	%read{126,503} %write{125,499}
local	vector	___681_nAxis	%read{176,376} %write{172,318}
local	float	___681_s	%read{186,372} %write{173,319}
local	float	___681_c	%read{175,378} %write{174,320}
local	float	___681_oc	%read{177,375} %write{175,321}
local	float	___682_rotationRadians	%read{173,320} %write{170,316}
local	matrix	___682_m	%read{239,426} %write{233,379}
local	float	___682_trans.x	%read{283,429} %write{249,395} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{283,429} %write{260,406} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{283,429} %write{271,417} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{282,428} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{292,306} %write{291,291}
local	color	___683_r_sqrt	%read{296,297} %write{292,292}
local	color	___683_n_min	%read{299,299} %write{295,295}
local	color	___683_n_max	%read{299,299} %write{298,298}
local	color	___683_np1	%read{302,302} %write{300,300}
local	color	___683_nm1	%read{304,304} %write{301,301}
local	color	___683_k2	%read{309,310} %write{307,309}
local	color	___684_reflection_tint	%read{525,553} %write{519,548}
local	color	___684_transmission_tint	%read{525,553} %write{523,552}
local	color	___686_combine_out	%read{514,514} %write{513,513}
local	float	___698_x	%read{602,602} %write{601,601}
local	float	___699_NdotV	%read{598,598} %write{596,596}
local	color	___699_f	%read{604,604} %write{603,603}
local	closure color	___701_null_closure	%read{515,611} %write{111,111}
local	float	___701_coat_roughness_vector_out.x	%read{128,525} %write{112,131} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{130,525} %write{113,132} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{134,134} %write{133,133}
local	float	___701_coat_tangent_rotate_degree_out	%read{170,170} %write{134,134}
local	color	___701_metal_reflectivity_out	%read{290,290} %write{135,135}
local	color	___701_metal_edgecolor_out	%read{299,299} %write{136,136}
local	float	___701_coat_affect_roughness_multiply1_out	%read{311,311} %write{137,137}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{139,139} %write{138,138}
local	float	___701_tangent_rotate_degree_out	%read{316,316} %write{139,139}
local	float	___701_transmission_roughness_add_out	%read{433,433} %write{140,140}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{142,142} %write{141,141}
local	color	___701_subsurface_color_nonnegative_out	%read{507,507} %write{143,143}
local	float	___701_coat_clamped_low_tmp	%read{148,148} %write{144,144}
local	float	___701_coat_clamped_high_tmp	%read{147,147} %write{145,145}
local	float	___701_coat_clamped_out	%read{435,435} %write{148,148}
local	color	___701_subsurface_radius_scaled_out	%read{563,563} %write{149,149}
local	float	___701_subsurface_selector_out	%read{565,567} %write{151,151}
local	float	___701_base_color_nonnegative_in2_tmp	%read{153,153} %write{152,152}
local	color	___701_base_color_nonnegative_out	%read{508,508} %write{154,154}
local	color	___701_coat_attenuation_bg_tmp	%read{156,156} %write{155,155}
local	color	___701_coat_attenuation_out	%read{588,588} %write{156,156}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{158,158} %write{157,157}
local	float	___701_one_minus_coat_ior_out	%read{436,436} %write{158,158}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{160,160} %write{159,159}
local	float	___701_one_plus_coat_ior_out	%read{436,436} %write{160,160}
local	color	___701_emission_weight_out	%read{590,590} %write{161,161}
local	color	___701_opacity_luminance_out	%read{439,439} %write{162,165}
local	vector	___701_coat_tangent_rotate_out	%read{440,440} %write{166,283}
local	color	___701_artistic_ior_ior	%read{300,529} %write{284,299}
local	color	___701_artistic_ior_extinction	%read{529,529} %write{285,310}
local	float	___701_coat_affect_roughness_multiply2_out	%read{442,445} %write{311,311}
local	vector	___701_tangent_rotate_out	%read{443,443} %write{312,429}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{434,434} %write{430,430}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{433,433} %write{431,431}
local	float	___701_transmission_roughness_clamped_out	%read{445,445} %write{434,434}
local	float	___701_coat_gamma_multiply_out	%read{447,447} %write{435,435}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{448,448} %write{436,436}
local	int	___701_opacity_luminance_float_index_tmp	%read{439,439} %write{437,437}
local	float	___701_opacity_luminance_float_out	%read{617,617} %write{439,439}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{453,453} %write{440,440}
local	float	___701_coat_affected_roughness_fg_tmp	%read{442,442} %write{441,441}
local	float	___701_coat_affected_roughness_out	%read{460,460} %write{442,442}
local	vector	___701_tangent_rotate_normalize_out	%read{482,482} %write{443,443}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{445,445} %write{444,444}
local	float	___701_coat_affected_transmission_roughness_out	%read{489,489} %write{445,445}
local	float	___701_coat_gamma_in2_tmp	%read{447,447} %write{446,446}
local	float	___701_coat_gamma_out	%read{507,508} %write{447,447}
local	float	___701_coat_ior_to_F0_out	%read{510,510} %write{448,448}
local	float	___701_coat_tangent_value2_tmp	%read{450,450} %write{449,449}
local	vector	___701_coat_tangent_out	%read{525,525} %write{453,455}
local	float	___701_main_roughness_out.x	%read{473,541} %write{457,476} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{475,541} %write{458,477} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{479,479} %write{478,478}
local	vector	___701_main_tangent_out	%read{529,553} %write{482,484}
local	float	___701_transmission_roughness_out.x	%read{502,553} %write{486,505} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{504,553} %write{487,506} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{558,562} %write{507,507}
local	color	___701_coat_affected_diffuse_color_out	%read{569,569} %write{508,508}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{510,510} %write{509,509}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{513,513} %write{510,510}
local	color	___701_emission_color0_out	%read{603,603} %write{511,514}
local	closure color	___701_coat_bsdf_out	%read{589,589} %write{515,526}
local	float	___701_metal_bsdf_weight_tmp	%read{530,530} %write{527,527}
local	string	___701_metal_bsdf_distribution_tmp	%read{529,529} %write{528,528}
local	closure color	___701_metal_bsdf_out	%read{586,586} %write{530,530}
local	closure color	___701_specular_bsdf_out	%read{582,582} %write{531,542}
local	closure color	___701_transmission_bsdf_out	%read{580,580} %write{543,554}
local	closure color	___701_sheen_bsdf_out	%read{576,576} %write{556,556}
local	float	___701_translucent_bsdf_weight_tmp	%read{559,559} %write{557,557}
local	closure color	___701_translucent_bsdf_out	%read{567,567} %write{559,559}
local	closure color	___701_subsurface_bsdf_out	%read{566,566} %write{560,563}
local	closure color	___701_selected_subsurface_bsdf_out	%read{574,574} %write{568,568}
local	closure color	___701_diffuse_bsdf_out	%read{573,573} %write{570,570}
local	closure color	___701_subsurface_mix_out	%read{576,576} %write{575,575}
local	closure color	___701_sheen_layer_out	%read{579,579} %write{576,576}
local	closure color	___701_transmission_mix_out	%read{582,582} %write{581,581}
local	closure color	___701_specular_layer_out	%read{585,585} %write{582,582}
local	closure color	___701_metalness_mix_out	%read{588,588} %write{587,587}
local	closure color	___701_thin_film_layer_attenuated_out	%read{589,589} %write{588,588}
local	closure color	___701_coat_layer_out	%read{614,614} %write{589,589}
local	closure color	___701_emission_edf_out	%read{591,607} %write{590,590}
local	closure color	___701_coat_tinted_emission_edf_out	%read{604,604} %write{591,591}
local	closure color	___701_coat_emission_edf_out	%read{608,608} %write{592,604}
local	closure color	___701_blended_coat_emission_edf_out	%read{615,615} %write{609,609}
local	closure color	___701_shader_constructor_out.bsdf	%read{620,620} %write{610,614} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{621,621} %write{611,615} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{619,622} %write{612,619} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{628,630} %write{626,626}
local	closure color	null_closure	%read{107,108} %write{0,0}
local	string	tiledimage_file_.filename	%read{46,84} %write{1,1} %mystruct{tiledimage_file_} %mystructfield{0}
local	string	tiledimage_file_.colorspace	%read{2147483647,-1} %write{2,2} %mystruct{tiledimage_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{104,525} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{97,484} %write{9,9}
local	vector	geomprop_Bworld_out1	%read{100,100} %write{15,15}
local	float	geomprop_UV0_out1.x	%read{33,33} %write{16,16} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{34,34} %write{17,17} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage_realworldimagesize_unit_out.x	%read{39,39} %write{22,22} %mystruct{tiledimage_realworldimagesize_unit_out} %mystructfield{0} %derivs
local	float	tiledimage_realworldimagesize_unit_out.y	%read{40,40} %write{23,23} %mystruct{tiledimage_realworldimagesize_unit_out} %mystructfield{1} %derivs
local	float	tiledimage_realworldtilesize_unit_out.x	%read{42,42} %write{28,28} %mystruct{tiledimage_realworldtilesize_unit_out} %mystructfield{0} %derivs
local	float	tiledimage_realworldtilesize_unit_out.y	%read{43,43} %write{29,29} %mystruct{tiledimage_realworldtilesize_unit_out} %mystructfield{1} %derivs
local	vector	tiledimage_out	%read{91,94} %write{30,85}
local	vector	normalmap_out	%read{318,569} %write{86,106}
local	closure color	NormalMappedShader_out.bsdf	%read{627,627} %write{107,620} %mystruct{NormalMappedShader_out} %mystructfield{0}
local	closure color	NormalMappedShader_out.edf	%read{627,627} %write{108,621} %mystruct{NormalMappedShader_out} %mystructfield{1}
local	float	NormalMappedShader_out.opacity	%read{625,625} %write{109,622} %mystruct{NormalMappedShader_out} %mystructfield{2}
local	closure color	NormalMappedMaterial_out	%read{633,633} %write{632,632}
const	int	$const1	0		%read{0,437} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,384} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,423} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,626} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	vector	$tmp5	%read{15,15} %write{14,14}
temp	vector	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{13,13} %write{10,10}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	string	$const6	"__operator__mul__"		%read{18,41} %write{2147483647,-1}
temp	float	$tmp10.x	%read{22,22} %write{19,19} %derivs
temp	float	$tmp10.y	%read{23,23} %write{20,20} %derivs
temp	float	$tmp11.x	%read{28,28} %write{25,25} %derivs
temp	float	$tmp11.y	%read{29,29} %write{26,26} %derivs
const	vector	$const7	0 0 0		%read{30,312} %write{2147483647,-1}
const	string	$const8	"NG_tiledimage_vector3"		%read{31,31} %write{2147483647,-1}
const	string	$const9	"__operator__sub__"		%read{35,35} %write{2147483647,-1}
const	string	$const10	"__operator__div__"		%read{38,38} %write{2147483647,-1}
const	string	$const11	""		%read{46,84} %write{2147483647,-1}
const	string	$const12	"periodic"		%read{49,84} %write{2147483647,-1}
const	string	$const13	"mx_image_vector3"		%read{45,45} %write{2147483647,-1}
temp	int	$tmp12	%read{47,47} %write{46,46}
temp	int	$tmp13	%read{48,62} %write{47,61}
const	string	$const14	"constant"		%read{49,64} %write{2147483647,-1}
temp	int	$tmp14	%read{50,50} %write{49,49}
temp	int	$tmp15	%read{51,60} %write{50,59}
temp	int	$tmp16	%read{53,53} %write{52,52}
temp	int	$tmp17	%read{54,58} %write{53,57}
const	float	$const15	1		%read{55,630} %write{2147483647,-1}
temp	int	$tmp18	%read{56,56} %write{55,55}
temp	int	$tmp19	%read{57,57} %write{56,56}
temp	int	$tmp20	%read{59,59} %write{58,58}
temp	int	$tmp21	%read{61,61} %write{60,60}
temp	int	$tmp22	%read{63,77} %write{62,76}
temp	int	$tmp23	%read{65,65} %write{64,64}
temp	int	$tmp24	%read{66,75} %write{65,74}
temp	int	$tmp25	%read{68,68} %write{67,67}
temp	int	$tmp26	%read{69,73} %write{68,72}
temp	int	$tmp27	%read{71,71} %write{70,70}
temp	int	$tmp28	%read{72,72} %write{71,71}
temp	int	$tmp29	%read{74,74} %write{73,73}
temp	int	$tmp30	%read{76,76} %write{75,75}
const	string	$const16	"mx_transform_uv"		%read{81,81} %write{2147483647,-1}
const	string	$const17	"subimage"		%read{84,84} %write{2147483647,-1}
const	string	$const18	"interp"		%read{84,84} %write{2147483647,-1}
const	string	$const19	"missingcolor"		%read{84,84} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{84,84} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{84,84} %write{2147483647,-1}
const	string	$const22	"mx_normalmap_float"		%read{87,87} %write{2147483647,-1}
temp	float	$tmp31.x	%read{98,98} %write{88,88}
temp	float	$tmp31.y	%read{101,101} %write{89,89}
const	string	$const23	"mx_normalmap_vector2"		%read{90,90} %write{2147483647,-1}
temp	int	$tmp33	%read{92,92} %write{91,91}
const	vector	$const24	0 0 1		%read{93,93} %write{2147483647,-1}
const	float	$const25	2		%read{94,94} %write{2147483647,-1}
temp	vector	$tmp34	%read{95,95} %write{94,94}
temp	float	$tmp35	%read{97,97} %write{96,96}
temp	vector	$tmp36	%read{98,98} %write{97,97}
temp	vector	$tmp37	%read{102,102} %write{98,98}
const	int	$const26	1		%read{99,420} %write{2147483647,-1}
temp	float	$tmp38	%read{100,100} %write{99,99}
temp	vector	$tmp39	%read{101,101} %write{100,100}
temp	vector	$tmp40	%read{102,102} %write{101,101}
temp	vector	$tmp41	%read{105,105} %write{102,102}
temp	float	$tmp42	%read{104,104} %write{103,103}
temp	vector	$tmp43	%read{105,105} %write{104,104}
temp	vector	$tmp44	%read{106,106} %write{105,105}
const	string	$const27	"NG_standard_surface_surfaceshader_100"		%read{110,110} %write{2147483647,-1}
const	string	$const28	"mx_roughness_anisotropy"		%read{114,488} %write{2147483647,-1}
temp	float	$tmp45	%read{117,117} %write{115,115}
const	float	$const29	1e-08		%read{118,492} %write{2147483647,-1}
const	string	$const30	"clamp"		%read{116,624} %write{2147483647,-1}
temp	float	$tmp46	%read{118,118} %write{117,117}
temp	int	$tmp47	%read{120,120} %write{119,119}
temp	float	$tmp48	%read{124,124} %write{123,123}
const	float	$const31	0.98		%read{122,496} %write{2147483647,-1}
temp	float	$tmp49	%read{123,123} %write{122,122}
temp	float	$tmp50	%read{125,125} %write{124,124}
temp	float	$tmp51	%read{127,127} %write{126,126}
const	float	$const32	360		%read{133,138} %write{2147483647,-1}
temp	color	$tmp52	%read{143,143} %write{142,142}
temp	float	$tmp53	%read{148,148} %write{147,147}
temp	float	$tmp54	%read{151,151} %write{150,150}
temp	color	$tmp55	%read{154,154} %write{153,153}
const	color	$const33	1 1 1		%read{155,524} %write{2147483647,-1}
const	color	$const34	0 0 0		%read{162,603} %write{2147483647,-1}
const	color	$const35	0.272229 0.674082 0.053689		%read{164,164} %write{2147483647,-1}
const	string	$const36	"mx_luminance_color3"		%read{163,163} %write{2147483647,-1}
temp	float	$tmp57	%read{165,165} %write{164,164}
const	string	$const37	"mx_rotate_vector3"		%read{167,313} %write{2147483647,-1}
const	string	$const38	"radians"		%read{168,314} %write{2147483647,-1}
const	float	$const39	3.1415927		%read{169,315} %write{2147483647,-1}
const	float	$const40	180		%read{169,315} %write{2147483647,-1}
temp	float	$tmp58	%read{170,170} %write{169,169}
const	string	$const41	"rotationMatrix"		%read{171,317} %write{2147483647,-1}
temp	float	$tmp59	%read{177,177} %write{176,176}
temp	float	$tmp60	%read{179,179} %write{177,177}
temp	float	$tmp61	%read{179,179} %write{178,178}
temp	float	$tmp62	%read{180,180} %write{179,179}
temp	float	$tmp63	%read{233,233} %write{180,180}
temp	float	$tmp64	%read{182,182} %write{181,181}
temp	float	$tmp65	%read{184,184} %write{182,182}
temp	float	$tmp66	%read{184,184} %write{183,183}
temp	float	$tmp67	%read{187,187} %write{184,184}
temp	float	$tmp68	%read{186,186} %write{185,185}
temp	float	$tmp69	%read{187,187} %write{186,186}
temp	float	$tmp70	%read{233,233} %write{187,187}
temp	float	$tmp71	%read{189,189} %write{188,188}
temp	float	$tmp72	%read{191,191} %write{189,189}
temp	float	$tmp73	%read{191,191} %write{190,190}
temp	float	$tmp74	%read{194,194} %write{191,191}
temp	float	$tmp75	%read{193,193} %write{192,192}
temp	float	$tmp76	%read{194,194} %write{193,193}
temp	float	$tmp77	%read{233,233} %write{194,194}
temp	float	$tmp78	%read{196,196} %write{195,195}
temp	float	$tmp79	%read{198,198} %write{196,196}
temp	float	$tmp80	%read{198,198} %write{197,197}
temp	float	$tmp81	%read{201,201} %write{198,198}
temp	float	$tmp82	%read{200,200} %write{199,199}
temp	float	$tmp83	%read{201,201} %write{200,200}
temp	float	$tmp84	%read{233,233} %write{201,201}
temp	float	$tmp85	%read{203,203} %write{202,202}
temp	float	$tmp86	%read{205,205} %write{203,203}
temp	float	$tmp87	%read{205,205} %write{204,204}
temp	float	$tmp88	%read{206,206} %write{205,205}
temp	float	$tmp89	%read{233,233} %write{206,206}
temp	float	$tmp90	%read{208,208} %write{207,207}
temp	float	$tmp91	%read{210,210} %write{208,208}
temp	float	$tmp92	%read{210,210} %write{209,209}
temp	float	$tmp93	%read{213,213} %write{210,210}
temp	float	$tmp94	%read{212,212} %write{211,211}
temp	float	$tmp95	%read{213,213} %write{212,212}
temp	float	$tmp96	%read{233,233} %write{213,213}
temp	float	$tmp97	%read{215,215} %write{214,214}
temp	float	$tmp98	%read{217,217} %write{215,215}
temp	float	$tmp99	%read{217,217} %write{216,216}
temp	float	$tmp100	%read{220,220} %write{217,217}
temp	float	$tmp101	%read{219,219} %write{218,218}
temp	float	$tmp102	%read{220,220} %write{219,219}
temp	float	$tmp103	%read{233,233} %write{220,220}
temp	float	$tmp104	%read{222,222} %write{221,221}
temp	float	$tmp105	%read{224,224} %write{222,222}
temp	float	$tmp106	%read{224,224} %write{223,223}
temp	float	$tmp107	%read{227,227} %write{224,224}
temp	float	$tmp108	%read{226,226} %write{225,225}
temp	float	$tmp109	%read{227,227} %write{226,226}
temp	float	$tmp110	%read{233,233} %write{227,227}
temp	float	$tmp111	%read{229,229} %write{228,228}
temp	float	$tmp112	%read{231,231} %write{229,229}
temp	float	$tmp113	%read{231,231} %write{230,230}
temp	float	$tmp114	%read{232,232} %write{231,231}
temp	float	$tmp115	%read{233,233} %write{232,232}
temp	float	$tmp116.x	%read{240,273} %write{234,234}
temp	float	$tmp116.y	%read{242,275} %write{235,235}
temp	float	$tmp116.z	%read{245,278} %write{236,236}
temp	float	$tmp116.w	%read{248,281} %write{237,237}
temp	float	$tmp117	%read{240,240} %write{239,239}
temp	float	$tmp118	%read{243,243} %write{240,240}
temp	float	$tmp119	%read{242,242} %write{241,241}
temp	float	$tmp120	%read{243,243} %write{242,242}
temp	float	$tmp121	%read{246,246} %write{243,243}
temp	float	$tmp122	%read{245,245} %write{244,244}
temp	float	$tmp123	%read{246,246} %write{245,245}
temp	float	$tmp124	%read{249,249} %write{246,246}
const	int	$const42	3		%read{247,426} %write{2147483647,-1}
temp	float	$tmp125	%read{248,248} %write{247,247}
temp	float	$tmp126	%read{249,249} %write{248,248}
temp	float	$tmp127	%read{251,251} %write{250,250}
temp	float	$tmp128	%read{254,254} %write{251,251}
temp	float	$tmp129	%read{253,253} %write{252,252}
temp	float	$tmp130	%read{254,254} %write{253,253}
temp	float	$tmp131	%read{257,257} %write{254,254}
temp	float	$tmp132	%read{256,256} %write{255,255}
temp	float	$tmp133	%read{257,257} %write{256,256}
temp	float	$tmp134	%read{260,260} %write{257,257}
temp	float	$tmp135	%read{259,259} %write{258,258}
temp	float	$tmp136	%read{260,260} %write{259,259}
temp	float	$tmp137	%read{262,262} %write{261,261}
temp	float	$tmp138	%read{265,265} %write{262,262}
temp	float	$tmp139	%read{264,264} %write{263,263}
temp	float	$tmp140	%read{265,265} %write{264,264}
temp	float	$tmp141	%read{268,268} %write{265,265}
temp	float	$tmp142	%read{267,267} %write{266,266}
temp	float	$tmp143	%read{268,268} %write{267,267}
temp	float	$tmp144	%read{271,271} %write{268,268}
temp	float	$tmp145	%read{270,270} %write{269,269}
temp	float	$tmp146	%read{271,271} %write{270,270}
temp	float	$tmp147	%read{273,273} %write{272,272}
temp	float	$tmp148	%read{276,276} %write{273,273}
temp	float	$tmp149	%read{275,275} %write{274,274}
temp	float	$tmp150	%read{276,276} %write{275,275}
temp	float	$tmp151	%read{279,279} %write{276,276}
temp	float	$tmp152	%read{278,278} %write{277,277}
temp	float	$tmp153	%read{279,279} %write{278,278}
temp	float	$tmp154	%read{282,282} %write{279,279}
temp	float	$tmp155	%read{281,281} %write{280,280}
temp	float	$tmp156	%read{282,282} %write{281,281}
const	string	$const43	"mx_artistic_ior"		%read{286,286} %write{2147483647,-1}
temp	color	$tmp157	%read{291,291} %write{287,287}
const	float	$const44	0.99		%read{288,288} %write{2147483647,-1}
temp	color	$tmp158	%read{290,290} %write{288,288}
temp	color	$tmp159	%read{291,291} %write{290,290}
temp	color	$tmp160	%read{295,295} %write{293,293}
temp	color	$tmp161	%read{295,295} %write{294,294}
temp	color	$tmp162	%read{298,298} %write{296,296}
temp	color	$tmp163	%read{298,298} %write{297,297}
temp	color	$tmp164	%read{303,303} %write{302,302}
temp	color	$tmp165	%read{305,305} %write{303,303}
temp	color	$tmp166	%read{305,305} %write{304,304}
temp	color	$tmp167	%read{307,307} %write{305,305}
temp	color	$tmp168	%read{307,307} %write{306,306}
temp	color	$tmp169	%read{309,309} %write{308,308}
temp	float	$tmp170	%read{316,316} %write{315,315}
temp	float	$tmp171	%read{323,323} %write{322,322}
temp	float	$tmp172	%read{325,325} %write{323,323}
temp	float	$tmp173	%read{325,325} %write{324,324}
temp	float	$tmp174	%read{326,326} %write{325,325}
temp	float	$tmp175	%read{379,379} %write{326,326}
temp	float	$tmp176	%read{328,328} %write{327,327}
temp	float	$tmp177	%read{330,330} %write{328,328}
temp	float	$tmp178	%read{330,330} %write{329,329}
temp	float	$tmp179	%read{333,333} %write{330,330}
temp	float	$tmp180	%read{332,332} %write{331,331}
temp	float	$tmp181	%read{333,333} %write{332,332}
temp	float	$tmp182	%read{379,379} %write{333,333}
temp	float	$tmp183	%read{335,335} %write{334,334}
temp	float	$tmp184	%read{337,337} %write{335,335}
temp	float	$tmp185	%read{337,337} %write{336,336}
temp	float	$tmp186	%read{340,340} %write{337,337}
temp	float	$tmp187	%read{339,339} %write{338,338}
temp	float	$tmp188	%read{340,340} %write{339,339}
temp	float	$tmp189	%read{379,379} %write{340,340}
temp	float	$tmp190	%read{342,342} %write{341,341}
temp	float	$tmp191	%read{344,344} %write{342,342}
temp	float	$tmp192	%read{344,344} %write{343,343}
temp	float	$tmp193	%read{347,347} %write{344,344}
temp	float	$tmp194	%read{346,346} %write{345,345}
temp	float	$tmp195	%read{347,347} %write{346,346}
temp	float	$tmp196	%read{379,379} %write{347,347}
temp	float	$tmp197	%read{349,349} %write{348,348}
temp	float	$tmp198	%read{351,351} %write{349,349}
temp	float	$tmp199	%read{351,351} %write{350,350}
temp	float	$tmp200	%read{352,352} %write{351,351}
temp	float	$tmp201	%read{379,379} %write{352,352}
temp	float	$tmp202	%read{354,354} %write{353,353}
temp	float	$tmp203	%read{356,356} %write{354,354}
temp	float	$tmp204	%read{356,356} %write{355,355}
temp	float	$tmp205	%read{359,359} %write{356,356}
temp	float	$tmp206	%read{358,358} %write{357,357}
temp	float	$tmp207	%read{359,359} %write{358,358}
temp	float	$tmp208	%read{379,379} %write{359,359}
temp	float	$tmp209	%read{361,361} %write{360,360}
temp	float	$tmp210	%read{363,363} %write{361,361}
temp	float	$tmp211	%read{363,363} %write{362,362}
temp	float	$tmp212	%read{366,366} %write{363,363}
temp	float	$tmp213	%read{365,365} %write{364,364}
temp	float	$tmp214	%read{366,366} %write{365,365}
temp	float	$tmp215	%read{379,379} %write{366,366}
temp	float	$tmp216	%read{368,368} %write{367,367}
temp	float	$tmp217	%read{370,370} %write{368,368}
temp	float	$tmp218	%read{370,370} %write{369,369}
temp	float	$tmp219	%read{373,373} %write{370,370}
temp	float	$tmp220	%read{372,372} %write{371,371}
temp	float	$tmp221	%read{373,373} %write{372,372}
temp	float	$tmp222	%read{379,379} %write{373,373}
temp	float	$tmp223	%read{375,375} %write{374,374}
temp	float	$tmp224	%read{377,377} %write{375,375}
temp	float	$tmp225	%read{377,377} %write{376,376}
temp	float	$tmp226	%read{378,378} %write{377,377}
temp	float	$tmp227	%read{379,379} %write{378,378}
temp	float	$tmp228.x	%read{386,419} %write{380,380}
temp	float	$tmp228.y	%read{388,421} %write{381,381}
temp	float	$tmp228.z	%read{391,424} %write{382,382}
temp	float	$tmp228.w	%read{394,427} %write{383,383}
temp	float	$tmp229	%read{386,386} %write{385,385}
temp	float	$tmp230	%read{389,389} %write{386,386}
temp	float	$tmp231	%read{388,388} %write{387,387}
temp	float	$tmp232	%read{389,389} %write{388,388}
temp	float	$tmp233	%read{392,392} %write{389,389}
temp	float	$tmp234	%read{391,391} %write{390,390}
temp	float	$tmp235	%read{392,392} %write{391,391}
temp	float	$tmp236	%read{395,395} %write{392,392}
temp	float	$tmp237	%read{394,394} %write{393,393}
temp	float	$tmp238	%read{395,395} %write{394,394}
temp	float	$tmp239	%read{397,397} %write{396,396}
temp	float	$tmp240	%read{400,400} %write{397,397}
temp	float	$tmp241	%read{399,399} %write{398,398}
temp	float	$tmp242	%read{400,400} %write{399,399}
temp	float	$tmp243	%read{403,403} %write{400,400}
temp	float	$tmp244	%read{402,402} %write{401,401}
temp	float	$tmp245	%read{403,403} %write{402,402}
temp	float	$tmp246	%read{406,406} %write{403,403}
temp	float	$tmp247	%read{405,405} %write{404,404}
temp	float	$tmp248	%read{406,406} %write{405,405}
temp	float	$tmp249	%read{408,408} %write{407,407}
temp	float	$tmp250	%read{411,411} %write{408,408}
temp	float	$tmp251	%read{410,410} %write{409,409}
temp	float	$tmp252	%read{411,411} %write{410,410}
temp	float	$tmp253	%read{414,414} %write{411,411}
temp	float	$tmp254	%read{413,413} %write{412,412}
temp	float	$tmp255	%read{414,414} %write{413,413}
temp	float	$tmp256	%read{417,417} %write{414,414}
temp	float	$tmp257	%read{416,416} %write{415,415}
temp	float	$tmp258	%read{417,417} %write{416,416}
temp	float	$tmp259	%read{419,419} %write{418,418}
temp	float	$tmp260	%read{422,422} %write{419,419}
temp	float	$tmp261	%read{421,421} %write{420,420}
temp	float	$tmp262	%read{422,422} %write{421,421}
temp	float	$tmp263	%read{425,425} %write{422,422}
temp	float	$tmp264	%read{424,424} %write{423,423}
temp	float	$tmp265	%read{425,425} %write{424,424}
temp	float	$tmp266	%read{428,428} %write{425,425}
temp	float	$tmp267	%read{427,427} %write{426,426}
temp	float	$tmp268	%read{428,428} %write{427,427}
temp	float	$tmp269	%read{434,434} %write{433,433}
const	string	$const45	"mx_extract"		%read{438,438} %write{2147483647,-1}
temp	int	$tmp270	%read{452,452} %write{450,450}
const	string	$const46	"mx_ternary"		%read{451,480} %write{2147483647,-1}
temp	float	$tmp271	%read{462,462} %write{460,460}
temp	float	$tmp272	%read{463,463} %write{462,462}
temp	int	$tmp273	%read{465,465} %write{464,464}
temp	float	$tmp274	%read{469,469} %write{468,468}
temp	float	$tmp275	%read{468,468} %write{467,467}
temp	float	$tmp276	%read{470,470} %write{469,469}
temp	float	$tmp277	%read{472,472} %write{471,471}
temp	int	$tmp278	%read{481,481} %write{479,479}
temp	float	$tmp279	%read{491,491} %write{489,489}
temp	float	$tmp280	%read{492,492} %write{491,491}
temp	int	$tmp281	%read{494,494} %write{493,493}
temp	float	$tmp282	%read{498,498} %write{497,497}
temp	float	$tmp283	%read{497,497} %write{496,496}
temp	float	$tmp284	%read{499,499} %write{498,498}
temp	float	$tmp285	%read{501,501} %write{500,500}
const	string	$const47	"NG_convert_float_color3"		%read{512,512} %write{2147483647,-1}
const	float	$const48	1.5		%read{525,553} %write{2147483647,-1}
const	string	$const49	"ggx"		%read{525,553} %write{2147483647,-1}
const	string	$const50	"R"		%read{517,549} %write{2147483647,-1}
const	string	$const51	"mx_dielectric_bsdf"		%read{516,544} %write{2147483647,-1}
const	string	$const52	"T"		%read{517,549} %write{2147483647,-1}
temp	int	$tmp287	%read{518,518} %write{517,517}
temp	int	$tmp288	%read{522,522} %write{521,521}
temp	closure color	$tmp289	%read{526,526} %write{525,525}
const	string	$const53	"thinfilm_thickness"		%read{525,553} %write{2147483647,-1}
const	string	$const54	"thinfilm_ior"		%read{525,553} %write{2147483647,-1}
const	string	$const55	"dielectric_bsdf"		%read{525,553} %write{2147483647,-1}
temp	closure color	$tmp290	%read{530,530} %write{529,529}
const	string	$const56	"conductor_bsdf"		%read{529,529} %write{2147483647,-1}
temp	int	$tmp291	%read{534,534} %write{533,533}
temp	int	$tmp292	%read{538,538} %write{537,537}
temp	closure color	$tmp293	%read{542,542} %write{541,541}
temp	int	$tmp294	%read{546,546} %write{545,545}
temp	int	$tmp295	%read{550,550} %write{549,549}
temp	closure color	$tmp296	%read{554,554} %write{553,553}
temp	closure color	$tmp297	%read{556,556} %write{555,555}
const	string	$const57	"sheen_bsdf"		%read{555,555} %write{2147483647,-1}
temp	closure color	$tmp298	%read{559,559} %write{558,558}
const	string	$const58	"translucent_bsdf"		%read{558,558} %write{2147483647,-1}
const	string	$const59	"mx_subsurface_bsdf"		%read{561,561} %write{2147483647,-1}
temp	color	$tmp299	%read{563,563} %write{562,562}
const	string	$const60	"subsurface_bssrdf"		%read{563,563} %write{2147483647,-1}
const	string	$const61	"mix"		%read{564,605} %write{2147483647,-1}
temp	float	$tmp300	%read{566,566} %write{565,565}
temp	closure color	$tmp301	%read{568,568} %write{566,566}
temp	closure color	$tmp302	%read{568,568} %write{567,567}
temp	closure color	$tmp303	%read{570,570} %write{569,569}
const	string	$const62	"oren_nayar_diffuse_bsdf"		%read{569,569} %write{2147483647,-1}
temp	float	$tmp304	%read{573,573} %write{572,572}
temp	closure color	$tmp305	%read{575,575} %write{573,573}
temp	closure color	$tmp306	%read{575,575} %write{574,574}
const	string	$const63	"layer"		%read{576,589} %write{2147483647,-1}
temp	float	$tmp307	%read{579,579} %write{578,578}
temp	closure color	$tmp308	%read{581,581} %write{579,579}
temp	closure color	$tmp309	%read{581,581} %write{580,580}
temp	float	$tmp310	%read{585,585} %write{584,584}
temp	closure color	$tmp311	%read{587,587} %write{585,585}
temp	closure color	$tmp312	%read{587,587} %write{586,586}
const	string	$const64	"uniform_edf"		%read{590,590} %write{2147483647,-1}
const	float	$const65	5		%read{602,602} %write{2147483647,-1}
const	string	$const66	"mx_generalized_schlick_edf"		%read{593,593} %write{2147483647,-1}
temp	float	$tmp314	%read{596,596} %write{595,595}
temp	vector	$tmp315	%read{595,595} %write{594,594}
const	string	$const67	"mx_fresnel_schlick"		%read{597,597} %write{2147483647,-1}
temp	float	$tmp316	%read{600,600} %write{598,598}
temp	float	$tmp317	%read{601,601} %write{600,600}
temp	float	$tmp318	%read{603,603} %write{602,602}
temp	float	$tmp319	%read{607,607} %write{606,606}
temp	closure color	$tmp320	%read{609,609} %write{607,607}
temp	closure color	$tmp321	%read{609,609} %write{608,608}
const	string	$const68	"mx_surface"		%read{613,613} %write{2147483647,-1}
temp	float	$tmp322	%read{618,618} %write{617,617}
const	string	$const69	"mx_surfacematerial"		%read{623,623} %write{2147483647,-1}
temp	float	$tmp323	%read{626,626} %write{625,625}
temp	closure color	$tmp324	%read{628,628} %write{627,627}
temp	closure color	$tmp325	%read{632,632} %write{628,628}
temp	closure color	$tmp326	%read{631,631} %write{629,629}
const	string	$const70	"transparent"		%read{629,629} %write{2147483647,-1}
temp	float	$tmp327	%read{631,631} %write{630,630}
temp	closure color	$tmp328	%read{632,632} %write{631,631}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:781
#     textureresource tiledimage_file_ = {tiledimage_file, tiledimage_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{781} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:782
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		tiledimage_file_.filename tiledimage_file 	%line{782} %argrw{"wr"}
	assign		tiledimage_file_.colorspace tiledimage_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:783
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{783} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:784
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{784} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:785
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp7 N $const4 	%line{785} %argrw{"wrr"}
	compref		$tmp8 N $const1 	%argrw{"wrr"}
	neg		$tmp9 $tmp8 	%argrw{"wr"}
	vector		$tmp6 $tmp7 $const5 $tmp9 	%argrw{"wrrr"}
	cross		$tmp5 N $tmp6 	%argrw{"wrr"}
	normalize	geomprop_Bworld_out1 $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:786
#     vector2 tiledimage_realworldimagesize_unit_out = tiledimage_realworldimagesize_unit_in1 * tiledimage_realworldimagesize_unit_in2;
	assign		geomprop_UV0_out1.x u 	%line{786} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 24 	%line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp10.x tiledimage_realworldimagesize_unit_in2 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp10.y tiledimage_realworldimagesize_unit_in2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		tiledimage_realworldimagesize_unit_out.x tiledimage_realworldimagesize_unit_in1.x $tmp10.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		tiledimage_realworldimagesize_unit_out.y tiledimage_realworldimagesize_unit_in1.y $tmp10.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp11.x tiledimage_realworldtilesize_unit_in2 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp11.y tiledimage_realworldtilesize_unit_in2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		tiledimage_realworldtilesize_unit_out.x tiledimage_realworldtilesize_unit_in1.x $tmp11.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		tiledimage_realworldtilesize_unit_out.y tiledimage_realworldtilesize_unit_in1.y $tmp11.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:789
#     NG_tiledimage_vector3(tiledimage_file_, tiledimage_default, geomprop_UV0_out1, tiledimage_uvtiling, tiledimage_uvoffset, tiledimage_realworldimagesize_unit_out, tiledimage_realworldtilesize_unit_out, tiledimage_filtertype, tiledimage_framerange, tiledimage_frameoffset, tiledimage_frameendaction, tiledimage_out);
	assign		tiledimage_out $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{789} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:790
#     vector normalmap_out = vector(0.0);
	functioncall	$const8 86 	%line{790} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 35 	%line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector3_out.x geomprop_UV0_out1.x tiledimage_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector3_out.y geomprop_UV0_out1.y tiledimage_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const9 38 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector3_out.x ___672_N_mult_vector3_out.x tiledimage_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector3_out.y ___672_N_mult_vector3_out.y tiledimage_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const10 41 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector3_out.x ___672_N_sub_vector3_out.x tiledimage_realworldimagesize_unit_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector3_out.y ___672_N_sub_vector3_out.y tiledimage_realworldimagesize_unit_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:798
# 
	functioncall	$const6 44 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{798} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector3_out.x ___672_N_divtilesize_vector3_out.x tiledimage_realworldtilesize_unit_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector3_out.y ___672_N_divtilesize_vector3_out.y tiledimage_realworldtilesize_unit_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:47
#     mx_image_vector3(file, "", default1, N_multtilesize_vector3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector3_out);
	assign		___672_N_img_vector3_out $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:48
#     out = N_img_vector3_out;
	functioncall	$const13 85 	%line{48} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp12 tiledimage_file_.filename $const11 	%line{25} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 49 62 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp14 $const12 $const14 	%line{26} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 60 60 	%argrw{"r"}
	lt		$tmp16 ___672_N_multtilesize_vector3_out.x $const5 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 55 58 	%argrw{"r"}
	gt		$tmp18 ___672_N_multtilesize_vector3_out.x $const15 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp19 	%argrw{"wr"}
	neq		$tmp20 $tmp17 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp20 	%argrw{"wr"}
	neq		$tmp21 $tmp15 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp13 $tmp21 	%line{25} %argrw{"wr"}
	neq		$tmp22 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp22 64 77 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:27
#     {
	eq		$tmp23 $const12 $const14 	%line{27} %argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 75 75 	%argrw{"r"}
	lt		$tmp25 ___672_N_multtilesize_vector3_out.y $const5 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	if		$tmp26 70 73 	%argrw{"r"}
	gt		$tmp27 ___672_N_multtilesize_vector3_out.y $const15 	%argrw{"wrr"}
	neq		$tmp28 $tmp27 $const1 	%argrw{"wrr"}
	assign		$tmp26 $tmp28 	%argrw{"wr"}
	neq		$tmp29 $tmp26 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp29 	%argrw{"wr"}
	neq		$tmp30 $tmp24 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp22 $tmp30 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp22 80 80 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:29
#         return;
	assign		___672_N_img_vector3_out tiledimage_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tiledimage_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const16 84 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector3_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_N_img_vector3_out tiledimage_file_.filename ___670_st.x ___670_st.y $const17 $const11 $const18 tiledimage_filtertype $const19 ___670_missingColor $const20 $const12 $const21 $const12 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:49
# }
	assign		tiledimage_out ___672_N_img_vector3_out 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:791
#     mx_normalmap_float(tiledimage_out, normalmap_scale, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, normalmap_out);
	assign		normalmap_out $const7 	%line{791} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:792
#     surfaceshader NormalMappedShader_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const22 107 	%line{792} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:69
# }
	assign		$tmp31.x normalmap_scale 	%line{69} %argrw{"wr"}
	assign		$tmp31.y normalmap_scale 	%argrw{"wr"}
	functioncall	$const23 107 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:55
#     {
	eq		$tmp33 tiledimage_out $const7 	%line{55} %argrw{"wrr"}
	if		$tmp33 94 96 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:57
#     }
	assign		___673_decodedValue $const24 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:61
#     }
	mul		$tmp34 tiledimage_out $const25 	%line{61} %argrw{"wrr"}
	sub		___673_decodedValue $tmp34 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:64
# }
	compref		$tmp35 ___673_decodedValue $const1 	%line{64} %argrw{"wrr"}
	mul		$tmp36 geomprop_Tworld_out1 $tmp35 	%argrw{"wrr"}
	mul		$tmp37 $tmp36 $tmp31.x 	%argrw{"wrr"}
	compref		$tmp38 ___673_decodedValue $const26 	%argrw{"wrr"}
	mul		$tmp39 geomprop_Bworld_out1 $tmp38 	%argrw{"wrr"}
	mul		$tmp40 $tmp39 $tmp31.y 	%argrw{"wrr"}
	add		$tmp41 $tmp37 $tmp40 	%argrw{"wrr"}
	compref		$tmp42 ___673_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp43 geomprop_Nworld_out1 $tmp42 	%argrw{"wrr"}
	add		$tmp44 $tmp41 $tmp43 	%argrw{"wrr"}
	normalize	normalmap_out $tmp44 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:793
#     NG_standard_surface_surfaceshader_100(NormalMappedShader_base, NormalMappedShader_base_color, NormalMappedShader_diffuse_roughness, NormalMappedShader_metalness, NormalMappedShader_specular, NormalMappedShader_specular_color, NormalMappedShader_specular_roughness, NormalMappedShader_specular_IOR, NormalMappedShader_specular_anisotropy, NormalMappedShader_specular_rotation, NormalMappedShader_transmission, NormalMappedShader_transmission_color, NormalMappedShader_transmission_depth, NormalMappedShader_transmission_scatter, NormalMappedShader_transmission_scatter_anisotropy, NormalMappedShader_transmission_dispersion, NormalMappedShader_transmission_extra_roughness, NormalMappedShader_subsurface, NormalMappedShader_subsurface_color, NormalMappedShader_subsurface_radius, NormalMappedShader_subsurface_scale, NormalMappedShader_subsurface_anisotropy, NormalMappedShader_sheen, NormalMappedShader_sheen_color, NormalMappedShader_sheen_roughness, NormalMappedShader_coat, NormalMappedShader_coat_color, NormalMappedShader_coat_roughness, NormalMappedShader_coat_anisotropy, NormalMappedShader_coat_rotation, NormalMappedShader_coat_IOR, geomprop_Nworld_out1, NormalMappedShader_coat_affect_color, NormalMappedShader_coat_affect_roughness, NormalMappedShader_thin_film_thickness, NormalMappedShader_thin_film_IOR, NormalMappedShader_emission, NormalMappedShader_emission_color, NormalMappedShader_opacity, NormalMappedShader_thin_walled, normalmap_out, geomprop_Tworld_out1, NormalMappedShader_out);
	assign		NormalMappedShader_out.bsdf null_closure 	%line{793} %argrw{"wr"}
	assign		NormalMappedShader_out.edf null_closure 	%argrw{"wr"}
	assign		NormalMappedShader_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:794
#     MATERIAL NormalMappedMaterial_out = mx_surfacematerial(NormalMappedShader_out, backsurfaceshader, displacementshader1);
	functioncall	$const27 623 	%line{794} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:249
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:250
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const5 	%line{250} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:251
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const28 133 	%line{251} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp45 NormalMappedShader_coat_roughness NormalMappedShader_coat_roughness 	%line{74} %argrw{"wrr"}
	functioncall	$const30 119 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp46 $tmp45 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp46 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:75
#     {
	gt		$tmp47 NormalMappedShader_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp47 131 133 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 124 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp49 NormalMappedShader_coat_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp48 $tmp49 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp50 $const15 $tmp48 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp50 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp51 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp51 $const15 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:79
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:84
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:252
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const32 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:253
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out NormalMappedShader_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:254
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out NormalMappedShader_base_color NormalMappedShader_base 	%line{254} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:255
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out NormalMappedShader_specular_color NormalMappedShader_specular 	%line{255} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:256
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out NormalMappedShader_coat_affect_roughness NormalMappedShader_coat 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:257
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const32 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:258
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out NormalMappedShader_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{258} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:259
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out NormalMappedShader_specular_roughness NormalMappedShader_transmission_extra_roughness 	%line{259} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:260
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const5 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:261
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp52 ___701_subsurface_color_nonnegative_in2_tmp 	%line{261} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out NormalMappedShader_subsurface_color $tmp52 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:262
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const5 	%line{262} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:263
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const15 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:264
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const30 149 	%line{264} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp53 NormalMappedShader_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp53 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:265
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out NormalMappedShader_subsurface_radius NormalMappedShader_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{265} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:266
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp54 NormalMappedShader_thin_walled 	%line{266} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp54 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:267
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const5 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:268
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp55 ___701_base_color_nonnegative_in2_tmp 	%line{268} %argrw{"wr"}
	max		___701_base_color_nonnegative_out NormalMappedShader_base_color $tmp55 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:269
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const33 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:270
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp NormalMappedShader_coat_color NormalMappedShader_coat 	%line{270} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:271
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const15 	%line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:272
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp NormalMappedShader_coat_IOR 	%line{272} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:273
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const15 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:274
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp NormalMappedShader_coat_IOR 	%line{274} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:275
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out NormalMappedShader_emission_color NormalMappedShader_emission 	%line{275} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:276
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const34 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:277
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const36 166 	%line{277} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:90
# }
	dot		$tmp57 NormalMappedShader_opacity $const35 	%line{90} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp57 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:278
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const7 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:279
#     color artistic_ior_ior = color(0.0);
	functioncall	$const37 284 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 171 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp58 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp58 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 234 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp59 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp60 ___681_oc $tmp59 	%argrw{"wrr"}
	compref		$tmp61 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp62 $tmp60 $tmp61 	%argrw{"wrr"}
	add		$tmp63 $tmp62 ___681_c 	%argrw{"wrr"}
	compref		$tmp64 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp65 ___681_oc $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp67 $tmp65 $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp69 $tmp68 ___681_s 	%argrw{"wrr"}
	sub		$tmp70 $tmp67 $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp72 ___681_oc $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp74 $tmp72 $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp76 $tmp75 ___681_s 	%argrw{"wrr"}
	add		$tmp77 $tmp74 $tmp76 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp78 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp79 ___681_oc $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp81 $tmp79 $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp83 $tmp82 ___681_s 	%argrw{"wrr"}
	add		$tmp84 $tmp81 $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp86 ___681_oc $tmp85 	%argrw{"wrr"}
	compref		$tmp87 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	add		$tmp89 $tmp88 ___681_c 	%argrw{"wrr"}
	compref		$tmp90 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp91 ___681_oc $tmp90 	%argrw{"wrr"}
	compref		$tmp92 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp93 $tmp91 $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp95 $tmp94 ___681_s 	%argrw{"wrr"}
	sub		$tmp96 $tmp93 $tmp95 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp97 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp98 ___681_oc $tmp97 	%argrw{"wrr"}
	compref		$tmp99 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp100 $tmp98 $tmp99 	%argrw{"wrr"}
	compref		$tmp101 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp102 $tmp101 ___681_s 	%argrw{"wrr"}
	sub		$tmp103 $tmp100 $tmp102 	%argrw{"wrr"}
	compref		$tmp104 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp105 ___681_oc $tmp104 	%argrw{"wrr"}
	compref		$tmp106 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp107 $tmp105 $tmp106 	%argrw{"wrr"}
	compref		$tmp108 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp109 $tmp108 ___681_s 	%argrw{"wrr"}
	add		$tmp110 $tmp107 $tmp109 	%argrw{"wrr"}
	compref		$tmp111 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp112 ___681_oc $tmp111 	%argrw{"wrr"}
	compref		$tmp113 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp114 $tmp112 $tmp113 	%argrw{"wrr"}
	add		$tmp115 $tmp114 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp63 $tmp70 $tmp77 $const5 $tmp84 $tmp89 $tmp96 $const5 $tmp103 $tmp110 $tmp115 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp116.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp116.y geomprop_Tworld_out1 $const26 	%argrw{"wrr"}
	compref		$tmp116.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp116.w $const15 	%argrw{"wr"}
	functioncall	$const2 283 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp117 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp116.x 	%argrw{"wrr"}
	mxcompref	$tmp119 ___682_m $const26 $const1 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp116.y 	%argrw{"wrr"}
	add		$tmp121 $tmp118 $tmp120 	%argrw{"wrr"}
	mxcompref	$tmp122 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp123 $tmp122 $tmp116.z 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	mxcompref	$tmp125 ___682_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp126 $tmp125 $tmp116.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp124 $tmp126 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp127 ___682_m $const1 $const26 	%line{416} %argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp116.x 	%argrw{"wrr"}
	mxcompref	$tmp129 ___682_m $const26 $const26 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp116.y 	%argrw{"wrr"}
	add		$tmp131 $tmp128 $tmp130 	%argrw{"wrr"}
	mxcompref	$tmp132 ___682_m $const4 $const26 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp116.z 	%argrw{"wrr"}
	add		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	mxcompref	$tmp135 ___682_m $const42 $const26 	%argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp116.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp134 $tmp136 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp137 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp138 $tmp137 $tmp116.x 	%argrw{"wrr"}
	mxcompref	$tmp139 ___682_m $const26 $const4 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp116.y 	%argrw{"wrr"}
	add		$tmp141 $tmp138 $tmp140 	%argrw{"wrr"}
	mxcompref	$tmp142 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp143 $tmp142 $tmp116.z 	%argrw{"wrr"}
	add		$tmp144 $tmp141 $tmp143 	%argrw{"wrr"}
	mxcompref	$tmp145 ___682_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp146 $tmp145 $tmp116.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp144 $tmp146 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp147 ___682_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp148 $tmp147 $tmp116.x 	%argrw{"wrr"}
	mxcompref	$tmp149 ___682_m $const26 $const42 	%argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp116.y 	%argrw{"wrr"}
	add		$tmp151 $tmp148 $tmp150 	%argrw{"wrr"}
	mxcompref	$tmp152 ___682_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp153 $tmp152 $tmp116.z 	%argrw{"wrr"}
	add		$tmp154 $tmp151 $tmp153 	%argrw{"wrr"}
	mxcompref	$tmp155 ___682_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp156 $tmp155 $tmp116.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp154 $tmp156 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:111
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:280
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const34 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:281
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const34 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:282
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const43 311 	%line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:119
#     color r_sqrt = sqrt(r);
	assign		$tmp157 $const5 	%line{119} %argrw{"wr"}
	assign		$tmp158 $const44 	%argrw{"wr"}
	functioncall	$const30 292 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp159 ___701_metal_reflectivity_out $tmp158 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp159 $tmp157 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:120
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:121
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp160 $const15 ___683_r 	%line{121} %argrw{"wrr"}
	add		$tmp161 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp160 $tmp161 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:122
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp162 $const15 ___683_r_sqrt 	%line{122} %argrw{"wrr"}
	sub		$tmp163 $const15 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp162 $tmp163 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:123
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{123} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:125
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const15 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:126
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const15 	%line{126} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:127
#     k2 = max(k2, 0.0);
	mul		$tmp164 ___683_np1 ___683_np1 	%line{127} %argrw{"wrr"}
	mul		$tmp165 $tmp164 ___683_r 	%argrw{"wrr"}
	mul		$tmp166 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp167 $tmp165 $tmp166 	%argrw{"wrr"}
	sub		$tmp168 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp167 $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:128
#     extinction = sqrt(k2);
	assign		$tmp169 $const5 	%line{128} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp169 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:129
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:283
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out NormalMappedShader_coat_roughness 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:284
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const7 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:285
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const37 430 	%line{285} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 317 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp170 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp170 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 380 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis normalmap_out 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp171 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp172 ___681_oc $tmp171 	%argrw{"wrr"}
	compref		$tmp173 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp174 $tmp172 $tmp173 	%argrw{"wrr"}
	add		$tmp175 $tmp174 ___681_c 	%argrw{"wrr"}
	compref		$tmp176 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp177 ___681_oc $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp179 $tmp177 $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp181 $tmp180 ___681_s 	%argrw{"wrr"}
	sub		$tmp182 $tmp179 $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp184 ___681_oc $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp186 $tmp184 $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp188 $tmp187 ___681_s 	%argrw{"wrr"}
	add		$tmp189 $tmp186 $tmp188 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp190 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp191 ___681_oc $tmp190 	%argrw{"wrr"}
	compref		$tmp192 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp193 $tmp191 $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp195 $tmp194 ___681_s 	%argrw{"wrr"}
	add		$tmp196 $tmp193 $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp198 ___681_oc $tmp197 	%argrw{"wrr"}
	compref		$tmp199 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp200 $tmp198 $tmp199 	%argrw{"wrr"}
	add		$tmp201 $tmp200 ___681_c 	%argrw{"wrr"}
	compref		$tmp202 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp203 ___681_oc $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp205 $tmp203 $tmp204 	%argrw{"wrr"}
	compref		$tmp206 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp207 $tmp206 ___681_s 	%argrw{"wrr"}
	sub		$tmp208 $tmp205 $tmp207 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp209 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp210 ___681_oc $tmp209 	%argrw{"wrr"}
	compref		$tmp211 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp212 $tmp210 $tmp211 	%argrw{"wrr"}
	compref		$tmp213 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp214 $tmp213 ___681_s 	%argrw{"wrr"}
	sub		$tmp215 $tmp212 $tmp214 	%argrw{"wrr"}
	compref		$tmp216 ___681_nAxis $const26 	%argrw{"wrr"}
	mul		$tmp217 ___681_oc $tmp216 	%argrw{"wrr"}
	compref		$tmp218 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp219 $tmp217 $tmp218 	%argrw{"wrr"}
	compref		$tmp220 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp221 $tmp220 ___681_s 	%argrw{"wrr"}
	add		$tmp222 $tmp219 $tmp221 	%argrw{"wrr"}
	compref		$tmp223 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp224 ___681_oc $tmp223 	%argrw{"wrr"}
	compref		$tmp225 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp226 $tmp224 $tmp225 	%argrw{"wrr"}
	add		$tmp227 $tmp226 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp175 $tmp182 $tmp189 $const5 $tmp196 $tmp201 $tmp208 $const5 $tmp215 $tmp222 $tmp227 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp228.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp228.y geomprop_Tworld_out1 $const26 	%argrw{"wrr"}
	compref		$tmp228.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp228.w $const15 	%argrw{"wr"}
	functioncall	$const2 429 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp229 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp228.x 	%argrw{"wrr"}
	mxcompref	$tmp231 ___682_m $const26 $const1 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp228.y 	%argrw{"wrr"}
	add		$tmp233 $tmp230 $tmp232 	%argrw{"wrr"}
	mxcompref	$tmp234 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp235 $tmp234 $tmp228.z 	%argrw{"wrr"}
	add		$tmp236 $tmp233 $tmp235 	%argrw{"wrr"}
	mxcompref	$tmp237 ___682_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp238 $tmp237 $tmp228.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp236 $tmp238 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp239 ___682_m $const1 $const26 	%line{416} %argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp228.x 	%argrw{"wrr"}
	mxcompref	$tmp241 ___682_m $const26 $const26 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp228.y 	%argrw{"wrr"}
	add		$tmp243 $tmp240 $tmp242 	%argrw{"wrr"}
	mxcompref	$tmp244 ___682_m $const4 $const26 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp228.z 	%argrw{"wrr"}
	add		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	mxcompref	$tmp247 ___682_m $const42 $const26 	%argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp228.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp246 $tmp248 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp249 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp250 $tmp249 $tmp228.x 	%argrw{"wrr"}
	mxcompref	$tmp251 ___682_m $const26 $const4 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp228.y 	%argrw{"wrr"}
	add		$tmp253 $tmp250 $tmp252 	%argrw{"wrr"}
	mxcompref	$tmp254 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp255 $tmp254 $tmp228.z 	%argrw{"wrr"}
	add		$tmp256 $tmp253 $tmp255 	%argrw{"wrr"}
	mxcompref	$tmp257 ___682_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp258 $tmp257 $tmp228.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp256 $tmp258 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp259 ___682_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp260 $tmp259 $tmp228.x 	%argrw{"wrr"}
	mxcompref	$tmp261 ___682_m $const26 $const42 	%argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp228.y 	%argrw{"wrr"}
	add		$tmp263 $tmp260 $tmp262 	%argrw{"wrr"}
	mxcompref	$tmp264 ___682_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp265 $tmp264 $tmp228.z 	%argrw{"wrr"}
	add		$tmp266 $tmp263 $tmp265 	%argrw{"wrr"}
	mxcompref	$tmp267 ___682_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp268 $tmp267 $tmp228.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp266 $tmp268 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:111
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:286
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const5 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:287
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const15 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:288
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const30 435 	%line{288} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp269 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp269 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:289
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out NormalMappedShader_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:290
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:291
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:292
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const45 440 	%line{292} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:293
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:294
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const15 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:295
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out NormalMappedShader_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{295} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:296
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:297
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const15 	%line{297} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:298
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{298} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:299
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const15 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:300
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{300} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:301
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:302
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const5 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:303
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp270 NormalMappedShader_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{303} %argrw{"wrr"}
	functioncall	$const46 457 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp270 455 457 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:304
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{304} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:305
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const28 478 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp271 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const30 464 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp272 $tmp271 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp272 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:75
#     {
	gt		$tmp273 NormalMappedShader_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp273 476 478 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 469 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp275 NormalMappedShader_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp274 $tmp275 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp276 $const15 $tmp274 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp276 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp277 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp277 $const15 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:79
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:84
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:306
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const5 	%line{306} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:307
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp278 NormalMappedShader_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{307} %argrw{"wrr"}
	functioncall	$const46 486 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp278 484 486 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:308
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{308} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:309
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const28 507 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp279 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const30 493 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp280 $tmp279 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp280 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:75
#     {
	gt		$tmp281 NormalMappedShader_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{75} %argrw{"wrr"}
	if		$tmp281 505 507 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const30 498 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp283 NormalMappedShader_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp282 $tmp283 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp284 $const15 $tmp282 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp284 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp285 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp285 $const15 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:79
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:83
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:84
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:310
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:311
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{311} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:312
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:313
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:314
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const34 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:315
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const47 515 	%line{315} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:150
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{150} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:151
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:316
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:317
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const51 527 	%line{317} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp287 $const50 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp287 520 521 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp288 $const50 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp288 524 525 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:136
# }
	closure		$tmp289 $const55 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y NormalMappedShader_coat_IOR $const49 $const53 $const5 $const54 $const48 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp289 NormalMappedShader_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:318
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const15 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:319
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const49 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:320
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp290 $const56 normalmap_out ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const53 NormalMappedShader_thin_film_thickness $const54 NormalMappedShader_thin_film_IOR 	%line{320} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp290 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:321
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:322
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const51 543 	%line{322} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp291 $const50 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp291 536 537 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMappedShader_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp292 $const50 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp292 540 541 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMappedShader_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:136
# }
	closure		$tmp293 $const55 normalmap_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y NormalMappedShader_specular_IOR $const49 $const53 NormalMappedShader_thin_film_thickness $const54 NormalMappedShader_thin_film_IOR 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp293 NormalMappedShader_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:323
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:324
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const51 555 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp294 $const52 $const52 	%line{134} %argrw{"wrr"}
	if		$tmp294 548 549 	%argrw{"r"}
	assign		___684_reflection_tint $const34 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMappedShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp295 $const52 $const50 	%line{135} %argrw{"wrr"}
	if		$tmp295 552 553 	%argrw{"r"}
	assign		___684_transmission_tint $const34 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMappedShader_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:136
# }
	closure		$tmp296 $const55 normalmap_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y NormalMappedShader_specular_IOR $const49 $const53 $const5 $const54 $const48 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp296 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:325
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp297 $const57 normalmap_out NormalMappedShader_sheen_color NormalMappedShader_sheen_roughness 	%line{325} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp297 NormalMappedShader_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:326
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const15 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:327
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp298 $const58 normalmap_out ___701_coat_affected_subsurface_color_out 	%line{327} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp298 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:328
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:329
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const59 564 	%line{329} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:144
# #endif
	mul		$tmp299 $const15 ___701_coat_affected_subsurface_color_out 	%line{144} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const60 normalmap_out $tmp299 $const15 ___701_subsurface_radius_scaled_out NormalMappedShader_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:330
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const61 569 	%line{330} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp300 $const15 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp301 ___701_subsurface_bsdf_out $tmp300 	%argrw{"wrr"}
	mul		$tmp302 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp301 $tmp302 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:331
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp303 $const62 normalmap_out ___701_coat_affected_diffuse_color_out NormalMappedShader_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{331} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp303 NormalMappedShader_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:332
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const61 576 	%line{332} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp304 $const15 NormalMappedShader_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp305 ___701_diffuse_bsdf_out $tmp304 	%argrw{"wrr"}
	mul		$tmp306 ___701_selected_subsurface_bsdf_out NormalMappedShader_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp305 $tmp306 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:333
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const63 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{333} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:334
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const61 582 	%line{334} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp307 $const15 NormalMappedShader_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp308 ___701_sheen_layer_out $tmp307 	%argrw{"wrr"}
	mul		$tmp309 ___701_transmission_bsdf_out NormalMappedShader_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp308 $tmp309 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:335
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const63 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{335} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:336
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const61 588 	%line{336} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp310 $const15 NormalMappedShader_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp311 ___701_specular_layer_out $tmp310 	%argrw{"wrr"}
	mul		$tmp312 ___701_metal_bsdf_out NormalMappedShader_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp311 $tmp312 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:337
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:338
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const63 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{338} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:339
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const64 ___701_emission_weight_out 	%line{339} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:340
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out NormalMappedShader_coat_color 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:341
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:342
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const66 605 	%line{342} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:235
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp315 I 	%line{235} %argrw{"wr"}
	dot		$tmp314 N $tmp315 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp314 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:236
#     result = base * f;
	functioncall	$const67 604 	%line{236} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:229
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp316 $const15 ___699_NdotV 	%line{229} %argrw{"wrr"}
	functioncall	$const30 602 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp317 $tmp316 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp317 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:230
# }
	pow		$tmp318 ___698_x $const65 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{230} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const34 $tmp318 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:237
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:343
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const61 610 	%line{343} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp319 $const15 NormalMappedShader_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp320 ___701_emission_edf_out $tmp319 	%argrw{"wrr"}
	mul		$tmp321 ___701_coat_emission_edf_out NormalMappedShader_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp320 $tmp321 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:344
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{344} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:345
#     out = shader_constructor_out;
	functioncall	$const68 620 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:242
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:243
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:244
# }
	functioncall	$const30 619 	%line{244} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp322 ___701_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp322 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:244
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:346
# }
	assign		NormalMappedShader_out.bsdf ___701_shader_constructor_out.bsdf 	%line{346} %argrw{"wr"}
	assign		NormalMappedShader_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		NormalMappedShader_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:795
#     out = NormalMappedMaterial_out;
	functioncall	$const69 633 	%line{795} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:351
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const30 627 	%line{351} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp323 NormalMappedShader_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp323 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:352
# }
	add		$tmp324 NormalMappedShader_out.bsdf NormalMappedShader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl"} %line{352} %argrw{"wrr"}
	mul		$tmp325 $tmp324 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp326 $const70 	%argrw{"wr"}
	sub		$tmp327 $const15 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp328 $tmp326 $tmp327 	%argrw{"wrr"}
	add		NormalMappedMaterial_out $tmp325 $tmp328 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial.osl:796
# }
	assign		out NormalMappedMaterial_out 	%line{796} %argrw{"wr"}
	end
