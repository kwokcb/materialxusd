OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\normalmapped_surfaceshader\NormalMappedMaterial2.oso
shader NormalMappedMaterial2	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"NormalMappedMaterial2"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Bworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Bworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	tiledimage2_realworldimagesize_unit_in1			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage2_realworldimagesize_unit_in1.x	1		%read{22,22} %write{2147483647,-1} %mystruct{tiledimage2_realworldimagesize_unit_in1} %mystructfield{0} %derivs
param	float	tiledimage2_realworldimagesize_unit_in1.y	2		%read{23,23} %write{2147483647,-1} %mystruct{tiledimage2_realworldimagesize_unit_in1} %mystructfield{1} %derivs
param	float	tiledimage2_realworldimagesize_unit_in2	0.00999999978		%meta{string,widget,"number"}  %read{19,20} %write{2147483647,-1} %derivs
param	struct vector2	tiledimage2_realworldtilesize_unit_in1			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage2_realworldtilesize_unit_in1.x	3		%read{28,28} %write{2147483647,-1} %mystruct{tiledimage2_realworldtilesize_unit_in1} %mystructfield{0} %derivs
param	float	tiledimage2_realworldtilesize_unit_in1.y	2		%read{29,29} %write{2147483647,-1} %mystruct{tiledimage2_realworldtilesize_unit_in1} %mystructfield{1} %derivs
param	float	tiledimage2_realworldtilesize_unit_in2	0.00999999978		%meta{string,widget,"number"}  %read{25,26} %write{2147483647,-1} %derivs
param	string	tiledimage2_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/images/mesh_wire_norm.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	tiledimage2_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	vector	tiledimage2_default	0 0 0		%read{78,80} %write{2147483647,-1}
param	struct vector2	tiledimage2_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage2_uvtiling.x	12		%read{33,33} %write{2147483647,-1} %mystruct{tiledimage2_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage2_uvtiling.y	10		%read{34,34} %write{2147483647,-1} %mystruct{tiledimage2_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage2_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage2_uvoffset.x	0		%read{36,36} %write{2147483647,-1} %mystruct{tiledimage2_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage2_uvoffset.y	0		%read{37,37} %write{2147483647,-1} %mystruct{tiledimage2_uvoffset} %mystructfield{1} %derivs
param	string	tiledimage2_filtertype	"linear"		%read{84,84} %write{2147483647,-1}
param	string	tiledimage2_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage2_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage2_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	normalmap_vector2_scale			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	normalmap_vector2_scale.x	1.10000002		%read{95,95} %write{2147483647,-1} %mystruct{normalmap_vector2_scale} %mystructfield{0}
param	float	normalmap_vector2_scale.y	1.10000002		%read{98,98} %write{2147483647,-1} %mystruct{normalmap_vector2_scale} %mystructfield{1}
param	float	NormalMappedShader2_base	0.600000024		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{132,567} %write{2147483647,-1}
param	color	NormalMappedShader2_base_color	0.800000012 0.800000012 0.800000012		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{132,151} %write{2147483647,-1}
param	float	NormalMappedShader2_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{566,566} %write{2147483647,-1}
param	float	NormalMappedShader2_metalness	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{581,583} %write{2147483647,-1}
param	float	NormalMappedShader2_specular	0.699999988		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{133,539} %write{2147483647,-1}
param	color	NormalMappedShader2_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{133,537} %write{2147483647,-1}
param	float	NormalMappedShader2_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{137,439} %write{2147483647,-1}
param	float	NormalMappedShader2_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{538,550} %write{2147483647,-1}
param	float	NormalMappedShader2_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{461,493} %write{2147483647,-1}
param	float	NormalMappedShader2_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{136,136} %write{2147483647,-1}
param	float	NormalMappedShader2_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{575,577} %write{2147483647,-1}
param	color	NormalMappedShader2_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{545,549} %write{2147483647,-1}
param	float	NormalMappedShader2_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	NormalMappedShader2_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader2_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader2_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	NormalMappedShader2_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{137,137} %write{2147483647,-1}
param	float	NormalMappedShader2_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{569,571} %write{2147483647,-1}
param	color	NormalMappedShader2_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{140,140} %write{2147483647,-1}
param	color	NormalMappedShader2_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{146,146} %write{2147483647,-1}
param	float	NormalMappedShader2_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{146,146} %write{2147483647,-1}
param	float	NormalMappedShader2_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{560,560} %write{2147483647,-1}
param	float	NormalMappedShader2_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{553,553} %write{2147483647,-1}
param	color	NormalMappedShader2_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{552,552} %write{2147483647,-1}
param	float	NormalMappedShader2_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{552,552} %write{2147483647,-1}
param	float	NormalMappedShader2_coat	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{134,605} %write{2147483647,-1}
param	color	NormalMappedShader2_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{153,588} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{112,308} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{116,447} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{131,131} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{155,522} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{432,432} %write{2147483647,-1}
param	float	NormalMappedShader2_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{134,134} %write{2147483647,-1}
param	float	NormalMappedShader2_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{526,538} %write{2147483647,-1}
param	float	NormalMappedShader2_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{526,538} %write{2147483647,-1}
param	float	NormalMappedShader2_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{158,158} %write{2147483647,-1}
param	color	NormalMappedShader2_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{158,158} %write{2147483647,-1}
param	color	NormalMappedShader2_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{161,161} %write{2147483647,-1}
param	int	NormalMappedShader2_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{147,147} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{630,630}
global	vector	I	%read{591,591} %write{2147483647,-1}
global	normal	N	%read{4,592} %write{2147483647,-1}
global	float	u	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{17,17} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{84,84} %write{80,80}
local	float	___670_st.x	%read{84,84} %write{82,82} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{84,84} %write{83,83} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_N_mult_vector3_out.x	%read{36,36} %write{33,33} %mystruct{___672_N_mult_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_mult_vector3_out.y	%read{37,37} %write{34,34} %mystruct{___672_N_mult_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_sub_vector3_out.x	%read{39,39} %write{36,36} %mystruct{___672_N_sub_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_sub_vector3_out.y	%read{40,40} %write{37,37} %mystruct{___672_N_sub_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_vector3_out.x	%read{42,42} %write{39,39} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_vector3_out.y	%read{43,43} %write{40,40} %mystruct{___672_N_divtilesize_vector3_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_vector3_out.x	%read{52,82} %write{42,42} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_vector3_out.y	%read{67,83} %write{43,43} %mystruct{___672_N_multtilesize_vector3_out} %mystructfield{1} %derivs
local	vector	___672_N_img_vector3_out	%read{85,85} %write{44,84}
local	vector	___673_decodedValue	%read{93,100} %write{90,92}
local	float	___677_roughness_sqr	%read{123,503} %write{115,489}
local	float	___678_aspect	%read{123,500} %write{122,496}
local	vector	___681_nAxis	%read{173,373} %write{169,315}
local	float	___681_s	%read{183,369} %write{170,316}
local	float	___681_c	%read{172,375} %write{171,317}
local	float	___681_oc	%read{174,372} %write{172,318}
local	float	___682_rotationRadians	%read{170,317} %write{167,313}
local	matrix	___682_m	%read{236,423} %write{230,376}
local	float	___682_trans.x	%read{280,426} %write{246,392} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{280,426} %write{257,403} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{280,426} %write{268,414} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{279,425} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{289,303} %write{288,288}
local	color	___683_r_sqrt	%read{293,294} %write{289,289}
local	color	___683_n_min	%read{296,296} %write{292,292}
local	color	___683_n_max	%read{296,296} %write{295,295}
local	color	___683_np1	%read{299,299} %write{297,297}
local	color	___683_nm1	%read{301,301} %write{298,298}
local	color	___683_k2	%read{306,307} %write{304,306}
local	color	___684_reflection_tint	%read{522,550} %write{516,545}
local	color	___684_transmission_tint	%read{522,550} %write{520,549}
local	color	___686_combine_out	%read{511,511} %write{510,510}
local	float	___698_x	%read{599,599} %write{598,598}
local	float	___699_NdotV	%read{595,595} %write{593,593}
local	color	___699_f	%read{601,601} %write{600,600}
local	closure color	___701_null_closure	%read{512,608} %write{108,108}
local	float	___701_coat_roughness_vector_out.x	%read{125,522} %write{109,128} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{127,522} %write{110,129} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{131,131} %write{130,130}
local	float	___701_coat_tangent_rotate_degree_out	%read{167,167} %write{131,131}
local	color	___701_metal_reflectivity_out	%read{287,287} %write{132,132}
local	color	___701_metal_edgecolor_out	%read{296,296} %write{133,133}
local	float	___701_coat_affect_roughness_multiply1_out	%read{308,308} %write{134,134}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{136,136} %write{135,135}
local	float	___701_tangent_rotate_degree_out	%read{313,313} %write{136,136}
local	float	___701_transmission_roughness_add_out	%read{430,430} %write{137,137}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{139,139} %write{138,138}
local	color	___701_subsurface_color_nonnegative_out	%read{504,504} %write{140,140}
local	float	___701_coat_clamped_low_tmp	%read{145,145} %write{141,141}
local	float	___701_coat_clamped_high_tmp	%read{144,144} %write{142,142}
local	float	___701_coat_clamped_out	%read{432,432} %write{145,145}
local	color	___701_subsurface_radius_scaled_out	%read{560,560} %write{146,146}
local	float	___701_subsurface_selector_out	%read{562,564} %write{148,148}
local	float	___701_base_color_nonnegative_in2_tmp	%read{150,150} %write{149,149}
local	color	___701_base_color_nonnegative_out	%read{505,505} %write{151,151}
local	color	___701_coat_attenuation_bg_tmp	%read{153,153} %write{152,152}
local	color	___701_coat_attenuation_out	%read{585,585} %write{153,153}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{155,155} %write{154,154}
local	float	___701_one_minus_coat_ior_out	%read{433,433} %write{155,155}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{157,157} %write{156,156}
local	float	___701_one_plus_coat_ior_out	%read{433,433} %write{157,157}
local	color	___701_emission_weight_out	%read{587,587} %write{158,158}
local	color	___701_opacity_luminance_out	%read{436,436} %write{159,162}
local	vector	___701_coat_tangent_rotate_out	%read{437,437} %write{163,280}
local	color	___701_artistic_ior_ior	%read{297,526} %write{281,296}
local	color	___701_artistic_ior_extinction	%read{526,526} %write{282,307}
local	float	___701_coat_affect_roughness_multiply2_out	%read{439,442} %write{308,308}
local	vector	___701_tangent_rotate_out	%read{440,440} %write{309,426}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{431,431} %write{427,427}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{430,430} %write{428,428}
local	float	___701_transmission_roughness_clamped_out	%read{442,442} %write{431,431}
local	float	___701_coat_gamma_multiply_out	%read{444,444} %write{432,432}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{445,445} %write{433,433}
local	int	___701_opacity_luminance_float_index_tmp	%read{436,436} %write{434,434}
local	float	___701_opacity_luminance_float_out	%read{614,614} %write{436,436}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{450,450} %write{437,437}
local	float	___701_coat_affected_roughness_fg_tmp	%read{439,439} %write{438,438}
local	float	___701_coat_affected_roughness_out	%read{457,457} %write{439,439}
local	vector	___701_tangent_rotate_normalize_out	%read{479,479} %write{440,440}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{442,442} %write{441,441}
local	float	___701_coat_affected_transmission_roughness_out	%read{486,486} %write{442,442}
local	float	___701_coat_gamma_in2_tmp	%read{444,444} %write{443,443}
local	float	___701_coat_gamma_out	%read{504,505} %write{444,444}
local	float	___701_coat_ior_to_F0_out	%read{507,507} %write{445,445}
local	float	___701_coat_tangent_value2_tmp	%read{447,447} %write{446,446}
local	vector	___701_coat_tangent_out	%read{522,522} %write{450,452}
local	float	___701_main_roughness_out.x	%read{470,538} %write{454,473} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{472,538} %write{455,474} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{476,476} %write{475,475}
local	vector	___701_main_tangent_out	%read{526,550} %write{479,481}
local	float	___701_transmission_roughness_out.x	%read{499,550} %write{483,502} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{501,550} %write{484,503} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{555,559} %write{504,504}
local	color	___701_coat_affected_diffuse_color_out	%read{566,566} %write{505,505}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{507,507} %write{506,506}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{510,510} %write{507,507}
local	color	___701_emission_color0_out	%read{600,600} %write{508,511}
local	closure color	___701_coat_bsdf_out	%read{586,586} %write{512,523}
local	float	___701_metal_bsdf_weight_tmp	%read{527,527} %write{524,524}
local	string	___701_metal_bsdf_distribution_tmp	%read{526,526} %write{525,525}
local	closure color	___701_metal_bsdf_out	%read{583,583} %write{527,527}
local	closure color	___701_specular_bsdf_out	%read{579,579} %write{528,539}
local	closure color	___701_transmission_bsdf_out	%read{577,577} %write{540,551}
local	closure color	___701_sheen_bsdf_out	%read{573,573} %write{553,553}
local	float	___701_translucent_bsdf_weight_tmp	%read{556,556} %write{554,554}
local	closure color	___701_translucent_bsdf_out	%read{564,564} %write{556,556}
local	closure color	___701_subsurface_bsdf_out	%read{563,563} %write{557,560}
local	closure color	___701_selected_subsurface_bsdf_out	%read{571,571} %write{565,565}
local	closure color	___701_diffuse_bsdf_out	%read{570,570} %write{567,567}
local	closure color	___701_subsurface_mix_out	%read{573,573} %write{572,572}
local	closure color	___701_sheen_layer_out	%read{576,576} %write{573,573}
local	closure color	___701_transmission_mix_out	%read{579,579} %write{578,578}
local	closure color	___701_specular_layer_out	%read{582,582} %write{579,579}
local	closure color	___701_metalness_mix_out	%read{585,585} %write{584,584}
local	closure color	___701_thin_film_layer_attenuated_out	%read{586,586} %write{585,585}
local	closure color	___701_coat_layer_out	%read{611,611} %write{586,586}
local	closure color	___701_emission_edf_out	%read{588,604} %write{587,587}
local	closure color	___701_coat_tinted_emission_edf_out	%read{601,601} %write{588,588}
local	closure color	___701_coat_emission_edf_out	%read{605,605} %write{589,601}
local	closure color	___701_blended_coat_emission_edf_out	%read{612,612} %write{606,606}
local	closure color	___701_shader_constructor_out.bsdf	%read{617,617} %write{607,611} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{618,618} %write{608,612} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{616,619} %write{609,616} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{625,627} %write{623,623}
local	closure color	null_closure	%read{104,105} %write{0,0}
local	string	tiledimage2_file_.filename	%read{46,84} %write{1,1} %mystruct{tiledimage2_file_} %mystructfield{0}
local	string	tiledimage2_file_.colorspace	%read{2147483647,-1} %write{2,2} %mystruct{tiledimage2_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{101,522} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{94,481} %write{9,9}
local	vector	geomprop_Bworld_out1	%read{97,97} %write{15,15}
local	float	geomprop_UV0_out1.x	%read{33,33} %write{16,16} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{34,34} %write{17,17} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage2_realworldimagesize_unit_out.x	%read{39,39} %write{22,22} %mystruct{tiledimage2_realworldimagesize_unit_out} %mystructfield{0} %derivs
local	float	tiledimage2_realworldimagesize_unit_out.y	%read{40,40} %write{23,23} %mystruct{tiledimage2_realworldimagesize_unit_out} %mystructfield{1} %derivs
local	float	tiledimage2_realworldtilesize_unit_out.x	%read{42,42} %write{28,28} %mystruct{tiledimage2_realworldtilesize_unit_out} %mystructfield{0} %derivs
local	float	tiledimage2_realworldtilesize_unit_out.y	%read{43,43} %write{29,29} %mystruct{tiledimage2_realworldtilesize_unit_out} %mystructfield{1} %derivs
local	vector	tiledimage2_out	%read{88,91} %write{30,85}
local	vector	normalmap_vector2_out	%read{315,566} %write{86,103}
local	closure color	NormalMappedShader2_out.bsdf	%read{624,624} %write{104,617} %mystruct{NormalMappedShader2_out} %mystructfield{0}
local	closure color	NormalMappedShader2_out.edf	%read{624,624} %write{105,618} %mystruct{NormalMappedShader2_out} %mystructfield{1}
local	float	NormalMappedShader2_out.opacity	%read{622,622} %write{106,619} %mystruct{NormalMappedShader2_out} %mystructfield{2}
local	closure color	NormalMappedMaterial2_out	%read{630,630} %write{629,629}
const	int	$const1	0		%read{0,434} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,381} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,420} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,623} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	vector	$tmp5	%read{15,15} %write{14,14}
temp	vector	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{13,13} %write{10,10}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	string	$const6	"__operator__mul__"		%read{18,41} %write{2147483647,-1}
temp	float	$tmp10.x	%read{22,22} %write{19,19} %derivs
temp	float	$tmp10.y	%read{23,23} %write{20,20} %derivs
temp	float	$tmp11.x	%read{28,28} %write{25,25} %derivs
temp	float	$tmp11.y	%read{29,29} %write{26,26} %derivs
const	vector	$const7	0 0 0		%read{30,309} %write{2147483647,-1}
const	string	$const8	"NG_tiledimage_vector3"		%read{31,31} %write{2147483647,-1}
const	string	$const9	"__operator__sub__"		%read{35,35} %write{2147483647,-1}
const	string	$const10	"__operator__div__"		%read{38,38} %write{2147483647,-1}
const	string	$const11	""		%read{46,84} %write{2147483647,-1}
const	string	$const12	"periodic"		%read{49,84} %write{2147483647,-1}
const	string	$const13	"mx_image_vector3"		%read{45,45} %write{2147483647,-1}
temp	int	$tmp12	%read{47,47} %write{46,46}
temp	int	$tmp13	%read{48,62} %write{47,61}
const	string	$const14	"constant"		%read{49,64} %write{2147483647,-1}
temp	int	$tmp14	%read{50,50} %write{49,49}
temp	int	$tmp15	%read{51,60} %write{50,59}
temp	int	$tmp16	%read{53,53} %write{52,52}
temp	int	$tmp17	%read{54,58} %write{53,57}
const	float	$const15	1		%read{55,627} %write{2147483647,-1}
temp	int	$tmp18	%read{56,56} %write{55,55}
temp	int	$tmp19	%read{57,57} %write{56,56}
temp	int	$tmp20	%read{59,59} %write{58,58}
temp	int	$tmp21	%read{61,61} %write{60,60}
temp	int	$tmp22	%read{63,77} %write{62,76}
temp	int	$tmp23	%read{65,65} %write{64,64}
temp	int	$tmp24	%read{66,75} %write{65,74}
temp	int	$tmp25	%read{68,68} %write{67,67}
temp	int	$tmp26	%read{69,73} %write{68,72}
temp	int	$tmp27	%read{71,71} %write{70,70}
temp	int	$tmp28	%read{72,72} %write{71,71}
temp	int	$tmp29	%read{74,74} %write{73,73}
temp	int	$tmp30	%read{76,76} %write{75,75}
const	string	$const16	"mx_transform_uv"		%read{81,81} %write{2147483647,-1}
const	string	$const17	"subimage"		%read{84,84} %write{2147483647,-1}
const	string	$const18	"interp"		%read{84,84} %write{2147483647,-1}
const	string	$const19	"missingcolor"		%read{84,84} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{84,84} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{84,84} %write{2147483647,-1}
const	string	$const22	"mx_normalmap_vector2"		%read{87,87} %write{2147483647,-1}
temp	int	$tmp32	%read{89,89} %write{88,88}
const	vector	$const23	0 0 1		%read{90,90} %write{2147483647,-1}
const	float	$const24	2		%read{91,91} %write{2147483647,-1}
temp	vector	$tmp33	%read{92,92} %write{91,91}
temp	float	$tmp34	%read{94,94} %write{93,93}
temp	vector	$tmp35	%read{95,95} %write{94,94}
temp	vector	$tmp36	%read{99,99} %write{95,95}
const	int	$const25	1		%read{96,417} %write{2147483647,-1}
temp	float	$tmp37	%read{97,97} %write{96,96}
temp	vector	$tmp38	%read{98,98} %write{97,97}
temp	vector	$tmp39	%read{99,99} %write{98,98}
temp	vector	$tmp40	%read{102,102} %write{99,99}
temp	float	$tmp41	%read{101,101} %write{100,100}
temp	vector	$tmp42	%read{102,102} %write{101,101}
temp	vector	$tmp43	%read{103,103} %write{102,102}
const	string	$const26	"NG_standard_surface_surfaceshader_100"		%read{107,107} %write{2147483647,-1}
const	string	$const27	"mx_roughness_anisotropy"		%read{111,485} %write{2147483647,-1}
temp	float	$tmp44	%read{114,114} %write{112,112}
const	float	$const28	1e-08		%read{115,489} %write{2147483647,-1}
const	string	$const29	"clamp"		%read{113,621} %write{2147483647,-1}
temp	float	$tmp45	%read{115,115} %write{114,114}
temp	int	$tmp46	%read{117,117} %write{116,116}
temp	float	$tmp47	%read{121,121} %write{120,120}
const	float	$const30	0.98		%read{119,493} %write{2147483647,-1}
temp	float	$tmp48	%read{120,120} %write{119,119}
temp	float	$tmp49	%read{122,122} %write{121,121}
temp	float	$tmp50	%read{124,124} %write{123,123}
const	float	$const31	360		%read{130,135} %write{2147483647,-1}
temp	color	$tmp51	%read{140,140} %write{139,139}
temp	float	$tmp52	%read{145,145} %write{144,144}
temp	float	$tmp53	%read{148,148} %write{147,147}
temp	color	$tmp54	%read{151,151} %write{150,150}
const	color	$const32	1 1 1		%read{152,521} %write{2147483647,-1}
const	color	$const33	0 0 0		%read{159,600} %write{2147483647,-1}
const	color	$const34	0.272229 0.674082 0.053689		%read{161,161} %write{2147483647,-1}
const	string	$const35	"mx_luminance_color3"		%read{160,160} %write{2147483647,-1}
temp	float	$tmp56	%read{162,162} %write{161,161}
const	string	$const36	"mx_rotate_vector3"		%read{164,310} %write{2147483647,-1}
const	string	$const37	"radians"		%read{165,311} %write{2147483647,-1}
const	float	$const38	3.1415927		%read{166,312} %write{2147483647,-1}
const	float	$const39	180		%read{166,312} %write{2147483647,-1}
temp	float	$tmp57	%read{167,167} %write{166,166}
const	string	$const40	"rotationMatrix"		%read{168,314} %write{2147483647,-1}
temp	float	$tmp58	%read{174,174} %write{173,173}
temp	float	$tmp59	%read{176,176} %write{174,174}
temp	float	$tmp60	%read{176,176} %write{175,175}
temp	float	$tmp61	%read{177,177} %write{176,176}
temp	float	$tmp62	%read{230,230} %write{177,177}
temp	float	$tmp63	%read{179,179} %write{178,178}
temp	float	$tmp64	%read{181,181} %write{179,179}
temp	float	$tmp65	%read{181,181} %write{180,180}
temp	float	$tmp66	%read{184,184} %write{181,181}
temp	float	$tmp67	%read{183,183} %write{182,182}
temp	float	$tmp68	%read{184,184} %write{183,183}
temp	float	$tmp69	%read{230,230} %write{184,184}
temp	float	$tmp70	%read{186,186} %write{185,185}
temp	float	$tmp71	%read{188,188} %write{186,186}
temp	float	$tmp72	%read{188,188} %write{187,187}
temp	float	$tmp73	%read{191,191} %write{188,188}
temp	float	$tmp74	%read{190,190} %write{189,189}
temp	float	$tmp75	%read{191,191} %write{190,190}
temp	float	$tmp76	%read{230,230} %write{191,191}
temp	float	$tmp77	%read{193,193} %write{192,192}
temp	float	$tmp78	%read{195,195} %write{193,193}
temp	float	$tmp79	%read{195,195} %write{194,194}
temp	float	$tmp80	%read{198,198} %write{195,195}
temp	float	$tmp81	%read{197,197} %write{196,196}
temp	float	$tmp82	%read{198,198} %write{197,197}
temp	float	$tmp83	%read{230,230} %write{198,198}
temp	float	$tmp84	%read{200,200} %write{199,199}
temp	float	$tmp85	%read{202,202} %write{200,200}
temp	float	$tmp86	%read{202,202} %write{201,201}
temp	float	$tmp87	%read{203,203} %write{202,202}
temp	float	$tmp88	%read{230,230} %write{203,203}
temp	float	$tmp89	%read{205,205} %write{204,204}
temp	float	$tmp90	%read{207,207} %write{205,205}
temp	float	$tmp91	%read{207,207} %write{206,206}
temp	float	$tmp92	%read{210,210} %write{207,207}
temp	float	$tmp93	%read{209,209} %write{208,208}
temp	float	$tmp94	%read{210,210} %write{209,209}
temp	float	$tmp95	%read{230,230} %write{210,210}
temp	float	$tmp96	%read{212,212} %write{211,211}
temp	float	$tmp97	%read{214,214} %write{212,212}
temp	float	$tmp98	%read{214,214} %write{213,213}
temp	float	$tmp99	%read{217,217} %write{214,214}
temp	float	$tmp100	%read{216,216} %write{215,215}
temp	float	$tmp101	%read{217,217} %write{216,216}
temp	float	$tmp102	%read{230,230} %write{217,217}
temp	float	$tmp103	%read{219,219} %write{218,218}
temp	float	$tmp104	%read{221,221} %write{219,219}
temp	float	$tmp105	%read{221,221} %write{220,220}
temp	float	$tmp106	%read{224,224} %write{221,221}
temp	float	$tmp107	%read{223,223} %write{222,222}
temp	float	$tmp108	%read{224,224} %write{223,223}
temp	float	$tmp109	%read{230,230} %write{224,224}
temp	float	$tmp110	%read{226,226} %write{225,225}
temp	float	$tmp111	%read{228,228} %write{226,226}
temp	float	$tmp112	%read{228,228} %write{227,227}
temp	float	$tmp113	%read{229,229} %write{228,228}
temp	float	$tmp114	%read{230,230} %write{229,229}
temp	float	$tmp115.x	%read{237,270} %write{231,231}
temp	float	$tmp115.y	%read{239,272} %write{232,232}
temp	float	$tmp115.z	%read{242,275} %write{233,233}
temp	float	$tmp115.w	%read{245,278} %write{234,234}
temp	float	$tmp116	%read{237,237} %write{236,236}
temp	float	$tmp117	%read{240,240} %write{237,237}
temp	float	$tmp118	%read{239,239} %write{238,238}
temp	float	$tmp119	%read{240,240} %write{239,239}
temp	float	$tmp120	%read{243,243} %write{240,240}
temp	float	$tmp121	%read{242,242} %write{241,241}
temp	float	$tmp122	%read{243,243} %write{242,242}
temp	float	$tmp123	%read{246,246} %write{243,243}
const	int	$const41	3		%read{244,423} %write{2147483647,-1}
temp	float	$tmp124	%read{245,245} %write{244,244}
temp	float	$tmp125	%read{246,246} %write{245,245}
temp	float	$tmp126	%read{248,248} %write{247,247}
temp	float	$tmp127	%read{251,251} %write{248,248}
temp	float	$tmp128	%read{250,250} %write{249,249}
temp	float	$tmp129	%read{251,251} %write{250,250}
temp	float	$tmp130	%read{254,254} %write{251,251}
temp	float	$tmp131	%read{253,253} %write{252,252}
temp	float	$tmp132	%read{254,254} %write{253,253}
temp	float	$tmp133	%read{257,257} %write{254,254}
temp	float	$tmp134	%read{256,256} %write{255,255}
temp	float	$tmp135	%read{257,257} %write{256,256}
temp	float	$tmp136	%read{259,259} %write{258,258}
temp	float	$tmp137	%read{262,262} %write{259,259}
temp	float	$tmp138	%read{261,261} %write{260,260}
temp	float	$tmp139	%read{262,262} %write{261,261}
temp	float	$tmp140	%read{265,265} %write{262,262}
temp	float	$tmp141	%read{264,264} %write{263,263}
temp	float	$tmp142	%read{265,265} %write{264,264}
temp	float	$tmp143	%read{268,268} %write{265,265}
temp	float	$tmp144	%read{267,267} %write{266,266}
temp	float	$tmp145	%read{268,268} %write{267,267}
temp	float	$tmp146	%read{270,270} %write{269,269}
temp	float	$tmp147	%read{273,273} %write{270,270}
temp	float	$tmp148	%read{272,272} %write{271,271}
temp	float	$tmp149	%read{273,273} %write{272,272}
temp	float	$tmp150	%read{276,276} %write{273,273}
temp	float	$tmp151	%read{275,275} %write{274,274}
temp	float	$tmp152	%read{276,276} %write{275,275}
temp	float	$tmp153	%read{279,279} %write{276,276}
temp	float	$tmp154	%read{278,278} %write{277,277}
temp	float	$tmp155	%read{279,279} %write{278,278}
const	string	$const42	"mx_artistic_ior"		%read{283,283} %write{2147483647,-1}
temp	color	$tmp156	%read{288,288} %write{284,284}
const	float	$const43	0.99		%read{285,285} %write{2147483647,-1}
temp	color	$tmp157	%read{287,287} %write{285,285}
temp	color	$tmp158	%read{288,288} %write{287,287}
temp	color	$tmp159	%read{292,292} %write{290,290}
temp	color	$tmp160	%read{292,292} %write{291,291}
temp	color	$tmp161	%read{295,295} %write{293,293}
temp	color	$tmp162	%read{295,295} %write{294,294}
temp	color	$tmp163	%read{300,300} %write{299,299}
temp	color	$tmp164	%read{302,302} %write{300,300}
temp	color	$tmp165	%read{302,302} %write{301,301}
temp	color	$tmp166	%read{304,304} %write{302,302}
temp	color	$tmp167	%read{304,304} %write{303,303}
temp	color	$tmp168	%read{306,306} %write{305,305}
temp	float	$tmp169	%read{313,313} %write{312,312}
temp	float	$tmp170	%read{320,320} %write{319,319}
temp	float	$tmp171	%read{322,322} %write{320,320}
temp	float	$tmp172	%read{322,322} %write{321,321}
temp	float	$tmp173	%read{323,323} %write{322,322}
temp	float	$tmp174	%read{376,376} %write{323,323}
temp	float	$tmp175	%read{325,325} %write{324,324}
temp	float	$tmp176	%read{327,327} %write{325,325}
temp	float	$tmp177	%read{327,327} %write{326,326}
temp	float	$tmp178	%read{330,330} %write{327,327}
temp	float	$tmp179	%read{329,329} %write{328,328}
temp	float	$tmp180	%read{330,330} %write{329,329}
temp	float	$tmp181	%read{376,376} %write{330,330}
temp	float	$tmp182	%read{332,332} %write{331,331}
temp	float	$tmp183	%read{334,334} %write{332,332}
temp	float	$tmp184	%read{334,334} %write{333,333}
temp	float	$tmp185	%read{337,337} %write{334,334}
temp	float	$tmp186	%read{336,336} %write{335,335}
temp	float	$tmp187	%read{337,337} %write{336,336}
temp	float	$tmp188	%read{376,376} %write{337,337}
temp	float	$tmp189	%read{339,339} %write{338,338}
temp	float	$tmp190	%read{341,341} %write{339,339}
temp	float	$tmp191	%read{341,341} %write{340,340}
temp	float	$tmp192	%read{344,344} %write{341,341}
temp	float	$tmp193	%read{343,343} %write{342,342}
temp	float	$tmp194	%read{344,344} %write{343,343}
temp	float	$tmp195	%read{376,376} %write{344,344}
temp	float	$tmp196	%read{346,346} %write{345,345}
temp	float	$tmp197	%read{348,348} %write{346,346}
temp	float	$tmp198	%read{348,348} %write{347,347}
temp	float	$tmp199	%read{349,349} %write{348,348}
temp	float	$tmp200	%read{376,376} %write{349,349}
temp	float	$tmp201	%read{351,351} %write{350,350}
temp	float	$tmp202	%read{353,353} %write{351,351}
temp	float	$tmp203	%read{353,353} %write{352,352}
temp	float	$tmp204	%read{356,356} %write{353,353}
temp	float	$tmp205	%read{355,355} %write{354,354}
temp	float	$tmp206	%read{356,356} %write{355,355}
temp	float	$tmp207	%read{376,376} %write{356,356}
temp	float	$tmp208	%read{358,358} %write{357,357}
temp	float	$tmp209	%read{360,360} %write{358,358}
temp	float	$tmp210	%read{360,360} %write{359,359}
temp	float	$tmp211	%read{363,363} %write{360,360}
temp	float	$tmp212	%read{362,362} %write{361,361}
temp	float	$tmp213	%read{363,363} %write{362,362}
temp	float	$tmp214	%read{376,376} %write{363,363}
temp	float	$tmp215	%read{365,365} %write{364,364}
temp	float	$tmp216	%read{367,367} %write{365,365}
temp	float	$tmp217	%read{367,367} %write{366,366}
temp	float	$tmp218	%read{370,370} %write{367,367}
temp	float	$tmp219	%read{369,369} %write{368,368}
temp	float	$tmp220	%read{370,370} %write{369,369}
temp	float	$tmp221	%read{376,376} %write{370,370}
temp	float	$tmp222	%read{372,372} %write{371,371}
temp	float	$tmp223	%read{374,374} %write{372,372}
temp	float	$tmp224	%read{374,374} %write{373,373}
temp	float	$tmp225	%read{375,375} %write{374,374}
temp	float	$tmp226	%read{376,376} %write{375,375}
temp	float	$tmp227.x	%read{383,416} %write{377,377}
temp	float	$tmp227.y	%read{385,418} %write{378,378}
temp	float	$tmp227.z	%read{388,421} %write{379,379}
temp	float	$tmp227.w	%read{391,424} %write{380,380}
temp	float	$tmp228	%read{383,383} %write{382,382}
temp	float	$tmp229	%read{386,386} %write{383,383}
temp	float	$tmp230	%read{385,385} %write{384,384}
temp	float	$tmp231	%read{386,386} %write{385,385}
temp	float	$tmp232	%read{389,389} %write{386,386}
temp	float	$tmp233	%read{388,388} %write{387,387}
temp	float	$tmp234	%read{389,389} %write{388,388}
temp	float	$tmp235	%read{392,392} %write{389,389}
temp	float	$tmp236	%read{391,391} %write{390,390}
temp	float	$tmp237	%read{392,392} %write{391,391}
temp	float	$tmp238	%read{394,394} %write{393,393}
temp	float	$tmp239	%read{397,397} %write{394,394}
temp	float	$tmp240	%read{396,396} %write{395,395}
temp	float	$tmp241	%read{397,397} %write{396,396}
temp	float	$tmp242	%read{400,400} %write{397,397}
temp	float	$tmp243	%read{399,399} %write{398,398}
temp	float	$tmp244	%read{400,400} %write{399,399}
temp	float	$tmp245	%read{403,403} %write{400,400}
temp	float	$tmp246	%read{402,402} %write{401,401}
temp	float	$tmp247	%read{403,403} %write{402,402}
temp	float	$tmp248	%read{405,405} %write{404,404}
temp	float	$tmp249	%read{408,408} %write{405,405}
temp	float	$tmp250	%read{407,407} %write{406,406}
temp	float	$tmp251	%read{408,408} %write{407,407}
temp	float	$tmp252	%read{411,411} %write{408,408}
temp	float	$tmp253	%read{410,410} %write{409,409}
temp	float	$tmp254	%read{411,411} %write{410,410}
temp	float	$tmp255	%read{414,414} %write{411,411}
temp	float	$tmp256	%read{413,413} %write{412,412}
temp	float	$tmp257	%read{414,414} %write{413,413}
temp	float	$tmp258	%read{416,416} %write{415,415}
temp	float	$tmp259	%read{419,419} %write{416,416}
temp	float	$tmp260	%read{418,418} %write{417,417}
temp	float	$tmp261	%read{419,419} %write{418,418}
temp	float	$tmp262	%read{422,422} %write{419,419}
temp	float	$tmp263	%read{421,421} %write{420,420}
temp	float	$tmp264	%read{422,422} %write{421,421}
temp	float	$tmp265	%read{425,425} %write{422,422}
temp	float	$tmp266	%read{424,424} %write{423,423}
temp	float	$tmp267	%read{425,425} %write{424,424}
temp	float	$tmp268	%read{431,431} %write{430,430}
const	string	$const44	"mx_extract"		%read{435,435} %write{2147483647,-1}
temp	int	$tmp269	%read{449,449} %write{447,447}
const	string	$const45	"mx_ternary"		%read{448,477} %write{2147483647,-1}
temp	float	$tmp270	%read{459,459} %write{457,457}
temp	float	$tmp271	%read{460,460} %write{459,459}
temp	int	$tmp272	%read{462,462} %write{461,461}
temp	float	$tmp273	%read{466,466} %write{465,465}
temp	float	$tmp274	%read{465,465} %write{464,464}
temp	float	$tmp275	%read{467,467} %write{466,466}
temp	float	$tmp276	%read{469,469} %write{468,468}
temp	int	$tmp277	%read{478,478} %write{476,476}
temp	float	$tmp278	%read{488,488} %write{486,486}
temp	float	$tmp279	%read{489,489} %write{488,488}
temp	int	$tmp280	%read{491,491} %write{490,490}
temp	float	$tmp281	%read{495,495} %write{494,494}
temp	float	$tmp282	%read{494,494} %write{493,493}
temp	float	$tmp283	%read{496,496} %write{495,495}
temp	float	$tmp284	%read{498,498} %write{497,497}
const	string	$const46	"NG_convert_float_color3"		%read{509,509} %write{2147483647,-1}
const	float	$const47	1.5		%read{522,550} %write{2147483647,-1}
const	string	$const48	"ggx"		%read{522,550} %write{2147483647,-1}
const	string	$const49	"R"		%read{514,546} %write{2147483647,-1}
const	string	$const50	"mx_dielectric_bsdf"		%read{513,541} %write{2147483647,-1}
const	string	$const51	"T"		%read{514,546} %write{2147483647,-1}
temp	int	$tmp286	%read{515,515} %write{514,514}
temp	int	$tmp287	%read{519,519} %write{518,518}
temp	closure color	$tmp288	%read{523,523} %write{522,522}
const	string	$const52	"thinfilm_thickness"		%read{522,550} %write{2147483647,-1}
const	string	$const53	"thinfilm_ior"		%read{522,550} %write{2147483647,-1}
const	string	$const54	"dielectric_bsdf"		%read{522,550} %write{2147483647,-1}
temp	closure color	$tmp289	%read{527,527} %write{526,526}
const	string	$const55	"conductor_bsdf"		%read{526,526} %write{2147483647,-1}
temp	int	$tmp290	%read{531,531} %write{530,530}
temp	int	$tmp291	%read{535,535} %write{534,534}
temp	closure color	$tmp292	%read{539,539} %write{538,538}
temp	int	$tmp293	%read{543,543} %write{542,542}
temp	int	$tmp294	%read{547,547} %write{546,546}
temp	closure color	$tmp295	%read{551,551} %write{550,550}
temp	closure color	$tmp296	%read{553,553} %write{552,552}
const	string	$const56	"sheen_bsdf"		%read{552,552} %write{2147483647,-1}
temp	closure color	$tmp297	%read{556,556} %write{555,555}
const	string	$const57	"translucent_bsdf"		%read{555,555} %write{2147483647,-1}
const	string	$const58	"mx_subsurface_bsdf"		%read{558,558} %write{2147483647,-1}
temp	color	$tmp298	%read{560,560} %write{559,559}
const	string	$const59	"subsurface_bssrdf"		%read{560,560} %write{2147483647,-1}
const	string	$const60	"mix"		%read{561,602} %write{2147483647,-1}
temp	float	$tmp299	%read{563,563} %write{562,562}
temp	closure color	$tmp300	%read{565,565} %write{563,563}
temp	closure color	$tmp301	%read{565,565} %write{564,564}
temp	closure color	$tmp302	%read{567,567} %write{566,566}
const	string	$const61	"oren_nayar_diffuse_bsdf"		%read{566,566} %write{2147483647,-1}
temp	float	$tmp303	%read{570,570} %write{569,569}
temp	closure color	$tmp304	%read{572,572} %write{570,570}
temp	closure color	$tmp305	%read{572,572} %write{571,571}
const	string	$const62	"layer"		%read{573,586} %write{2147483647,-1}
temp	float	$tmp306	%read{576,576} %write{575,575}
temp	closure color	$tmp307	%read{578,578} %write{576,576}
temp	closure color	$tmp308	%read{578,578} %write{577,577}
temp	float	$tmp309	%read{582,582} %write{581,581}
temp	closure color	$tmp310	%read{584,584} %write{582,582}
temp	closure color	$tmp311	%read{584,584} %write{583,583}
const	string	$const63	"uniform_edf"		%read{587,587} %write{2147483647,-1}
const	float	$const64	5		%read{599,599} %write{2147483647,-1}
const	string	$const65	"mx_generalized_schlick_edf"		%read{590,590} %write{2147483647,-1}
temp	float	$tmp313	%read{593,593} %write{592,592}
temp	vector	$tmp314	%read{592,592} %write{591,591}
const	string	$const66	"mx_fresnel_schlick"		%read{594,594} %write{2147483647,-1}
temp	float	$tmp315	%read{597,597} %write{595,595}
temp	float	$tmp316	%read{598,598} %write{597,597}
temp	float	$tmp317	%read{600,600} %write{599,599}
temp	float	$tmp318	%read{604,604} %write{603,603}
temp	closure color	$tmp319	%read{606,606} %write{604,604}
temp	closure color	$tmp320	%read{606,606} %write{605,605}
const	string	$const67	"mx_surface"		%read{610,610} %write{2147483647,-1}
temp	float	$tmp321	%read{615,615} %write{614,614}
const	string	$const68	"mx_surfacematerial"		%read{620,620} %write{2147483647,-1}
temp	float	$tmp322	%read{623,623} %write{622,622}
temp	closure color	$tmp323	%read{625,625} %write{624,624}
temp	closure color	$tmp324	%read{629,629} %write{625,625}
temp	closure color	$tmp325	%read{628,628} %write{626,626}
const	string	$const69	"transparent"		%read{626,626} %write{2147483647,-1}
temp	float	$tmp326	%read{628,628} %write{627,627}
temp	closure color	$tmp327	%read{629,629} %write{628,628}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:778
#     textureresource tiledimage2_file_ = {tiledimage2_file, tiledimage2_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{778} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:779
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		tiledimage2_file_.filename tiledimage2_file 	%line{779} %argrw{"wr"}
	assign		tiledimage2_file_.colorspace tiledimage2_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:780
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{780} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:781
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{781} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:782
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp7 N $const4 	%line{782} %argrw{"wrr"}
	compref		$tmp8 N $const1 	%argrw{"wrr"}
	neg		$tmp9 $tmp8 	%argrw{"wr"}
	vector		$tmp6 $tmp7 $const5 $tmp9 	%argrw{"wrrr"}
	cross		$tmp5 N $tmp6 	%argrw{"wrr"}
	normalize	geomprop_Bworld_out1 $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:783
#     vector2 tiledimage2_realworldimagesize_unit_out = tiledimage2_realworldimagesize_unit_in1 * tiledimage2_realworldimagesize_unit_in2;
	assign		geomprop_UV0_out1.x u 	%line{783} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 24 	%line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp10.x tiledimage2_realworldimagesize_unit_in2 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp10.y tiledimage2_realworldimagesize_unit_in2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		tiledimage2_realworldimagesize_unit_out.x tiledimage2_realworldimagesize_unit_in1.x $tmp10.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		tiledimage2_realworldimagesize_unit_out.y tiledimage2_realworldimagesize_unit_in1.y $tmp10.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp11.x tiledimage2_realworldtilesize_unit_in2 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp11.y tiledimage2_realworldtilesize_unit_in2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		tiledimage2_realworldtilesize_unit_out.x tiledimage2_realworldtilesize_unit_in1.x $tmp11.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		tiledimage2_realworldtilesize_unit_out.y tiledimage2_realworldtilesize_unit_in1.y $tmp11.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:786
#     NG_tiledimage_vector3(tiledimage2_file_, tiledimage2_default, geomprop_UV0_out1, tiledimage2_uvtiling, tiledimage2_uvoffset, tiledimage2_realworldimagesize_unit_out, tiledimage2_realworldtilesize_unit_out, tiledimage2_filtertype, tiledimage2_framerange, tiledimage2_frameoffset, tiledimage2_frameendaction, tiledimage2_out);
	assign		tiledimage2_out $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{786} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:787
#     vector normalmap_vector2_out = vector(0.0);
	functioncall	$const8 86 	%line{787} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 35 	%line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector3_out.x geomprop_UV0_out1.x tiledimage2_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector3_out.y geomprop_UV0_out1.y tiledimage2_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const9 38 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector3_out.x ___672_N_mult_vector3_out.x tiledimage2_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector3_out.y ___672_N_mult_vector3_out.y tiledimage2_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const10 41 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector3_out.x ___672_N_sub_vector3_out.x tiledimage2_realworldimagesize_unit_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector3_out.y ___672_N_sub_vector3_out.y tiledimage2_realworldimagesize_unit_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:795
# 
	functioncall	$const6 44 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{795} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector3_out.x ___672_N_divtilesize_vector3_out.x tiledimage2_realworldtilesize_unit_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector3_out.y ___672_N_divtilesize_vector3_out.y tiledimage2_realworldtilesize_unit_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:47
#     mx_image_vector3(file, "", default1, N_multtilesize_vector3_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector3_out);
	assign		___672_N_img_vector3_out $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:48
#     out = N_img_vector3_out;
	functioncall	$const13 85 	%line{48} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp12 tiledimage2_file_.filename $const11 	%line{25} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 49 62 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp14 $const12 $const14 	%line{26} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 60 60 	%argrw{"r"}
	lt		$tmp16 ___672_N_multtilesize_vector3_out.x $const5 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 55 58 	%argrw{"r"}
	gt		$tmp18 ___672_N_multtilesize_vector3_out.x $const15 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp19 	%argrw{"wr"}
	neq		$tmp20 $tmp17 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp20 	%argrw{"wr"}
	neq		$tmp21 $tmp15 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp13 $tmp21 	%line{25} %argrw{"wr"}
	neq		$tmp22 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp22 64 77 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:27
#     {
	eq		$tmp23 $const12 $const14 	%line{27} %argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 75 75 	%argrw{"r"}
	lt		$tmp25 ___672_N_multtilesize_vector3_out.y $const5 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	if		$tmp26 70 73 	%argrw{"r"}
	gt		$tmp27 ___672_N_multtilesize_vector3_out.y $const15 	%argrw{"wrr"}
	neq		$tmp28 $tmp27 $const1 	%argrw{"wrr"}
	assign		$tmp26 $tmp28 	%argrw{"wr"}
	neq		$tmp29 $tmp26 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp29 	%argrw{"wr"}
	neq		$tmp30 $tmp24 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp22 $tmp30 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp22 80 80 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:29
#         return;
	assign		___672_N_img_vector3_out tiledimage2_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tiledimage2_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const16 84 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector3_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector3_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_N_img_vector3_out tiledimage2_file_.filename ___670_st.x ___670_st.y $const17 $const11 $const18 tiledimage2_filtertype $const19 ___670_missingColor $const20 $const12 $const21 $const12 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:49
# }
	assign		tiledimage2_out ___672_N_img_vector3_out 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:788
#     mx_normalmap_vector2(tiledimage2_out, normalmap_vector2_scale, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, normalmap_vector2_out);
	assign		normalmap_vector2_out $const7 	%line{788} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:789
#     surfaceshader NormalMappedShader2_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const22 104 	%line{789} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:55
#     {
	eq		$tmp32 tiledimage2_out $const7 	%line{55} %argrw{"wrr"}
	if		$tmp32 91 93 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:57
#     }
	assign		___673_decodedValue $const23 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:61
#     }
	mul		$tmp33 tiledimage2_out $const24 	%line{61} %argrw{"wrr"}
	sub		___673_decodedValue $tmp33 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:64
# }
	compref		$tmp34 ___673_decodedValue $const1 	%line{64} %argrw{"wrr"}
	mul		$tmp35 geomprop_Tworld_out1 $tmp34 	%argrw{"wrr"}
	mul		$tmp36 $tmp35 normalmap_vector2_scale.x 	%argrw{"wrr"}
	compref		$tmp37 ___673_decodedValue $const25 	%argrw{"wrr"}
	mul		$tmp38 geomprop_Bworld_out1 $tmp37 	%argrw{"wrr"}
	mul		$tmp39 $tmp38 normalmap_vector2_scale.y 	%argrw{"wrr"}
	add		$tmp40 $tmp36 $tmp39 	%argrw{"wrr"}
	compref		$tmp41 ___673_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp42 geomprop_Nworld_out1 $tmp41 	%argrw{"wrr"}
	add		$tmp43 $tmp40 $tmp42 	%argrw{"wrr"}
	normalize	normalmap_vector2_out $tmp43 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:790
#     NG_standard_surface_surfaceshader_100(NormalMappedShader2_base, NormalMappedShader2_base_color, NormalMappedShader2_diffuse_roughness, NormalMappedShader2_metalness, NormalMappedShader2_specular, NormalMappedShader2_specular_color, NormalMappedShader2_specular_roughness, NormalMappedShader2_specular_IOR, NormalMappedShader2_specular_anisotropy, NormalMappedShader2_specular_rotation, NormalMappedShader2_transmission, NormalMappedShader2_transmission_color, NormalMappedShader2_transmission_depth, NormalMappedShader2_transmission_scatter, NormalMappedShader2_transmission_scatter_anisotropy, NormalMappedShader2_transmission_dispersion, NormalMappedShader2_transmission_extra_roughness, NormalMappedShader2_subsurface, NormalMappedShader2_subsurface_color, NormalMappedShader2_subsurface_radius, NormalMappedShader2_subsurface_scale, NormalMappedShader2_subsurface_anisotropy, NormalMappedShader2_sheen, NormalMappedShader2_sheen_color, NormalMappedShader2_sheen_roughness, NormalMappedShader2_coat, NormalMappedShader2_coat_color, NormalMappedShader2_coat_roughness, NormalMappedShader2_coat_anisotropy, NormalMappedShader2_coat_rotation, NormalMappedShader2_coat_IOR, geomprop_Nworld_out1, NormalMappedShader2_coat_affect_color, NormalMappedShader2_coat_affect_roughness, NormalMappedShader2_thin_film_thickness, NormalMappedShader2_thin_film_IOR, NormalMappedShader2_emission, NormalMappedShader2_emission_color, NormalMappedShader2_opacity, NormalMappedShader2_thin_walled, normalmap_vector2_out, geomprop_Tworld_out1, NormalMappedShader2_out);
	assign		NormalMappedShader2_out.bsdf null_closure 	%line{790} %argrw{"wr"}
	assign		NormalMappedShader2_out.edf null_closure 	%argrw{"wr"}
	assign		NormalMappedShader2_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:791
#     MATERIAL NormalMappedMaterial2_out = mx_surfacematerial(NormalMappedShader2_out, backsurfaceshader, displacementshader1);
	functioncall	$const26 620 	%line{791} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:249
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:250
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const5 	%line{250} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:251
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const27 130 	%line{251} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp44 NormalMappedShader2_coat_roughness NormalMappedShader2_coat_roughness 	%line{74} %argrw{"wrr"}
	functioncall	$const29 116 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp45 $tmp44 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp45 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:75
#     {
	gt		$tmp46 NormalMappedShader2_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{75} %argrw{"wrr"}
	if		$tmp46 128 130 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const29 121 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp48 NormalMappedShader2_coat_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp47 $tmp48 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp49 $const15 $tmp47 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp49 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp50 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp50 $const15 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:79
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:83
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:84
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:252
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const31 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:253
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out NormalMappedShader2_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:254
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out NormalMappedShader2_base_color NormalMappedShader2_base 	%line{254} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:255
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out NormalMappedShader2_specular_color NormalMappedShader2_specular 	%line{255} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:256
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out NormalMappedShader2_coat_affect_roughness NormalMappedShader2_coat 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:257
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const31 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:258
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out NormalMappedShader2_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{258} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:259
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out NormalMappedShader2_specular_roughness NormalMappedShader2_transmission_extra_roughness 	%line{259} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:260
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const5 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:261
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp51 ___701_subsurface_color_nonnegative_in2_tmp 	%line{261} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out NormalMappedShader2_subsurface_color $tmp51 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:262
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const5 	%line{262} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:263
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const15 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:264
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const29 146 	%line{264} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp52 NormalMappedShader2_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp52 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:265
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out NormalMappedShader2_subsurface_radius NormalMappedShader2_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{265} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:266
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp53 NormalMappedShader2_thin_walled 	%line{266} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp53 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:267
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const5 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:268
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp54 ___701_base_color_nonnegative_in2_tmp 	%line{268} %argrw{"wr"}
	max		___701_base_color_nonnegative_out NormalMappedShader2_base_color $tmp54 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:269
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const32 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:270
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp NormalMappedShader2_coat_color NormalMappedShader2_coat 	%line{270} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:271
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const15 	%line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:272
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp NormalMappedShader2_coat_IOR 	%line{272} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:273
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const15 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:274
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp NormalMappedShader2_coat_IOR 	%line{274} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:275
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out NormalMappedShader2_emission_color NormalMappedShader2_emission 	%line{275} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:276
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const33 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:277
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const35 163 	%line{277} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:90
# }
	dot		$tmp56 NormalMappedShader2_opacity $const34 	%line{90} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp56 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:278
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const7 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:279
#     color artistic_ior_ior = color(0.0);
	functioncall	$const36 281 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const37 168 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp57 $const38 $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const40 231 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp58 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp59 ___681_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	add		$tmp62 $tmp61 ___681_c 	%argrw{"wrr"}
	compref		$tmp63 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp64 ___681_oc $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp66 $tmp64 $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp68 $tmp67 ___681_s 	%argrw{"wrr"}
	sub		$tmp69 $tmp66 $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp71 ___681_oc $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp73 $tmp71 $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp75 $tmp74 ___681_s 	%argrw{"wrr"}
	add		$tmp76 $tmp73 $tmp75 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp77 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp78 ___681_oc $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp82 $tmp81 ___681_s 	%argrw{"wrr"}
	add		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp85 ___681_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	add		$tmp88 $tmp87 ___681_c 	%argrw{"wrr"}
	compref		$tmp89 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp90 ___681_oc $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp92 $tmp90 $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp94 $tmp93 ___681_s 	%argrw{"wrr"}
	sub		$tmp95 $tmp92 $tmp94 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp96 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp97 ___681_oc $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp99 $tmp97 $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp101 $tmp100 ___681_s 	%argrw{"wrr"}
	sub		$tmp102 $tmp99 $tmp101 	%argrw{"wrr"}
	compref		$tmp103 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp104 ___681_oc $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp106 $tmp104 $tmp105 	%argrw{"wrr"}
	compref		$tmp107 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp108 $tmp107 ___681_s 	%argrw{"wrr"}
	add		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
	compref		$tmp110 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp111 ___681_oc $tmp110 	%argrw{"wrr"}
	compref		$tmp112 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp113 $tmp111 $tmp112 	%argrw{"wrr"}
	add		$tmp114 $tmp113 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp62 $tmp69 $tmp76 $const5 $tmp83 $tmp88 $tmp95 $const5 $tmp102 $tmp109 $tmp114 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp115.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp115.y geomprop_Tworld_out1 $const25 	%argrw{"wrr"}
	compref		$tmp115.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp115.w $const15 	%argrw{"wr"}
	functioncall	$const2 280 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp116 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp118 ___682_m $const25 $const1 	%argrw{"wrrr"}
	mul		$tmp119 $tmp118 $tmp115.y 	%argrw{"wrr"}
	add		$tmp120 $tmp117 $tmp119 	%argrw{"wrr"}
	mxcompref	$tmp121 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp115.z 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	mxcompref	$tmp124 ___682_m $const41 $const1 	%argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp115.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp123 $tmp125 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp126 ___682_m $const1 $const25 	%line{416} %argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp128 ___682_m $const25 $const25 	%argrw{"wrrr"}
	mul		$tmp129 $tmp128 $tmp115.y 	%argrw{"wrr"}
	add		$tmp130 $tmp127 $tmp129 	%argrw{"wrr"}
	mxcompref	$tmp131 ___682_m $const4 $const25 	%argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp115.z 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	mxcompref	$tmp134 ___682_m $const41 $const25 	%argrw{"wrrr"}
	mul		$tmp135 $tmp134 $tmp115.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp133 $tmp135 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp136 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp138 ___682_m $const25 $const4 	%argrw{"wrrr"}
	mul		$tmp139 $tmp138 $tmp115.y 	%argrw{"wrr"}
	add		$tmp140 $tmp137 $tmp139 	%argrw{"wrr"}
	mxcompref	$tmp141 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp115.z 	%argrw{"wrr"}
	add		$tmp143 $tmp140 $tmp142 	%argrw{"wrr"}
	mxcompref	$tmp144 ___682_m $const41 $const4 	%argrw{"wrrr"}
	mul		$tmp145 $tmp144 $tmp115.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp143 $tmp145 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp146 ___682_m $const1 $const41 	%line{418} %argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp148 ___682_m $const25 $const41 	%argrw{"wrrr"}
	mul		$tmp149 $tmp148 $tmp115.y 	%argrw{"wrr"}
	add		$tmp150 $tmp147 $tmp149 	%argrw{"wrr"}
	mxcompref	$tmp151 ___682_m $const4 $const41 	%argrw{"wrrr"}
	mul		$tmp152 $tmp151 $tmp115.z 	%argrw{"wrr"}
	add		$tmp153 $tmp150 $tmp152 	%argrw{"wrr"}
	mxcompref	$tmp154 ___682_m $const41 $const41 	%argrw{"wrrr"}
	mul		$tmp155 $tmp154 $tmp115.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp153 $tmp155 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:111
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:280
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const33 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:281
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const33 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:282
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const42 308 	%line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:119
#     color r_sqrt = sqrt(r);
	assign		$tmp156 $const5 	%line{119} %argrw{"wr"}
	assign		$tmp157 $const43 	%argrw{"wr"}
	functioncall	$const29 289 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp158 ___701_metal_reflectivity_out $tmp157 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp158 $tmp156 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:120
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:121
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp159 $const15 ___683_r 	%line{121} %argrw{"wrr"}
	add		$tmp160 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp159 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:122
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp161 $const15 ___683_r_sqrt 	%line{122} %argrw{"wrr"}
	sub		$tmp162 $const15 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp161 $tmp162 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:123
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{123} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:125
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const15 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:126
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const15 	%line{126} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:127
#     k2 = max(k2, 0.0);
	mul		$tmp163 ___683_np1 ___683_np1 	%line{127} %argrw{"wrr"}
	mul		$tmp164 $tmp163 ___683_r 	%argrw{"wrr"}
	mul		$tmp165 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp166 $tmp164 $tmp165 	%argrw{"wrr"}
	sub		$tmp167 $const15 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp166 $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:128
#     extinction = sqrt(k2);
	assign		$tmp168 $const5 	%line{128} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:129
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:283
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out NormalMappedShader2_coat_roughness 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:284
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const7 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:285
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const36 427 	%line{285} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:108
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const37 314 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp169 $const38 $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp169 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:109
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const40 377 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:95
#     float s = sin(angle);
	normalize	___681_nAxis normalmap_vector2_out 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:96
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:97
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:98
# 
	sub		___681_oc $const15 ___681_c 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp170 ___681_nAxis $const1 	%line{100} %argrw{"wrr"}
	mul		$tmp171 ___681_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	add		$tmp174 $tmp173 ___681_c 	%argrw{"wrr"}
	compref		$tmp175 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp176 ___681_oc $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp178 $tmp176 $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp180 $tmp179 ___681_s 	%argrw{"wrr"}
	sub		$tmp181 $tmp178 $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp183 ___681_oc $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp185 $tmp183 $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp187 $tmp186 ___681_s 	%argrw{"wrr"}
	add		$tmp188 $tmp185 $tmp187 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:101
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp189 ___681_nAxis $const1 	%line{101} %argrw{"wrr"}
	mul		$tmp190 ___681_oc $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp192 $tmp190 $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___681_s 	%argrw{"wrr"}
	add		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp197 ___681_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	add		$tmp200 $tmp199 ___681_c 	%argrw{"wrr"}
	compref		$tmp201 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp202 ___681_oc $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp204 $tmp202 $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp206 $tmp205 ___681_s 	%argrw{"wrr"}
	sub		$tmp207 $tmp204 $tmp206 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:102
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp208 ___681_nAxis $const4 	%line{102} %argrw{"wrr"}
	mul		$tmp209 ___681_oc $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp211 $tmp209 $tmp210 	%argrw{"wrr"}
	compref		$tmp212 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp213 $tmp212 ___681_s 	%argrw{"wrr"}
	sub		$tmp214 $tmp211 $tmp213 	%argrw{"wrr"}
	compref		$tmp215 ___681_nAxis $const25 	%argrw{"wrr"}
	mul		$tmp216 ___681_oc $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp218 $tmp216 $tmp217 	%argrw{"wrr"}
	compref		$tmp219 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp220 $tmp219 ___681_s 	%argrw{"wrr"}
	add		$tmp221 $tmp218 $tmp220 	%argrw{"wrr"}
	compref		$tmp222 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp223 ___681_oc $tmp222 	%argrw{"wrr"}
	compref		$tmp224 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp225 $tmp223 $tmp224 	%argrw{"wrr"}
	add		$tmp226 $tmp225 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:100
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp174 $tmp181 $tmp188 $const5 $tmp195 $tmp200 $tmp207 $const5 $tmp214 $tmp221 $tmp226 $const5 $const5 $const5 $const5 $const15 	%line{100} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:110
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp227.x geomprop_Tworld_out1 $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp227.y geomprop_Tworld_out1 $const25 	%argrw{"wrr"}
	compref		$tmp227.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp227.w $const15 	%argrw{"wr"}
	functioncall	$const2 426 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp228 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp230 ___682_m $const25 $const1 	%argrw{"wrrr"}
	mul		$tmp231 $tmp230 $tmp227.y 	%argrw{"wrr"}
	add		$tmp232 $tmp229 $tmp231 	%argrw{"wrr"}
	mxcompref	$tmp233 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp227.z 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___682_m $const41 $const1 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp227.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp235 $tmp237 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp238 ___682_m $const1 $const25 	%line{416} %argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp240 ___682_m $const25 $const25 	%argrw{"wrrr"}
	mul		$tmp241 $tmp240 $tmp227.y 	%argrw{"wrr"}
	add		$tmp242 $tmp239 $tmp241 	%argrw{"wrr"}
	mxcompref	$tmp243 ___682_m $const4 $const25 	%argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp227.z 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	mxcompref	$tmp246 ___682_m $const41 $const25 	%argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp227.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp245 $tmp247 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp248 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp250 ___682_m $const25 $const4 	%argrw{"wrrr"}
	mul		$tmp251 $tmp250 $tmp227.y 	%argrw{"wrr"}
	add		$tmp252 $tmp249 $tmp251 	%argrw{"wrr"}
	mxcompref	$tmp253 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp227.z 	%argrw{"wrr"}
	add		$tmp255 $tmp252 $tmp254 	%argrw{"wrr"}
	mxcompref	$tmp256 ___682_m $const41 $const4 	%argrw{"wrrr"}
	mul		$tmp257 $tmp256 $tmp227.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp255 $tmp257 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp258 ___682_m $const1 $const41 	%line{418} %argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp260 ___682_m $const25 $const41 	%argrw{"wrrr"}
	mul		$tmp261 $tmp260 $tmp227.y 	%argrw{"wrr"}
	add		$tmp262 $tmp259 $tmp261 	%argrw{"wrr"}
	mxcompref	$tmp263 ___682_m $const4 $const41 	%argrw{"wrrr"}
	mul		$tmp264 $tmp263 $tmp227.z 	%argrw{"wrr"}
	add		$tmp265 $tmp262 $tmp264 	%argrw{"wrr"}
	mxcompref	$tmp266 ___682_m $const41 $const41 	%argrw{"wrrr"}
	mul		$tmp267 $tmp266 $tmp227.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp265 $tmp267 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:111
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{111} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:286
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const5 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:287
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const15 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:288
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const29 432 	%line{288} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp268 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp268 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:289
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out NormalMappedShader2_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:290
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:291
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:292
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const44 437 	%line{292} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:293
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:294
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const15 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:295
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out NormalMappedShader2_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{295} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:296
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:297
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const15 	%line{297} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:298
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{298} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:299
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const15 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:300
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{300} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:301
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:302
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const5 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:303
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp269 NormalMappedShader2_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{303} %argrw{"wrr"}
	functioncall	$const45 454 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp269 452 454 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:304
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{304} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:305
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const27 475 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp270 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const29 461 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp271 $tmp270 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp271 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:75
#     {
	gt		$tmp272 NormalMappedShader2_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{75} %argrw{"wrr"}
	if		$tmp272 473 475 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const29 466 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 NormalMappedShader2_specular_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp273 $tmp274 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp275 $const15 $tmp273 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp275 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp276 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp276 $const15 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:79
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:83
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:84
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:306
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const5 	%line{306} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:307
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp277 NormalMappedShader2_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{307} %argrw{"wrr"}
	functioncall	$const45 483 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp277 481 483 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:308
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{308} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:309
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const27 504 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:74
#     if (anisotropy > 0.0)
	mul		$tmp278 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{74} %argrw{"wrr"}
	functioncall	$const29 490 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp279 $tmp278 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp279 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:75
#     {
	gt		$tmp280 NormalMappedShader2_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{75} %argrw{"wrr"}
	if		$tmp280 502 504 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const29 495 	%line{77} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp282 NormalMappedShader2_specular_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp281 $tmp282 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:77
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp283 $const15 $tmp281 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{77} %argrw{"wrr"}
	sqrt		___678_aspect $tmp283 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:78
#         result.y = roughness_sqr * aspect;
	div		$tmp284 ___677_roughness_sqr ___678_aspect 	%line{78} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp284 $const15 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:79
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{79} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:83
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:84
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:310
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:311
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{311} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:312
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:313
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:314
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const33 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:315
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const46 512 	%line{315} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:150
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{150} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:151
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:316
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:317
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const50 524 	%line{317} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp286 $const49 $const51 	%line{134} %argrw{"wrr"}
	if		$tmp286 517 518 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint $const32 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp287 $const49 $const49 	%line{135} %argrw{"wrr"}
	if		$tmp287 521 522 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint $const32 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:136
# }
	closure		$tmp288 $const54 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y NormalMappedShader2_coat_IOR $const48 $const52 $const5 $const53 $const47 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp288 NormalMappedShader2_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:318
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const15 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:319
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const48 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:320
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp289 $const55 normalmap_vector2_out ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const52 NormalMappedShader2_thin_film_thickness $const53 NormalMappedShader2_thin_film_IOR 	%line{320} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp289 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:321
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:322
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const50 540 	%line{322} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp290 $const49 $const51 	%line{134} %argrw{"wrr"}
	if		$tmp290 533 534 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMappedShader2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp291 $const49 $const49 	%line{135} %argrw{"wrr"}
	if		$tmp291 537 538 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMappedShader2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:136
# }
	closure		$tmp292 $const54 normalmap_vector2_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y NormalMappedShader2_specular_IOR $const48 $const52 NormalMappedShader2_thin_film_thickness $const53 NormalMappedShader2_thin_film_IOR 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp292 NormalMappedShader2_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:323
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:324
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const50 552 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:134
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp293 $const51 $const51 	%line{134} %argrw{"wrr"}
	if		$tmp293 545 546 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint NormalMappedShader2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:135
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp294 $const51 $const49 	%line{135} %argrw{"wrr"}
	if		$tmp294 549 550 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint NormalMappedShader2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:136
# }
	closure		$tmp295 $const54 normalmap_vector2_out ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y NormalMappedShader2_specular_IOR $const48 $const52 $const5 $const53 $const47 	%line{136} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp295 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:325
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp296 $const56 normalmap_vector2_out NormalMappedShader2_sheen_color NormalMappedShader2_sheen_roughness 	%line{325} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp296 NormalMappedShader2_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:326
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const15 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:327
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp297 $const57 normalmap_vector2_out ___701_coat_affected_subsurface_color_out 	%line{327} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp297 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:328
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:329
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const58 561 	%line{329} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:144
# #endif
	mul		$tmp298 $const15 ___701_coat_affected_subsurface_color_out 	%line{144} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const59 normalmap_vector2_out $tmp298 $const15 ___701_subsurface_radius_scaled_out NormalMappedShader2_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:330
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const60 566 	%line{330} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp299 $const15 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp300 ___701_subsurface_bsdf_out $tmp299 	%argrw{"wrr"}
	mul		$tmp301 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp300 $tmp301 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:331
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp302 $const61 normalmap_vector2_out ___701_coat_affected_diffuse_color_out NormalMappedShader2_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{331} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp302 NormalMappedShader2_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:332
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const60 573 	%line{332} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp303 $const15 NormalMappedShader2_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp304 ___701_diffuse_bsdf_out $tmp303 	%argrw{"wrr"}
	mul		$tmp305 ___701_selected_subsurface_bsdf_out NormalMappedShader2_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp304 $tmp305 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:333
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const62 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{333} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:334
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const60 579 	%line{334} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp306 $const15 NormalMappedShader2_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp307 ___701_sheen_layer_out $tmp306 	%argrw{"wrr"}
	mul		$tmp308 ___701_transmission_bsdf_out NormalMappedShader2_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp307 $tmp308 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:335
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const62 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{335} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:336
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const60 585 	%line{336} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp309 $const15 NormalMappedShader2_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp310 ___701_specular_layer_out $tmp309 	%argrw{"wrr"}
	mul		$tmp311 ___701_metal_bsdf_out NormalMappedShader2_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp310 $tmp311 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:337
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:338
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const62 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{338} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:339
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const63 ___701_emission_weight_out 	%line{339} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:340
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out NormalMappedShader2_coat_color 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:341
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:342
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const65 602 	%line{342} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:235
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp314 I 	%line{235} %argrw{"wr"}
	dot		$tmp313 N $tmp314 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp313 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:236
#     result = base * f;
	functioncall	$const66 601 	%line{236} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:229
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp315 $const15 ___699_NdotV 	%line{229} %argrw{"wrr"}
	functioncall	$const29 599 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp316 $tmp315 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp316 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:230
# }
	pow		$tmp317 ___698_x $const64 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{230} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const33 $tmp317 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:237
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:343
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const60 607 	%line{343} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp318 $const15 NormalMappedShader2_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp319 ___701_emission_edf_out $tmp318 	%argrw{"wrr"}
	mul		$tmp320 ___701_coat_emission_edf_out NormalMappedShader2_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp319 $tmp320 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:344
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{344} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:345
#     out = shader_constructor_out;
	functioncall	$const67 617 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:242
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:243
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:244
# }
	functioncall	$const29 616 	%line{244} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp321 ___701_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp321 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:244
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:346
# }
	assign		NormalMappedShader2_out.bsdf ___701_shader_constructor_out.bsdf 	%line{346} %argrw{"wr"}
	assign		NormalMappedShader2_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		NormalMappedShader2_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:792
#     out = NormalMappedMaterial2_out;
	functioncall	$const68 630 	%line{792} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:351
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const29 624 	%line{351} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp322 NormalMappedShader2_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp322 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:352
# }
	add		$tmp323 NormalMappedShader2_out.bsdf NormalMappedShader2_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl"} %line{352} %argrw{"wrr"}
	mul		$tmp324 $tmp323 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp325 $const69 	%argrw{"wr"}
	sub		$tmp326 $const15 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp327 $tmp325 $tmp326 	%argrw{"wrr"}
	add		NormalMappedMaterial2_out $tmp324 $tmp327 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\normalmapped_surfaceshader\\NormalMappedMaterial2.osl:793
# }
	assign		out NormalMappedMaterial2_out 	%line{793} %argrw{"wr"}
	end
