OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\shader_ops\mix_surface_with_opacity_out.oso
shader mix_surface_with_opacity_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"out"} 
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	checker1_scale			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	checker1_scale.x	6		%read{13,13} %write{2147483647,-1} %mystruct{checker1_scale} %mystructfield{0}
param	float	checker1_scale.y	6		%read{14,14} %write{2147483647,-1} %mystruct{checker1_scale} %mystructfield{1}
param	float	standard_surface2_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{586,1021} %write{2147483647,-1}
param	color	standard_surface2_base_color	0.100000001 0.100000001 0.850000024		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{586,605} %write{2147483647,-1}
param	float	standard_surface2_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{1020,1020} %write{2147483647,-1}
param	float	standard_surface2_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{1035,1037} %write{2147483647,-1}
param	float	standard_surface2_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{587,993} %write{2147483647,-1}
param	color	standard_surface2_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{587,991} %write{2147483647,-1}
param	float	standard_surface2_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{591,893} %write{2147483647,-1}
param	float	standard_surface2_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{992,1004} %write{2147483647,-1}
param	float	standard_surface2_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{915,947} %write{2147483647,-1}
param	float	standard_surface2_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{590,590} %write{2147483647,-1}
param	float	standard_surface2_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{1029,1031} %write{2147483647,-1}
param	color	standard_surface2_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{999,1003} %write{2147483647,-1}
param	float	standard_surface2_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	standard_surface2_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface2_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface2_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface2_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{591,591} %write{2147483647,-1}
param	float	standard_surface2_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{1023,1025} %write{2147483647,-1}
param	color	standard_surface2_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{594,594} %write{2147483647,-1}
param	color	standard_surface2_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{600,600} %write{2147483647,-1}
param	float	standard_surface2_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{600,600} %write{2147483647,-1}
param	float	standard_surface2_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{1014,1014} %write{2147483647,-1}
param	float	standard_surface2_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{1007,1007} %write{2147483647,-1}
param	color	standard_surface2_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{1006,1006} %write{2147483647,-1}
param	float	standard_surface2_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{1006,1006} %write{2147483647,-1}
param	float	standard_surface2_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{588,1059} %write{2147483647,-1}
param	color	standard_surface2_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{607,1042} %write{2147483647,-1}
param	float	standard_surface2_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{566,762} %write{2147483647,-1}
param	float	standard_surface2_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{570,901} %write{2147483647,-1}
param	float	standard_surface2_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{585,585} %write{2147483647,-1}
param	float	standard_surface2_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{609,976} %write{2147483647,-1}
param	float	standard_surface2_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{886,886} %write{2147483647,-1}
param	float	standard_surface2_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{588,588} %write{2147483647,-1}
param	float	standard_surface2_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{980,992} %write{2147483647,-1}
param	float	standard_surface2_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{980,992} %write{2147483647,-1}
param	float	standard_surface2_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{612,612} %write{2147483647,-1}
param	color	standard_surface2_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{612,612} %write{2147483647,-1}
param	color	standard_surface2_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{615,615} %write{2147483647,-1}
param	int	standard_surface2_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{601,601} %write{2147483647,-1}
param	color	checker3_fg	0 0 0		%read{41,41} %write{2147483647,-1}
param	color	checker3_bg	1 1 1		%read{41,41} %write{2147483647,-1}
param	float	standard_surface1_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{70,505} %write{2147483647,-1}
param	color	standard_surface1_base_color	0.850000024 0.100000001 0.100000001		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{70,89} %write{2147483647,-1}
param	float	standard_surface1_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{504,504} %write{2147483647,-1}
param	float	standard_surface1_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{519,521} %write{2147483647,-1}
param	float	standard_surface1_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{71,477} %write{2147483647,-1}
param	color	standard_surface1_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{71,475} %write{2147483647,-1}
param	float	standard_surface1_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{75,377} %write{2147483647,-1}
param	float	standard_surface1_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{476,488} %write{2147483647,-1}
param	float	standard_surface1_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{399,431} %write{2147483647,-1}
param	float	standard_surface1_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{74,74} %write{2147483647,-1}
param	float	standard_surface1_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{513,515} %write{2147483647,-1}
param	color	standard_surface1_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{483,487} %write{2147483647,-1}
param	float	standard_surface1_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	standard_surface1_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface1_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface1_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface1_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{75,75} %write{2147483647,-1}
param	float	standard_surface1_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{507,509} %write{2147483647,-1}
param	color	standard_surface1_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{78,78} %write{2147483647,-1}
param	color	standard_surface1_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{84,84} %write{2147483647,-1}
param	float	standard_surface1_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{84,84} %write{2147483647,-1}
param	float	standard_surface1_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{498,498} %write{2147483647,-1}
param	float	standard_surface1_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{491,491} %write{2147483647,-1}
param	color	standard_surface1_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{490,490} %write{2147483647,-1}
param	float	standard_surface1_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{490,490} %write{2147483647,-1}
param	float	standard_surface1_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{72,543} %write{2147483647,-1}
param	color	standard_surface1_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{91,526} %write{2147483647,-1}
param	float	standard_surface1_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{50,246} %write{2147483647,-1}
param	float	standard_surface1_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{54,385} %write{2147483647,-1}
param	float	standard_surface1_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{69,69} %write{2147483647,-1}
param	float	standard_surface1_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{93,460} %write{2147483647,-1}
param	float	standard_surface1_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{370,370} %write{2147483647,-1}
param	float	standard_surface1_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{72,72} %write{2147483647,-1}
param	float	standard_surface1_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{464,476} %write{2147483647,-1}
param	float	standard_surface1_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{464,476} %write{2147483647,-1}
param	float	standard_surface1_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{96,96} %write{2147483647,-1}
param	color	standard_surface1_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{96,96} %write{2147483647,-1}
param	int	standard_surface1_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{85,85} %write{2147483647,-1}
param	float	mix_surface_shader_mix	0.699999988		%meta{float,slidermin,0} %meta{float,slidermax,1} %meta{string,widget,"number"}  %read{1079,1090} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{1105,1105}
global	vector	I	%read{529,1045} %write{2147483647,-1}
global	normal	N	%read{2,1046} %write{2147483647,-1}
global	float	u	%read{10,10} %write{2147483647,-1}
global	float	v	%read{11,11} %write{2147483647,-1}
local	float	___669_texcoord1_out.x	%read{13,13} %write{10,10} %mystruct{___669_texcoord1_out} %mystructfield{0}
local	float	___669_texcoord1_out.y	%read{14,14} %write{11,11} %mystruct{___669_texcoord1_out} %mystructfield{1}
local	float	___669_mult1_out.x	%read{19,27} %write{13,13} %mystruct{___669_mult1_out} %mystructfield{0}
local	float	___669_mult1_out.y	%read{21,29} %write{14,14} %mystruct{___669_mult1_out} %mystructfield{1}
local	int	___669_mult1_x_index_tmp	%read{17,17} %write{15,15}
local	float	___669_mult1_x_out	%read{31,31} %write{19,21}
local	int	___669_mult1_y_index_tmp	%read{25,25} %write{23,23}
local	float	___669_mult1_y_out	%read{32,32} %write{27,29}
local	float	___669_floor1_out	%read{33,33} %write{31,31}
local	float	___669_floor2_out	%read{33,33} %write{32,32}
local	float	___669_add1_out	%read{36,39} %write{33,33}
local	float	___669_mod1_in2_tmp	%read{36,38} %write{34,34}
local	float	___669_mod1_out	%read{40,40} %write{39,39}
local	float	___670_roughness_sqr	%read{61,957} %write{53,943}
local	float	___671_aspect	%read{61,954} %write{60,950}
local	vector	___674_nAxis	%read{111,827} %write{107,769}
local	float	___674_s	%read{121,823} %write{108,770}
local	float	___674_c	%read{110,829} %write{109,771}
local	float	___674_oc	%read{112,826} %write{110,772}
local	float	___675_rotationRadians	%read{108,771} %write{105,767}
local	matrix	___675_m	%read{174,877} %write{168,830}
local	float	___675_trans.x	%read{218,880} %write{184,846} %mystruct{___675_trans} %mystructfield{0}
local	float	___675_trans.y	%read{218,880} %write{195,857} %mystruct{___675_trans} %mystructfield{1}
local	float	___675_trans.z	%read{218,880} %write{206,868} %mystruct{___675_trans} %mystructfield{2}
local	float	___675_trans.w	%read{2147483647,-1} %write{217,879} %mystruct{___675_trans} %mystructfield{3}
local	color	___676_r	%read{227,757} %write{226,742}
local	color	___676_r_sqrt	%read{231,748} %write{227,743}
local	color	___676_n_min	%read{234,750} %write{230,746}
local	color	___676_n_max	%read{234,750} %write{233,749}
local	color	___676_np1	%read{237,753} %write{235,751}
local	color	___676_nm1	%read{239,755} %write{236,752}
local	color	___676_k2	%read{244,761} %write{242,760}
local	color	___677_reflection_tint	%read{460,1004} %write{454,999}
local	color	___677_transmission_tint	%read{460,1004} %write{458,1003}
local	color	___679_combine_out	%read{449,965} %write{448,964}
local	float	___691_x	%read{537,1053} %write{536,1052}
local	float	___692_NdotV	%read{533,1049} %write{531,1047}
local	color	___692_f	%read{539,1055} %write{538,1054}
local	closure color	___694_null_closure	%read{450,1062} %write{46,562}
local	float	___694_coat_roughness_vector_out.x	%read{63,976} %write{47,582} %mystruct{___694_coat_roughness_vector_out} %mystructfield{0}
local	float	___694_coat_roughness_vector_out.y	%read{65,976} %write{48,583} %mystruct{___694_coat_roughness_vector_out} %mystructfield{1}
local	float	___694_coat_tangent_rotate_degree_in2_tmp	%read{69,585} %write{68,584}
local	float	___694_coat_tangent_rotate_degree_out	%read{105,621} %write{69,585}
local	color	___694_metal_reflectivity_out	%read{225,741} %write{70,586}
local	color	___694_metal_edgecolor_out	%read{234,750} %write{71,587}
local	float	___694_coat_affect_roughness_multiply1_out	%read{246,762} %write{72,588}
local	float	___694_tangent_rotate_degree_in2_tmp	%read{74,590} %write{73,589}
local	float	___694_tangent_rotate_degree_out	%read{251,767} %write{74,590}
local	float	___694_transmission_roughness_add_out	%read{368,884} %write{75,591}
local	float	___694_subsurface_color_nonnegative_in2_tmp	%read{77,593} %write{76,592}
local	color	___694_subsurface_color_nonnegative_out	%read{442,958} %write{78,594}
local	float	___694_coat_clamped_low_tmp	%read{83,599} %write{79,595}
local	float	___694_coat_clamped_high_tmp	%read{82,598} %write{80,596}
local	float	___694_coat_clamped_out	%read{370,886} %write{83,599}
local	color	___694_subsurface_radius_scaled_out	%read{498,1014} %write{84,600}
local	float	___694_subsurface_selector_out	%read{500,1018} %write{86,602}
local	float	___694_base_color_nonnegative_in2_tmp	%read{88,604} %write{87,603}
local	color	___694_base_color_nonnegative_out	%read{443,959} %write{89,605}
local	color	___694_coat_attenuation_bg_tmp	%read{91,607} %write{90,606}
local	color	___694_coat_attenuation_out	%read{523,1039} %write{91,607}
local	float	___694_one_minus_coat_ior_in1_tmp	%read{93,609} %write{92,608}
local	float	___694_one_minus_coat_ior_out	%read{371,887} %write{93,609}
local	float	___694_one_plus_coat_ior_in1_tmp	%read{95,611} %write{94,610}
local	float	___694_one_plus_coat_ior_out	%read{371,887} %write{95,611}
local	color	___694_emission_weight_out	%read{525,1041} %write{96,612}
local	color	___694_opacity_luminance_out	%read{374,890} %write{97,616}
local	vector	___694_coat_tangent_rotate_out	%read{375,891} %write{101,734}
local	color	___694_artistic_ior_ior	%read{235,980} %write{219,750}
local	color	___694_artistic_ior_extinction	%read{464,980} %write{220,761}
local	float	___694_coat_affect_roughness_multiply2_out	%read{377,896} %write{246,762}
local	vector	___694_tangent_rotate_out	%read{378,894} %write{247,880}
local	float	___694_transmission_roughness_clamped_low_tmp	%read{369,885} %write{365,881}
local	float	___694_transmission_roughness_clamped_high_tmp	%read{368,884} %write{366,882}
local	float	___694_transmission_roughness_clamped_out	%read{380,896} %write{369,885}
local	float	___694_coat_gamma_multiply_out	%read{382,898} %write{370,886}
local	float	___694_coat_ior_to_F0_sqrt_out	%read{383,899} %write{371,887}
local	int	___694_opacity_luminance_float_index_tmp	%read{374,890} %write{372,888}
local	float	___694_opacity_luminance_float_out	%read{552,1068} %write{374,890}
local	vector	___694_coat_tangent_rotate_normalize_out	%read{388,904} %write{375,891}
local	float	___694_coat_affected_roughness_fg_tmp	%read{377,893} %write{376,892}
local	float	___694_coat_affected_roughness_out	%read{395,911} %write{377,893}
local	vector	___694_tangent_rotate_normalize_out	%read{417,933} %write{378,894}
local	float	___694_coat_affected_transmission_roughness_fg_tmp	%read{380,896} %write{379,895}
local	float	___694_coat_affected_transmission_roughness_out	%read{424,940} %write{380,896}
local	float	___694_coat_gamma_in2_tmp	%read{382,898} %write{381,897}
local	float	___694_coat_gamma_out	%read{442,959} %write{382,898}
local	float	___694_coat_ior_to_F0_out	%read{445,961} %write{383,899}
local	float	___694_coat_tangent_value2_tmp	%read{385,901} %write{384,900}
local	vector	___694_coat_tangent_out	%read{460,976} %write{388,906}
local	float	___694_main_roughness_out.x	%read{408,992} %write{392,927} %mystruct{___694_main_roughness_out} %mystructfield{0}
local	float	___694_main_roughness_out.y	%read{410,992} %write{393,928} %mystruct{___694_main_roughness_out} %mystructfield{1}
local	float	___694_main_tangent_value2_tmp	%read{414,930} %write{413,929}
local	vector	___694_main_tangent_out	%read{464,1004} %write{417,935}
local	float	___694_transmission_roughness_out.x	%read{437,1004} %write{421,956} %mystruct{___694_transmission_roughness_out} %mystructfield{0}
local	float	___694_transmission_roughness_out.y	%read{439,1004} %write{422,957} %mystruct{___694_transmission_roughness_out} %mystructfield{1}
local	color	___694_coat_affected_subsurface_color_out	%read{493,1013} %write{442,958}
local	color	___694_coat_affected_diffuse_color_out	%read{504,1020} %write{443,959}
local	float	___694_one_minus_coat_ior_to_F0_in1_tmp	%read{445,961} %write{444,960}
local	float	___694_one_minus_coat_ior_to_F0_out	%read{448,964} %write{445,961}
local	color	___694_emission_color0_out	%read{538,1054} %write{446,965}
local	closure color	___694_coat_bsdf_out	%read{524,1040} %write{450,977}
local	float	___694_metal_bsdf_weight_tmp	%read{465,981} %write{462,978}
local	string	___694_metal_bsdf_distribution_tmp	%read{464,980} %write{463,979}
local	closure color	___694_metal_bsdf_out	%read{521,1037} %write{465,981}
local	closure color	___694_specular_bsdf_out	%read{517,1033} %write{466,993}
local	closure color	___694_transmission_bsdf_out	%read{515,1031} %write{478,1005}
local	closure color	___694_sheen_bsdf_out	%read{511,1027} %write{491,1007}
local	float	___694_translucent_bsdf_weight_tmp	%read{494,1010} %write{492,1008}
local	closure color	___694_translucent_bsdf_out	%read{502,1018} %write{494,1010}
local	closure color	___694_subsurface_bsdf_out	%read{501,1017} %write{495,1014}
local	closure color	___694_selected_subsurface_bsdf_out	%read{509,1025} %write{503,1019}
local	closure color	___694_diffuse_bsdf_out	%read{508,1024} %write{505,1021}
local	closure color	___694_subsurface_mix_out	%read{511,1027} %write{510,1026}
local	closure color	___694_sheen_layer_out	%read{514,1030} %write{511,1027}
local	closure color	___694_transmission_mix_out	%read{517,1033} %write{516,1032}
local	closure color	___694_specular_layer_out	%read{520,1036} %write{517,1033}
local	closure color	___694_metalness_mix_out	%read{523,1039} %write{522,1038}
local	closure color	___694_thin_film_layer_attenuated_out	%read{524,1040} %write{523,1039}
local	closure color	___694_coat_layer_out	%read{549,1065} %write{524,1040}
local	closure color	___694_emission_edf_out	%read{526,1058} %write{525,1041}
local	closure color	___694_coat_tinted_emission_edf_out	%read{539,1055} %write{526,1042}
local	closure color	___694_coat_emission_edf_out	%read{543,1059} %write{527,1055}
local	closure color	___694_blended_coat_emission_edf_out	%read{550,1066} %write{544,1060}
local	closure color	___694_shader_constructor_out.bsdf	%read{555,1071} %write{545,1065} %mystruct{___694_shader_constructor_out} %mystructfield{0}
local	closure color	___694_shader_constructor_out.edf	%read{556,1072} %write{546,1066} %mystruct{___694_shader_constructor_out} %mystructfield{1}
local	float	___694_shader_constructor_out.opacity	%read{554,1073} %write{547,1070} %mystruct{___694_shader_constructor_out} %mystructfield{2}
local	float	___696_opacity_weight	%read{1100,1102} %write{1098,1098}
local	closure color	null_closure	%read{42,1093} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{107,1020} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{169,935} %write{7,7}
local	float	checker1_out	%read{41,41} %write{8,40}
local	color	checker3_out	%read{99,99} %write{41,41}
local	closure color	standard_surface1_out.bsdf	%read{1081,1081} %write{42,555} %mystruct{standard_surface1_out} %mystructfield{0}
local	closure color	standard_surface1_out.edf	%read{1087,1087} %write{43,556} %mystruct{standard_surface1_out} %mystructfield{1}
local	float	standard_surface1_out.opacity	%read{1090,1090} %write{44,557} %mystruct{standard_surface1_out} %mystructfield{2}
local	closure color	standard_surface2_out.bsdf	%read{1080,1080} %write{558,1071} %mystruct{standard_surface2_out} %mystructfield{0}
local	closure color	standard_surface2_out.edf	%read{1086,1086} %write{559,1072} %mystruct{standard_surface2_out} %mystructfield{1}
local	float	standard_surface2_out.opacity	%read{1090,1090} %write{560,1073} %mystruct{standard_surface2_out} %mystructfield{2}
local	closure color	mix_surface_shader_out.bsdf	%read{1083,1099} %write{1074,1083} %mystruct{mix_surface_shader_out} %mystructfield{0}
local	closure color	mix_surface_shader_out.edf	%read{1089,1099} %write{1075,1089} %mystruct{mix_surface_shader_out} %mystructfield{1}
local	float	mix_surface_shader_out.opacity	%read{1091,1097} %write{1076,1091} %mystruct{mix_surface_shader_out} %mystructfield{2}
local	closure color	material_out	%read{1105,1105} %write{1104,1104}
const	int	$const1	0		%read{0,888} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,835} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,874} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,1098} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	string	$const6	"NG_checker_float"		%read{9,9} %write{2147483647,-1}
const	string	$const7	"__operator__mul__"		%read{12,12} %write{2147483647,-1}
const	string	$const8	"mx_extract"		%read{16,889} %write{2147483647,-1}
temp	int	$tmp5	%read{18,18} %write{17,17}
const	int	$const9	1		%read{23,871} %write{2147483647,-1}
temp	int	$tmp6	%read{26,26} %write{25,25}
const	float	$const10	2		%read{34,34} %write{2147483647,-1}
const	string	$const11	"mod"		%read{35,35} %write{2147483647,-1}
temp	float	$tmp7	%read{38,38} %write{37,37}
temp	float	$tmp8	%read{37,37} %write{36,36}
temp	float	$tmp9	%read{39,39} %write{38,38}
const	float	$const12	1		%read{44,1102} %write{2147483647,-1}
const	string	$const13	"NG_standard_surface_surfaceshader_100"		%read{45,561} %write{2147483647,-1}
const	string	$const14	"mx_roughness_anisotropy"		%read{49,939} %write{2147483647,-1}
temp	float	$tmp10	%read{52,52} %write{50,50}
const	float	$const15	1e-08		%read{53,943} %write{2147483647,-1}
const	string	$const16	"clamp"		%read{51,1096} %write{2147483647,-1}
temp	float	$tmp11	%read{53,53} %write{52,52}
temp	int	$tmp12	%read{55,55} %write{54,54}
temp	float	$tmp13	%read{59,59} %write{58,58}
const	float	$const17	0.98		%read{57,947} %write{2147483647,-1}
temp	float	$tmp14	%read{58,58} %write{57,57}
temp	float	$tmp15	%read{60,60} %write{59,59}
temp	float	$tmp16	%read{62,62} %write{61,61}
const	float	$const18	360		%read{68,589} %write{2147483647,-1}
temp	color	$tmp17	%read{78,78} %write{77,77}
temp	float	$tmp18	%read{83,83} %write{82,82}
temp	float	$tmp19	%read{86,86} %write{85,85}
temp	color	$tmp20	%read{89,89} %write{88,88}
const	color	$const19	1 1 1		%read{90,975} %write{2147483647,-1}
const	color	$const20	0 0 0		%read{97,1054} %write{2147483647,-1}
const	color	$const21	0.272229 0.674082 0.053689		%read{99,615} %write{2147483647,-1}
const	string	$const22	"mx_luminance_color3"		%read{98,614} %write{2147483647,-1}
temp	float	$tmp22	%read{100,100} %write{99,99}
const	vector	$const23	0 0 0		%read{101,763} %write{2147483647,-1}
const	string	$const24	"mx_rotate_vector3"		%read{102,764} %write{2147483647,-1}
const	string	$const25	"radians"		%read{103,765} %write{2147483647,-1}
const	float	$const26	3.1415927		%read{104,766} %write{2147483647,-1}
const	float	$const27	180		%read{104,766} %write{2147483647,-1}
temp	float	$tmp23	%read{105,105} %write{104,104}
const	string	$const28	"rotationMatrix"		%read{106,768} %write{2147483647,-1}
temp	float	$tmp24	%read{112,112} %write{111,111}
temp	float	$tmp25	%read{114,114} %write{112,112}
temp	float	$tmp26	%read{114,114} %write{113,113}
temp	float	$tmp27	%read{115,115} %write{114,114}
temp	float	$tmp28	%read{168,168} %write{115,115}
temp	float	$tmp29	%read{117,117} %write{116,116}
temp	float	$tmp30	%read{119,119} %write{117,117}
temp	float	$tmp31	%read{119,119} %write{118,118}
temp	float	$tmp32	%read{122,122} %write{119,119}
temp	float	$tmp33	%read{121,121} %write{120,120}
temp	float	$tmp34	%read{122,122} %write{121,121}
temp	float	$tmp35	%read{168,168} %write{122,122}
temp	float	$tmp36	%read{124,124} %write{123,123}
temp	float	$tmp37	%read{126,126} %write{124,124}
temp	float	$tmp38	%read{126,126} %write{125,125}
temp	float	$tmp39	%read{129,129} %write{126,126}
temp	float	$tmp40	%read{128,128} %write{127,127}
temp	float	$tmp41	%read{129,129} %write{128,128}
temp	float	$tmp42	%read{168,168} %write{129,129}
temp	float	$tmp43	%read{131,131} %write{130,130}
temp	float	$tmp44	%read{133,133} %write{131,131}
temp	float	$tmp45	%read{133,133} %write{132,132}
temp	float	$tmp46	%read{136,136} %write{133,133}
temp	float	$tmp47	%read{135,135} %write{134,134}
temp	float	$tmp48	%read{136,136} %write{135,135}
temp	float	$tmp49	%read{168,168} %write{136,136}
temp	float	$tmp50	%read{138,138} %write{137,137}
temp	float	$tmp51	%read{140,140} %write{138,138}
temp	float	$tmp52	%read{140,140} %write{139,139}
temp	float	$tmp53	%read{141,141} %write{140,140}
temp	float	$tmp54	%read{168,168} %write{141,141}
temp	float	$tmp55	%read{143,143} %write{142,142}
temp	float	$tmp56	%read{145,145} %write{143,143}
temp	float	$tmp57	%read{145,145} %write{144,144}
temp	float	$tmp58	%read{148,148} %write{145,145}
temp	float	$tmp59	%read{147,147} %write{146,146}
temp	float	$tmp60	%read{148,148} %write{147,147}
temp	float	$tmp61	%read{168,168} %write{148,148}
temp	float	$tmp62	%read{150,150} %write{149,149}
temp	float	$tmp63	%read{152,152} %write{150,150}
temp	float	$tmp64	%read{152,152} %write{151,151}
temp	float	$tmp65	%read{155,155} %write{152,152}
temp	float	$tmp66	%read{154,154} %write{153,153}
temp	float	$tmp67	%read{155,155} %write{154,154}
temp	float	$tmp68	%read{168,168} %write{155,155}
temp	float	$tmp69	%read{157,157} %write{156,156}
temp	float	$tmp70	%read{159,159} %write{157,157}
temp	float	$tmp71	%read{159,159} %write{158,158}
temp	float	$tmp72	%read{162,162} %write{159,159}
temp	float	$tmp73	%read{161,161} %write{160,160}
temp	float	$tmp74	%read{162,162} %write{161,161}
temp	float	$tmp75	%read{168,168} %write{162,162}
temp	float	$tmp76	%read{164,164} %write{163,163}
temp	float	$tmp77	%read{166,166} %write{164,164}
temp	float	$tmp78	%read{166,166} %write{165,165}
temp	float	$tmp79	%read{167,167} %write{166,166}
temp	float	$tmp80	%read{168,168} %write{167,167}
temp	float	$tmp81.x	%read{175,208} %write{169,169}
temp	float	$tmp81.y	%read{177,210} %write{170,170}
temp	float	$tmp81.z	%read{180,213} %write{171,171}
temp	float	$tmp81.w	%read{183,216} %write{172,172}
temp	float	$tmp82	%read{175,175} %write{174,174}
temp	float	$tmp83	%read{178,178} %write{175,175}
temp	float	$tmp84	%read{177,177} %write{176,176}
temp	float	$tmp85	%read{178,178} %write{177,177}
temp	float	$tmp86	%read{181,181} %write{178,178}
temp	float	$tmp87	%read{180,180} %write{179,179}
temp	float	$tmp88	%read{181,181} %write{180,180}
temp	float	$tmp89	%read{184,184} %write{181,181}
const	int	$const29	3		%read{182,877} %write{2147483647,-1}
temp	float	$tmp90	%read{183,183} %write{182,182}
temp	float	$tmp91	%read{184,184} %write{183,183}
temp	float	$tmp92	%read{186,186} %write{185,185}
temp	float	$tmp93	%read{189,189} %write{186,186}
temp	float	$tmp94	%read{188,188} %write{187,187}
temp	float	$tmp95	%read{189,189} %write{188,188}
temp	float	$tmp96	%read{192,192} %write{189,189}
temp	float	$tmp97	%read{191,191} %write{190,190}
temp	float	$tmp98	%read{192,192} %write{191,191}
temp	float	$tmp99	%read{195,195} %write{192,192}
temp	float	$tmp100	%read{194,194} %write{193,193}
temp	float	$tmp101	%read{195,195} %write{194,194}
temp	float	$tmp102	%read{197,197} %write{196,196}
temp	float	$tmp103	%read{200,200} %write{197,197}
temp	float	$tmp104	%read{199,199} %write{198,198}
temp	float	$tmp105	%read{200,200} %write{199,199}
temp	float	$tmp106	%read{203,203} %write{200,200}
temp	float	$tmp107	%read{202,202} %write{201,201}
temp	float	$tmp108	%read{203,203} %write{202,202}
temp	float	$tmp109	%read{206,206} %write{203,203}
temp	float	$tmp110	%read{205,205} %write{204,204}
temp	float	$tmp111	%read{206,206} %write{205,205}
temp	float	$tmp112	%read{208,208} %write{207,207}
temp	float	$tmp113	%read{211,211} %write{208,208}
temp	float	$tmp114	%read{210,210} %write{209,209}
temp	float	$tmp115	%read{211,211} %write{210,210}
temp	float	$tmp116	%read{214,214} %write{211,211}
temp	float	$tmp117	%read{213,213} %write{212,212}
temp	float	$tmp118	%read{214,214} %write{213,213}
temp	float	$tmp119	%read{217,217} %write{214,214}
temp	float	$tmp120	%read{216,216} %write{215,215}
temp	float	$tmp121	%read{217,217} %write{216,216}
const	string	$const30	"mx_artistic_ior"		%read{221,737} %write{2147483647,-1}
temp	color	$tmp122	%read{226,226} %write{222,222}
const	float	$const31	0.99		%read{223,739} %write{2147483647,-1}
temp	color	$tmp123	%read{225,225} %write{223,223}
temp	color	$tmp124	%read{226,226} %write{225,225}
temp	color	$tmp125	%read{230,230} %write{228,228}
temp	color	$tmp126	%read{230,230} %write{229,229}
temp	color	$tmp127	%read{233,233} %write{231,231}
temp	color	$tmp128	%read{233,233} %write{232,232}
temp	color	$tmp129	%read{238,238} %write{237,237}
temp	color	$tmp130	%read{240,240} %write{238,238}
temp	color	$tmp131	%read{240,240} %write{239,239}
temp	color	$tmp132	%read{242,242} %write{240,240}
temp	color	$tmp133	%read{242,242} %write{241,241}
temp	color	$tmp134	%read{244,244} %write{243,243}
temp	float	$tmp135	%read{251,251} %write{250,250}
temp	float	$tmp136	%read{258,258} %write{257,257}
temp	float	$tmp137	%read{260,260} %write{258,258}
temp	float	$tmp138	%read{260,260} %write{259,259}
temp	float	$tmp139	%read{261,261} %write{260,260}
temp	float	$tmp140	%read{314,314} %write{261,261}
temp	float	$tmp141	%read{263,263} %write{262,262}
temp	float	$tmp142	%read{265,265} %write{263,263}
temp	float	$tmp143	%read{265,265} %write{264,264}
temp	float	$tmp144	%read{268,268} %write{265,265}
temp	float	$tmp145	%read{267,267} %write{266,266}
temp	float	$tmp146	%read{268,268} %write{267,267}
temp	float	$tmp147	%read{314,314} %write{268,268}
temp	float	$tmp148	%read{270,270} %write{269,269}
temp	float	$tmp149	%read{272,272} %write{270,270}
temp	float	$tmp150	%read{272,272} %write{271,271}
temp	float	$tmp151	%read{275,275} %write{272,272}
temp	float	$tmp152	%read{274,274} %write{273,273}
temp	float	$tmp153	%read{275,275} %write{274,274}
temp	float	$tmp154	%read{314,314} %write{275,275}
temp	float	$tmp155	%read{277,277} %write{276,276}
temp	float	$tmp156	%read{279,279} %write{277,277}
temp	float	$tmp157	%read{279,279} %write{278,278}
temp	float	$tmp158	%read{282,282} %write{279,279}
temp	float	$tmp159	%read{281,281} %write{280,280}
temp	float	$tmp160	%read{282,282} %write{281,281}
temp	float	$tmp161	%read{314,314} %write{282,282}
temp	float	$tmp162	%read{284,284} %write{283,283}
temp	float	$tmp163	%read{286,286} %write{284,284}
temp	float	$tmp164	%read{286,286} %write{285,285}
temp	float	$tmp165	%read{287,287} %write{286,286}
temp	float	$tmp166	%read{314,314} %write{287,287}
temp	float	$tmp167	%read{289,289} %write{288,288}
temp	float	$tmp168	%read{291,291} %write{289,289}
temp	float	$tmp169	%read{291,291} %write{290,290}
temp	float	$tmp170	%read{294,294} %write{291,291}
temp	float	$tmp171	%read{293,293} %write{292,292}
temp	float	$tmp172	%read{294,294} %write{293,293}
temp	float	$tmp173	%read{314,314} %write{294,294}
temp	float	$tmp174	%read{296,296} %write{295,295}
temp	float	$tmp175	%read{298,298} %write{296,296}
temp	float	$tmp176	%read{298,298} %write{297,297}
temp	float	$tmp177	%read{301,301} %write{298,298}
temp	float	$tmp178	%read{300,300} %write{299,299}
temp	float	$tmp179	%read{301,301} %write{300,300}
temp	float	$tmp180	%read{314,314} %write{301,301}
temp	float	$tmp181	%read{303,303} %write{302,302}
temp	float	$tmp182	%read{305,305} %write{303,303}
temp	float	$tmp183	%read{305,305} %write{304,304}
temp	float	$tmp184	%read{308,308} %write{305,305}
temp	float	$tmp185	%read{307,307} %write{306,306}
temp	float	$tmp186	%read{308,308} %write{307,307}
temp	float	$tmp187	%read{314,314} %write{308,308}
temp	float	$tmp188	%read{310,310} %write{309,309}
temp	float	$tmp189	%read{312,312} %write{310,310}
temp	float	$tmp190	%read{312,312} %write{311,311}
temp	float	$tmp191	%read{313,313} %write{312,312}
temp	float	$tmp192	%read{314,314} %write{313,313}
temp	float	$tmp193.x	%read{321,354} %write{315,315}
temp	float	$tmp193.y	%read{323,356} %write{316,316}
temp	float	$tmp193.z	%read{326,359} %write{317,317}
temp	float	$tmp193.w	%read{329,362} %write{318,318}
temp	float	$tmp194	%read{321,321} %write{320,320}
temp	float	$tmp195	%read{324,324} %write{321,321}
temp	float	$tmp196	%read{323,323} %write{322,322}
temp	float	$tmp197	%read{324,324} %write{323,323}
temp	float	$tmp198	%read{327,327} %write{324,324}
temp	float	$tmp199	%read{326,326} %write{325,325}
temp	float	$tmp200	%read{327,327} %write{326,326}
temp	float	$tmp201	%read{330,330} %write{327,327}
temp	float	$tmp202	%read{329,329} %write{328,328}
temp	float	$tmp203	%read{330,330} %write{329,329}
temp	float	$tmp204	%read{332,332} %write{331,331}
temp	float	$tmp205	%read{335,335} %write{332,332}
temp	float	$tmp206	%read{334,334} %write{333,333}
temp	float	$tmp207	%read{335,335} %write{334,334}
temp	float	$tmp208	%read{338,338} %write{335,335}
temp	float	$tmp209	%read{337,337} %write{336,336}
temp	float	$tmp210	%read{338,338} %write{337,337}
temp	float	$tmp211	%read{341,341} %write{338,338}
temp	float	$tmp212	%read{340,340} %write{339,339}
temp	float	$tmp213	%read{341,341} %write{340,340}
temp	float	$tmp214	%read{343,343} %write{342,342}
temp	float	$tmp215	%read{346,346} %write{343,343}
temp	float	$tmp216	%read{345,345} %write{344,344}
temp	float	$tmp217	%read{346,346} %write{345,345}
temp	float	$tmp218	%read{349,349} %write{346,346}
temp	float	$tmp219	%read{348,348} %write{347,347}
temp	float	$tmp220	%read{349,349} %write{348,348}
temp	float	$tmp221	%read{352,352} %write{349,349}
temp	float	$tmp222	%read{351,351} %write{350,350}
temp	float	$tmp223	%read{352,352} %write{351,351}
temp	float	$tmp224	%read{354,354} %write{353,353}
temp	float	$tmp225	%read{357,357} %write{354,354}
temp	float	$tmp226	%read{356,356} %write{355,355}
temp	float	$tmp227	%read{357,357} %write{356,356}
temp	float	$tmp228	%read{360,360} %write{357,357}
temp	float	$tmp229	%read{359,359} %write{358,358}
temp	float	$tmp230	%read{360,360} %write{359,359}
temp	float	$tmp231	%read{363,363} %write{360,360}
temp	float	$tmp232	%read{362,362} %write{361,361}
temp	float	$tmp233	%read{363,363} %write{362,362}
temp	float	$tmp234	%read{369,369} %write{368,368}
temp	int	$tmp235	%read{387,387} %write{385,385}
const	string	$const32	"mx_ternary"		%read{386,931} %write{2147483647,-1}
temp	float	$tmp236	%read{397,397} %write{395,395}
temp	float	$tmp237	%read{398,398} %write{397,397}
temp	int	$tmp238	%read{400,400} %write{399,399}
temp	float	$tmp239	%read{404,404} %write{403,403}
temp	float	$tmp240	%read{403,403} %write{402,402}
temp	float	$tmp241	%read{405,405} %write{404,404}
temp	float	$tmp242	%read{407,407} %write{406,406}
temp	int	$tmp243	%read{416,416} %write{414,414}
temp	float	$tmp244	%read{426,426} %write{424,424}
temp	float	$tmp245	%read{427,427} %write{426,426}
temp	int	$tmp246	%read{429,429} %write{428,428}
temp	float	$tmp247	%read{433,433} %write{432,432}
temp	float	$tmp248	%read{432,432} %write{431,431}
temp	float	$tmp249	%read{434,434} %write{433,433}
temp	float	$tmp250	%read{436,436} %write{435,435}
const	string	$const33	"NG_convert_float_color3"		%read{447,963} %write{2147483647,-1}
const	float	$const34	1.5		%read{460,1004} %write{2147483647,-1}
const	string	$const35	"ggx"		%read{460,1004} %write{2147483647,-1}
const	string	$const36	"R"		%read{452,1000} %write{2147483647,-1}
const	string	$const37	"mx_dielectric_bsdf"		%read{451,995} %write{2147483647,-1}
const	string	$const38	"T"		%read{452,1000} %write{2147483647,-1}
temp	int	$tmp252	%read{453,453} %write{452,452}
temp	int	$tmp253	%read{457,457} %write{456,456}
temp	closure color	$tmp254	%read{461,461} %write{460,460}
const	string	$const39	"thinfilm_thickness"		%read{460,1004} %write{2147483647,-1}
const	string	$const40	"thinfilm_ior"		%read{460,1004} %write{2147483647,-1}
const	string	$const41	"dielectric_bsdf"		%read{460,1004} %write{2147483647,-1}
temp	closure color	$tmp255	%read{465,465} %write{464,464}
const	string	$const42	"conductor_bsdf"		%read{464,980} %write{2147483647,-1}
temp	int	$tmp256	%read{469,469} %write{468,468}
temp	int	$tmp257	%read{473,473} %write{472,472}
temp	closure color	$tmp258	%read{477,477} %write{476,476}
temp	int	$tmp259	%read{481,481} %write{480,480}
temp	int	$tmp260	%read{485,485} %write{484,484}
temp	closure color	$tmp261	%read{489,489} %write{488,488}
temp	closure color	$tmp262	%read{491,491} %write{490,490}
const	string	$const43	"sheen_bsdf"		%read{490,1006} %write{2147483647,-1}
temp	closure color	$tmp263	%read{494,494} %write{493,493}
const	string	$const44	"translucent_bsdf"		%read{493,1009} %write{2147483647,-1}
const	string	$const45	"mx_subsurface_bsdf"		%read{496,1012} %write{2147483647,-1}
temp	color	$tmp264	%read{498,498} %write{497,497}
const	string	$const46	"subsurface_bssrdf"		%read{498,1014} %write{2147483647,-1}
const	string	$const47	"mix"		%read{499,1084} %write{2147483647,-1}
temp	float	$tmp265	%read{501,501} %write{500,500}
temp	closure color	$tmp266	%read{503,503} %write{501,501}
temp	closure color	$tmp267	%read{503,503} %write{502,502}
temp	closure color	$tmp268	%read{505,505} %write{504,504}
const	string	$const48	"oren_nayar_diffuse_bsdf"		%read{504,1020} %write{2147483647,-1}
temp	float	$tmp269	%read{508,508} %write{507,507}
temp	closure color	$tmp270	%read{510,510} %write{508,508}
temp	closure color	$tmp271	%read{510,510} %write{509,509}
const	string	$const49	"layer"		%read{511,1040} %write{2147483647,-1}
temp	float	$tmp272	%read{514,514} %write{513,513}
temp	closure color	$tmp273	%read{516,516} %write{514,514}
temp	closure color	$tmp274	%read{516,516} %write{515,515}
temp	float	$tmp275	%read{520,520} %write{519,519}
temp	closure color	$tmp276	%read{522,522} %write{520,520}
temp	closure color	$tmp277	%read{522,522} %write{521,521}
const	string	$const50	"uniform_edf"		%read{525,1041} %write{2147483647,-1}
const	float	$const51	5		%read{537,1053} %write{2147483647,-1}
const	string	$const52	"mx_generalized_schlick_edf"		%read{528,1044} %write{2147483647,-1}
temp	float	$tmp279	%read{531,531} %write{530,530}
temp	vector	$tmp280	%read{530,530} %write{529,529}
const	string	$const53	"mx_fresnel_schlick"		%read{532,1048} %write{2147483647,-1}
temp	float	$tmp281	%read{535,535} %write{533,533}
temp	float	$tmp282	%read{536,536} %write{535,535}
temp	float	$tmp283	%read{538,538} %write{537,537}
temp	float	$tmp284	%read{542,542} %write{541,541}
temp	closure color	$tmp285	%read{544,544} %write{542,542}
temp	closure color	$tmp286	%read{544,544} %write{543,543}
const	string	$const54	"mx_surface"		%read{548,1064} %write{2147483647,-1}
temp	float	$tmp287	%read{553,553} %write{552,552}
temp	float	$tmp288	%read{568,568} %write{566,566}
temp	float	$tmp289	%read{569,569} %write{568,568}
temp	int	$tmp290	%read{571,571} %write{570,570}
temp	float	$tmp291	%read{575,575} %write{574,574}
temp	float	$tmp292	%read{574,574} %write{573,573}
temp	float	$tmp293	%read{576,576} %write{575,575}
temp	float	$tmp294	%read{578,578} %write{577,577}
temp	color	$tmp295	%read{594,594} %write{593,593}
temp	float	$tmp296	%read{599,599} %write{598,598}
temp	float	$tmp297	%read{602,602} %write{601,601}
temp	color	$tmp298	%read{605,605} %write{604,604}
temp	float	$tmp300	%read{616,616} %write{615,615}
temp	float	$tmp301	%read{621,621} %write{620,620}
temp	float	$tmp302	%read{628,628} %write{627,627}
temp	float	$tmp303	%read{630,630} %write{628,628}
temp	float	$tmp304	%read{630,630} %write{629,629}
temp	float	$tmp305	%read{631,631} %write{630,630}
temp	float	$tmp306	%read{684,684} %write{631,631}
temp	float	$tmp307	%read{633,633} %write{632,632}
temp	float	$tmp308	%read{635,635} %write{633,633}
temp	float	$tmp309	%read{635,635} %write{634,634}
temp	float	$tmp310	%read{638,638} %write{635,635}
temp	float	$tmp311	%read{637,637} %write{636,636}
temp	float	$tmp312	%read{638,638} %write{637,637}
temp	float	$tmp313	%read{684,684} %write{638,638}
temp	float	$tmp314	%read{640,640} %write{639,639}
temp	float	$tmp315	%read{642,642} %write{640,640}
temp	float	$tmp316	%read{642,642} %write{641,641}
temp	float	$tmp317	%read{645,645} %write{642,642}
temp	float	$tmp318	%read{644,644} %write{643,643}
temp	float	$tmp319	%read{645,645} %write{644,644}
temp	float	$tmp320	%read{684,684} %write{645,645}
temp	float	$tmp321	%read{647,647} %write{646,646}
temp	float	$tmp322	%read{649,649} %write{647,647}
temp	float	$tmp323	%read{649,649} %write{648,648}
temp	float	$tmp324	%read{652,652} %write{649,649}
temp	float	$tmp325	%read{651,651} %write{650,650}
temp	float	$tmp326	%read{652,652} %write{651,651}
temp	float	$tmp327	%read{684,684} %write{652,652}
temp	float	$tmp328	%read{654,654} %write{653,653}
temp	float	$tmp329	%read{656,656} %write{654,654}
temp	float	$tmp330	%read{656,656} %write{655,655}
temp	float	$tmp331	%read{657,657} %write{656,656}
temp	float	$tmp332	%read{684,684} %write{657,657}
temp	float	$tmp333	%read{659,659} %write{658,658}
temp	float	$tmp334	%read{661,661} %write{659,659}
temp	float	$tmp335	%read{661,661} %write{660,660}
temp	float	$tmp336	%read{664,664} %write{661,661}
temp	float	$tmp337	%read{663,663} %write{662,662}
temp	float	$tmp338	%read{664,664} %write{663,663}
temp	float	$tmp339	%read{684,684} %write{664,664}
temp	float	$tmp340	%read{666,666} %write{665,665}
temp	float	$tmp341	%read{668,668} %write{666,666}
temp	float	$tmp342	%read{668,668} %write{667,667}
temp	float	$tmp343	%read{671,671} %write{668,668}
temp	float	$tmp344	%read{670,670} %write{669,669}
temp	float	$tmp345	%read{671,671} %write{670,670}
temp	float	$tmp346	%read{684,684} %write{671,671}
temp	float	$tmp347	%read{673,673} %write{672,672}
temp	float	$tmp348	%read{675,675} %write{673,673}
temp	float	$tmp349	%read{675,675} %write{674,674}
temp	float	$tmp350	%read{678,678} %write{675,675}
temp	float	$tmp351	%read{677,677} %write{676,676}
temp	float	$tmp352	%read{678,678} %write{677,677}
temp	float	$tmp353	%read{684,684} %write{678,678}
temp	float	$tmp354	%read{680,680} %write{679,679}
temp	float	$tmp355	%read{682,682} %write{680,680}
temp	float	$tmp356	%read{682,682} %write{681,681}
temp	float	$tmp357	%read{683,683} %write{682,682}
temp	float	$tmp358	%read{684,684} %write{683,683}
temp	float	$tmp359.x	%read{691,724} %write{685,685}
temp	float	$tmp359.y	%read{693,726} %write{686,686}
temp	float	$tmp359.z	%read{696,729} %write{687,687}
temp	float	$tmp359.w	%read{699,732} %write{688,688}
temp	float	$tmp360	%read{691,691} %write{690,690}
temp	float	$tmp361	%read{694,694} %write{691,691}
temp	float	$tmp362	%read{693,693} %write{692,692}
temp	float	$tmp363	%read{694,694} %write{693,693}
temp	float	$tmp364	%read{697,697} %write{694,694}
temp	float	$tmp365	%read{696,696} %write{695,695}
temp	float	$tmp366	%read{697,697} %write{696,696}
temp	float	$tmp367	%read{700,700} %write{697,697}
temp	float	$tmp368	%read{699,699} %write{698,698}
temp	float	$tmp369	%read{700,700} %write{699,699}
temp	float	$tmp370	%read{702,702} %write{701,701}
temp	float	$tmp371	%read{705,705} %write{702,702}
temp	float	$tmp372	%read{704,704} %write{703,703}
temp	float	$tmp373	%read{705,705} %write{704,704}
temp	float	$tmp374	%read{708,708} %write{705,705}
temp	float	$tmp375	%read{707,707} %write{706,706}
temp	float	$tmp376	%read{708,708} %write{707,707}
temp	float	$tmp377	%read{711,711} %write{708,708}
temp	float	$tmp378	%read{710,710} %write{709,709}
temp	float	$tmp379	%read{711,711} %write{710,710}
temp	float	$tmp380	%read{713,713} %write{712,712}
temp	float	$tmp381	%read{716,716} %write{713,713}
temp	float	$tmp382	%read{715,715} %write{714,714}
temp	float	$tmp383	%read{716,716} %write{715,715}
temp	float	$tmp384	%read{719,719} %write{716,716}
temp	float	$tmp385	%read{718,718} %write{717,717}
temp	float	$tmp386	%read{719,719} %write{718,718}
temp	float	$tmp387	%read{722,722} %write{719,719}
temp	float	$tmp388	%read{721,721} %write{720,720}
temp	float	$tmp389	%read{722,722} %write{721,721}
temp	float	$tmp390	%read{724,724} %write{723,723}
temp	float	$tmp391	%read{727,727} %write{724,724}
temp	float	$tmp392	%read{726,726} %write{725,725}
temp	float	$tmp393	%read{727,727} %write{726,726}
temp	float	$tmp394	%read{730,730} %write{727,727}
temp	float	$tmp395	%read{729,729} %write{728,728}
temp	float	$tmp396	%read{730,730} %write{729,729}
temp	float	$tmp397	%read{733,733} %write{730,730}
temp	float	$tmp398	%read{732,732} %write{731,731}
temp	float	$tmp399	%read{733,733} %write{732,732}
temp	color	$tmp400	%read{742,742} %write{738,738}
temp	color	$tmp401	%read{741,741} %write{739,739}
temp	color	$tmp402	%read{742,742} %write{741,741}
temp	color	$tmp403	%read{746,746} %write{744,744}
temp	color	$tmp404	%read{746,746} %write{745,745}
temp	color	$tmp405	%read{749,749} %write{747,747}
temp	color	$tmp406	%read{749,749} %write{748,748}
temp	color	$tmp407	%read{754,754} %write{753,753}
temp	color	$tmp408	%read{756,756} %write{754,754}
temp	color	$tmp409	%read{756,756} %write{755,755}
temp	color	$tmp410	%read{758,758} %write{756,756}
temp	color	$tmp411	%read{758,758} %write{757,757}
temp	color	$tmp412	%read{760,760} %write{759,759}
temp	float	$tmp413	%read{767,767} %write{766,766}
temp	float	$tmp414	%read{774,774} %write{773,773}
temp	float	$tmp415	%read{776,776} %write{774,774}
temp	float	$tmp416	%read{776,776} %write{775,775}
temp	float	$tmp417	%read{777,777} %write{776,776}
temp	float	$tmp418	%read{830,830} %write{777,777}
temp	float	$tmp419	%read{779,779} %write{778,778}
temp	float	$tmp420	%read{781,781} %write{779,779}
temp	float	$tmp421	%read{781,781} %write{780,780}
temp	float	$tmp422	%read{784,784} %write{781,781}
temp	float	$tmp423	%read{783,783} %write{782,782}
temp	float	$tmp424	%read{784,784} %write{783,783}
temp	float	$tmp425	%read{830,830} %write{784,784}
temp	float	$tmp426	%read{786,786} %write{785,785}
temp	float	$tmp427	%read{788,788} %write{786,786}
temp	float	$tmp428	%read{788,788} %write{787,787}
temp	float	$tmp429	%read{791,791} %write{788,788}
temp	float	$tmp430	%read{790,790} %write{789,789}
temp	float	$tmp431	%read{791,791} %write{790,790}
temp	float	$tmp432	%read{830,830} %write{791,791}
temp	float	$tmp433	%read{793,793} %write{792,792}
temp	float	$tmp434	%read{795,795} %write{793,793}
temp	float	$tmp435	%read{795,795} %write{794,794}
temp	float	$tmp436	%read{798,798} %write{795,795}
temp	float	$tmp437	%read{797,797} %write{796,796}
temp	float	$tmp438	%read{798,798} %write{797,797}
temp	float	$tmp439	%read{830,830} %write{798,798}
temp	float	$tmp440	%read{800,800} %write{799,799}
temp	float	$tmp441	%read{802,802} %write{800,800}
temp	float	$tmp442	%read{802,802} %write{801,801}
temp	float	$tmp443	%read{803,803} %write{802,802}
temp	float	$tmp444	%read{830,830} %write{803,803}
temp	float	$tmp445	%read{805,805} %write{804,804}
temp	float	$tmp446	%read{807,807} %write{805,805}
temp	float	$tmp447	%read{807,807} %write{806,806}
temp	float	$tmp448	%read{810,810} %write{807,807}
temp	float	$tmp449	%read{809,809} %write{808,808}
temp	float	$tmp450	%read{810,810} %write{809,809}
temp	float	$tmp451	%read{830,830} %write{810,810}
temp	float	$tmp452	%read{812,812} %write{811,811}
temp	float	$tmp453	%read{814,814} %write{812,812}
temp	float	$tmp454	%read{814,814} %write{813,813}
temp	float	$tmp455	%read{817,817} %write{814,814}
temp	float	$tmp456	%read{816,816} %write{815,815}
temp	float	$tmp457	%read{817,817} %write{816,816}
temp	float	$tmp458	%read{830,830} %write{817,817}
temp	float	$tmp459	%read{819,819} %write{818,818}
temp	float	$tmp460	%read{821,821} %write{819,819}
temp	float	$tmp461	%read{821,821} %write{820,820}
temp	float	$tmp462	%read{824,824} %write{821,821}
temp	float	$tmp463	%read{823,823} %write{822,822}
temp	float	$tmp464	%read{824,824} %write{823,823}
temp	float	$tmp465	%read{830,830} %write{824,824}
temp	float	$tmp466	%read{826,826} %write{825,825}
temp	float	$tmp467	%read{828,828} %write{826,826}
temp	float	$tmp468	%read{828,828} %write{827,827}
temp	float	$tmp469	%read{829,829} %write{828,828}
temp	float	$tmp470	%read{830,830} %write{829,829}
temp	float	$tmp471.x	%read{837,870} %write{831,831}
temp	float	$tmp471.y	%read{839,872} %write{832,832}
temp	float	$tmp471.z	%read{842,875} %write{833,833}
temp	float	$tmp471.w	%read{845,878} %write{834,834}
temp	float	$tmp472	%read{837,837} %write{836,836}
temp	float	$tmp473	%read{840,840} %write{837,837}
temp	float	$tmp474	%read{839,839} %write{838,838}
temp	float	$tmp475	%read{840,840} %write{839,839}
temp	float	$tmp476	%read{843,843} %write{840,840}
temp	float	$tmp477	%read{842,842} %write{841,841}
temp	float	$tmp478	%read{843,843} %write{842,842}
temp	float	$tmp479	%read{846,846} %write{843,843}
temp	float	$tmp480	%read{845,845} %write{844,844}
temp	float	$tmp481	%read{846,846} %write{845,845}
temp	float	$tmp482	%read{848,848} %write{847,847}
temp	float	$tmp483	%read{851,851} %write{848,848}
temp	float	$tmp484	%read{850,850} %write{849,849}
temp	float	$tmp485	%read{851,851} %write{850,850}
temp	float	$tmp486	%read{854,854} %write{851,851}
temp	float	$tmp487	%read{853,853} %write{852,852}
temp	float	$tmp488	%read{854,854} %write{853,853}
temp	float	$tmp489	%read{857,857} %write{854,854}
temp	float	$tmp490	%read{856,856} %write{855,855}
temp	float	$tmp491	%read{857,857} %write{856,856}
temp	float	$tmp492	%read{859,859} %write{858,858}
temp	float	$tmp493	%read{862,862} %write{859,859}
temp	float	$tmp494	%read{861,861} %write{860,860}
temp	float	$tmp495	%read{862,862} %write{861,861}
temp	float	$tmp496	%read{865,865} %write{862,862}
temp	float	$tmp497	%read{864,864} %write{863,863}
temp	float	$tmp498	%read{865,865} %write{864,864}
temp	float	$tmp499	%read{868,868} %write{865,865}
temp	float	$tmp500	%read{867,867} %write{866,866}
temp	float	$tmp501	%read{868,868} %write{867,867}
temp	float	$tmp502	%read{870,870} %write{869,869}
temp	float	$tmp503	%read{873,873} %write{870,870}
temp	float	$tmp504	%read{872,872} %write{871,871}
temp	float	$tmp505	%read{873,873} %write{872,872}
temp	float	$tmp506	%read{876,876} %write{873,873}
temp	float	$tmp507	%read{875,875} %write{874,874}
temp	float	$tmp508	%read{876,876} %write{875,875}
temp	float	$tmp509	%read{879,879} %write{876,876}
temp	float	$tmp510	%read{878,878} %write{877,877}
temp	float	$tmp511	%read{879,879} %write{878,878}
temp	float	$tmp512	%read{885,885} %write{884,884}
temp	int	$tmp513	%read{903,903} %write{901,901}
temp	float	$tmp514	%read{913,913} %write{911,911}
temp	float	$tmp515	%read{914,914} %write{913,913}
temp	int	$tmp516	%read{916,916} %write{915,915}
temp	float	$tmp517	%read{920,920} %write{919,919}
temp	float	$tmp518	%read{919,919} %write{918,918}
temp	float	$tmp519	%read{921,921} %write{920,920}
temp	float	$tmp520	%read{923,923} %write{922,922}
temp	int	$tmp521	%read{932,932} %write{930,930}
temp	float	$tmp522	%read{942,942} %write{940,940}
temp	float	$tmp523	%read{943,943} %write{942,942}
temp	int	$tmp524	%read{945,945} %write{944,944}
temp	float	$tmp525	%read{949,949} %write{948,948}
temp	float	$tmp526	%read{948,948} %write{947,947}
temp	float	$tmp527	%read{950,950} %write{949,949}
temp	float	$tmp528	%read{952,952} %write{951,951}
temp	int	$tmp530	%read{969,969} %write{968,968}
temp	int	$tmp531	%read{973,973} %write{972,972}
temp	closure color	$tmp532	%read{977,977} %write{976,976}
temp	closure color	$tmp533	%read{981,981} %write{980,980}
temp	int	$tmp534	%read{985,985} %write{984,984}
temp	int	$tmp535	%read{989,989} %write{988,988}
temp	closure color	$tmp536	%read{993,993} %write{992,992}
temp	int	$tmp537	%read{997,997} %write{996,996}
temp	int	$tmp538	%read{1001,1001} %write{1000,1000}
temp	closure color	$tmp539	%read{1005,1005} %write{1004,1004}
temp	closure color	$tmp540	%read{1007,1007} %write{1006,1006}
temp	closure color	$tmp541	%read{1010,1010} %write{1009,1009}
temp	color	$tmp542	%read{1014,1014} %write{1013,1013}
temp	float	$tmp543	%read{1017,1017} %write{1016,1016}
temp	closure color	$tmp544	%read{1019,1019} %write{1017,1017}
temp	closure color	$tmp545	%read{1019,1019} %write{1018,1018}
temp	closure color	$tmp546	%read{1021,1021} %write{1020,1020}
temp	float	$tmp547	%read{1024,1024} %write{1023,1023}
temp	closure color	$tmp548	%read{1026,1026} %write{1024,1024}
temp	closure color	$tmp549	%read{1026,1026} %write{1025,1025}
temp	float	$tmp550	%read{1030,1030} %write{1029,1029}
temp	closure color	$tmp551	%read{1032,1032} %write{1030,1030}
temp	closure color	$tmp552	%read{1032,1032} %write{1031,1031}
temp	float	$tmp553	%read{1036,1036} %write{1035,1035}
temp	closure color	$tmp554	%read{1038,1038} %write{1036,1036}
temp	closure color	$tmp555	%read{1038,1038} %write{1037,1037}
temp	float	$tmp557	%read{1047,1047} %write{1046,1046}
temp	vector	$tmp558	%read{1046,1046} %write{1045,1045}
temp	float	$tmp559	%read{1051,1051} %write{1049,1049}
temp	float	$tmp560	%read{1052,1052} %write{1051,1051}
temp	float	$tmp561	%read{1054,1054} %write{1053,1053}
temp	float	$tmp562	%read{1058,1058} %write{1057,1057}
temp	closure color	$tmp563	%read{1060,1060} %write{1058,1058}
temp	closure color	$tmp564	%read{1060,1060} %write{1059,1059}
temp	float	$tmp565	%read{1069,1069} %write{1068,1068}
const	string	$const55	"mx_mix_surfaceshader"		%read{1077,1077} %write{2147483647,-1}
temp	float	$tmp566	%read{1080,1080} %write{1079,1079}
temp	closure color	$tmp567	%read{1082,1082} %write{1080,1080}
temp	closure color	$tmp568	%read{1082,1082} %write{1081,1081}
temp	float	$tmp569	%read{1086,1086} %write{1085,1085}
temp	closure color	$tmp570	%read{1088,1088} %write{1086,1086}
temp	closure color	$tmp571	%read{1088,1088} %write{1087,1087}
temp	closure color	$tmp572.bsdf	%read{2147483647,-1} %write{1092,1092}
temp	closure color	$tmp572.edf	%read{2147483647,-1} %write{1093,1093}
temp	float	$tmp572.opacity	%read{2147483647,-1} %write{1094,1094}
const	string	$const56	"mx_surfacematerial"		%read{1095,1095} %write{2147483647,-1}
temp	float	$tmp574	%read{1098,1098} %write{1097,1097}
temp	closure color	$tmp575	%read{1100,1100} %write{1099,1099}
temp	closure color	$tmp576	%read{1104,1104} %write{1100,1100}
temp	closure color	$tmp577	%read{1103,1103} %write{1101,1101}
const	string	$const57	"transparent"		%read{1101,1101} %write{2147483647,-1}
temp	float	$tmp578	%read{1103,1103} %write{1102,1102}
temp	closure color	$tmp579	%read{1104,1104} %write{1103,1103}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1076
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{1076} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1077
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{1077} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1078
#     float checker1_out = 0.0;
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{1078} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1079
#     NG_checker_float(checker1_scale, checker1_out);
	assign		checker1_out $const5 	%line{1079} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1080
#     color checker3_out = mix(checker3_bg, checker3_fg, checker1_out);
	functioncall	$const6 41 	%line{1080} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:20
#     vector2 mult1_out = texcoord1_out * scale;
	assign		___669_texcoord1_out.x u 	%line{20} %argrw{"wr"}
	assign		___669_texcoord1_out.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1091
# 
	functioncall	$const7 15 	%line{1091} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___669_mult1_out.x ___669_texcoord1_out.x checker1_scale.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___669_mult1_out.y ___669_texcoord1_out.y checker1_scale.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:22
#     float mult1_x_out = mx_extract(mult1_out, mult1_x_index_tmp);
	assign		___669_mult1_x_index_tmp $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:23
#     int mult1_y_index_tmp = 1;
	functioncall	$const8 23 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp5 ___669_mult1_x_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp5 21 23 	%argrw{"r"}
	assign		___669_mult1_x_out ___669_mult1_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_mult1_x_out ___669_mult1_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:24
#     float mult1_y_out = mx_extract(mult1_out, mult1_y_index_tmp);
	assign		___669_mult1_y_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:25
#     float floor1_out = floor(mult1_x_out);
	functioncall	$const8 31 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp6 ___669_mult1_y_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp6 29 31 	%argrw{"r"}
	assign		___669_mult1_y_out ___669_mult1_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_mult1_y_out ___669_mult1_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:26
#     float floor2_out = floor(mult1_y_out);
	floor		___669_floor1_out ___669_mult1_x_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:27
#     float add1_out = floor1_out + floor2_out;
	floor		___669_floor2_out ___669_mult1_y_out 	%line{27} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:28
#     float mod1_in2_tmp = 2.000000;
	add		___669_add1_out ___669_floor1_out ___669_floor2_out 	%line{28} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:29
#     float mod1_out = mod(add1_out, mod1_in2_tmp);
	assign		___669_mod1_in2_tmp $const10 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:30
#     out = mod1_out;
	functioncall	$const11 40 	%line{30} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp8 ___669_add1_out ___669_mod1_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 ___669_mod1_in2_tmp $tmp7 	%argrw{"wrr"}
	sub		___669_mod1_out ___669_add1_out $tmp9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:31
# }
	assign		checker1_out ___669_mod1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1081
#     surfaceshader standard_surface1_out = surfaceshader(null_closure, null_closure, 1.0);
	mix		checker3_out checker3_bg checker3_fg checker1_out 	%line{1081} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1082
#     NG_standard_surface_surfaceshader_100(standard_surface1_base, standard_surface1_base_color, standard_surface1_diffuse_roughness, standard_surface1_metalness, standard_surface1_specular, standard_surface1_specular_color, standard_surface1_specular_roughness, standard_surface1_specular_IOR, standard_surface1_specular_anisotropy, standard_surface1_specular_rotation, standard_surface1_transmission, standard_surface1_transmission_color, standard_surface1_transmission_depth, standard_surface1_transmission_scatter, standard_surface1_transmission_scatter_anisotropy, standard_surface1_transmission_dispersion, standard_surface1_transmission_extra_roughness, standard_surface1_subsurface, standard_surface1_subsurface_color, standard_surface1_subsurface_radius, standard_surface1_subsurface_scale, standard_surface1_subsurface_anisotropy, standard_surface1_sheen, standard_surface1_sheen_color, standard_surface1_sheen_roughness, standard_surface1_coat, standard_surface1_coat_color, standard_surface1_coat_roughness, standard_surface1_coat_anisotropy, standard_surface1_coat_rotation, standard_surface1_coat_IOR, geomprop_Nworld_out1, standard_surface1_coat_affect_color, standard_surface1_coat_affect_roughness, standard_surface1_thin_film_thickness, standard_surface1_thin_film_IOR, standard_surface1_emission, standard_surface1_emission_color, checker3_out, standard_surface1_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, standard_surface1_out);
	assign		standard_surface1_out.bsdf null_closure 	%line{1082} %argrw{"wr"}
	assign		standard_surface1_out.edf null_closure 	%argrw{"wr"}
	assign		standard_surface1_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1083
#     surfaceshader standard_surface2_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const13 558 	%line{1083} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:211
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___694_null_closure $const1 	%line{211} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:212
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___694_coat_roughness_vector_out.x $const5 	%line{212} %argrw{"wr"}
	assign		___694_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:213
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const14 68 	%line{213} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp10 standard_surface1_coat_roughness standard_surface1_coat_roughness 	%line{36} %argrw{"wrr"}
	functioncall	$const16 54 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp11 $tmp10 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp11 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp12 standard_surface1_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp12 66 68 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 59 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp14 standard_surface1_coat_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp13 $tmp14 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp15 $const12 $tmp13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp16 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_coat_roughness_vector_out.x $tmp16 $const12 	%argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_coat_roughness_vector_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.y ___694_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_coat_roughness_vector_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_coat_roughness_vector_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:214
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___694_coat_tangent_rotate_degree_in2_tmp $const18 	%line{214} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:215
#     color metal_reflectivity_out = base_color * base;
	mul		___694_coat_tangent_rotate_degree_out standard_surface1_coat_rotation ___694_coat_tangent_rotate_degree_in2_tmp 	%line{215} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:216
#     color metal_edgecolor_out = specular_color * specular;
	mul		___694_metal_reflectivity_out standard_surface1_base_color standard_surface1_base 	%line{216} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:217
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___694_metal_edgecolor_out standard_surface1_specular_color standard_surface1_specular 	%line{217} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:218
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___694_coat_affect_roughness_multiply1_out standard_surface1_coat_affect_roughness standard_surface1_coat 	%line{218} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:219
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___694_tangent_rotate_degree_in2_tmp $const18 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:220
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___694_tangent_rotate_degree_out standard_surface1_specular_rotation ___694_tangent_rotate_degree_in2_tmp 	%line{220} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:221
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___694_transmission_roughness_add_out standard_surface1_specular_roughness standard_surface1_transmission_extra_roughness 	%line{221} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:222
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___694_subsurface_color_nonnegative_in2_tmp $const5 	%line{222} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:223
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp17 ___694_subsurface_color_nonnegative_in2_tmp 	%line{223} %argrw{"wr"}
	max		___694_subsurface_color_nonnegative_out standard_surface1_subsurface_color $tmp17 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:224
#     float coat_clamped_high_tmp = 1.000000;
	assign		___694_coat_clamped_low_tmp $const5 	%line{224} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:225
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___694_coat_clamped_high_tmp $const12 	%line{225} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:226
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const16 84 	%line{226} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp18 standard_surface1_coat ___694_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_coat_clamped_out $tmp18 ___694_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:227
#     float subsurface_selector_out = float(thin_walled);
	mul		___694_subsurface_radius_scaled_out standard_surface1_subsurface_radius standard_surface1_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{227} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:228
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp19 standard_surface1_thin_walled 	%line{228} %argrw{"wr"}
	assign		___694_subsurface_selector_out $tmp19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:229
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___694_base_color_nonnegative_in2_tmp $const5 	%line{229} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:230
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp20 ___694_base_color_nonnegative_in2_tmp 	%line{230} %argrw{"wr"}
	max		___694_base_color_nonnegative_out standard_surface1_base_color $tmp20 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:231
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___694_coat_attenuation_bg_tmp $const19 	%line{231} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:232
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___694_coat_attenuation_out ___694_coat_attenuation_bg_tmp standard_surface1_coat_color standard_surface1_coat 	%line{232} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:233
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___694_one_minus_coat_ior_in1_tmp $const12 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:234
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___694_one_minus_coat_ior_out ___694_one_minus_coat_ior_in1_tmp standard_surface1_coat_IOR 	%line{234} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:235
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___694_one_plus_coat_ior_in1_tmp $const12 	%line{235} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:236
#     color emission_weight_out = emission_color * emission1;
	add		___694_one_plus_coat_ior_out ___694_one_plus_coat_ior_in1_tmp standard_surface1_coat_IOR 	%line{236} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:237
#     color opacity_luminance_out = color(0.0);
	mul		___694_emission_weight_out standard_surface1_emission_color standard_surface1_emission 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:238
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___694_opacity_luminance_out $const20 	%line{238} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:239
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const22 101 	%line{239} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:52
# }
	dot		$tmp22 checker3_out $const21 	%line{52} %argrw{"wrr"}
	assign		___694_opacity_luminance_out $tmp22 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:240
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___694_coat_tangent_rotate_out $const23 	%line{240} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:241
#     color artistic_ior_ior = color(0.0);
	functioncall	$const24 219 	%line{241} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:70
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const25 106 	%line{70} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp23 $const26 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_coat_tangent_rotate_degree_out $tmp23 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:71
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const28 169 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{71} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:57
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:58
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:59
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:60
# 
	sub		___674_oc $const12 ___674_c 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp24 ___674_nAxis $const1 	%line{62} %argrw{"wrr"}
	mul		$tmp25 ___674_oc $tmp24 	%argrw{"wrr"}
	compref		$tmp26 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp27 $tmp25 $tmp26 	%argrw{"wrr"}
	add		$tmp28 $tmp27 ___674_c 	%argrw{"wrr"}
	compref		$tmp29 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp30 ___674_oc $tmp29 	%argrw{"wrr"}
	compref		$tmp31 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp32 $tmp30 $tmp31 	%argrw{"wrr"}
	compref		$tmp33 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp34 $tmp33 ___674_s 	%argrw{"wrr"}
	sub		$tmp35 $tmp32 $tmp34 	%argrw{"wrr"}
	compref		$tmp36 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp37 ___674_oc $tmp36 	%argrw{"wrr"}
	compref		$tmp38 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp41 $tmp40 ___674_s 	%argrw{"wrr"}
	add		$tmp42 $tmp39 $tmp41 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:63
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp43 ___674_nAxis $const1 	%line{63} %argrw{"wrr"}
	mul		$tmp44 ___674_oc $tmp43 	%argrw{"wrr"}
	compref		$tmp45 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
	compref		$tmp47 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp48 $tmp47 ___674_s 	%argrw{"wrr"}
	add		$tmp49 $tmp46 $tmp48 	%argrw{"wrr"}
	compref		$tmp50 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp51 ___674_oc $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	add		$tmp54 $tmp53 ___674_c 	%argrw{"wrr"}
	compref		$tmp55 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp56 ___674_oc $tmp55 	%argrw{"wrr"}
	compref		$tmp57 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp60 $tmp59 ___674_s 	%argrw{"wrr"}
	sub		$tmp61 $tmp58 $tmp60 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:64
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp62 ___674_nAxis $const4 	%line{64} %argrw{"wrr"}
	mul		$tmp63 ___674_oc $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___674_s 	%argrw{"wrr"}
	sub		$tmp68 $tmp65 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp70 ___674_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp74 $tmp73 ___674_s 	%argrw{"wrr"}
	add		$tmp75 $tmp72 $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp77 ___674_oc $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	add		$tmp80 $tmp79 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp28 $tmp35 $tmp42 $const5 $tmp49 $tmp54 $tmp61 $const5 $tmp68 $tmp75 $tmp80 $const5 $const5 $const5 $const5 $const12 	%line{62} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:72
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp81.x geomprop_Tworld_out1 $const1 	%line{72} %argrw{"wrr"}
	compref		$tmp81.y geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	compref		$tmp81.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp81.w $const12 	%argrw{"wr"}
	functioncall	$const2 218 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp82 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp83 $tmp82 $tmp81.x 	%argrw{"wrr"}
	mxcompref	$tmp84 ___675_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp85 $tmp84 $tmp81.y 	%argrw{"wrr"}
	add		$tmp86 $tmp83 $tmp85 	%argrw{"wrr"}
	mxcompref	$tmp87 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp88 $tmp87 $tmp81.z 	%argrw{"wrr"}
	add		$tmp89 $tmp86 $tmp88 	%argrw{"wrr"}
	mxcompref	$tmp90 ___675_m $const29 $const1 	%argrw{"wrrr"}
	mul		$tmp91 $tmp90 $tmp81.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp89 $tmp91 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp92 ___675_m $const1 $const9 	%line{416} %argrw{"wrrr"}
	mul		$tmp93 $tmp92 $tmp81.x 	%argrw{"wrr"}
	mxcompref	$tmp94 ___675_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp95 $tmp94 $tmp81.y 	%argrw{"wrr"}
	add		$tmp96 $tmp93 $tmp95 	%argrw{"wrr"}
	mxcompref	$tmp97 ___675_m $const4 $const9 	%argrw{"wrrr"}
	mul		$tmp98 $tmp97 $tmp81.z 	%argrw{"wrr"}
	add		$tmp99 $tmp96 $tmp98 	%argrw{"wrr"}
	mxcompref	$tmp100 ___675_m $const29 $const9 	%argrw{"wrrr"}
	mul		$tmp101 $tmp100 $tmp81.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp99 $tmp101 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp102 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp103 $tmp102 $tmp81.x 	%argrw{"wrr"}
	mxcompref	$tmp104 ___675_m $const9 $const4 	%argrw{"wrrr"}
	mul		$tmp105 $tmp104 $tmp81.y 	%argrw{"wrr"}
	add		$tmp106 $tmp103 $tmp105 	%argrw{"wrr"}
	mxcompref	$tmp107 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp81.z 	%argrw{"wrr"}
	add		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
	mxcompref	$tmp110 ___675_m $const29 $const4 	%argrw{"wrrr"}
	mul		$tmp111 $tmp110 $tmp81.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp109 $tmp111 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp112 ___675_m $const1 $const29 	%line{418} %argrw{"wrrr"}
	mul		$tmp113 $tmp112 $tmp81.x 	%argrw{"wrr"}
	mxcompref	$tmp114 ___675_m $const9 $const29 	%argrw{"wrrr"}
	mul		$tmp115 $tmp114 $tmp81.y 	%argrw{"wrr"}
	add		$tmp116 $tmp113 $tmp115 	%argrw{"wrr"}
	mxcompref	$tmp117 ___675_m $const4 $const29 	%argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp81.z 	%argrw{"wrr"}
	add		$tmp119 $tmp116 $tmp118 	%argrw{"wrr"}
	mxcompref	$tmp120 ___675_m $const29 $const29 	%argrw{"wrrr"}
	mul		$tmp121 $tmp120 $tmp81.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp119 $tmp121 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:73
# }
	vector		___694_coat_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{73} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:242
#     color artistic_ior_extinction = color(0.0);
	assign		___694_artistic_ior_ior $const20 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:243
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___694_artistic_ior_extinction $const20 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:244
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const30 246 	%line{244} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:81
#     color r_sqrt = sqrt(r);
	assign		$tmp122 $const5 	%line{81} %argrw{"wr"}
	assign		$tmp123 $const31 	%argrw{"wr"}
	functioncall	$const16 227 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp124 ___694_metal_reflectivity_out $tmp123 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___676_r $tmp124 $tmp122 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:82
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___676_r_sqrt ___676_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:83
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp125 $const12 ___676_r 	%line{83} %argrw{"wrr"}
	add		$tmp126 $const12 ___676_r 	%argrw{"wrr"}
	div		___676_n_min $tmp125 $tmp126 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:84
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp127 $const12 ___676_r_sqrt 	%line{84} %argrw{"wrr"}
	sub		$tmp128 $const12 ___676_r_sqrt 	%argrw{"wrr"}
	div		___676_n_max $tmp127 $tmp128 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:85
# 
	mix		___694_artistic_ior_ior ___676_n_max ___676_n_min ___694_metal_edgecolor_out 	%line{85} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:87
#     color nm1 = ior - 1.0;
	add		___676_np1 ___694_artistic_ior_ior $const12 	%line{87} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:88
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___676_nm1 ___694_artistic_ior_ior $const12 	%line{88} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:89
#     k2 = max(k2, 0.0);
	mul		$tmp129 ___676_np1 ___676_np1 	%line{89} %argrw{"wrr"}
	mul		$tmp130 $tmp129 ___676_r 	%argrw{"wrr"}
	mul		$tmp131 ___676_nm1 ___676_nm1 	%argrw{"wrr"}
	sub		$tmp132 $tmp130 $tmp131 	%argrw{"wrr"}
	sub		$tmp133 $const12 ___676_r 	%argrw{"wrr"}
	div		___676_k2 $tmp132 $tmp133 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:90
#     extinction = sqrt(k2);
	assign		$tmp134 $const5 	%line{90} %argrw{"wr"}
	max		___676_k2 ___676_k2 $tmp134 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:91
# }
	sqrt		___694_artistic_ior_extinction ___676_k2 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:245
#     vector tangent_rotate_out = vector(0.0);
	mul		___694_coat_affect_roughness_multiply2_out ___694_coat_affect_roughness_multiply1_out standard_surface1_coat_roughness 	%line{245} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:246
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___694_tangent_rotate_out $const23 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:247
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const24 365 	%line{247} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:70
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const25 252 	%line{70} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp135 $const26 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_tangent_rotate_degree_out $tmp135 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:71
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const28 315 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{71} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:57
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:58
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:59
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:60
# 
	sub		___674_oc $const12 ___674_c 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp136 ___674_nAxis $const1 	%line{62} %argrw{"wrr"}
	mul		$tmp137 ___674_oc $tmp136 	%argrw{"wrr"}
	compref		$tmp138 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp139 $tmp137 $tmp138 	%argrw{"wrr"}
	add		$tmp140 $tmp139 ___674_c 	%argrw{"wrr"}
	compref		$tmp141 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp142 ___674_oc $tmp141 	%argrw{"wrr"}
	compref		$tmp143 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp144 $tmp142 $tmp143 	%argrw{"wrr"}
	compref		$tmp145 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp146 $tmp145 ___674_s 	%argrw{"wrr"}
	sub		$tmp147 $tmp144 $tmp146 	%argrw{"wrr"}
	compref		$tmp148 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp149 ___674_oc $tmp148 	%argrw{"wrr"}
	compref		$tmp150 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp151 $tmp149 $tmp150 	%argrw{"wrr"}
	compref		$tmp152 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp153 $tmp152 ___674_s 	%argrw{"wrr"}
	add		$tmp154 $tmp151 $tmp153 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:63
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp155 ___674_nAxis $const1 	%line{63} %argrw{"wrr"}
	mul		$tmp156 ___674_oc $tmp155 	%argrw{"wrr"}
	compref		$tmp157 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp158 $tmp156 $tmp157 	%argrw{"wrr"}
	compref		$tmp159 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp160 $tmp159 ___674_s 	%argrw{"wrr"}
	add		$tmp161 $tmp158 $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp163 ___674_oc $tmp162 	%argrw{"wrr"}
	compref		$tmp164 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	add		$tmp166 $tmp165 ___674_c 	%argrw{"wrr"}
	compref		$tmp167 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp168 ___674_oc $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp170 $tmp168 $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp172 $tmp171 ___674_s 	%argrw{"wrr"}
	sub		$tmp173 $tmp170 $tmp172 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:64
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp174 ___674_nAxis $const4 	%line{64} %argrw{"wrr"}
	mul		$tmp175 ___674_oc $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp177 $tmp175 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp179 $tmp178 ___674_s 	%argrw{"wrr"}
	sub		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp182 ___674_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___674_s 	%argrw{"wrr"}
	add		$tmp187 $tmp184 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp189 ___674_oc $tmp188 	%argrw{"wrr"}
	compref		$tmp190 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp191 $tmp189 $tmp190 	%argrw{"wrr"}
	add		$tmp192 $tmp191 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp140 $tmp147 $tmp154 $const5 $tmp161 $tmp166 $tmp173 $const5 $tmp180 $tmp187 $tmp192 $const5 $const5 $const5 $const5 $const12 	%line{62} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:72
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp193.x geomprop_Tworld_out1 $const1 	%line{72} %argrw{"wrr"}
	compref		$tmp193.y geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	compref		$tmp193.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp193.w $const12 	%argrw{"wr"}
	functioncall	$const2 364 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp194 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp195 $tmp194 $tmp193.x 	%argrw{"wrr"}
	mxcompref	$tmp196 ___675_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp197 $tmp196 $tmp193.y 	%argrw{"wrr"}
	add		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	mxcompref	$tmp199 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp200 $tmp199 $tmp193.z 	%argrw{"wrr"}
	add		$tmp201 $tmp198 $tmp200 	%argrw{"wrr"}
	mxcompref	$tmp202 ___675_m $const29 $const1 	%argrw{"wrrr"}
	mul		$tmp203 $tmp202 $tmp193.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp201 $tmp203 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp204 ___675_m $const1 $const9 	%line{416} %argrw{"wrrr"}
	mul		$tmp205 $tmp204 $tmp193.x 	%argrw{"wrr"}
	mxcompref	$tmp206 ___675_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp207 $tmp206 $tmp193.y 	%argrw{"wrr"}
	add		$tmp208 $tmp205 $tmp207 	%argrw{"wrr"}
	mxcompref	$tmp209 ___675_m $const4 $const9 	%argrw{"wrrr"}
	mul		$tmp210 $tmp209 $tmp193.z 	%argrw{"wrr"}
	add		$tmp211 $tmp208 $tmp210 	%argrw{"wrr"}
	mxcompref	$tmp212 ___675_m $const29 $const9 	%argrw{"wrrr"}
	mul		$tmp213 $tmp212 $tmp193.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp211 $tmp213 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp214 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp215 $tmp214 $tmp193.x 	%argrw{"wrr"}
	mxcompref	$tmp216 ___675_m $const9 $const4 	%argrw{"wrrr"}
	mul		$tmp217 $tmp216 $tmp193.y 	%argrw{"wrr"}
	add		$tmp218 $tmp215 $tmp217 	%argrw{"wrr"}
	mxcompref	$tmp219 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp193.z 	%argrw{"wrr"}
	add		$tmp221 $tmp218 $tmp220 	%argrw{"wrr"}
	mxcompref	$tmp222 ___675_m $const29 $const4 	%argrw{"wrrr"}
	mul		$tmp223 $tmp222 $tmp193.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp221 $tmp223 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp224 ___675_m $const1 $const29 	%line{418} %argrw{"wrrr"}
	mul		$tmp225 $tmp224 $tmp193.x 	%argrw{"wrr"}
	mxcompref	$tmp226 ___675_m $const9 $const29 	%argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp193.y 	%argrw{"wrr"}
	add		$tmp228 $tmp225 $tmp227 	%argrw{"wrr"}
	mxcompref	$tmp229 ___675_m $const4 $const29 	%argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp193.z 	%argrw{"wrr"}
	add		$tmp231 $tmp228 $tmp230 	%argrw{"wrr"}
	mxcompref	$tmp232 ___675_m $const29 $const29 	%argrw{"wrrr"}
	mul		$tmp233 $tmp232 $tmp193.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp231 $tmp233 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:73
# }
	vector		___694_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{73} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:248
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___694_transmission_roughness_clamped_low_tmp $const5 	%line{248} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:249
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___694_transmission_roughness_clamped_high_tmp $const12 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:250
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const16 370 	%line{250} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp234 ___694_transmission_roughness_add_out ___694_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_transmission_roughness_clamped_out $tmp234 ___694_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:251
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___694_coat_gamma_multiply_out ___694_coat_clamped_out standard_surface1_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{251} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:252
#     int opacity_luminance_float_index_tmp = 0;
	div		___694_coat_ior_to_F0_sqrt_out ___694_one_minus_coat_ior_out ___694_one_plus_coat_ior_out 	%line{252} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:253
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___694_opacity_luminance_float_index_tmp $const1 	%line{253} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:254
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const8 375 	%line{254} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___694_opacity_luminance_float_out ___694_opacity_luminance_out ___694_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:255
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___694_coat_tangent_rotate_normalize_out ___694_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{255} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:256
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_roughness_fg_tmp $const12 	%line{256} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:257
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___694_coat_affected_roughness_out standard_surface1_specular_roughness ___694_coat_affected_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{257} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:258
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___694_tangent_rotate_normalize_out ___694_tangent_rotate_out 	%line{258} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:259
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_transmission_roughness_fg_tmp $const12 	%line{259} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:260
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___694_coat_affected_transmission_roughness_out ___694_transmission_roughness_clamped_out ___694_coat_affected_transmission_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{260} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:261
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___694_coat_gamma_in2_tmp $const12 	%line{261} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:262
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___694_coat_gamma_out ___694_coat_gamma_multiply_out ___694_coat_gamma_in2_tmp 	%line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:263
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___694_coat_ior_to_F0_out ___694_coat_ior_to_F0_sqrt_out ___694_coat_ior_to_F0_sqrt_out 	%line{263} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:264
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___694_coat_tangent_value2_tmp $const5 	%line{264} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:265
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp235 standard_surface1_coat_anisotropy ___694_coat_tangent_value2_tmp 	%line{265} %argrw{"wrr"}
	functioncall	$const32 392 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp235 390 392 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_coat_tangent_out ___694_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:266
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___694_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{266} %argrw{"wr"}
	assign		___694_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:267
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const14 413 	%line{267} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp236 ___694_coat_affected_roughness_out ___694_coat_affected_roughness_out 	%line{36} %argrw{"wrr"}
	functioncall	$const16 399 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp237 $tmp236 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp237 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp238 standard_surface1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp238 411 413 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 404 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp240 standard_surface1_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp239 $tmp240 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp241 $const12 $tmp239 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp241 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp242 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_main_roughness_out.x $tmp242 $const12 	%argrw{"wrr"}
	assign		___694_main_roughness_out.x ___694_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_main_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_main_roughness_out.y ___694_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_main_roughness_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_main_roughness_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:268
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___694_main_tangent_value2_tmp $const5 	%line{268} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:269
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp243 standard_surface1_specular_anisotropy ___694_main_tangent_value2_tmp 	%line{269} %argrw{"wrr"}
	functioncall	$const32 421 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp243 419 421 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_main_tangent_out ___694_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:270
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___694_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{270} %argrw{"wr"}
	assign		___694_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:271
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const14 442 	%line{271} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp244 ___694_coat_affected_transmission_roughness_out ___694_coat_affected_transmission_roughness_out 	%line{36} %argrw{"wrr"}
	functioncall	$const16 428 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp245 $tmp244 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp245 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp246 standard_surface1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp246 440 442 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 433 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp248 standard_surface1_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp247 $tmp248 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp249 $const12 $tmp247 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp249 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp250 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_transmission_roughness_out.x $tmp250 $const12 	%argrw{"wrr"}
	assign		___694_transmission_roughness_out.x ___694_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_transmission_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_transmission_roughness_out.y ___694_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_transmission_roughness_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_transmission_roughness_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:272
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___694_coat_affected_subsurface_color_out ___694_subsurface_color_nonnegative_out ___694_coat_gamma_out 	%line{272} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:273
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___694_coat_affected_diffuse_color_out ___694_base_color_nonnegative_out ___694_coat_gamma_out 	%line{273} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:274
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___694_one_minus_coat_ior_to_F0_in1_tmp $const12 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:275
#     color emission_color0_out = color(0.0);
	sub		___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_in1_tmp ___694_coat_ior_to_F0_out 	%line{275} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:276
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___694_emission_color0_out $const20 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:277
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const33 450 	%line{277} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:112
#     out = combine_out;
	color		___679_combine_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out 	%line{112} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:113
# }
	assign		___694_emission_color0_out ___679_combine_out 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:278
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___694_coat_bsdf_out ___694_null_closure 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:279
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const37 462 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp252 $const36 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp252 455 456 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp253 $const36 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp253 459 460 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp254 $const41 geomprop_Nworld_out1 ___694_coat_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.y standard_surface1_coat_IOR $const35 $const39 $const5 $const40 $const34 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_coat_bsdf_out $tmp254 standard_surface1_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:280
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___694_metal_bsdf_weight_tmp $const12 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:281
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___694_metal_bsdf_distribution_tmp $const35 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:282
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp255 $const42 geomprop_Nworld_out1 ___694_main_tangent_out ___694_main_roughness_out.x ___694_main_roughness_out.y ___694_artistic_ior_ior ___694_artistic_ior_extinction ___694_metal_bsdf_distribution_tmp $const39 standard_surface1_thin_film_thickness $const40 standard_surface1_thin_film_IOR 	%line{282} %argrw{"wrrrrrrrrrrrr"}
	mul		___694_metal_bsdf_out $tmp255 ___694_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:283
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___694_specular_bsdf_out ___694_null_closure 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:284
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const37 478 	%line{284} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp256 $const36 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp256 471 472 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint standard_surface1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp257 $const36 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp257 475 476 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint standard_surface1_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp258 $const41 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_main_roughness_out.x ___694_main_roughness_out.y standard_surface1_specular_IOR $const35 $const39 standard_surface1_thin_film_thickness $const40 standard_surface1_thin_film_IOR 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_specular_bsdf_out $tmp258 standard_surface1_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:285
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___694_transmission_bsdf_out ___694_null_closure 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:286
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const37 490 	%line{286} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp259 $const38 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp259 483 484 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint standard_surface1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp260 $const38 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp260 487 488 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint standard_surface1_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp261 $const41 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_transmission_roughness_out.x ___694_transmission_roughness_out.y standard_surface1_specular_IOR $const35 $const39 $const5 $const40 $const34 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_transmission_bsdf_out $tmp261 $const12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:287
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp262 $const43 geomprop_Nworld_out1 standard_surface1_sheen_color standard_surface1_sheen_roughness 	%line{287} %argrw{"wrrrr"}
	mul		___694_sheen_bsdf_out $tmp262 standard_surface1_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:288
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___694_translucent_bsdf_weight_tmp $const12 	%line{288} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:289
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp263 $const44 geomprop_Nworld_out1 ___694_coat_affected_subsurface_color_out 	%line{289} %argrw{"wrrr"}
	mul		___694_translucent_bsdf_out $tmp263 ___694_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:290
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___694_subsurface_bsdf_out ___694_null_closure 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:291
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const45 499 	%line{291} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:106
# #endif
	mul		$tmp264 $const12 ___694_coat_affected_subsurface_color_out 	%line{106} %argrw{"wrr"}
	closure		___694_subsurface_bsdf_out $const46 geomprop_Nworld_out1 $tmp264 $const12 ___694_subsurface_radius_scaled_out standard_surface1_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:292
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const47 504 	%line{292} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp265 $const12 ___694_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp266 ___694_subsurface_bsdf_out $tmp265 	%argrw{"wrr"}
	mul		$tmp267 ___694_translucent_bsdf_out ___694_subsurface_selector_out 	%argrw{"wrr"}
	add		___694_selected_subsurface_bsdf_out $tmp266 $tmp267 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:293
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp268 $const48 geomprop_Nworld_out1 ___694_coat_affected_diffuse_color_out standard_surface1_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{293} %argrw{"wrrrr"}
	mul		___694_diffuse_bsdf_out $tmp268 standard_surface1_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:294
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const47 511 	%line{294} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp269 $const12 standard_surface1_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp270 ___694_diffuse_bsdf_out $tmp269 	%argrw{"wrr"}
	mul		$tmp271 ___694_selected_subsurface_bsdf_out standard_surface1_subsurface 	%argrw{"wrr"}
	add		___694_subsurface_mix_out $tmp270 $tmp271 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:295
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___694_sheen_layer_out $const49 ___694_sheen_bsdf_out ___694_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{295} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:296
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const47 517 	%line{296} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp272 $const12 standard_surface1_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp273 ___694_sheen_layer_out $tmp272 	%argrw{"wrr"}
	mul		$tmp274 ___694_transmission_bsdf_out standard_surface1_transmission 	%argrw{"wrr"}
	add		___694_transmission_mix_out $tmp273 $tmp274 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:297
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___694_specular_layer_out $const49 ___694_specular_bsdf_out ___694_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{297} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:298
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const47 523 	%line{298} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp275 $const12 standard_surface1_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp276 ___694_specular_layer_out $tmp275 	%argrw{"wrr"}
	mul		$tmp277 ___694_metal_bsdf_out standard_surface1_metalness 	%argrw{"wrr"}
	add		___694_metalness_mix_out $tmp276 $tmp277 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:299
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___694_thin_film_layer_attenuated_out ___694_metalness_mix_out ___694_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{299} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:300
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___694_coat_layer_out $const49 ___694_coat_bsdf_out ___694_thin_film_layer_attenuated_out 	%line{300} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:301
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___694_emission_edf_out $const50 ___694_emission_weight_out 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:302
#     EDF coat_emission_edf_out = null_closure;
	mul		___694_coat_tinted_emission_edf_out ___694_emission_edf_out standard_surface1_coat_color 	%line{302} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:303
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___694_coat_emission_edf_out ___694_null_closure 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:304
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const52 540 	%line{304} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:197
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp280 I 	%line{197} %argrw{"wr"}
	dot		$tmp279 N $tmp280 	%argrw{"wrr"}
	fabs		___692_NdotV $tmp279 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:198
#     result = base * f;
	functioncall	$const53 539 	%line{198} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:191
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp281 $const12 ___692_NdotV 	%line{191} %argrw{"wrr"}
	functioncall	$const16 537 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp282 $tmp281 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___691_x $tmp282 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:192
# }
	pow		$tmp283 ___691_x $const51 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{192} %argrw{"wrr"}
	mix		___692_f ___694_emission_color0_out $const20 $tmp283 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:199
# }
	mul		___694_coat_emission_edf_out ___694_coat_tinted_emission_edf_out ___692_f 	%line{199} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:305
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const47 545 	%line{305} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp284 $const12 standard_surface1_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp285 ___694_emission_edf_out $tmp284 	%argrw{"wrr"}
	mul		$tmp286 ___694_coat_emission_edf_out standard_surface1_coat 	%argrw{"wrr"}
	add		___694_blended_coat_emission_edf_out $tmp285 $tmp286 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:306
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___694_shader_constructor_out.bsdf ___694_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{306} %argrw{"wr"}
	assign		___694_shader_constructor_out.edf ___694_null_closure 	%argrw{"wr"}
	assign		___694_shader_constructor_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:307
#     out = shader_constructor_out;
	functioncall	$const54 555 	%line{307} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:204
#     result.edf     = edf;
	assign		___694_shader_constructor_out.bsdf ___694_coat_layer_out 	%line{204} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:205
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___694_shader_constructor_out.edf ___694_blended_coat_emission_edf_out 	%line{205} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:206
# }
	functioncall	$const16 554 	%line{206} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp287 ___694_opacity_luminance_float_out $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_shader_constructor_out.opacity $tmp287 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:206
# }
	assign		___694_shader_constructor_out.opacity ___694_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{206} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:308
# }
	assign		standard_surface1_out.bsdf ___694_shader_constructor_out.bsdf 	%line{308} %argrw{"wr"}
	assign		standard_surface1_out.edf ___694_shader_constructor_out.edf 	%argrw{"wr"}
	assign		standard_surface1_out.opacity ___694_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1084
#     NG_standard_surface_surfaceshader_100(standard_surface2_base, standard_surface2_base_color, standard_surface2_diffuse_roughness, standard_surface2_metalness, standard_surface2_specular, standard_surface2_specular_color, standard_surface2_specular_roughness, standard_surface2_specular_IOR, standard_surface2_specular_anisotropy, standard_surface2_specular_rotation, standard_surface2_transmission, standard_surface2_transmission_color, standard_surface2_transmission_depth, standard_surface2_transmission_scatter, standard_surface2_transmission_scatter_anisotropy, standard_surface2_transmission_dispersion, standard_surface2_transmission_extra_roughness, standard_surface2_subsurface, standard_surface2_subsurface_color, standard_surface2_subsurface_radius, standard_surface2_subsurface_scale, standard_surface2_subsurface_anisotropy, standard_surface2_sheen, standard_surface2_sheen_color, standard_surface2_sheen_roughness, standard_surface2_coat, standard_surface2_coat_color, standard_surface2_coat_roughness, standard_surface2_coat_anisotropy, standard_surface2_coat_rotation, standard_surface2_coat_IOR, geomprop_Nworld_out1, standard_surface2_coat_affect_color, standard_surface2_coat_affect_roughness, standard_surface2_thin_film_thickness, standard_surface2_thin_film_IOR, standard_surface2_emission, standard_surface2_emission_color, standard_surface2_opacity, standard_surface2_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, standard_surface2_out);
	assign		standard_surface2_out.bsdf null_closure 	%line{1084} %argrw{"wr"}
	assign		standard_surface2_out.edf null_closure 	%argrw{"wr"}
	assign		standard_surface2_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1085
#     surfaceshader mix_surface_shader_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const13 1074 	%line{1085} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:211
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___694_null_closure $const1 	%line{211} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:212
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___694_coat_roughness_vector_out.x $const5 	%line{212} %argrw{"wr"}
	assign		___694_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:213
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const14 584 	%line{213} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp288 standard_surface2_coat_roughness standard_surface2_coat_roughness 	%line{36} %argrw{"wrr"}
	functioncall	$const16 570 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp289 $tmp288 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp289 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp290 standard_surface2_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp290 582 584 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 575 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp292 standard_surface2_coat_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp291 $tmp292 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp293 $const12 $tmp291 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp293 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp294 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_coat_roughness_vector_out.x $tmp294 $const12 	%argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_coat_roughness_vector_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_coat_roughness_vector_out.y ___694_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_coat_roughness_vector_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_coat_roughness_vector_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:214
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___694_coat_tangent_rotate_degree_in2_tmp $const18 	%line{214} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:215
#     color metal_reflectivity_out = base_color * base;
	mul		___694_coat_tangent_rotate_degree_out standard_surface2_coat_rotation ___694_coat_tangent_rotate_degree_in2_tmp 	%line{215} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:216
#     color metal_edgecolor_out = specular_color * specular;
	mul		___694_metal_reflectivity_out standard_surface2_base_color standard_surface2_base 	%line{216} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:217
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___694_metal_edgecolor_out standard_surface2_specular_color standard_surface2_specular 	%line{217} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:218
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___694_coat_affect_roughness_multiply1_out standard_surface2_coat_affect_roughness standard_surface2_coat 	%line{218} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:219
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___694_tangent_rotate_degree_in2_tmp $const18 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:220
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___694_tangent_rotate_degree_out standard_surface2_specular_rotation ___694_tangent_rotate_degree_in2_tmp 	%line{220} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:221
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___694_transmission_roughness_add_out standard_surface2_specular_roughness standard_surface2_transmission_extra_roughness 	%line{221} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:222
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___694_subsurface_color_nonnegative_in2_tmp $const5 	%line{222} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:223
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp295 ___694_subsurface_color_nonnegative_in2_tmp 	%line{223} %argrw{"wr"}
	max		___694_subsurface_color_nonnegative_out standard_surface2_subsurface_color $tmp295 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:224
#     float coat_clamped_high_tmp = 1.000000;
	assign		___694_coat_clamped_low_tmp $const5 	%line{224} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:225
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___694_coat_clamped_high_tmp $const12 	%line{225} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:226
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const16 600 	%line{226} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp296 standard_surface2_coat ___694_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_coat_clamped_out $tmp296 ___694_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:227
#     float subsurface_selector_out = float(thin_walled);
	mul		___694_subsurface_radius_scaled_out standard_surface2_subsurface_radius standard_surface2_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{227} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:228
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp297 standard_surface2_thin_walled 	%line{228} %argrw{"wr"}
	assign		___694_subsurface_selector_out $tmp297 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:229
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___694_base_color_nonnegative_in2_tmp $const5 	%line{229} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:230
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp298 ___694_base_color_nonnegative_in2_tmp 	%line{230} %argrw{"wr"}
	max		___694_base_color_nonnegative_out standard_surface2_base_color $tmp298 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:231
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___694_coat_attenuation_bg_tmp $const19 	%line{231} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:232
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___694_coat_attenuation_out ___694_coat_attenuation_bg_tmp standard_surface2_coat_color standard_surface2_coat 	%line{232} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:233
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___694_one_minus_coat_ior_in1_tmp $const12 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:234
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___694_one_minus_coat_ior_out ___694_one_minus_coat_ior_in1_tmp standard_surface2_coat_IOR 	%line{234} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:235
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___694_one_plus_coat_ior_in1_tmp $const12 	%line{235} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:236
#     color emission_weight_out = emission_color * emission1;
	add		___694_one_plus_coat_ior_out ___694_one_plus_coat_ior_in1_tmp standard_surface2_coat_IOR 	%line{236} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:237
#     color opacity_luminance_out = color(0.0);
	mul		___694_emission_weight_out standard_surface2_emission_color standard_surface2_emission 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:238
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___694_opacity_luminance_out $const20 	%line{238} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:239
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const22 617 	%line{239} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:52
# }
	dot		$tmp300 standard_surface2_opacity $const21 	%line{52} %argrw{"wrr"}
	assign		___694_opacity_luminance_out $tmp300 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:240
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___694_coat_tangent_rotate_out $const23 	%line{240} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:241
#     color artistic_ior_ior = color(0.0);
	functioncall	$const24 735 	%line{241} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:70
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const25 622 	%line{70} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp301 $const26 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_coat_tangent_rotate_degree_out $tmp301 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:71
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const28 685 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{71} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:57
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:58
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:59
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:60
# 
	sub		___674_oc $const12 ___674_c 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp302 ___674_nAxis $const1 	%line{62} %argrw{"wrr"}
	mul		$tmp303 ___674_oc $tmp302 	%argrw{"wrr"}
	compref		$tmp304 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp305 $tmp303 $tmp304 	%argrw{"wrr"}
	add		$tmp306 $tmp305 ___674_c 	%argrw{"wrr"}
	compref		$tmp307 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp308 ___674_oc $tmp307 	%argrw{"wrr"}
	compref		$tmp309 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp310 $tmp308 $tmp309 	%argrw{"wrr"}
	compref		$tmp311 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp312 $tmp311 ___674_s 	%argrw{"wrr"}
	sub		$tmp313 $tmp310 $tmp312 	%argrw{"wrr"}
	compref		$tmp314 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp315 ___674_oc $tmp314 	%argrw{"wrr"}
	compref		$tmp316 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp317 $tmp315 $tmp316 	%argrw{"wrr"}
	compref		$tmp318 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp319 $tmp318 ___674_s 	%argrw{"wrr"}
	add		$tmp320 $tmp317 $tmp319 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:63
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp321 ___674_nAxis $const1 	%line{63} %argrw{"wrr"}
	mul		$tmp322 ___674_oc $tmp321 	%argrw{"wrr"}
	compref		$tmp323 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp324 $tmp322 $tmp323 	%argrw{"wrr"}
	compref		$tmp325 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp326 $tmp325 ___674_s 	%argrw{"wrr"}
	add		$tmp327 $tmp324 $tmp326 	%argrw{"wrr"}
	compref		$tmp328 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp329 ___674_oc $tmp328 	%argrw{"wrr"}
	compref		$tmp330 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp331 $tmp329 $tmp330 	%argrw{"wrr"}
	add		$tmp332 $tmp331 ___674_c 	%argrw{"wrr"}
	compref		$tmp333 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp334 ___674_oc $tmp333 	%argrw{"wrr"}
	compref		$tmp335 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp336 $tmp334 $tmp335 	%argrw{"wrr"}
	compref		$tmp337 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp338 $tmp337 ___674_s 	%argrw{"wrr"}
	sub		$tmp339 $tmp336 $tmp338 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:64
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp340 ___674_nAxis $const4 	%line{64} %argrw{"wrr"}
	mul		$tmp341 ___674_oc $tmp340 	%argrw{"wrr"}
	compref		$tmp342 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp343 $tmp341 $tmp342 	%argrw{"wrr"}
	compref		$tmp344 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp345 $tmp344 ___674_s 	%argrw{"wrr"}
	sub		$tmp346 $tmp343 $tmp345 	%argrw{"wrr"}
	compref		$tmp347 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp348 ___674_oc $tmp347 	%argrw{"wrr"}
	compref		$tmp349 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp350 $tmp348 $tmp349 	%argrw{"wrr"}
	compref		$tmp351 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp352 $tmp351 ___674_s 	%argrw{"wrr"}
	add		$tmp353 $tmp350 $tmp352 	%argrw{"wrr"}
	compref		$tmp354 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp355 ___674_oc $tmp354 	%argrw{"wrr"}
	compref		$tmp356 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp357 $tmp355 $tmp356 	%argrw{"wrr"}
	add		$tmp358 $tmp357 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp306 $tmp313 $tmp320 $const5 $tmp327 $tmp332 $tmp339 $const5 $tmp346 $tmp353 $tmp358 $const5 $const5 $const5 $const5 $const12 	%line{62} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:72
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp359.x geomprop_Tworld_out1 $const1 	%line{72} %argrw{"wrr"}
	compref		$tmp359.y geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	compref		$tmp359.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp359.w $const12 	%argrw{"wr"}
	functioncall	$const2 734 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp360 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp361 $tmp360 $tmp359.x 	%argrw{"wrr"}
	mxcompref	$tmp362 ___675_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp363 $tmp362 $tmp359.y 	%argrw{"wrr"}
	add		$tmp364 $tmp361 $tmp363 	%argrw{"wrr"}
	mxcompref	$tmp365 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp366 $tmp365 $tmp359.z 	%argrw{"wrr"}
	add		$tmp367 $tmp364 $tmp366 	%argrw{"wrr"}
	mxcompref	$tmp368 ___675_m $const29 $const1 	%argrw{"wrrr"}
	mul		$tmp369 $tmp368 $tmp359.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp367 $tmp369 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp370 ___675_m $const1 $const9 	%line{416} %argrw{"wrrr"}
	mul		$tmp371 $tmp370 $tmp359.x 	%argrw{"wrr"}
	mxcompref	$tmp372 ___675_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp373 $tmp372 $tmp359.y 	%argrw{"wrr"}
	add		$tmp374 $tmp371 $tmp373 	%argrw{"wrr"}
	mxcompref	$tmp375 ___675_m $const4 $const9 	%argrw{"wrrr"}
	mul		$tmp376 $tmp375 $tmp359.z 	%argrw{"wrr"}
	add		$tmp377 $tmp374 $tmp376 	%argrw{"wrr"}
	mxcompref	$tmp378 ___675_m $const29 $const9 	%argrw{"wrrr"}
	mul		$tmp379 $tmp378 $tmp359.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp377 $tmp379 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp380 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp381 $tmp380 $tmp359.x 	%argrw{"wrr"}
	mxcompref	$tmp382 ___675_m $const9 $const4 	%argrw{"wrrr"}
	mul		$tmp383 $tmp382 $tmp359.y 	%argrw{"wrr"}
	add		$tmp384 $tmp381 $tmp383 	%argrw{"wrr"}
	mxcompref	$tmp385 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp386 $tmp385 $tmp359.z 	%argrw{"wrr"}
	add		$tmp387 $tmp384 $tmp386 	%argrw{"wrr"}
	mxcompref	$tmp388 ___675_m $const29 $const4 	%argrw{"wrrr"}
	mul		$tmp389 $tmp388 $tmp359.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp387 $tmp389 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp390 ___675_m $const1 $const29 	%line{418} %argrw{"wrrr"}
	mul		$tmp391 $tmp390 $tmp359.x 	%argrw{"wrr"}
	mxcompref	$tmp392 ___675_m $const9 $const29 	%argrw{"wrrr"}
	mul		$tmp393 $tmp392 $tmp359.y 	%argrw{"wrr"}
	add		$tmp394 $tmp391 $tmp393 	%argrw{"wrr"}
	mxcompref	$tmp395 ___675_m $const4 $const29 	%argrw{"wrrr"}
	mul		$tmp396 $tmp395 $tmp359.z 	%argrw{"wrr"}
	add		$tmp397 $tmp394 $tmp396 	%argrw{"wrr"}
	mxcompref	$tmp398 ___675_m $const29 $const29 	%argrw{"wrrr"}
	mul		$tmp399 $tmp398 $tmp359.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp397 $tmp399 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:73
# }
	vector		___694_coat_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{73} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:242
#     color artistic_ior_extinction = color(0.0);
	assign		___694_artistic_ior_ior $const20 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:243
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___694_artistic_ior_extinction $const20 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:244
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const30 762 	%line{244} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:81
#     color r_sqrt = sqrt(r);
	assign		$tmp400 $const5 	%line{81} %argrw{"wr"}
	assign		$tmp401 $const31 	%argrw{"wr"}
	functioncall	$const16 743 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp402 ___694_metal_reflectivity_out $tmp401 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___676_r $tmp402 $tmp400 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:82
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___676_r_sqrt ___676_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:83
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp403 $const12 ___676_r 	%line{83} %argrw{"wrr"}
	add		$tmp404 $const12 ___676_r 	%argrw{"wrr"}
	div		___676_n_min $tmp403 $tmp404 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:84
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp405 $const12 ___676_r_sqrt 	%line{84} %argrw{"wrr"}
	sub		$tmp406 $const12 ___676_r_sqrt 	%argrw{"wrr"}
	div		___676_n_max $tmp405 $tmp406 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:85
# 
	mix		___694_artistic_ior_ior ___676_n_max ___676_n_min ___694_metal_edgecolor_out 	%line{85} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:87
#     color nm1 = ior - 1.0;
	add		___676_np1 ___694_artistic_ior_ior $const12 	%line{87} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:88
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___676_nm1 ___694_artistic_ior_ior $const12 	%line{88} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:89
#     k2 = max(k2, 0.0);
	mul		$tmp407 ___676_np1 ___676_np1 	%line{89} %argrw{"wrr"}
	mul		$tmp408 $tmp407 ___676_r 	%argrw{"wrr"}
	mul		$tmp409 ___676_nm1 ___676_nm1 	%argrw{"wrr"}
	sub		$tmp410 $tmp408 $tmp409 	%argrw{"wrr"}
	sub		$tmp411 $const12 ___676_r 	%argrw{"wrr"}
	div		___676_k2 $tmp410 $tmp411 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:90
#     extinction = sqrt(k2);
	assign		$tmp412 $const5 	%line{90} %argrw{"wr"}
	max		___676_k2 ___676_k2 $tmp412 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:91
# }
	sqrt		___694_artistic_ior_extinction ___676_k2 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:245
#     vector tangent_rotate_out = vector(0.0);
	mul		___694_coat_affect_roughness_multiply2_out ___694_coat_affect_roughness_multiply1_out standard_surface2_coat_roughness 	%line{245} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:246
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___694_tangent_rotate_out $const23 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:247
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const24 881 	%line{247} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:70
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const25 768 	%line{70} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp413 $const26 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___675_rotationRadians ___694_tangent_rotate_degree_out $tmp413 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:71
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const28 831 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{71} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:57
#     float s = sin(angle);
	normalize	___674_nAxis geomprop_Nworld_out1 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:58
#     float c = cos(angle);
	sin		___674_s ___675_rotationRadians 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:59
#     float oc = 1.0 - c;
	cos		___674_c ___675_rotationRadians 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:60
# 
	sub		___674_oc $const12 ___674_c 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp414 ___674_nAxis $const1 	%line{62} %argrw{"wrr"}
	mul		$tmp415 ___674_oc $tmp414 	%argrw{"wrr"}
	compref		$tmp416 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp417 $tmp415 $tmp416 	%argrw{"wrr"}
	add		$tmp418 $tmp417 ___674_c 	%argrw{"wrr"}
	compref		$tmp419 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp420 ___674_oc $tmp419 	%argrw{"wrr"}
	compref		$tmp421 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp422 $tmp420 $tmp421 	%argrw{"wrr"}
	compref		$tmp423 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp424 $tmp423 ___674_s 	%argrw{"wrr"}
	sub		$tmp425 $tmp422 $tmp424 	%argrw{"wrr"}
	compref		$tmp426 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp427 ___674_oc $tmp426 	%argrw{"wrr"}
	compref		$tmp428 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp429 $tmp427 $tmp428 	%argrw{"wrr"}
	compref		$tmp430 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp431 $tmp430 ___674_s 	%argrw{"wrr"}
	add		$tmp432 $tmp429 $tmp431 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:63
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp433 ___674_nAxis $const1 	%line{63} %argrw{"wrr"}
	mul		$tmp434 ___674_oc $tmp433 	%argrw{"wrr"}
	compref		$tmp435 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp436 $tmp434 $tmp435 	%argrw{"wrr"}
	compref		$tmp437 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp438 $tmp437 ___674_s 	%argrw{"wrr"}
	add		$tmp439 $tmp436 $tmp438 	%argrw{"wrr"}
	compref		$tmp440 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp441 ___674_oc $tmp440 	%argrw{"wrr"}
	compref		$tmp442 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp443 $tmp441 $tmp442 	%argrw{"wrr"}
	add		$tmp444 $tmp443 ___674_c 	%argrw{"wrr"}
	compref		$tmp445 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp446 ___674_oc $tmp445 	%argrw{"wrr"}
	compref		$tmp447 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp448 $tmp446 $tmp447 	%argrw{"wrr"}
	compref		$tmp449 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp450 $tmp449 ___674_s 	%argrw{"wrr"}
	sub		$tmp451 $tmp448 $tmp450 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:64
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp452 ___674_nAxis $const4 	%line{64} %argrw{"wrr"}
	mul		$tmp453 ___674_oc $tmp452 	%argrw{"wrr"}
	compref		$tmp454 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp455 $tmp453 $tmp454 	%argrw{"wrr"}
	compref		$tmp456 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp457 $tmp456 ___674_s 	%argrw{"wrr"}
	sub		$tmp458 $tmp455 $tmp457 	%argrw{"wrr"}
	compref		$tmp459 ___674_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp460 ___674_oc $tmp459 	%argrw{"wrr"}
	compref		$tmp461 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp462 $tmp460 $tmp461 	%argrw{"wrr"}
	compref		$tmp463 ___674_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp464 $tmp463 ___674_s 	%argrw{"wrr"}
	add		$tmp465 $tmp462 $tmp464 	%argrw{"wrr"}
	compref		$tmp466 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp467 ___674_oc $tmp466 	%argrw{"wrr"}
	compref		$tmp468 ___674_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp469 $tmp467 $tmp468 	%argrw{"wrr"}
	add		$tmp470 $tmp469 ___674_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:62
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___675_m $tmp418 $tmp425 $tmp432 $const5 $tmp439 $tmp444 $tmp451 $const5 $tmp458 $tmp465 $tmp470 $const5 $const5 $const5 $const5 $const12 	%line{62} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:72
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp471.x geomprop_Tworld_out1 $const1 	%line{72} %argrw{"wrr"}
	compref		$tmp471.y geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	compref		$tmp471.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp471.w $const12 	%argrw{"wr"}
	functioncall	$const2 880 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp472 ___675_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp473 $tmp472 $tmp471.x 	%argrw{"wrr"}
	mxcompref	$tmp474 ___675_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp475 $tmp474 $tmp471.y 	%argrw{"wrr"}
	add		$tmp476 $tmp473 $tmp475 	%argrw{"wrr"}
	mxcompref	$tmp477 ___675_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp478 $tmp477 $tmp471.z 	%argrw{"wrr"}
	add		$tmp479 $tmp476 $tmp478 	%argrw{"wrr"}
	mxcompref	$tmp480 ___675_m $const29 $const1 	%argrw{"wrrr"}
	mul		$tmp481 $tmp480 $tmp471.w 	%argrw{"wrr"}
	add		___675_trans.x $tmp479 $tmp481 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp482 ___675_m $const1 $const9 	%line{416} %argrw{"wrrr"}
	mul		$tmp483 $tmp482 $tmp471.x 	%argrw{"wrr"}
	mxcompref	$tmp484 ___675_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp485 $tmp484 $tmp471.y 	%argrw{"wrr"}
	add		$tmp486 $tmp483 $tmp485 	%argrw{"wrr"}
	mxcompref	$tmp487 ___675_m $const4 $const9 	%argrw{"wrrr"}
	mul		$tmp488 $tmp487 $tmp471.z 	%argrw{"wrr"}
	add		$tmp489 $tmp486 $tmp488 	%argrw{"wrr"}
	mxcompref	$tmp490 ___675_m $const29 $const9 	%argrw{"wrrr"}
	mul		$tmp491 $tmp490 $tmp471.w 	%argrw{"wrr"}
	add		___675_trans.y $tmp489 $tmp491 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp492 ___675_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp493 $tmp492 $tmp471.x 	%argrw{"wrr"}
	mxcompref	$tmp494 ___675_m $const9 $const4 	%argrw{"wrrr"}
	mul		$tmp495 $tmp494 $tmp471.y 	%argrw{"wrr"}
	add		$tmp496 $tmp493 $tmp495 	%argrw{"wrr"}
	mxcompref	$tmp497 ___675_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp498 $tmp497 $tmp471.z 	%argrw{"wrr"}
	add		$tmp499 $tmp496 $tmp498 	%argrw{"wrr"}
	mxcompref	$tmp500 ___675_m $const29 $const4 	%argrw{"wrrr"}
	mul		$tmp501 $tmp500 $tmp471.w 	%argrw{"wrr"}
	add		___675_trans.z $tmp499 $tmp501 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp502 ___675_m $const1 $const29 	%line{418} %argrw{"wrrr"}
	mul		$tmp503 $tmp502 $tmp471.x 	%argrw{"wrr"}
	mxcompref	$tmp504 ___675_m $const9 $const29 	%argrw{"wrrr"}
	mul		$tmp505 $tmp504 $tmp471.y 	%argrw{"wrr"}
	add		$tmp506 $tmp503 $tmp505 	%argrw{"wrr"}
	mxcompref	$tmp507 ___675_m $const4 $const29 	%argrw{"wrrr"}
	mul		$tmp508 $tmp507 $tmp471.z 	%argrw{"wrr"}
	add		$tmp509 $tmp506 $tmp508 	%argrw{"wrr"}
	mxcompref	$tmp510 ___675_m $const29 $const29 	%argrw{"wrrr"}
	mul		$tmp511 $tmp510 $tmp471.w 	%argrw{"wrr"}
	add		___675_trans.w $tmp509 $tmp511 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:73
# }
	vector		___694_tangent_rotate_out ___675_trans.x ___675_trans.y ___675_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{73} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:248
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___694_transmission_roughness_clamped_low_tmp $const5 	%line{248} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:249
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___694_transmission_roughness_clamped_high_tmp $const12 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:250
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const16 886 	%line{250} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp512 ___694_transmission_roughness_add_out ___694_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_transmission_roughness_clamped_out $tmp512 ___694_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:251
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___694_coat_gamma_multiply_out ___694_coat_clamped_out standard_surface2_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{251} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:252
#     int opacity_luminance_float_index_tmp = 0;
	div		___694_coat_ior_to_F0_sqrt_out ___694_one_minus_coat_ior_out ___694_one_plus_coat_ior_out 	%line{252} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:253
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___694_opacity_luminance_float_index_tmp $const1 	%line{253} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:254
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const8 891 	%line{254} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___694_opacity_luminance_float_out ___694_opacity_luminance_out ___694_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:255
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___694_coat_tangent_rotate_normalize_out ___694_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{255} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:256
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_roughness_fg_tmp $const12 	%line{256} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:257
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___694_coat_affected_roughness_out standard_surface2_specular_roughness ___694_coat_affected_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{257} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:258
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___694_tangent_rotate_normalize_out ___694_tangent_rotate_out 	%line{258} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:259
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___694_coat_affected_transmission_roughness_fg_tmp $const12 	%line{259} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:260
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___694_coat_affected_transmission_roughness_out ___694_transmission_roughness_clamped_out ___694_coat_affected_transmission_roughness_fg_tmp ___694_coat_affect_roughness_multiply2_out 	%line{260} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:261
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___694_coat_gamma_in2_tmp $const12 	%line{261} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:262
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___694_coat_gamma_out ___694_coat_gamma_multiply_out ___694_coat_gamma_in2_tmp 	%line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:263
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___694_coat_ior_to_F0_out ___694_coat_ior_to_F0_sqrt_out ___694_coat_ior_to_F0_sqrt_out 	%line{263} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:264
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___694_coat_tangent_value2_tmp $const5 	%line{264} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:265
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp513 standard_surface2_coat_anisotropy ___694_coat_tangent_value2_tmp 	%line{265} %argrw{"wrr"}
	functioncall	$const32 908 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp513 906 908 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_coat_tangent_out ___694_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:266
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___694_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{266} %argrw{"wr"}
	assign		___694_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:267
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const14 929 	%line{267} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp514 ___694_coat_affected_roughness_out ___694_coat_affected_roughness_out 	%line{36} %argrw{"wrr"}
	functioncall	$const16 915 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp515 $tmp514 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp515 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp516 standard_surface2_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp516 927 929 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 920 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp518 standard_surface2_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp517 $tmp518 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp519 $const12 $tmp517 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp519 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp520 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_main_roughness_out.x $tmp520 $const12 	%argrw{"wrr"}
	assign		___694_main_roughness_out.x ___694_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_main_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_main_roughness_out.y ___694_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_main_roughness_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_main_roughness_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:268
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___694_main_tangent_value2_tmp $const5 	%line{268} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:269
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp521 standard_surface2_specular_anisotropy ___694_main_tangent_value2_tmp 	%line{269} %argrw{"wrr"}
	functioncall	$const32 937 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp521 935 937 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___694_main_tangent_out ___694_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___694_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:270
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___694_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{270} %argrw{"wr"}
	assign		___694_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:271
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const14 958 	%line{271} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:36
#     if (anisotropy > 0.0)
	mul		$tmp522 ___694_coat_affected_transmission_roughness_out ___694_coat_affected_transmission_roughness_out 	%line{36} %argrw{"wrr"}
	functioncall	$const16 944 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp523 $tmp522 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___670_roughness_sqr $tmp523 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:37
#     {
	gt		$tmp524 standard_surface2_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{37} %argrw{"wrr"}
	if		$tmp524 956 958 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 949 	%line{39} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp526 standard_surface2_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp525 $tmp526 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:39
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp527 $const12 $tmp525 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{39} %argrw{"wrr"}
	sqrt		___671_aspect $tmp527 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:40
#         result.y = roughness_sqr * aspect;
	div		$tmp528 ___670_roughness_sqr ___671_aspect 	%line{40} %argrw{"wrr"}
	min		___694_transmission_roughness_out.x $tmp528 $const12 	%argrw{"wrr"}
	assign		___694_transmission_roughness_out.x ___694_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:41
#     }
	mul		___694_transmission_roughness_out.y ___670_roughness_sqr ___671_aspect 	%line{41} %argrw{"wrr"}
	assign		___694_transmission_roughness_out.y ___694_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:45
#         result.y = roughness_sqr;
	assign		___694_transmission_roughness_out.x ___670_roughness_sqr 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:46
#     }
	assign		___694_transmission_roughness_out.y ___670_roughness_sqr 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:272
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___694_coat_affected_subsurface_color_out ___694_subsurface_color_nonnegative_out ___694_coat_gamma_out 	%line{272} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:273
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___694_coat_affected_diffuse_color_out ___694_base_color_nonnegative_out ___694_coat_gamma_out 	%line{273} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:274
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___694_one_minus_coat_ior_to_F0_in1_tmp $const12 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:275
#     color emission_color0_out = color(0.0);
	sub		___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_in1_tmp ___694_coat_ior_to_F0_out 	%line{275} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:276
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___694_emission_color0_out $const20 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:277
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const33 966 	%line{277} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:112
#     out = combine_out;
	color		___679_combine_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out ___694_one_minus_coat_ior_to_F0_out 	%line{112} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:113
# }
	assign		___694_emission_color0_out ___679_combine_out 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:278
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___694_coat_bsdf_out ___694_null_closure 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:279
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const37 978 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp530 $const36 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp530 971 972 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp531 $const36 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp531 975 976 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp532 $const41 geomprop_Nworld_out1 ___694_coat_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_coat_roughness_vector_out.x ___694_coat_roughness_vector_out.y standard_surface2_coat_IOR $const35 $const39 $const5 $const40 $const34 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_coat_bsdf_out $tmp532 standard_surface2_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:280
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___694_metal_bsdf_weight_tmp $const12 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:281
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___694_metal_bsdf_distribution_tmp $const35 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:282
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp533 $const42 geomprop_Nworld_out1 ___694_main_tangent_out ___694_main_roughness_out.x ___694_main_roughness_out.y ___694_artistic_ior_ior ___694_artistic_ior_extinction ___694_metal_bsdf_distribution_tmp $const39 standard_surface2_thin_film_thickness $const40 standard_surface2_thin_film_IOR 	%line{282} %argrw{"wrrrrrrrrrrrr"}
	mul		___694_metal_bsdf_out $tmp533 ___694_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:283
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___694_specular_bsdf_out ___694_null_closure 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:284
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const37 994 	%line{284} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp534 $const36 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp534 987 988 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint standard_surface2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp535 $const36 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp535 991 992 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint standard_surface2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp536 $const41 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_main_roughness_out.x ___694_main_roughness_out.y standard_surface2_specular_IOR $const35 $const39 standard_surface2_thin_film_thickness $const40 standard_surface2_thin_film_IOR 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_specular_bsdf_out $tmp536 standard_surface2_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:285
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___694_transmission_bsdf_out ___694_null_closure 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:286
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const37 1006 	%line{286} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:96
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp537 $const38 $const38 	%line{96} %argrw{"wrr"}
	if		$tmp537 999 1000 	%argrw{"r"}
	assign		___677_reflection_tint $const20 	%argrw{"wr"}
	assign		___677_reflection_tint standard_surface2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:97
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp538 $const38 $const36 	%line{97} %argrw{"wrr"}
	if		$tmp538 1003 1004 	%argrw{"r"}
	assign		___677_transmission_tint $const20 	%argrw{"wr"}
	assign		___677_transmission_tint standard_surface2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:98
# }
	closure		$tmp539 $const41 geomprop_Nworld_out1 ___694_main_tangent_out ___677_reflection_tint ___677_transmission_tint ___694_transmission_roughness_out.x ___694_transmission_roughness_out.y standard_surface2_specular_IOR $const35 $const39 $const5 $const40 $const34 	%line{98} %argrw{"wrrrrrrrrrrrrr"}
	mul		___694_transmission_bsdf_out $tmp539 $const12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:287
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp540 $const43 geomprop_Nworld_out1 standard_surface2_sheen_color standard_surface2_sheen_roughness 	%line{287} %argrw{"wrrrr"}
	mul		___694_sheen_bsdf_out $tmp540 standard_surface2_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:288
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___694_translucent_bsdf_weight_tmp $const12 	%line{288} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:289
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp541 $const44 geomprop_Nworld_out1 ___694_coat_affected_subsurface_color_out 	%line{289} %argrw{"wrrr"}
	mul		___694_translucent_bsdf_out $tmp541 ___694_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:290
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___694_subsurface_bsdf_out ___694_null_closure 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:291
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const45 1015 	%line{291} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:106
# #endif
	mul		$tmp542 $const12 ___694_coat_affected_subsurface_color_out 	%line{106} %argrw{"wrr"}
	closure		___694_subsurface_bsdf_out $const46 geomprop_Nworld_out1 $tmp542 $const12 ___694_subsurface_radius_scaled_out standard_surface2_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:292
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const47 1020 	%line{292} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp543 $const12 ___694_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp544 ___694_subsurface_bsdf_out $tmp543 	%argrw{"wrr"}
	mul		$tmp545 ___694_translucent_bsdf_out ___694_subsurface_selector_out 	%argrw{"wrr"}
	add		___694_selected_subsurface_bsdf_out $tmp544 $tmp545 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:293
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp546 $const48 geomprop_Nworld_out1 ___694_coat_affected_diffuse_color_out standard_surface2_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{293} %argrw{"wrrrr"}
	mul		___694_diffuse_bsdf_out $tmp546 standard_surface2_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:294
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const47 1027 	%line{294} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp547 $const12 standard_surface2_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp548 ___694_diffuse_bsdf_out $tmp547 	%argrw{"wrr"}
	mul		$tmp549 ___694_selected_subsurface_bsdf_out standard_surface2_subsurface 	%argrw{"wrr"}
	add		___694_subsurface_mix_out $tmp548 $tmp549 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:295
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___694_sheen_layer_out $const49 ___694_sheen_bsdf_out ___694_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{295} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:296
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const47 1033 	%line{296} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp550 $const12 standard_surface2_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp551 ___694_sheen_layer_out $tmp550 	%argrw{"wrr"}
	mul		$tmp552 ___694_transmission_bsdf_out standard_surface2_transmission 	%argrw{"wrr"}
	add		___694_transmission_mix_out $tmp551 $tmp552 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:297
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___694_specular_layer_out $const49 ___694_specular_bsdf_out ___694_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{297} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:298
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const47 1039 	%line{298} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp553 $const12 standard_surface2_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp554 ___694_specular_layer_out $tmp553 	%argrw{"wrr"}
	mul		$tmp555 ___694_metal_bsdf_out standard_surface2_metalness 	%argrw{"wrr"}
	add		___694_metalness_mix_out $tmp554 $tmp555 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:299
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___694_thin_film_layer_attenuated_out ___694_metalness_mix_out ___694_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{299} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:300
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___694_coat_layer_out $const49 ___694_coat_bsdf_out ___694_thin_film_layer_attenuated_out 	%line{300} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:301
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___694_emission_edf_out $const50 ___694_emission_weight_out 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:302
#     EDF coat_emission_edf_out = null_closure;
	mul		___694_coat_tinted_emission_edf_out ___694_emission_edf_out standard_surface2_coat_color 	%line{302} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:303
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___694_coat_emission_edf_out ___694_null_closure 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:304
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const52 1056 	%line{304} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:197
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp558 I 	%line{197} %argrw{"wr"}
	dot		$tmp557 N $tmp558 	%argrw{"wrr"}
	fabs		___692_NdotV $tmp557 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:198
#     result = base * f;
	functioncall	$const53 1055 	%line{198} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:191
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp559 $const12 ___692_NdotV 	%line{191} %argrw{"wrr"}
	functioncall	$const16 1053 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp560 $tmp559 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___691_x $tmp560 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:192
# }
	pow		$tmp561 ___691_x $const51 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{192} %argrw{"wrr"}
	mix		___692_f ___694_emission_color0_out $const20 $tmp561 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:199
# }
	mul		___694_coat_emission_edf_out ___694_coat_tinted_emission_edf_out ___692_f 	%line{199} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:305
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const47 1061 	%line{305} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp562 $const12 standard_surface2_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp563 ___694_emission_edf_out $tmp562 	%argrw{"wrr"}
	mul		$tmp564 ___694_coat_emission_edf_out standard_surface2_coat 	%argrw{"wrr"}
	add		___694_blended_coat_emission_edf_out $tmp563 $tmp564 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:306
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___694_shader_constructor_out.bsdf ___694_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{306} %argrw{"wr"}
	assign		___694_shader_constructor_out.edf ___694_null_closure 	%argrw{"wr"}
	assign		___694_shader_constructor_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:307
#     out = shader_constructor_out;
	functioncall	$const54 1071 	%line{307} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:204
#     result.edf     = edf;
	assign		___694_shader_constructor_out.bsdf ___694_coat_layer_out 	%line{204} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:205
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___694_shader_constructor_out.edf ___694_blended_coat_emission_edf_out 	%line{205} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:206
# }
	functioncall	$const16 1070 	%line{206} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp565 ___694_opacity_luminance_float_out $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_shader_constructor_out.opacity $tmp565 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:206
# }
	assign		___694_shader_constructor_out.opacity ___694_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{206} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:308
# }
	assign		standard_surface2_out.bsdf ___694_shader_constructor_out.bsdf 	%line{308} %argrw{"wr"}
	assign		standard_surface2_out.edf ___694_shader_constructor_out.edf 	%argrw{"wr"}
	assign		standard_surface2_out.opacity ___694_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1086
#     mx_mix_surfaceshader(standard_surface1_out, standard_surface2_out, mix_surface_shader_mix, mix_surface_shader_out);
	assign		mix_surface_shader_out.bsdf null_closure 	%line{1086} %argrw{"wr"}
	assign		mix_surface_shader_out.edf null_closure 	%argrw{"wr"}
	assign		mix_surface_shader_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1087
#     MATERIAL material_out = mx_surfacematerial(mix_surface_shader_out, surfaceshader(null_closure, null_closure, 1.0), vector(0.0));
	functioncall	$const55 1092 	%line{1087} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:313
#     result.edf = mix(bg.edf, fg.edf, w);
	functioncall	$const47 1083 	%line{313} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp566 $const12 mix_surface_shader_mix 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp567 standard_surface2_out.bsdf $tmp566 	%argrw{"wrr"}
	mul		$tmp568 standard_surface1_out.bsdf mix_surface_shader_mix 	%argrw{"wrr"}
	add		mix_surface_shader_out.bsdf $tmp567 $tmp568 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:313
#     result.edf = mix(bg.edf, fg.edf, w);
	assign		mix_surface_shader_out.bsdf mix_surface_shader_out.bsdf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:314
#     result.opacity = mix(bg.opacity, fg.opacity, w);
	functioncall	$const47 1089 	%line{314} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp569 $const12 mix_surface_shader_mix 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp570 standard_surface2_out.edf $tmp569 	%argrw{"wrr"}
	mul		$tmp571 standard_surface1_out.edf mix_surface_shader_mix 	%argrw{"wrr"}
	add		mix_surface_shader_out.edf $tmp570 $tmp571 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:314
#     result.opacity = mix(bg.opacity, fg.opacity, w);
	assign		mix_surface_shader_out.edf mix_surface_shader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:315
# }
	mix		mix_surface_shader_out.opacity standard_surface2_out.opacity standard_surface1_out.opacity mix_surface_shader_mix 	%line{315} %argrw{"wrrr"}
	assign		mix_surface_shader_out.opacity mix_surface_shader_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1088
#     out = material_out;
	assign		$tmp572.bsdf null_closure 	%line{1088} %argrw{"wr"}
	assign		$tmp572.edf null_closure 	%argrw{"wr"}
	assign		$tmp572.opacity $const12 	%argrw{"wr"}
	functioncall	$const56 1105 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:320
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const16 1099 	%line{320} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp574 mix_surface_shader_out.opacity $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___696_opacity_weight $tmp574 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:321
# }
	add		$tmp575 mix_surface_shader_out.bsdf mix_surface_shader_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl"} %line{321} %argrw{"wrr"}
	mul		$tmp576 $tmp575 ___696_opacity_weight 	%argrw{"wrr"}
	closure		$tmp577 $const57 	%argrw{"wr"}
	sub		$tmp578 $const12 ___696_opacity_weight 	%argrw{"wrr"}
	mul		$tmp579 $tmp577 $tmp578 	%argrw{"wrr"}
	add		material_out $tmp576 $tmp579 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\shader_ops\\mix_surface_with_opacity_out.osl:1089
# }
	assign		out material_out 	%line{1089} %argrw{"wr"}
	end
