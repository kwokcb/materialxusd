OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\surfacematerial_with_graph\M_Blue.oso
shader M_Blue	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"M_Blue"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	displacement_displacement	0		%meta{string,help,"Scalar displacement amount along the surface normal direction."} %meta{string,widget,"number"}  %read{8,8} %write{2147483647,-1}
param	float	displacement_scale	1		%meta{string,help,"Scale factor for the displacement vector"} %meta{string,widget,"number"}  %read{8,8} %write{2147483647,-1}
param	float	standard_surface_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{38,473} %write{2147483647,-1}
param	color	standard_surface_base_color	0.300000012 0.300000012 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Base Color"} %meta{string,page,"Base"} %meta{string,help,"Color of the diffuse reflection."}  %read{38,57} %write{2147483647,-1}
param	float	standard_surface_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{472,472} %write{2147483647,-1}
param	float	standard_surface_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{487,489} %write{2147483647,-1}
param	float	standard_surface_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{39,445} %write{2147483647,-1}
param	color	standard_surface_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{39,443} %write{2147483647,-1}
param	float	standard_surface_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{43,345} %write{2147483647,-1}
param	float	standard_surface_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{444,456} %write{2147483647,-1}
param	float	standard_surface_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{367,399} %write{2147483647,-1}
param	float	standard_surface_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{42,42} %write{2147483647,-1}
param	float	standard_surface_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{481,483} %write{2147483647,-1}
param	color	standard_surface_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{451,455} %write{2147483647,-1}
param	float	standard_surface_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	standard_surface_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	standard_surface_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{43,43} %write{2147483647,-1}
param	float	standard_surface_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{475,477} %write{2147483647,-1}
param	color	standard_surface_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{46,46} %write{2147483647,-1}
param	color	standard_surface_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{52,52} %write{2147483647,-1}
param	float	standard_surface_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{52,52} %write{2147483647,-1}
param	float	standard_surface_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{466,466} %write{2147483647,-1}
param	float	standard_surface_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{459,459} %write{2147483647,-1}
param	color	standard_surface_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{458,458} %write{2147483647,-1}
param	float	standard_surface_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{458,458} %write{2147483647,-1}
param	float	standard_surface_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{40,511} %write{2147483647,-1}
param	color	standard_surface_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{59,494} %write{2147483647,-1}
param	float	standard_surface_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{18,214} %write{2147483647,-1}
param	float	standard_surface_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{22,353} %write{2147483647,-1}
param	float	standard_surface_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{37,37} %write{2147483647,-1}
param	float	standard_surface_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{61,428} %write{2147483647,-1}
param	float	standard_surface_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{338,338} %write{2147483647,-1}
param	float	standard_surface_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{40,40} %write{2147483647,-1}
param	float	standard_surface_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{432,444} %write{2147483647,-1}
param	float	standard_surface_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{432,444} %write{2147483647,-1}
param	float	standard_surface_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{64,64} %write{2147483647,-1}
param	color	standard_surface_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{64,64} %write{2147483647,-1}
param	color	standard_surface_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{67,67} %write{2147483647,-1}
param	int	standard_surface_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{53,53} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{536,536}
global	vector	I	%read{497,497} %write{2147483647,-1}
global	normal	N	%read{2,498} %write{2147483647,-1}
local	float	___669_roughness_sqr	%read{29,409} %write{21,395}
local	float	___670_aspect	%read{29,406} %write{28,402}
local	vector	___673_nAxis	%read{79,279} %write{75,221}
local	float	___673_s	%read{89,275} %write{76,222}
local	float	___673_c	%read{78,281} %write{77,223}
local	float	___673_oc	%read{80,278} %write{78,224}
local	float	___674_rotationRadians	%read{76,223} %write{73,219}
local	matrix	___674_m	%read{142,329} %write{136,282}
local	float	___674_trans.x	%read{186,332} %write{152,298} %mystruct{___674_trans} %mystructfield{0}
local	float	___674_trans.y	%read{186,332} %write{163,309} %mystruct{___674_trans} %mystructfield{1}
local	float	___674_trans.z	%read{186,332} %write{174,320} %mystruct{___674_trans} %mystructfield{2}
local	float	___674_trans.w	%read{2147483647,-1} %write{185,331} %mystruct{___674_trans} %mystructfield{3}
local	color	___675_r	%read{195,209} %write{194,194}
local	color	___675_r_sqrt	%read{199,200} %write{195,195}
local	color	___675_n_min	%read{202,202} %write{198,198}
local	color	___675_n_max	%read{202,202} %write{201,201}
local	color	___675_np1	%read{205,205} %write{203,203}
local	color	___675_nm1	%read{207,207} %write{204,204}
local	color	___675_k2	%read{212,213} %write{210,212}
local	color	___676_reflection_tint	%read{428,456} %write{422,451}
local	color	___676_transmission_tint	%read{428,456} %write{426,455}
local	color	___678_combine_out	%read{417,417} %write{416,416}
local	float	___690_x	%read{505,505} %write{504,504}
local	float	___691_NdotV	%read{501,501} %write{499,499}
local	color	___691_f	%read{507,507} %write{506,506}
local	closure color	___693_null_closure	%read{418,514} %write{14,14}
local	float	___693_coat_roughness_vector_out.x	%read{31,428} %write{15,34} %mystruct{___693_coat_roughness_vector_out} %mystructfield{0}
local	float	___693_coat_roughness_vector_out.y	%read{33,428} %write{16,35} %mystruct{___693_coat_roughness_vector_out} %mystructfield{1}
local	float	___693_coat_tangent_rotate_degree_in2_tmp	%read{37,37} %write{36,36}
local	float	___693_coat_tangent_rotate_degree_out	%read{73,73} %write{37,37}
local	color	___693_metal_reflectivity_out	%read{193,193} %write{38,38}
local	color	___693_metal_edgecolor_out	%read{202,202} %write{39,39}
local	float	___693_coat_affect_roughness_multiply1_out	%read{214,214} %write{40,40}
local	float	___693_tangent_rotate_degree_in2_tmp	%read{42,42} %write{41,41}
local	float	___693_tangent_rotate_degree_out	%read{219,219} %write{42,42}
local	float	___693_transmission_roughness_add_out	%read{336,336} %write{43,43}
local	float	___693_subsurface_color_nonnegative_in2_tmp	%read{45,45} %write{44,44}
local	color	___693_subsurface_color_nonnegative_out	%read{410,410} %write{46,46}
local	float	___693_coat_clamped_low_tmp	%read{51,51} %write{47,47}
local	float	___693_coat_clamped_high_tmp	%read{50,50} %write{48,48}
local	float	___693_coat_clamped_out	%read{338,338} %write{51,51}
local	color	___693_subsurface_radius_scaled_out	%read{466,466} %write{52,52}
local	float	___693_subsurface_selector_out	%read{468,470} %write{54,54}
local	float	___693_base_color_nonnegative_in2_tmp	%read{56,56} %write{55,55}
local	color	___693_base_color_nonnegative_out	%read{411,411} %write{57,57}
local	color	___693_coat_attenuation_bg_tmp	%read{59,59} %write{58,58}
local	color	___693_coat_attenuation_out	%read{491,491} %write{59,59}
local	float	___693_one_minus_coat_ior_in1_tmp	%read{61,61} %write{60,60}
local	float	___693_one_minus_coat_ior_out	%read{339,339} %write{61,61}
local	float	___693_one_plus_coat_ior_in1_tmp	%read{63,63} %write{62,62}
local	float	___693_one_plus_coat_ior_out	%read{339,339} %write{63,63}
local	color	___693_emission_weight_out	%read{493,493} %write{64,64}
local	color	___693_opacity_luminance_out	%read{342,342} %write{65,68}
local	vector	___693_coat_tangent_rotate_out	%read{343,343} %write{69,186}
local	color	___693_artistic_ior_ior	%read{203,432} %write{187,202}
local	color	___693_artistic_ior_extinction	%read{432,432} %write{188,213}
local	float	___693_coat_affect_roughness_multiply2_out	%read{345,348} %write{214,214}
local	vector	___693_tangent_rotate_out	%read{346,346} %write{215,332}
local	float	___693_transmission_roughness_clamped_low_tmp	%read{337,337} %write{333,333}
local	float	___693_transmission_roughness_clamped_high_tmp	%read{336,336} %write{334,334}
local	float	___693_transmission_roughness_clamped_out	%read{348,348} %write{337,337}
local	float	___693_coat_gamma_multiply_out	%read{350,350} %write{338,338}
local	float	___693_coat_ior_to_F0_sqrt_out	%read{351,351} %write{339,339}
local	int	___693_opacity_luminance_float_index_tmp	%read{342,342} %write{340,340}
local	float	___693_opacity_luminance_float_out	%read{520,520} %write{342,342}
local	vector	___693_coat_tangent_rotate_normalize_out	%read{356,356} %write{343,343}
local	float	___693_coat_affected_roughness_fg_tmp	%read{345,345} %write{344,344}
local	float	___693_coat_affected_roughness_out	%read{363,363} %write{345,345}
local	vector	___693_tangent_rotate_normalize_out	%read{385,385} %write{346,346}
local	float	___693_coat_affected_transmission_roughness_fg_tmp	%read{348,348} %write{347,347}
local	float	___693_coat_affected_transmission_roughness_out	%read{392,392} %write{348,348}
local	float	___693_coat_gamma_in2_tmp	%read{350,350} %write{349,349}
local	float	___693_coat_gamma_out	%read{410,411} %write{350,350}
local	float	___693_coat_ior_to_F0_out	%read{413,413} %write{351,351}
local	float	___693_coat_tangent_value2_tmp	%read{353,353} %write{352,352}
local	vector	___693_coat_tangent_out	%read{428,428} %write{356,358}
local	float	___693_main_roughness_out.x	%read{376,444} %write{360,379} %mystruct{___693_main_roughness_out} %mystructfield{0}
local	float	___693_main_roughness_out.y	%read{378,444} %write{361,380} %mystruct{___693_main_roughness_out} %mystructfield{1}
local	float	___693_main_tangent_value2_tmp	%read{382,382} %write{381,381}
local	vector	___693_main_tangent_out	%read{432,456} %write{385,387}
local	float	___693_transmission_roughness_out.x	%read{405,456} %write{389,408} %mystruct{___693_transmission_roughness_out} %mystructfield{0}
local	float	___693_transmission_roughness_out.y	%read{407,456} %write{390,409} %mystruct{___693_transmission_roughness_out} %mystructfield{1}
local	color	___693_coat_affected_subsurface_color_out	%read{461,465} %write{410,410}
local	color	___693_coat_affected_diffuse_color_out	%read{472,472} %write{411,411}
local	float	___693_one_minus_coat_ior_to_F0_in1_tmp	%read{413,413} %write{412,412}
local	float	___693_one_minus_coat_ior_to_F0_out	%read{416,416} %write{413,413}
local	color	___693_emission_color0_out	%read{506,506} %write{414,417}
local	closure color	___693_coat_bsdf_out	%read{492,492} %write{418,429}
local	float	___693_metal_bsdf_weight_tmp	%read{433,433} %write{430,430}
local	string	___693_metal_bsdf_distribution_tmp	%read{432,432} %write{431,431}
local	closure color	___693_metal_bsdf_out	%read{489,489} %write{433,433}
local	closure color	___693_specular_bsdf_out	%read{485,485} %write{434,445}
local	closure color	___693_transmission_bsdf_out	%read{483,483} %write{446,457}
local	closure color	___693_sheen_bsdf_out	%read{479,479} %write{459,459}
local	float	___693_translucent_bsdf_weight_tmp	%read{462,462} %write{460,460}
local	closure color	___693_translucent_bsdf_out	%read{470,470} %write{462,462}
local	closure color	___693_subsurface_bsdf_out	%read{469,469} %write{463,466}
local	closure color	___693_selected_subsurface_bsdf_out	%read{477,477} %write{471,471}
local	closure color	___693_diffuse_bsdf_out	%read{476,476} %write{473,473}
local	closure color	___693_subsurface_mix_out	%read{479,479} %write{478,478}
local	closure color	___693_sheen_layer_out	%read{482,482} %write{479,479}
local	closure color	___693_transmission_mix_out	%read{485,485} %write{484,484}
local	closure color	___693_specular_layer_out	%read{488,488} %write{485,485}
local	closure color	___693_metalness_mix_out	%read{491,491} %write{490,490}
local	closure color	___693_thin_film_layer_attenuated_out	%read{492,492} %write{491,491}
local	closure color	___693_coat_layer_out	%read{517,517} %write{492,492}
local	closure color	___693_emission_edf_out	%read{494,510} %write{493,493}
local	closure color	___693_coat_tinted_emission_edf_out	%read{507,507} %write{494,494}
local	closure color	___693_coat_emission_edf_out	%read{511,511} %write{495,507}
local	closure color	___693_blended_coat_emission_edf_out	%read{518,518} %write{512,512}
local	closure color	___693_shader_constructor_out.bsdf	%read{523,523} %write{513,517} %mystruct{___693_shader_constructor_out} %mystructfield{0}
local	closure color	___693_shader_constructor_out.edf	%read{524,524} %write{514,518} %mystruct{___693_shader_constructor_out} %mystructfield{1}
local	float	___693_shader_constructor_out.opacity	%read{522,525} %write{515,522} %mystruct{___693_shader_constructor_out} %mystructfield{2}
local	float	___694_opacity_weight	%read{531,533} %write{529,529}
local	closure color	null_closure	%read{10,11} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{75,472} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{137,387} %write{7,7}
local	vector	displacement_out	%read{2147483647,-1} %write{9,9}
local	closure color	standard_surface_out.bsdf	%read{530,530} %write{10,523} %mystruct{standard_surface_out} %mystructfield{0}
local	closure color	standard_surface_out.edf	%read{530,530} %write{11,524} %mystruct{standard_surface_out} %mystructfield{1}
local	float	standard_surface_out.opacity	%read{528,528} %write{12,525} %mystruct{standard_surface_out} %mystructfield{2}
local	closure color	M_Blue_out	%read{536,536} %write{535,535}
const	int	$const1	0		%read{0,340} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,287} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,326} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,529} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{9,9} %write{8,8}
const	float	$const6	1		%read{12,533} %write{2147483647,-1}
const	string	$const7	"NG_standard_surface_surfaceshader_100"		%read{13,13} %write{2147483647,-1}
const	string	$const8	"mx_roughness_anisotropy"		%read{17,391} %write{2147483647,-1}
temp	float	$tmp6	%read{20,20} %write{18,18}
const	float	$const9	1e-08		%read{21,395} %write{2147483647,-1}
const	string	$const10	"clamp"		%read{19,527} %write{2147483647,-1}
temp	float	$tmp7	%read{21,21} %write{20,20}
temp	int	$tmp8	%read{23,23} %write{22,22}
temp	float	$tmp9	%read{27,27} %write{26,26}
const	float	$const11	0.98		%read{25,399} %write{2147483647,-1}
temp	float	$tmp10	%read{26,26} %write{25,25}
temp	float	$tmp11	%read{28,28} %write{27,27}
temp	float	$tmp12	%read{30,30} %write{29,29}
const	float	$const12	360		%read{36,41} %write{2147483647,-1}
temp	color	$tmp13	%read{46,46} %write{45,45}
temp	float	$tmp14	%read{51,51} %write{50,50}
temp	float	$tmp15	%read{54,54} %write{53,53}
temp	color	$tmp16	%read{57,57} %write{56,56}
const	color	$const13	1 1 1		%read{58,427} %write{2147483647,-1}
const	color	$const14	0 0 0		%read{65,506} %write{2147483647,-1}
const	color	$const15	0.272229 0.674082 0.053689		%read{67,67} %write{2147483647,-1}
const	string	$const16	"mx_luminance_color3"		%read{66,66} %write{2147483647,-1}
temp	float	$tmp18	%read{68,68} %write{67,67}
const	vector	$const17	0 0 0		%read{69,215} %write{2147483647,-1}
const	string	$const18	"mx_rotate_vector3"		%read{70,216} %write{2147483647,-1}
const	string	$const19	"radians"		%read{71,217} %write{2147483647,-1}
const	float	$const20	3.1415927		%read{72,218} %write{2147483647,-1}
const	float	$const21	180		%read{72,218} %write{2147483647,-1}
temp	float	$tmp19	%read{73,73} %write{72,72}
const	string	$const22	"rotationMatrix"		%read{74,220} %write{2147483647,-1}
temp	float	$tmp20	%read{80,80} %write{79,79}
temp	float	$tmp21	%read{82,82} %write{80,80}
temp	float	$tmp22	%read{82,82} %write{81,81}
temp	float	$tmp23	%read{83,83} %write{82,82}
temp	float	$tmp24	%read{136,136} %write{83,83}
temp	float	$tmp25	%read{85,85} %write{84,84}
temp	float	$tmp26	%read{87,87} %write{85,85}
const	int	$const23	1		%read{86,323} %write{2147483647,-1}
temp	float	$tmp27	%read{87,87} %write{86,86}
temp	float	$tmp28	%read{90,90} %write{87,87}
temp	float	$tmp29	%read{89,89} %write{88,88}
temp	float	$tmp30	%read{90,90} %write{89,89}
temp	float	$tmp31	%read{136,136} %write{90,90}
temp	float	$tmp32	%read{92,92} %write{91,91}
temp	float	$tmp33	%read{94,94} %write{92,92}
temp	float	$tmp34	%read{94,94} %write{93,93}
temp	float	$tmp35	%read{97,97} %write{94,94}
temp	float	$tmp36	%read{96,96} %write{95,95}
temp	float	$tmp37	%read{97,97} %write{96,96}
temp	float	$tmp38	%read{136,136} %write{97,97}
temp	float	$tmp39	%read{99,99} %write{98,98}
temp	float	$tmp40	%read{101,101} %write{99,99}
temp	float	$tmp41	%read{101,101} %write{100,100}
temp	float	$tmp42	%read{104,104} %write{101,101}
temp	float	$tmp43	%read{103,103} %write{102,102}
temp	float	$tmp44	%read{104,104} %write{103,103}
temp	float	$tmp45	%read{136,136} %write{104,104}
temp	float	$tmp46	%read{106,106} %write{105,105}
temp	float	$tmp47	%read{108,108} %write{106,106}
temp	float	$tmp48	%read{108,108} %write{107,107}
temp	float	$tmp49	%read{109,109} %write{108,108}
temp	float	$tmp50	%read{136,136} %write{109,109}
temp	float	$tmp51	%read{111,111} %write{110,110}
temp	float	$tmp52	%read{113,113} %write{111,111}
temp	float	$tmp53	%read{113,113} %write{112,112}
temp	float	$tmp54	%read{116,116} %write{113,113}
temp	float	$tmp55	%read{115,115} %write{114,114}
temp	float	$tmp56	%read{116,116} %write{115,115}
temp	float	$tmp57	%read{136,136} %write{116,116}
temp	float	$tmp58	%read{118,118} %write{117,117}
temp	float	$tmp59	%read{120,120} %write{118,118}
temp	float	$tmp60	%read{120,120} %write{119,119}
temp	float	$tmp61	%read{123,123} %write{120,120}
temp	float	$tmp62	%read{122,122} %write{121,121}
temp	float	$tmp63	%read{123,123} %write{122,122}
temp	float	$tmp64	%read{136,136} %write{123,123}
temp	float	$tmp65	%read{125,125} %write{124,124}
temp	float	$tmp66	%read{127,127} %write{125,125}
temp	float	$tmp67	%read{127,127} %write{126,126}
temp	float	$tmp68	%read{130,130} %write{127,127}
temp	float	$tmp69	%read{129,129} %write{128,128}
temp	float	$tmp70	%read{130,130} %write{129,129}
temp	float	$tmp71	%read{136,136} %write{130,130}
temp	float	$tmp72	%read{132,132} %write{131,131}
temp	float	$tmp73	%read{134,134} %write{132,132}
temp	float	$tmp74	%read{134,134} %write{133,133}
temp	float	$tmp75	%read{135,135} %write{134,134}
temp	float	$tmp76	%read{136,136} %write{135,135}
temp	float	$tmp77.x	%read{143,176} %write{137,137}
temp	float	$tmp77.y	%read{145,178} %write{138,138}
temp	float	$tmp77.z	%read{148,181} %write{139,139}
temp	float	$tmp77.w	%read{151,184} %write{140,140}
temp	float	$tmp78	%read{143,143} %write{142,142}
temp	float	$tmp79	%read{146,146} %write{143,143}
temp	float	$tmp80	%read{145,145} %write{144,144}
temp	float	$tmp81	%read{146,146} %write{145,145}
temp	float	$tmp82	%read{149,149} %write{146,146}
temp	float	$tmp83	%read{148,148} %write{147,147}
temp	float	$tmp84	%read{149,149} %write{148,148}
temp	float	$tmp85	%read{152,152} %write{149,149}
const	int	$const24	3		%read{150,329} %write{2147483647,-1}
temp	float	$tmp86	%read{151,151} %write{150,150}
temp	float	$tmp87	%read{152,152} %write{151,151}
temp	float	$tmp88	%read{154,154} %write{153,153}
temp	float	$tmp89	%read{157,157} %write{154,154}
temp	float	$tmp90	%read{156,156} %write{155,155}
temp	float	$tmp91	%read{157,157} %write{156,156}
temp	float	$tmp92	%read{160,160} %write{157,157}
temp	float	$tmp93	%read{159,159} %write{158,158}
temp	float	$tmp94	%read{160,160} %write{159,159}
temp	float	$tmp95	%read{163,163} %write{160,160}
temp	float	$tmp96	%read{162,162} %write{161,161}
temp	float	$tmp97	%read{163,163} %write{162,162}
temp	float	$tmp98	%read{165,165} %write{164,164}
temp	float	$tmp99	%read{168,168} %write{165,165}
temp	float	$tmp100	%read{167,167} %write{166,166}
temp	float	$tmp101	%read{168,168} %write{167,167}
temp	float	$tmp102	%read{171,171} %write{168,168}
temp	float	$tmp103	%read{170,170} %write{169,169}
temp	float	$tmp104	%read{171,171} %write{170,170}
temp	float	$tmp105	%read{174,174} %write{171,171}
temp	float	$tmp106	%read{173,173} %write{172,172}
temp	float	$tmp107	%read{174,174} %write{173,173}
temp	float	$tmp108	%read{176,176} %write{175,175}
temp	float	$tmp109	%read{179,179} %write{176,176}
temp	float	$tmp110	%read{178,178} %write{177,177}
temp	float	$tmp111	%read{179,179} %write{178,178}
temp	float	$tmp112	%read{182,182} %write{179,179}
temp	float	$tmp113	%read{181,181} %write{180,180}
temp	float	$tmp114	%read{182,182} %write{181,181}
temp	float	$tmp115	%read{185,185} %write{182,182}
temp	float	$tmp116	%read{184,184} %write{183,183}
temp	float	$tmp117	%read{185,185} %write{184,184}
const	string	$const25	"mx_artistic_ior"		%read{189,189} %write{2147483647,-1}
temp	color	$tmp118	%read{194,194} %write{190,190}
const	float	$const26	0.99		%read{191,191} %write{2147483647,-1}
temp	color	$tmp119	%read{193,193} %write{191,191}
temp	color	$tmp120	%read{194,194} %write{193,193}
temp	color	$tmp121	%read{198,198} %write{196,196}
temp	color	$tmp122	%read{198,198} %write{197,197}
temp	color	$tmp123	%read{201,201} %write{199,199}
temp	color	$tmp124	%read{201,201} %write{200,200}
temp	color	$tmp125	%read{206,206} %write{205,205}
temp	color	$tmp126	%read{208,208} %write{206,206}
temp	color	$tmp127	%read{208,208} %write{207,207}
temp	color	$tmp128	%read{210,210} %write{208,208}
temp	color	$tmp129	%read{210,210} %write{209,209}
temp	color	$tmp130	%read{212,212} %write{211,211}
temp	float	$tmp131	%read{219,219} %write{218,218}
temp	float	$tmp132	%read{226,226} %write{225,225}
temp	float	$tmp133	%read{228,228} %write{226,226}
temp	float	$tmp134	%read{228,228} %write{227,227}
temp	float	$tmp135	%read{229,229} %write{228,228}
temp	float	$tmp136	%read{282,282} %write{229,229}
temp	float	$tmp137	%read{231,231} %write{230,230}
temp	float	$tmp138	%read{233,233} %write{231,231}
temp	float	$tmp139	%read{233,233} %write{232,232}
temp	float	$tmp140	%read{236,236} %write{233,233}
temp	float	$tmp141	%read{235,235} %write{234,234}
temp	float	$tmp142	%read{236,236} %write{235,235}
temp	float	$tmp143	%read{282,282} %write{236,236}
temp	float	$tmp144	%read{238,238} %write{237,237}
temp	float	$tmp145	%read{240,240} %write{238,238}
temp	float	$tmp146	%read{240,240} %write{239,239}
temp	float	$tmp147	%read{243,243} %write{240,240}
temp	float	$tmp148	%read{242,242} %write{241,241}
temp	float	$tmp149	%read{243,243} %write{242,242}
temp	float	$tmp150	%read{282,282} %write{243,243}
temp	float	$tmp151	%read{245,245} %write{244,244}
temp	float	$tmp152	%read{247,247} %write{245,245}
temp	float	$tmp153	%read{247,247} %write{246,246}
temp	float	$tmp154	%read{250,250} %write{247,247}
temp	float	$tmp155	%read{249,249} %write{248,248}
temp	float	$tmp156	%read{250,250} %write{249,249}
temp	float	$tmp157	%read{282,282} %write{250,250}
temp	float	$tmp158	%read{252,252} %write{251,251}
temp	float	$tmp159	%read{254,254} %write{252,252}
temp	float	$tmp160	%read{254,254} %write{253,253}
temp	float	$tmp161	%read{255,255} %write{254,254}
temp	float	$tmp162	%read{282,282} %write{255,255}
temp	float	$tmp163	%read{257,257} %write{256,256}
temp	float	$tmp164	%read{259,259} %write{257,257}
temp	float	$tmp165	%read{259,259} %write{258,258}
temp	float	$tmp166	%read{262,262} %write{259,259}
temp	float	$tmp167	%read{261,261} %write{260,260}
temp	float	$tmp168	%read{262,262} %write{261,261}
temp	float	$tmp169	%read{282,282} %write{262,262}
temp	float	$tmp170	%read{264,264} %write{263,263}
temp	float	$tmp171	%read{266,266} %write{264,264}
temp	float	$tmp172	%read{266,266} %write{265,265}
temp	float	$tmp173	%read{269,269} %write{266,266}
temp	float	$tmp174	%read{268,268} %write{267,267}
temp	float	$tmp175	%read{269,269} %write{268,268}
temp	float	$tmp176	%read{282,282} %write{269,269}
temp	float	$tmp177	%read{271,271} %write{270,270}
temp	float	$tmp178	%read{273,273} %write{271,271}
temp	float	$tmp179	%read{273,273} %write{272,272}
temp	float	$tmp180	%read{276,276} %write{273,273}
temp	float	$tmp181	%read{275,275} %write{274,274}
temp	float	$tmp182	%read{276,276} %write{275,275}
temp	float	$tmp183	%read{282,282} %write{276,276}
temp	float	$tmp184	%read{278,278} %write{277,277}
temp	float	$tmp185	%read{280,280} %write{278,278}
temp	float	$tmp186	%read{280,280} %write{279,279}
temp	float	$tmp187	%read{281,281} %write{280,280}
temp	float	$tmp188	%read{282,282} %write{281,281}
temp	float	$tmp189.x	%read{289,322} %write{283,283}
temp	float	$tmp189.y	%read{291,324} %write{284,284}
temp	float	$tmp189.z	%read{294,327} %write{285,285}
temp	float	$tmp189.w	%read{297,330} %write{286,286}
temp	float	$tmp190	%read{289,289} %write{288,288}
temp	float	$tmp191	%read{292,292} %write{289,289}
temp	float	$tmp192	%read{291,291} %write{290,290}
temp	float	$tmp193	%read{292,292} %write{291,291}
temp	float	$tmp194	%read{295,295} %write{292,292}
temp	float	$tmp195	%read{294,294} %write{293,293}
temp	float	$tmp196	%read{295,295} %write{294,294}
temp	float	$tmp197	%read{298,298} %write{295,295}
temp	float	$tmp198	%read{297,297} %write{296,296}
temp	float	$tmp199	%read{298,298} %write{297,297}
temp	float	$tmp200	%read{300,300} %write{299,299}
temp	float	$tmp201	%read{303,303} %write{300,300}
temp	float	$tmp202	%read{302,302} %write{301,301}
temp	float	$tmp203	%read{303,303} %write{302,302}
temp	float	$tmp204	%read{306,306} %write{303,303}
temp	float	$tmp205	%read{305,305} %write{304,304}
temp	float	$tmp206	%read{306,306} %write{305,305}
temp	float	$tmp207	%read{309,309} %write{306,306}
temp	float	$tmp208	%read{308,308} %write{307,307}
temp	float	$tmp209	%read{309,309} %write{308,308}
temp	float	$tmp210	%read{311,311} %write{310,310}
temp	float	$tmp211	%read{314,314} %write{311,311}
temp	float	$tmp212	%read{313,313} %write{312,312}
temp	float	$tmp213	%read{314,314} %write{313,313}
temp	float	$tmp214	%read{317,317} %write{314,314}
temp	float	$tmp215	%read{316,316} %write{315,315}
temp	float	$tmp216	%read{317,317} %write{316,316}
temp	float	$tmp217	%read{320,320} %write{317,317}
temp	float	$tmp218	%read{319,319} %write{318,318}
temp	float	$tmp219	%read{320,320} %write{319,319}
temp	float	$tmp220	%read{322,322} %write{321,321}
temp	float	$tmp221	%read{325,325} %write{322,322}
temp	float	$tmp222	%read{324,324} %write{323,323}
temp	float	$tmp223	%read{325,325} %write{324,324}
temp	float	$tmp224	%read{328,328} %write{325,325}
temp	float	$tmp225	%read{327,327} %write{326,326}
temp	float	$tmp226	%read{328,328} %write{327,327}
temp	float	$tmp227	%read{331,331} %write{328,328}
temp	float	$tmp228	%read{330,330} %write{329,329}
temp	float	$tmp229	%read{331,331} %write{330,330}
temp	float	$tmp230	%read{337,337} %write{336,336}
const	string	$const27	"mx_extract"		%read{341,341} %write{2147483647,-1}
temp	int	$tmp231	%read{355,355} %write{353,353}
const	string	$const28	"mx_ternary"		%read{354,383} %write{2147483647,-1}
temp	float	$tmp232	%read{365,365} %write{363,363}
temp	float	$tmp233	%read{366,366} %write{365,365}
temp	int	$tmp234	%read{368,368} %write{367,367}
temp	float	$tmp235	%read{372,372} %write{371,371}
temp	float	$tmp236	%read{371,371} %write{370,370}
temp	float	$tmp237	%read{373,373} %write{372,372}
temp	float	$tmp238	%read{375,375} %write{374,374}
temp	int	$tmp239	%read{384,384} %write{382,382}
temp	float	$tmp240	%read{394,394} %write{392,392}
temp	float	$tmp241	%read{395,395} %write{394,394}
temp	int	$tmp242	%read{397,397} %write{396,396}
temp	float	$tmp243	%read{401,401} %write{400,400}
temp	float	$tmp244	%read{400,400} %write{399,399}
temp	float	$tmp245	%read{402,402} %write{401,401}
temp	float	$tmp246	%read{404,404} %write{403,403}
const	string	$const29	"NG_convert_float_color3"		%read{415,415} %write{2147483647,-1}
const	float	$const30	1.5		%read{428,456} %write{2147483647,-1}
const	string	$const31	"ggx"		%read{428,456} %write{2147483647,-1}
const	string	$const32	"R"		%read{420,452} %write{2147483647,-1}
const	string	$const33	"mx_dielectric_bsdf"		%read{419,447} %write{2147483647,-1}
const	string	$const34	"T"		%read{420,452} %write{2147483647,-1}
temp	int	$tmp248	%read{421,421} %write{420,420}
temp	int	$tmp249	%read{425,425} %write{424,424}
temp	closure color	$tmp250	%read{429,429} %write{428,428}
const	string	$const35	"thinfilm_thickness"		%read{428,456} %write{2147483647,-1}
const	string	$const36	"thinfilm_ior"		%read{428,456} %write{2147483647,-1}
const	string	$const37	"dielectric_bsdf"		%read{428,456} %write{2147483647,-1}
temp	closure color	$tmp251	%read{433,433} %write{432,432}
const	string	$const38	"conductor_bsdf"		%read{432,432} %write{2147483647,-1}
temp	int	$tmp252	%read{437,437} %write{436,436}
temp	int	$tmp253	%read{441,441} %write{440,440}
temp	closure color	$tmp254	%read{445,445} %write{444,444}
temp	int	$tmp255	%read{449,449} %write{448,448}
temp	int	$tmp256	%read{453,453} %write{452,452}
temp	closure color	$tmp257	%read{457,457} %write{456,456}
temp	closure color	$tmp258	%read{459,459} %write{458,458}
const	string	$const39	"sheen_bsdf"		%read{458,458} %write{2147483647,-1}
temp	closure color	$tmp259	%read{462,462} %write{461,461}
const	string	$const40	"translucent_bsdf"		%read{461,461} %write{2147483647,-1}
const	string	$const41	"mx_subsurface_bsdf"		%read{464,464} %write{2147483647,-1}
temp	color	$tmp260	%read{466,466} %write{465,465}
const	string	$const42	"subsurface_bssrdf"		%read{466,466} %write{2147483647,-1}
const	string	$const43	"mix"		%read{467,508} %write{2147483647,-1}
temp	float	$tmp261	%read{469,469} %write{468,468}
temp	closure color	$tmp262	%read{471,471} %write{469,469}
temp	closure color	$tmp263	%read{471,471} %write{470,470}
temp	closure color	$tmp264	%read{473,473} %write{472,472}
const	string	$const44	"oren_nayar_diffuse_bsdf"		%read{472,472} %write{2147483647,-1}
temp	float	$tmp265	%read{476,476} %write{475,475}
temp	closure color	$tmp266	%read{478,478} %write{476,476}
temp	closure color	$tmp267	%read{478,478} %write{477,477}
const	string	$const45	"layer"		%read{479,492} %write{2147483647,-1}
temp	float	$tmp268	%read{482,482} %write{481,481}
temp	closure color	$tmp269	%read{484,484} %write{482,482}
temp	closure color	$tmp270	%read{484,484} %write{483,483}
temp	float	$tmp271	%read{488,488} %write{487,487}
temp	closure color	$tmp272	%read{490,490} %write{488,488}
temp	closure color	$tmp273	%read{490,490} %write{489,489}
const	string	$const46	"uniform_edf"		%read{493,493} %write{2147483647,-1}
const	float	$const47	5		%read{505,505} %write{2147483647,-1}
const	string	$const48	"mx_generalized_schlick_edf"		%read{496,496} %write{2147483647,-1}
temp	float	$tmp275	%read{499,499} %write{498,498}
temp	vector	$tmp276	%read{498,498} %write{497,497}
const	string	$const49	"mx_fresnel_schlick"		%read{500,500} %write{2147483647,-1}
temp	float	$tmp277	%read{503,503} %write{501,501}
temp	float	$tmp278	%read{504,504} %write{503,503}
temp	float	$tmp279	%read{506,506} %write{505,505}
temp	float	$tmp280	%read{510,510} %write{509,509}
temp	closure color	$tmp281	%read{512,512} %write{510,510}
temp	closure color	$tmp282	%read{512,512} %write{511,511}
const	string	$const50	"mx_surface"		%read{516,516} %write{2147483647,-1}
temp	float	$tmp283	%read{521,521} %write{520,520}
const	string	$const51	"mx_surfacematerial"		%read{526,526} %write{2147483647,-1}
temp	float	$tmp284	%read{529,529} %write{528,528}
temp	closure color	$tmp285	%read{531,531} %write{530,530}
temp	closure color	$tmp286	%read{535,535} %write{531,531}
temp	closure color	$tmp287	%read{534,534} %write{532,532}
const	string	$const52	"transparent"		%read{532,532} %write{2147483647,-1}
temp	float	$tmp288	%read{534,534} %write{533,533}
temp	closure color	$tmp289	%read{535,535} %write{534,534}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:695
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{695} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:696
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{696} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:697
#     displacementshader displacement_out = vector(displacement_displacement * displacement_scale);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{697} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:698
#     surfaceshader standard_surface_out = surfaceshader(null_closure, null_closure, 1.0);
	mul		$tmp5 displacement_displacement displacement_scale 	%line{698} %argrw{"wrr"}
	assign		displacement_out $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:699
#     NG_standard_surface_surfaceshader_100(standard_surface_base, standard_surface_base_color, standard_surface_diffuse_roughness, standard_surface_metalness, standard_surface_specular, standard_surface_specular_color, standard_surface_specular_roughness, standard_surface_specular_IOR, standard_surface_specular_anisotropy, standard_surface_specular_rotation, standard_surface_transmission, standard_surface_transmission_color, standard_surface_transmission_depth, standard_surface_transmission_scatter, standard_surface_transmission_scatter_anisotropy, standard_surface_transmission_dispersion, standard_surface_transmission_extra_roughness, standard_surface_subsurface, standard_surface_subsurface_color, standard_surface_subsurface_radius, standard_surface_subsurface_scale, standard_surface_subsurface_anisotropy, standard_surface_sheen, standard_surface_sheen_color, standard_surface_sheen_roughness, standard_surface_coat, standard_surface_coat_color, standard_surface_coat_roughness, standard_surface_coat_anisotropy, standard_surface_coat_rotation, standard_surface_coat_IOR, geomprop_Nworld_out1, standard_surface_coat_affect_color, standard_surface_coat_affect_roughness, standard_surface_thin_film_thickness, standard_surface_thin_film_IOR, standard_surface_emission, standard_surface_emission_color, standard_surface_opacity, standard_surface_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, standard_surface_out);
	assign		standard_surface_out.bsdf null_closure 	%line{699} %argrw{"wr"}
	assign		standard_surface_out.edf null_closure 	%argrw{"wr"}
	assign		standard_surface_out.opacity $const6 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:700
#     MATERIAL M_Blue_out = mx_surfacematerial(standard_surface_out, backsurfaceshader, displacement_out);
	functioncall	$const7 526 	%line{700} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:195
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___693_null_closure $const1 	%line{195} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:196
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___693_coat_roughness_vector_out.x $const5 	%line{196} %argrw{"wr"}
	assign		___693_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:197
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const8 36 	%line{197} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:20
#     if (anisotropy > 0.0)
	mul		$tmp6 standard_surface_coat_roughness standard_surface_coat_roughness 	%line{20} %argrw{"wrr"}
	functioncall	$const10 22 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp7 $tmp6 $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___669_roughness_sqr $tmp7 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:21
#     {
	gt		$tmp8 standard_surface_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{21} %argrw{"wrr"}
	if		$tmp8 34 36 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const10 27 	%line{23} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp10 standard_surface_coat_anisotropy $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp9 $tmp10 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp11 $const6 $tmp9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{23} %argrw{"wrr"}
	sqrt		___670_aspect $tmp11 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:24
#         result.y = roughness_sqr * aspect;
	div		$tmp12 ___669_roughness_sqr ___670_aspect 	%line{24} %argrw{"wrr"}
	min		___693_coat_roughness_vector_out.x $tmp12 $const6 	%argrw{"wrr"}
	assign		___693_coat_roughness_vector_out.x ___693_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:25
#     }
	mul		___693_coat_roughness_vector_out.y ___669_roughness_sqr ___670_aspect 	%line{25} %argrw{"wrr"}
	assign		___693_coat_roughness_vector_out.y ___693_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:29
#         result.y = roughness_sqr;
	assign		___693_coat_roughness_vector_out.x ___669_roughness_sqr 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:30
#     }
	assign		___693_coat_roughness_vector_out.y ___669_roughness_sqr 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:198
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___693_coat_tangent_rotate_degree_in2_tmp $const12 	%line{198} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:199
#     color metal_reflectivity_out = base_color * base;
	mul		___693_coat_tangent_rotate_degree_out standard_surface_coat_rotation ___693_coat_tangent_rotate_degree_in2_tmp 	%line{199} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:200
#     color metal_edgecolor_out = specular_color * specular;
	mul		___693_metal_reflectivity_out standard_surface_base_color standard_surface_base 	%line{200} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:201
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___693_metal_edgecolor_out standard_surface_specular_color standard_surface_specular 	%line{201} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:202
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___693_coat_affect_roughness_multiply1_out standard_surface_coat_affect_roughness standard_surface_coat 	%line{202} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:203
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___693_tangent_rotate_degree_in2_tmp $const12 	%line{203} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:204
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___693_tangent_rotate_degree_out standard_surface_specular_rotation ___693_tangent_rotate_degree_in2_tmp 	%line{204} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:205
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___693_transmission_roughness_add_out standard_surface_specular_roughness standard_surface_transmission_extra_roughness 	%line{205} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:206
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___693_subsurface_color_nonnegative_in2_tmp $const5 	%line{206} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:207
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp13 ___693_subsurface_color_nonnegative_in2_tmp 	%line{207} %argrw{"wr"}
	max		___693_subsurface_color_nonnegative_out standard_surface_subsurface_color $tmp13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:208
#     float coat_clamped_high_tmp = 1.000000;
	assign		___693_coat_clamped_low_tmp $const5 	%line{208} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:209
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___693_coat_clamped_high_tmp $const6 	%line{209} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:210
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const10 52 	%line{210} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp14 standard_surface_coat ___693_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___693_coat_clamped_out $tmp14 ___693_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:211
#     float subsurface_selector_out = float(thin_walled);
	mul		___693_subsurface_radius_scaled_out standard_surface_subsurface_radius standard_surface_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{211} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:212
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp15 standard_surface_thin_walled 	%line{212} %argrw{"wr"}
	assign		___693_subsurface_selector_out $tmp15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:213
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___693_base_color_nonnegative_in2_tmp $const5 	%line{213} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:214
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp16 ___693_base_color_nonnegative_in2_tmp 	%line{214} %argrw{"wr"}
	max		___693_base_color_nonnegative_out standard_surface_base_color $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:215
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___693_coat_attenuation_bg_tmp $const13 	%line{215} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:216
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___693_coat_attenuation_out ___693_coat_attenuation_bg_tmp standard_surface_coat_color standard_surface_coat 	%line{216} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:217
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___693_one_minus_coat_ior_in1_tmp $const6 	%line{217} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:218
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___693_one_minus_coat_ior_out ___693_one_minus_coat_ior_in1_tmp standard_surface_coat_IOR 	%line{218} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:219
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___693_one_plus_coat_ior_in1_tmp $const6 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:220
#     color emission_weight_out = emission_color * emission1;
	add		___693_one_plus_coat_ior_out ___693_one_plus_coat_ior_in1_tmp standard_surface_coat_IOR 	%line{220} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:221
#     color opacity_luminance_out = color(0.0);
	mul		___693_emission_weight_out standard_surface_emission_color standard_surface_emission 	%line{221} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:222
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___693_opacity_luminance_out $const14 	%line{222} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:223
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const16 69 	%line{223} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:36
# }
	dot		$tmp18 standard_surface_opacity $const15 	%line{36} %argrw{"wrr"}
	assign		___693_opacity_luminance_out $tmp18 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:224
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___693_coat_tangent_rotate_out $const17 	%line{224} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:225
#     color artistic_ior_ior = color(0.0);
	functioncall	$const18 187 	%line{225} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:54
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const19 74 	%line{54} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp19 $const20 $const21 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___674_rotationRadians ___693_coat_tangent_rotate_degree_out $tmp19 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:55
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const22 137 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{55} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:41
#     float s = sin(angle);
	normalize	___673_nAxis geomprop_Nworld_out1 	%line{41} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:42
#     float c = cos(angle);
	sin		___673_s ___674_rotationRadians 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:43
#     float oc = 1.0 - c;
	cos		___673_c ___674_rotationRadians 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:44
# 
	sub		___673_oc $const6 ___673_c 	%line{44} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:46
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp20 ___673_nAxis $const1 	%line{46} %argrw{"wrr"}
	mul		$tmp21 ___673_oc $tmp20 	%argrw{"wrr"}
	compref		$tmp22 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
	add		$tmp24 $tmp23 ___673_c 	%argrw{"wrr"}
	compref		$tmp25 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp26 ___673_oc $tmp25 	%argrw{"wrr"}
	compref		$tmp27 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp28 $tmp26 $tmp27 	%argrw{"wrr"}
	compref		$tmp29 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp30 $tmp29 ___673_s 	%argrw{"wrr"}
	sub		$tmp31 $tmp28 $tmp30 	%argrw{"wrr"}
	compref		$tmp32 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp33 ___673_oc $tmp32 	%argrw{"wrr"}
	compref		$tmp34 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp35 $tmp33 $tmp34 	%argrw{"wrr"}
	compref		$tmp36 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp37 $tmp36 ___673_s 	%argrw{"wrr"}
	add		$tmp38 $tmp35 $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:47
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp39 ___673_nAxis $const1 	%line{47} %argrw{"wrr"}
	mul		$tmp40 ___673_oc $tmp39 	%argrw{"wrr"}
	compref		$tmp41 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
	compref		$tmp43 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp44 $tmp43 ___673_s 	%argrw{"wrr"}
	add		$tmp45 $tmp42 $tmp44 	%argrw{"wrr"}
	compref		$tmp46 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp47 ___673_oc $tmp46 	%argrw{"wrr"}
	compref		$tmp48 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp49 $tmp47 $tmp48 	%argrw{"wrr"}
	add		$tmp50 $tmp49 ___673_c 	%argrw{"wrr"}
	compref		$tmp51 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp52 ___673_oc $tmp51 	%argrw{"wrr"}
	compref		$tmp53 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp54 $tmp52 $tmp53 	%argrw{"wrr"}
	compref		$tmp55 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp56 $tmp55 ___673_s 	%argrw{"wrr"}
	sub		$tmp57 $tmp54 $tmp56 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:48
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp58 ___673_nAxis $const4 	%line{48} %argrw{"wrr"}
	mul		$tmp59 ___673_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp63 $tmp62 ___673_s 	%argrw{"wrr"}
	sub		$tmp64 $tmp61 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp66 ___673_oc $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp70 $tmp69 ___673_s 	%argrw{"wrr"}
	add		$tmp71 $tmp68 $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp73 ___673_oc $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	add		$tmp76 $tmp75 ___673_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:46
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___674_m $tmp24 $tmp31 $tmp38 $const5 $tmp45 $tmp50 $tmp57 $const5 $tmp64 $tmp71 $tmp76 $const5 $const5 $const5 $const5 $const6 	%line{46} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:56
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp77.x geomprop_Tworld_out1 $const1 	%line{56} %argrw{"wrr"}
	compref		$tmp77.y geomprop_Tworld_out1 $const23 	%argrw{"wrr"}
	compref		$tmp77.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp77.w $const6 	%argrw{"wr"}
	functioncall	$const2 186 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp78 ___674_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp79 $tmp78 $tmp77.x 	%argrw{"wrr"}
	mxcompref	$tmp80 ___674_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp81 $tmp80 $tmp77.y 	%argrw{"wrr"}
	add		$tmp82 $tmp79 $tmp81 	%argrw{"wrr"}
	mxcompref	$tmp83 ___674_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp84 $tmp83 $tmp77.z 	%argrw{"wrr"}
	add		$tmp85 $tmp82 $tmp84 	%argrw{"wrr"}
	mxcompref	$tmp86 ___674_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp87 $tmp86 $tmp77.w 	%argrw{"wrr"}
	add		___674_trans.x $tmp85 $tmp87 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp88 ___674_m $const1 $const23 	%line{416} %argrw{"wrrr"}
	mul		$tmp89 $tmp88 $tmp77.x 	%argrw{"wrr"}
	mxcompref	$tmp90 ___674_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp91 $tmp90 $tmp77.y 	%argrw{"wrr"}
	add		$tmp92 $tmp89 $tmp91 	%argrw{"wrr"}
	mxcompref	$tmp93 ___674_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp94 $tmp93 $tmp77.z 	%argrw{"wrr"}
	add		$tmp95 $tmp92 $tmp94 	%argrw{"wrr"}
	mxcompref	$tmp96 ___674_m $const24 $const23 	%argrw{"wrrr"}
	mul		$tmp97 $tmp96 $tmp77.w 	%argrw{"wrr"}
	add		___674_trans.y $tmp95 $tmp97 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp98 ___674_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp99 $tmp98 $tmp77.x 	%argrw{"wrr"}
	mxcompref	$tmp100 ___674_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp101 $tmp100 $tmp77.y 	%argrw{"wrr"}
	add		$tmp102 $tmp99 $tmp101 	%argrw{"wrr"}
	mxcompref	$tmp103 ___674_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp104 $tmp103 $tmp77.z 	%argrw{"wrr"}
	add		$tmp105 $tmp102 $tmp104 	%argrw{"wrr"}
	mxcompref	$tmp106 ___674_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp107 $tmp106 $tmp77.w 	%argrw{"wrr"}
	add		___674_trans.z $tmp105 $tmp107 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp108 ___674_m $const1 $const24 	%line{418} %argrw{"wrrr"}
	mul		$tmp109 $tmp108 $tmp77.x 	%argrw{"wrr"}
	mxcompref	$tmp110 ___674_m $const23 $const24 	%argrw{"wrrr"}
	mul		$tmp111 $tmp110 $tmp77.y 	%argrw{"wrr"}
	add		$tmp112 $tmp109 $tmp111 	%argrw{"wrr"}
	mxcompref	$tmp113 ___674_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp77.z 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	mxcompref	$tmp116 ___674_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp77.w 	%argrw{"wrr"}
	add		___674_trans.w $tmp115 $tmp117 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:57
# }
	vector		___693_coat_tangent_rotate_out ___674_trans.x ___674_trans.y ___674_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{57} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:226
#     color artistic_ior_extinction = color(0.0);
	assign		___693_artistic_ior_ior $const14 	%line{226} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:227
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___693_artistic_ior_extinction $const14 	%line{227} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:228
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const25 214 	%line{228} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:65
#     color r_sqrt = sqrt(r);
	assign		$tmp118 $const5 	%line{65} %argrw{"wr"}
	assign		$tmp119 $const26 	%argrw{"wr"}
	functioncall	$const10 195 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp120 ___693_metal_reflectivity_out $tmp119 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___675_r $tmp120 $tmp118 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:66
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___675_r_sqrt ___675_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:67
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp121 $const6 ___675_r 	%line{67} %argrw{"wrr"}
	add		$tmp122 $const6 ___675_r 	%argrw{"wrr"}
	div		___675_n_min $tmp121 $tmp122 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:68
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp123 $const6 ___675_r_sqrt 	%line{68} %argrw{"wrr"}
	sub		$tmp124 $const6 ___675_r_sqrt 	%argrw{"wrr"}
	div		___675_n_max $tmp123 $tmp124 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:69
# 
	mix		___693_artistic_ior_ior ___675_n_max ___675_n_min ___693_metal_edgecolor_out 	%line{69} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:71
#     color nm1 = ior - 1.0;
	add		___675_np1 ___693_artistic_ior_ior $const6 	%line{71} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:72
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___675_nm1 ___693_artistic_ior_ior $const6 	%line{72} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:73
#     k2 = max(k2, 0.0);
	mul		$tmp125 ___675_np1 ___675_np1 	%line{73} %argrw{"wrr"}
	mul		$tmp126 $tmp125 ___675_r 	%argrw{"wrr"}
	mul		$tmp127 ___675_nm1 ___675_nm1 	%argrw{"wrr"}
	sub		$tmp128 $tmp126 $tmp127 	%argrw{"wrr"}
	sub		$tmp129 $const6 ___675_r 	%argrw{"wrr"}
	div		___675_k2 $tmp128 $tmp129 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:74
#     extinction = sqrt(k2);
	assign		$tmp130 $const5 	%line{74} %argrw{"wr"}
	max		___675_k2 ___675_k2 $tmp130 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:75
# }
	sqrt		___693_artistic_ior_extinction ___675_k2 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:229
#     vector tangent_rotate_out = vector(0.0);
	mul		___693_coat_affect_roughness_multiply2_out ___693_coat_affect_roughness_multiply1_out standard_surface_coat_roughness 	%line{229} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:230
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___693_tangent_rotate_out $const17 	%line{230} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:231
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const18 333 	%line{231} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:54
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const19 220 	%line{54} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp131 $const20 $const21 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___674_rotationRadians ___693_tangent_rotate_degree_out $tmp131 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:55
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const22 283 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{55} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:41
#     float s = sin(angle);
	normalize	___673_nAxis geomprop_Nworld_out1 	%line{41} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:42
#     float c = cos(angle);
	sin		___673_s ___674_rotationRadians 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:43
#     float oc = 1.0 - c;
	cos		___673_c ___674_rotationRadians 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:44
# 
	sub		___673_oc $const6 ___673_c 	%line{44} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:46
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp132 ___673_nAxis $const1 	%line{46} %argrw{"wrr"}
	mul		$tmp133 ___673_oc $tmp132 	%argrw{"wrr"}
	compref		$tmp134 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp135 $tmp133 $tmp134 	%argrw{"wrr"}
	add		$tmp136 $tmp135 ___673_c 	%argrw{"wrr"}
	compref		$tmp137 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp138 ___673_oc $tmp137 	%argrw{"wrr"}
	compref		$tmp139 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp140 $tmp138 $tmp139 	%argrw{"wrr"}
	compref		$tmp141 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp142 $tmp141 ___673_s 	%argrw{"wrr"}
	sub		$tmp143 $tmp140 $tmp142 	%argrw{"wrr"}
	compref		$tmp144 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp145 ___673_oc $tmp144 	%argrw{"wrr"}
	compref		$tmp146 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp147 $tmp145 $tmp146 	%argrw{"wrr"}
	compref		$tmp148 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp149 $tmp148 ___673_s 	%argrw{"wrr"}
	add		$tmp150 $tmp147 $tmp149 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:47
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp151 ___673_nAxis $const1 	%line{47} %argrw{"wrr"}
	mul		$tmp152 ___673_oc $tmp151 	%argrw{"wrr"}
	compref		$tmp153 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp154 $tmp152 $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp156 $tmp155 ___673_s 	%argrw{"wrr"}
	add		$tmp157 $tmp154 $tmp156 	%argrw{"wrr"}
	compref		$tmp158 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp159 ___673_oc $tmp158 	%argrw{"wrr"}
	compref		$tmp160 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp161 $tmp159 $tmp160 	%argrw{"wrr"}
	add		$tmp162 $tmp161 ___673_c 	%argrw{"wrr"}
	compref		$tmp163 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp164 ___673_oc $tmp163 	%argrw{"wrr"}
	compref		$tmp165 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp166 $tmp164 $tmp165 	%argrw{"wrr"}
	compref		$tmp167 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp168 $tmp167 ___673_s 	%argrw{"wrr"}
	sub		$tmp169 $tmp166 $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:48
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp170 ___673_nAxis $const4 	%line{48} %argrw{"wrr"}
	mul		$tmp171 ___673_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp175 $tmp174 ___673_s 	%argrw{"wrr"}
	sub		$tmp176 $tmp173 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___673_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp178 ___673_oc $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp180 $tmp178 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___673_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp182 $tmp181 ___673_s 	%argrw{"wrr"}
	add		$tmp183 $tmp180 $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp185 ___673_oc $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___673_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	add		$tmp188 $tmp187 ___673_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:46
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___674_m $tmp136 $tmp143 $tmp150 $const5 $tmp157 $tmp162 $tmp169 $const5 $tmp176 $tmp183 $tmp188 $const5 $const5 $const5 $const5 $const6 	%line{46} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:56
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp189.x geomprop_Tworld_out1 $const1 	%line{56} %argrw{"wrr"}
	compref		$tmp189.y geomprop_Tworld_out1 $const23 	%argrw{"wrr"}
	compref		$tmp189.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp189.w $const6 	%argrw{"wr"}
	functioncall	$const2 332 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp190 ___674_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp191 $tmp190 $tmp189.x 	%argrw{"wrr"}
	mxcompref	$tmp192 ___674_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp193 $tmp192 $tmp189.y 	%argrw{"wrr"}
	add		$tmp194 $tmp191 $tmp193 	%argrw{"wrr"}
	mxcompref	$tmp195 ___674_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp196 $tmp195 $tmp189.z 	%argrw{"wrr"}
	add		$tmp197 $tmp194 $tmp196 	%argrw{"wrr"}
	mxcompref	$tmp198 ___674_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp199 $tmp198 $tmp189.w 	%argrw{"wrr"}
	add		___674_trans.x $tmp197 $tmp199 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp200 ___674_m $const1 $const23 	%line{416} %argrw{"wrrr"}
	mul		$tmp201 $tmp200 $tmp189.x 	%argrw{"wrr"}
	mxcompref	$tmp202 ___674_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp203 $tmp202 $tmp189.y 	%argrw{"wrr"}
	add		$tmp204 $tmp201 $tmp203 	%argrw{"wrr"}
	mxcompref	$tmp205 ___674_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp206 $tmp205 $tmp189.z 	%argrw{"wrr"}
	add		$tmp207 $tmp204 $tmp206 	%argrw{"wrr"}
	mxcompref	$tmp208 ___674_m $const24 $const23 	%argrw{"wrrr"}
	mul		$tmp209 $tmp208 $tmp189.w 	%argrw{"wrr"}
	add		___674_trans.y $tmp207 $tmp209 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp210 ___674_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp211 $tmp210 $tmp189.x 	%argrw{"wrr"}
	mxcompref	$tmp212 ___674_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp213 $tmp212 $tmp189.y 	%argrw{"wrr"}
	add		$tmp214 $tmp211 $tmp213 	%argrw{"wrr"}
	mxcompref	$tmp215 ___674_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp216 $tmp215 $tmp189.z 	%argrw{"wrr"}
	add		$tmp217 $tmp214 $tmp216 	%argrw{"wrr"}
	mxcompref	$tmp218 ___674_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp219 $tmp218 $tmp189.w 	%argrw{"wrr"}
	add		___674_trans.z $tmp217 $tmp219 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp220 ___674_m $const1 $const24 	%line{418} %argrw{"wrrr"}
	mul		$tmp221 $tmp220 $tmp189.x 	%argrw{"wrr"}
	mxcompref	$tmp222 ___674_m $const23 $const24 	%argrw{"wrrr"}
	mul		$tmp223 $tmp222 $tmp189.y 	%argrw{"wrr"}
	add		$tmp224 $tmp221 $tmp223 	%argrw{"wrr"}
	mxcompref	$tmp225 ___674_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp189.z 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	mxcompref	$tmp228 ___674_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp189.w 	%argrw{"wrr"}
	add		___674_trans.w $tmp227 $tmp229 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:57
# }
	vector		___693_tangent_rotate_out ___674_trans.x ___674_trans.y ___674_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{57} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:232
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___693_transmission_roughness_clamped_low_tmp $const5 	%line{232} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:233
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___693_transmission_roughness_clamped_high_tmp $const6 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:234
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const10 338 	%line{234} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp230 ___693_transmission_roughness_add_out ___693_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___693_transmission_roughness_clamped_out $tmp230 ___693_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:235
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___693_coat_gamma_multiply_out ___693_coat_clamped_out standard_surface_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{235} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:236
#     int opacity_luminance_float_index_tmp = 0;
	div		___693_coat_ior_to_F0_sqrt_out ___693_one_minus_coat_ior_out ___693_one_plus_coat_ior_out 	%line{236} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:237
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___693_opacity_luminance_float_index_tmp $const1 	%line{237} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:238
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const27 343 	%line{238} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___693_opacity_luminance_float_out ___693_opacity_luminance_out ___693_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:239
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___693_coat_tangent_rotate_normalize_out ___693_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{239} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:240
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___693_coat_affected_roughness_fg_tmp $const6 	%line{240} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:241
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___693_coat_affected_roughness_out standard_surface_specular_roughness ___693_coat_affected_roughness_fg_tmp ___693_coat_affect_roughness_multiply2_out 	%line{241} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:242
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___693_tangent_rotate_normalize_out ___693_tangent_rotate_out 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:243
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___693_coat_affected_transmission_roughness_fg_tmp $const6 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:244
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___693_coat_affected_transmission_roughness_out ___693_transmission_roughness_clamped_out ___693_coat_affected_transmission_roughness_fg_tmp ___693_coat_affect_roughness_multiply2_out 	%line{244} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:245
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___693_coat_gamma_in2_tmp $const6 	%line{245} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:246
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___693_coat_gamma_out ___693_coat_gamma_multiply_out ___693_coat_gamma_in2_tmp 	%line{246} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:247
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___693_coat_ior_to_F0_out ___693_coat_ior_to_F0_sqrt_out ___693_coat_ior_to_F0_sqrt_out 	%line{247} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:248
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___693_coat_tangent_value2_tmp $const5 	%line{248} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:249
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp231 standard_surface_coat_anisotropy ___693_coat_tangent_value2_tmp 	%line{249} %argrw{"wrr"}
	functioncall	$const28 360 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp231 358 360 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___693_coat_tangent_out ___693_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___693_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:250
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___693_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{250} %argrw{"wr"}
	assign		___693_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:251
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const8 381 	%line{251} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:20
#     if (anisotropy > 0.0)
	mul		$tmp232 ___693_coat_affected_roughness_out ___693_coat_affected_roughness_out 	%line{20} %argrw{"wrr"}
	functioncall	$const10 367 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp233 $tmp232 $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___669_roughness_sqr $tmp233 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:21
#     {
	gt		$tmp234 standard_surface_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{21} %argrw{"wrr"}
	if		$tmp234 379 381 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const10 372 	%line{23} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp236 standard_surface_specular_anisotropy $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp235 $tmp236 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp237 $const6 $tmp235 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{23} %argrw{"wrr"}
	sqrt		___670_aspect $tmp237 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:24
#         result.y = roughness_sqr * aspect;
	div		$tmp238 ___669_roughness_sqr ___670_aspect 	%line{24} %argrw{"wrr"}
	min		___693_main_roughness_out.x $tmp238 $const6 	%argrw{"wrr"}
	assign		___693_main_roughness_out.x ___693_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:25
#     }
	mul		___693_main_roughness_out.y ___669_roughness_sqr ___670_aspect 	%line{25} %argrw{"wrr"}
	assign		___693_main_roughness_out.y ___693_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:29
#         result.y = roughness_sqr;
	assign		___693_main_roughness_out.x ___669_roughness_sqr 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:30
#     }
	assign		___693_main_roughness_out.y ___669_roughness_sqr 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:252
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___693_main_tangent_value2_tmp $const5 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:253
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp239 standard_surface_specular_anisotropy ___693_main_tangent_value2_tmp 	%line{253} %argrw{"wrr"}
	functioncall	$const28 389 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp239 387 389 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___693_main_tangent_out ___693_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___693_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:254
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___693_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{254} %argrw{"wr"}
	assign		___693_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:255
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const8 410 	%line{255} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:20
#     if (anisotropy > 0.0)
	mul		$tmp240 ___693_coat_affected_transmission_roughness_out ___693_coat_affected_transmission_roughness_out 	%line{20} %argrw{"wrr"}
	functioncall	$const10 396 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp241 $tmp240 $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___669_roughness_sqr $tmp241 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:21
#     {
	gt		$tmp242 standard_surface_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{21} %argrw{"wrr"}
	if		$tmp242 408 410 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const10 401 	%line{23} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp244 standard_surface_specular_anisotropy $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp243 $tmp244 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:23
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp245 $const6 $tmp243 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{23} %argrw{"wrr"}
	sqrt		___670_aspect $tmp245 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:24
#         result.y = roughness_sqr * aspect;
	div		$tmp246 ___669_roughness_sqr ___670_aspect 	%line{24} %argrw{"wrr"}
	min		___693_transmission_roughness_out.x $tmp246 $const6 	%argrw{"wrr"}
	assign		___693_transmission_roughness_out.x ___693_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:25
#     }
	mul		___693_transmission_roughness_out.y ___669_roughness_sqr ___670_aspect 	%line{25} %argrw{"wrr"}
	assign		___693_transmission_roughness_out.y ___693_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:29
#         result.y = roughness_sqr;
	assign		___693_transmission_roughness_out.x ___669_roughness_sqr 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:30
#     }
	assign		___693_transmission_roughness_out.y ___669_roughness_sqr 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:256
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___693_coat_affected_subsurface_color_out ___693_subsurface_color_nonnegative_out ___693_coat_gamma_out 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:257
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___693_coat_affected_diffuse_color_out ___693_base_color_nonnegative_out ___693_coat_gamma_out 	%line{257} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:258
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___693_one_minus_coat_ior_to_F0_in1_tmp $const6 	%line{258} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:259
#     color emission_color0_out = color(0.0);
	sub		___693_one_minus_coat_ior_to_F0_out ___693_one_minus_coat_ior_to_F0_in1_tmp ___693_coat_ior_to_F0_out 	%line{259} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:260
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___693_emission_color0_out $const14 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:261
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const29 418 	%line{261} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:96
#     out = combine_out;
	color		___678_combine_out ___693_one_minus_coat_ior_to_F0_out ___693_one_minus_coat_ior_to_F0_out ___693_one_minus_coat_ior_to_F0_out 	%line{96} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:97
# }
	assign		___693_emission_color0_out ___678_combine_out 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:262
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___693_coat_bsdf_out ___693_null_closure 	%line{262} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:263
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const33 430 	%line{263} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:80
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp248 $const32 $const34 	%line{80} %argrw{"wrr"}
	if		$tmp248 423 424 	%argrw{"r"}
	assign		___676_reflection_tint $const14 	%argrw{"wr"}
	assign		___676_reflection_tint $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:81
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp249 $const32 $const32 	%line{81} %argrw{"wrr"}
	if		$tmp249 427 428 	%argrw{"r"}
	assign		___676_transmission_tint $const14 	%argrw{"wr"}
	assign		___676_transmission_tint $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:82
# }
	closure		$tmp250 $const37 geomprop_Nworld_out1 ___693_coat_tangent_out ___676_reflection_tint ___676_transmission_tint ___693_coat_roughness_vector_out.x ___693_coat_roughness_vector_out.y standard_surface_coat_IOR $const31 $const35 $const5 $const36 $const30 	%line{82} %argrw{"wrrrrrrrrrrrrr"}
	mul		___693_coat_bsdf_out $tmp250 standard_surface_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:264
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___693_metal_bsdf_weight_tmp $const6 	%line{264} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:265
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___693_metal_bsdf_distribution_tmp $const31 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:266
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp251 $const38 geomprop_Nworld_out1 ___693_main_tangent_out ___693_main_roughness_out.x ___693_main_roughness_out.y ___693_artistic_ior_ior ___693_artistic_ior_extinction ___693_metal_bsdf_distribution_tmp $const35 standard_surface_thin_film_thickness $const36 standard_surface_thin_film_IOR 	%line{266} %argrw{"wrrrrrrrrrrrr"}
	mul		___693_metal_bsdf_out $tmp251 ___693_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:267
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___693_specular_bsdf_out ___693_null_closure 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:268
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const33 446 	%line{268} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:80
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp252 $const32 $const34 	%line{80} %argrw{"wrr"}
	if		$tmp252 439 440 	%argrw{"r"}
	assign		___676_reflection_tint $const14 	%argrw{"wr"}
	assign		___676_reflection_tint standard_surface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:81
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp253 $const32 $const32 	%line{81} %argrw{"wrr"}
	if		$tmp253 443 444 	%argrw{"r"}
	assign		___676_transmission_tint $const14 	%argrw{"wr"}
	assign		___676_transmission_tint standard_surface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:82
# }
	closure		$tmp254 $const37 geomprop_Nworld_out1 ___693_main_tangent_out ___676_reflection_tint ___676_transmission_tint ___693_main_roughness_out.x ___693_main_roughness_out.y standard_surface_specular_IOR $const31 $const35 standard_surface_thin_film_thickness $const36 standard_surface_thin_film_IOR 	%line{82} %argrw{"wrrrrrrrrrrrrr"}
	mul		___693_specular_bsdf_out $tmp254 standard_surface_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:269
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___693_transmission_bsdf_out ___693_null_closure 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:270
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const33 458 	%line{270} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:80
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp255 $const34 $const34 	%line{80} %argrw{"wrr"}
	if		$tmp255 451 452 	%argrw{"r"}
	assign		___676_reflection_tint $const14 	%argrw{"wr"}
	assign		___676_reflection_tint standard_surface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:81
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp256 $const34 $const32 	%line{81} %argrw{"wrr"}
	if		$tmp256 455 456 	%argrw{"r"}
	assign		___676_transmission_tint $const14 	%argrw{"wr"}
	assign		___676_transmission_tint standard_surface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:82
# }
	closure		$tmp257 $const37 geomprop_Nworld_out1 ___693_main_tangent_out ___676_reflection_tint ___676_transmission_tint ___693_transmission_roughness_out.x ___693_transmission_roughness_out.y standard_surface_specular_IOR $const31 $const35 $const5 $const36 $const30 	%line{82} %argrw{"wrrrrrrrrrrrrr"}
	mul		___693_transmission_bsdf_out $tmp257 $const6 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:271
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp258 $const39 geomprop_Nworld_out1 standard_surface_sheen_color standard_surface_sheen_roughness 	%line{271} %argrw{"wrrrr"}
	mul		___693_sheen_bsdf_out $tmp258 standard_surface_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:272
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___693_translucent_bsdf_weight_tmp $const6 	%line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:273
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp259 $const40 geomprop_Nworld_out1 ___693_coat_affected_subsurface_color_out 	%line{273} %argrw{"wrrr"}
	mul		___693_translucent_bsdf_out $tmp259 ___693_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:274
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___693_subsurface_bsdf_out ___693_null_closure 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:275
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const41 467 	%line{275} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:90
# #endif
	mul		$tmp260 $const6 ___693_coat_affected_subsurface_color_out 	%line{90} %argrw{"wrr"}
	closure		___693_subsurface_bsdf_out $const42 geomprop_Nworld_out1 $tmp260 $const6 ___693_subsurface_radius_scaled_out standard_surface_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:276
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const43 472 	%line{276} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp261 $const6 ___693_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp262 ___693_subsurface_bsdf_out $tmp261 	%argrw{"wrr"}
	mul		$tmp263 ___693_translucent_bsdf_out ___693_subsurface_selector_out 	%argrw{"wrr"}
	add		___693_selected_subsurface_bsdf_out $tmp262 $tmp263 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:277
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp264 $const44 geomprop_Nworld_out1 ___693_coat_affected_diffuse_color_out standard_surface_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{277} %argrw{"wrrrr"}
	mul		___693_diffuse_bsdf_out $tmp264 standard_surface_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:278
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const43 479 	%line{278} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp265 $const6 standard_surface_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp266 ___693_diffuse_bsdf_out $tmp265 	%argrw{"wrr"}
	mul		$tmp267 ___693_selected_subsurface_bsdf_out standard_surface_subsurface 	%argrw{"wrr"}
	add		___693_subsurface_mix_out $tmp266 $tmp267 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:279
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___693_sheen_layer_out $const45 ___693_sheen_bsdf_out ___693_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{279} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:280
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const43 485 	%line{280} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp268 $const6 standard_surface_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp269 ___693_sheen_layer_out $tmp268 	%argrw{"wrr"}
	mul		$tmp270 ___693_transmission_bsdf_out standard_surface_transmission 	%argrw{"wrr"}
	add		___693_transmission_mix_out $tmp269 $tmp270 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:281
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___693_specular_layer_out $const45 ___693_specular_bsdf_out ___693_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{281} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:282
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const43 491 	%line{282} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp271 $const6 standard_surface_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp272 ___693_specular_layer_out $tmp271 	%argrw{"wrr"}
	mul		$tmp273 ___693_metal_bsdf_out standard_surface_metalness 	%argrw{"wrr"}
	add		___693_metalness_mix_out $tmp272 $tmp273 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:283
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___693_thin_film_layer_attenuated_out ___693_metalness_mix_out ___693_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:284
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___693_coat_layer_out $const45 ___693_coat_bsdf_out ___693_thin_film_layer_attenuated_out 	%line{284} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:285
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___693_emission_edf_out $const46 ___693_emission_weight_out 	%line{285} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:286
#     EDF coat_emission_edf_out = null_closure;
	mul		___693_coat_tinted_emission_edf_out ___693_emission_edf_out standard_surface_coat_color 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:287
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___693_coat_emission_edf_out ___693_null_closure 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:288
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const48 508 	%line{288} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:181
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp276 I 	%line{181} %argrw{"wr"}
	dot		$tmp275 N $tmp276 	%argrw{"wrr"}
	fabs		___691_NdotV $tmp275 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:182
#     result = base * f;
	functioncall	$const49 507 	%line{182} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:175
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp277 $const6 ___691_NdotV 	%line{175} %argrw{"wrr"}
	functioncall	$const10 505 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp278 $tmp277 $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___690_x $tmp278 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:176
# }
	pow		$tmp279 ___690_x $const47 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{176} %argrw{"wrr"}
	mix		___691_f ___693_emission_color0_out $const14 $tmp279 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:183
# }
	mul		___693_coat_emission_edf_out ___693_coat_tinted_emission_edf_out ___691_f 	%line{183} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:289
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const43 513 	%line{289} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp280 $const6 standard_surface_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp281 ___693_emission_edf_out $tmp280 	%argrw{"wrr"}
	mul		$tmp282 ___693_coat_emission_edf_out standard_surface_coat 	%argrw{"wrr"}
	add		___693_blended_coat_emission_edf_out $tmp281 $tmp282 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:290
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___693_shader_constructor_out.bsdf ___693_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{290} %argrw{"wr"}
	assign		___693_shader_constructor_out.edf ___693_null_closure 	%argrw{"wr"}
	assign		___693_shader_constructor_out.opacity $const6 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:291
#     out = shader_constructor_out;
	functioncall	$const50 523 	%line{291} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:188
#     result.edf     = edf;
	assign		___693_shader_constructor_out.bsdf ___693_coat_layer_out 	%line{188} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:189
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___693_shader_constructor_out.edf ___693_blended_coat_emission_edf_out 	%line{189} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:190
# }
	functioncall	$const10 522 	%line{190} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp283 ___693_opacity_luminance_float_out $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___693_shader_constructor_out.opacity $tmp283 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:190
# }
	assign		___693_shader_constructor_out.opacity ___693_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{190} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:292
# }
	assign		standard_surface_out.bsdf ___693_shader_constructor_out.bsdf 	%line{292} %argrw{"wr"}
	assign		standard_surface_out.edf ___693_shader_constructor_out.edf 	%argrw{"wr"}
	assign		standard_surface_out.opacity ___693_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:701
#     out = M_Blue_out;
	functioncall	$const51 536 	%line{701} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:297
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const10 530 	%line{297} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp284 standard_surface_out.opacity $const6 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_opacity_weight $tmp284 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:298
# }
	add		$tmp285 standard_surface_out.bsdf standard_surface_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl"} %line{298} %argrw{"wrr"}
	mul		$tmp286 $tmp285 ___694_opacity_weight 	%argrw{"wrr"}
	closure		$tmp287 $const52 	%argrw{"wr"}
	sub		$tmp288 $const6 ___694_opacity_weight 	%argrw{"wrr"}
	mul		$tmp289 $tmp287 $tmp288 	%argrw{"wrr"}
	add		M_Blue_out $tmp286 $tmp289 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\surfacematerial_with_graph\\M_Blue.osl:702
# }
	assign		out M_Blue_out 	%line{702} %argrw{"wr"}
	end
