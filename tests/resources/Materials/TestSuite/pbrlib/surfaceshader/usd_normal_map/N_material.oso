OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\pbrlib\surfaceshader\usd_normal_map\N_material.oso
shader N_material	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"N_material"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Bworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Bworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	N_texcoord_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	N_multiply_in2			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	N_multiply_in2.x	8		%read{19,19} %write{2147483647,-1} %mystruct{N_multiply_in2} %mystructfield{0} %derivs
param	float	N_multiply_in2.y	8		%read{20,20} %write{2147483647,-1} %mystruct{N_multiply_in2} %mystructfield{1} %derivs
param	string	N_texture_normal_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/mesh_wire_norm.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	N_texture_normal_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	N_texture_normal_wrapS	"periodic"		%read{33,70} %write{2147483647,-1}
param	string	N_texture_normal_wrapT	"periodic"		%read{48,70} %write{2147483647,-1}
param	struct color4	N_texture_normal_fallback			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	N_texture_normal_fallback.rgb	0 0 0		%read{62,65} %write{2147483647,-1} %mystruct{N_texture_normal_fallback} %mystructfield{0}
param	float	N_texture_normal_fallback.a	1		%read{63,66} %write{2147483647,-1} %mystruct{N_texture_normal_fallback} %mystructfield{1}
param	struct color4	N_texture_normal_scale			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	N_texture_normal_scale.rgb	1 1 1		%read{74,74} %write{2147483647,-1} %mystruct{N_texture_normal_scale} %mystructfield{0}
param	float	N_texture_normal_scale.a	1		%read{75,75} %write{2147483647,-1} %mystruct{N_texture_normal_scale} %mystructfield{1}
param	struct color4	N_texture_normal_bias			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	N_texture_normal_bias.rgb	0 0 0		%read{77,77} %write{2147483647,-1} %mystruct{N_texture_normal_bias} %mystructfield{0}
param	float	N_texture_normal_bias.a	0		%read{78,78} %write{2147483647,-1} %mystruct{N_texture_normal_bias} %mystructfield{1}
param	float	N_normalmap_scale	1		%meta{string,widget,"number"}  %read{256,257} %write{2147483647,-1}
param	color	N_surface_diffuseColor	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Diffuse Color"}  %read{361,544} %write{2147483647,-1}
param	color	N_surface_emissiveColor	0 0 0		%meta{color,min,0,0,0} %meta{color,slidermax,1,1,1} %meta{string,label,"Emissive Color"}  %read{596,596} %write{2147483647,-1}
param	int	N_surface_useSpecularWorkflow	0		%meta{int,min,0} %meta{int,max,1} %meta{int,sensitivity,1} %meta{string,label,"Use Specular Workflow"} %meta{string,widget,"number"}  %read{344,344} %write{2147483647,-1}
param	color	N_surface_specularColor	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"}  %read{541,541} %write{2147483647,-1}
param	float	N_surface_metallic	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metallic"} %meta{string,widget,"number"}  %read{343,588} %write{2147483647,-1}
param	float	N_surface_roughness	0.00100000005		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Roughness"} %meta{string,widget,"number"}  %read{324,324} %write{2147483647,-1}
param	float	N_surface_clearcoat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat"} %meta{string,widget,"number"}  %read{530,530} %write{2147483647,-1}
param	float	N_surface_clearcoatRoughness	0.00999999978		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat Roughness"} %meta{string,widget,"number"}  %read{292,292} %write{2147483647,-1}
param	float	N_surface_opacity	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity"} %meta{string,widget,"number"}  %read{353,400} %write{2147483647,-1}
param	int	N_surface_opacityMode	0		%meta{string,label,"Opacity Mode"} %meta{string,widget,"number"}  %read{433,505} %write{2147483647,-1}
param	float	N_surface_opacityThreshold	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity Threshold"} %meta{string,widget,"number"}  %read{348,386} %write{2147483647,-1}
param	float	N_surface_ior	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,widget,"number"}  %read{286,558} %write{2147483647,-1}
param	float	N_surface_displacement	0		%meta{string,label,"Displacement"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	N_surface_occlusion	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Occlusion"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{620,620}
global	normal	N	%read{4,317} %write{2147483647,-1}
global	float	u	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{17,17} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{70,70} %write{65,65}
local	float	___670_missingAlpha	%read{70,70} %write{66,66}
local	float	___670_st.x	%read{70,70} %write{68,68} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{70,70} %write{69,69} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___670_alpha	%read{72,72} %write{70,70}
local	color	___670_rgb	%read{71,71} %write{70,70}
local	int	___672_N_extract_0_index_tmp	%read{86,169} %write{84,159}
local	float	___672_N_extract_0_out	%read{148,223} %write{88,173}
local	int	___672_N_extract_1_index_tmp	%read{102,185} %write{100,175}
local	float	___672_N_extract_1_out	%read{149,224} %write{104,189}
local	int	___672_N_extract_2_index_tmp	%read{118,201} %write{116,191}
local	float	___672_N_extract_2_out	%read{150,225} %write{120,205}
local	int	___672_N_extract_3_index_tmp	%read{134,217} %write{132,207}
local	float	___672_N_extract_3_out	%read{151,226} %write{136,221}
local	float	___673_separate_outr	%read{227,227} %write{154,223}
local	float	___673_separate_outg	%read{227,227} %write{155,224}
local	float	___673_separate_outb	%read{227,227} %write{156,225}
local	float	___673_separate_outa	%read{2147483647,-1} %write{157,226}
local	color	___673_combine_out	%read{228,228} %write{227,227}
local	color	___674_image_reader_out.rgb	%read{74,74} %write{27,71} %mystruct{___674_image_reader_out} %mystructfield{0}
local	float	___674_image_reader_out.a	%read{75,75} %write{28,72} %mystruct{___674_image_reader_out} %mystructfield{1}
local	color	___674_image_scale_out.rgb	%read{77,77} %write{74,74} %mystruct{___674_image_scale_out} %mystructfield{0}
local	float	___674_image_scale_out.a	%read{78,78} %write{75,75} %mystruct{___674_image_scale_out} %mystructfield{1}
local	color	___674_image_bias_out.rgb	%read{88,219} %write{77,77} %mystruct{___674_image_bias_out} %mystructfield{0}
local	float	___674_image_bias_out.a	%read{98,221} %write{78,78} %mystruct{___674_image_bias_out} %mystructfield{1}
local	float	___674_image_bias_separate_outr	%read{229,229} %write{79,148}
local	float	___674_image_bias_separate_outg	%read{230,230} %write{80,149}
local	float	___674_image_bias_separate_outb	%read{231,231} %write{81,150}
local	float	___674_image_bias_separate_outa	%read{232,232} %write{82,151}
local	color	___674_image_bias_color3_out	%read{233,233} %write{152,228}
local	int	___675_N_extract_0_index_tmp	%read{242,242} %write{240,240}
local	float	___675_N_extract_0_out	%read{249,249} %write{242,242}
local	int	___675_N_extract_1_index_tmp	%read{245,245} %write{243,243}
local	float	___675_N_extract_1_out	%read{250,250} %write{245,245}
local	int	___675_N_extract_2_index_tmp	%read{248,248} %write{246,246}
local	float	___675_N_extract_2_out	%read{251,251} %write{248,248}
local	float	___676_separate_outr	%read{252,252} %write{236,249}
local	float	___676_separate_outg	%read{252,252} %write{237,250}
local	float	___676_separate_outb	%read{252,252} %write{238,251}
local	vector	___676_combine_out	%read{253,253} %write{252,252}
local	vector	___677_decodedValue	%read{264,425} %write{261,417}
local	float	___681_roughness_sqr	%read{303,341} %write{295,327}
local	float	___682_aspect	%read{303,338} %write{302,334}
local	color	___684_r	%read{363,377} %write{362,362}
local	color	___684_r_sqrt	%read{367,368} %write{363,363}
local	color	___684_n_min	%read{370,370} %write{366,366}
local	color	___684_n_max	%read{370,370} %write{369,369}
local	color	___684_np1	%read{373,373} %write{371,371}
local	color	___684_nm1	%read{375,375} %write{372,372}
local	color	___684_k2	%read{380,381} %write{378,380}
local	int	___685_ifgreater_10_value1_tmp	%read{433,433} %write{431,431}
local	float	___685_ifgreater_10_in2_tmp	%read{438,438} %write{432,432}
local	float	___685_ifgreater_10_out	%read{446,446} %write{436,438}
local	int	___685_ifgreater_9_value1_tmp	%read{441,441} %write{440,440}
local	float	___685_ifgreater_9_out	%read{454,454} %write{444,446}
local	int	___685_ifgreater_8_value1_tmp	%read{449,449} %write{448,448}
local	float	___685_ifgreater_8_out	%read{462,462} %write{452,454}
local	int	___685_ifgreater_7_value1_tmp	%read{457,457} %write{456,456}
local	float	___685_ifgreater_7_out	%read{470,470} %write{460,462}
local	int	___685_ifgreater_6_value1_tmp	%read{465,465} %write{464,464}
local	float	___685_ifgreater_6_out	%read{478,478} %write{468,470}
local	int	___685_ifgreater_5_value1_tmp	%read{473,473} %write{472,472}
local	float	___685_ifgreater_5_out	%read{486,486} %write{476,478}
local	int	___685_ifgreater_4_value1_tmp	%read{481,481} %write{480,480}
local	float	___685_ifgreater_4_out	%read{494,494} %write{484,486}
local	int	___685_ifgreater_3_value1_tmp	%read{489,489} %write{488,488}
local	float	___685_ifgreater_3_out	%read{502,502} %write{492,494}
local	int	___685_ifgreater_2_value1_tmp	%read{497,497} %write{496,496}
local	float	___685_ifgreater_2_out	%read{510,510} %write{500,502}
local	int	___685_ifgreater_1_value1_tmp	%read{505,505} %write{504,504}
local	float	___685_ifgreater_1_out	%read{512,512} %write{508,510}
local	color	___686_combine_out	%read{516,516} %write{515,515}
local	color	___687_reflection_tint	%read{529,582} %write{523,577}
local	color	___687_transmission_tint	%read{529,582} %write{527,581}
local	color	___688_reflection_tint	%read{558,558} %write{552,553}
local	color	___688_transmission_tint	%read{558,558} %write{556,557}
local	closure color	___690_null_closure	%read{519,598} %write{279,279}
local	vector	___690_geomprop_Tworld_out1	%read{419,582} %write{284,284}
local	float	___690_one_minus_ior_in1_tmp	%read{286,286} %write{285,285}
local	float	___690_one_minus_ior_out	%read{393,393} %write{286,286}
local	float	___690_one_plus_ior_in1_tmp	%read{288,288} %write{287,287}
local	float	___690_one_plus_ior_out	%read{393,393} %write{288,288}
local	float	___690_coat_roughness_out.x	%read{305,529} %write{289,308} %mystruct{___690_coat_roughness_out} %mystructfield{0}
local	float	___690_coat_roughness_out.y	%read{307,529} %write{290,309} %mystruct{___690_coat_roughness_out} %mystructfield{1}
local	string	___690_geomprop_Nworld_space_tmp	%read{312,312} %write{310,310}
local	vector	___690_geomprop_Nworld_out1	%read{426,426} %write{312,312}
local	vector	___690_geomprop_Bworld_out1	%read{422,422} %write{318,318}
local	float	___690_scale_normal_in2_tmp	%read{320,320} %write{319,319}
local	vector	___690_scale_normal_out	%read{395,395} %write{320,320}
local	float	___690_specular_roughness_out.x	%read{337,582} %write{321,340} %mystruct{___690_specular_roughness_out} %mystructfield{0}
local	float	___690_specular_roughness_out.y	%read{339,582} %write{322,341} %mystruct{___690_specular_roughness_out} %mystructfield{1}
local	float	___690_inverse_metalness_in1_tmp	%read{343,343} %write{342,342}
local	float	___690_inverse_metalness_out	%read{397,397} %write{343,343}
local	float	___690_use_specular_workflow_float_out	%read{397,593} %write{345,345}
local	float	___690_transmission_mix_amount_value2_tmp	%read{348,348} %write{346,346}
local	float	___690_transmission_mix_amount_in1_tmp	%read{351,351} %write{347,347}
local	float	___690_transmission_mix_amount_out	%read{561,563} %write{351,353}
local	color	___690_artistic_ior_ior	%read{371,570} %write{355,370}
local	color	___690_artistic_ior_extinction	%read{570,570} %write{356,381}
local	color	___690_specular_color_metallic_bg_tmp	%read{383,383} %write{382,382}
local	color	___690_specular_color_metallic_out	%read{517,582} %write{383,383}
local	float	___690_cutout_opacity_in1_tmp	%read{389,389} %write{384,384}
local	float	___690_cutout_opacity_in2_tmp	%read{391,391} %write{385,385}
local	float	___690_cutout_opacity_out	%read{405,508} %write{389,391}
local	float	___690_R_out	%read{407,407} %write{393,393}
local	float	___690_bias_normal_in2_tmp	%read{395,395} %write{394,394}
local	vector	___690_bias_normal_out	%read{413,416} %write{395,395}
local	float	___690_diffuse_bsdf_weight_fg_tmp	%read{397,397} %write{396,396}
local	float	___690_diffuse_bsdf_weight_out	%read{545,545} %write{397,397}
local	float	___690_opacity_presence_value2_tmp	%read{400,400} %write{398,398}
local	float	___690_opacity_presence_in1_tmp	%read{403,403} %write{399,399}
local	float	___690_opacity_presence_out	%read{500,500} %write{403,405}
local	float	___690_R_sq_out	%read{515,517} %write{407,407}
local	vector	___690_surface_normal_out	%read{529,582} %write{408,428}
local	float	___690_opacity_switch_out	%read{604,604} %write{429,512}
local	color	___690_coat_F0_out	%read{529,529} %write{513,516}
local	color	___690_specular_color_metallic_R_sq_out	%read{518,518} %write{517,517}
local	color	___690_F0_out	%read{582,582} %write{518,518}
local	closure color	___690_coat_dielectric_bsdf_out	%read{595,595} %write{519,530}
local	closure color	___690_specular_bsdf1_out	%read{565,565} %write{531,542}
local	float	___690_diffuse_bsdf_roughness_tmp	%read{544,544} %write{543,543}
local	closure color	___690_diffuse_bsdf_out	%read{563,563} %write{545,545}
local	closure color	___690_transmission_bsdf_out	%read{562,562} %write{546,559}
local	closure color	___690_transmission_mix_out	%read{565,584} %write{564,564}
local	closure color	___690_specular_workflow_bsdf_out	%read{593,593} %write{565,565}
local	float	___690_metalness_metal_bsdf_weight_tmp	%read{571,571} %write{566,566}
local	string	___690_metalness_metal_bsdf_distribution_tmp	%read{570,570} %write{567,567}
local	float	___690_metalness_metal_bsdf_thinfilm_thickness_tmp	%read{570,570} %write{568,568}
local	float	___690_metalness_metal_bsdf_thinfilm_ior_tmp	%read{570,570} %write{569,569}
local	closure color	___690_metalness_metal_bsdf_out	%read{588,588} %write{571,571}
local	closure color	___690_specular_bsdf2_out	%read{584,584} %write{572,583}
local	closure color	___690_metalness_specular_bsdf_out	%read{587,587} %write{584,584}
local	closure color	___690_metalness_workflow_bsdf_out	%read{592,592} %write{589,589}
local	closure color	___690_workflow_selector_bsdf_out	%read{595,595} %write{594,594}
local	closure color	___690_coat_bsdf_out	%read{601,601} %write{595,595}
local	closure color	___690_emission_edf_out	%read{602,602} %write{596,596}
local	closure color	___690_surface_constructor_out.bsdf	%read{607,607} %write{597,601} %mystruct{___690_surface_constructor_out} %mystructfield{0}
local	closure color	___690_surface_constructor_out.edf	%read{608,608} %write{598,602} %mystruct{___690_surface_constructor_out} %mystructfield{1}
local	float	___690_surface_constructor_out.opacity	%read{606,609} %write{599,606} %mystruct{___690_surface_constructor_out} %mystructfield{2}
local	float	___691_opacity_weight	%read{615,617} %write{613,613}
local	closure color	null_closure	%read{275,276} %write{0,0}
local	string	N_texture_normal_file_.filename	%read{30,70} %write{1,1} %mystruct{N_texture_normal_file_} %mystructfield{0}
local	string	N_texture_normal_file_.colorspace	%read{70,70} %write{2,2} %mystruct{N_texture_normal_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{272,272} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{265,265} %write{9,9}
local	vector	geomprop_Bworld_out1	%read{268,268} %write{15,15}
local	float	N_texcoord_out.x	%read{19,19} %write{16,16} %mystruct{N_texcoord_out} %mystructfield{0} %derivs
local	float	N_texcoord_out.y	%read{20,20} %write{17,17} %mystruct{N_texcoord_out} %mystructfield{1} %derivs
local	float	N_multiply_out.x	%read{36,68} %write{19,19} %mystruct{N_multiply_out} %mystructfield{0} %derivs
local	float	N_multiply_out.y	%read{51,69} %write{20,20} %mystruct{N_multiply_out} %mystructfield{1} %derivs
local	float	N_texture_normal_r	%read{2147483647,-1} %write{21,229}
local	float	N_texture_normal_g	%read{2147483647,-1} %write{22,230}
local	float	N_texture_normal_b	%read{2147483647,-1} %write{23,231}
local	float	N_texture_normal_a	%read{2147483647,-1} %write{24,232}
local	color	N_texture_normal_rgb	%read{242,248} %write{25,233}
local	vector	N_convert_out	%read{259,262} %write{234,253}
local	vector	N_normalmap_out	%read{320,320} %write{254,274}
local	closure color	N_surface_out.bsdf	%read{614,614} %write{275,607} %mystruct{N_surface_out} %mystructfield{0}
local	closure color	N_surface_out.edf	%read{614,614} %write{276,608} %mystruct{N_surface_out} %mystructfield{1}
local	float	N_surface_out.opacity	%read{612,612} %write{277,609} %mystruct{N_surface_out} %mystructfield{2}
local	closure color	N_material_out	%read{620,620} %write{619,619}
const	int	$const1	0		%read{0,418} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,311} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,312} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,496} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,613} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	vector	$tmp5	%read{15,15} %write{14,14}
temp	vector	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{13,13} %write{10,10}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	string	$const6	"__operator__mul__"		%read{18,73} %write{2147483647,-1}
const	color	$const7	0 0 0		%read{25,580} %write{2147483647,-1}
const	string	$const8	"IMP_UsdUVTexture_23"		%read{26,26} %write{2147483647,-1}
const	string	$const9	""		%read{30,70} %write{2147483647,-1}
const	string	$const10	"linear"		%read{70,70} %write{2147483647,-1}
const	string	$const11	"constant"		%read{33,48} %write{2147483647,-1}
const	string	$const12	"mx_image_color4"		%read{29,29} %write{2147483647,-1}
temp	int	$tmp10	%read{31,31} %write{30,30}
temp	int	$tmp11	%read{32,46} %write{31,45}
temp	int	$tmp12	%read{34,34} %write{33,33}
temp	int	$tmp13	%read{35,44} %write{34,43}
temp	int	$tmp14	%read{37,37} %write{36,36}
temp	int	$tmp15	%read{38,42} %write{37,41}
const	float	$const13	1		%read{39,617} %write{2147483647,-1}
temp	int	$tmp16	%read{40,40} %write{39,39}
temp	int	$tmp17	%read{41,41} %write{40,40}
temp	int	$tmp18	%read{43,43} %write{42,42}
temp	int	$tmp19	%read{45,45} %write{44,44}
temp	int	$tmp20	%read{47,61} %write{46,60}
temp	int	$tmp21	%read{49,49} %write{48,48}
temp	int	$tmp22	%read{50,59} %write{49,58}
temp	int	$tmp23	%read{52,52} %write{51,51}
temp	int	$tmp24	%read{53,57} %write{52,56}
temp	int	$tmp25	%read{55,55} %write{54,54}
temp	int	$tmp26	%read{56,56} %write{55,55}
temp	int	$tmp27	%read{58,58} %write{57,57}
temp	int	$tmp28	%read{60,60} %write{59,59}
const	string	$const14	"mx_transform_uv"		%read{67,67} %write{2147483647,-1}
const	string	$const15	"alpha"		%read{70,70} %write{2147483647,-1}
const	string	$const16	"subimage"		%read{70,70} %write{2147483647,-1}
const	string	$const17	"interp"		%read{70,70} %write{2147483647,-1}
const	string	$const18	"missingcolor"		%read{70,70} %write{2147483647,-1}
const	string	$const19	"missingalpha"		%read{70,70} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{70,70} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{70,70} %write{2147483647,-1}
const	string	$const22	"colorspace"		%read{70,70} %write{2147483647,-1}
const	string	$const23	"__operator__add__"		%read{76,76} %write{2147483647,-1}
const	string	$const24	"NG_separate4_color4"		%read{83,158} %write{2147483647,-1}
const	string	$const25	"mx_extract"		%read{85,247} %write{2147483647,-1}
temp	int	$tmp29	%read{87,87} %write{86,86}
const	int	$const26	1		%read{90,504} %write{2147483647,-1}
temp	int	$tmp30	%read{91,91} %write{90,90}
temp	int	$tmp31	%read{95,95} %write{94,94}
temp	int	$tmp32	%read{103,103} %write{102,102}
temp	int	$tmp33	%read{107,107} %write{106,106}
temp	int	$tmp34	%read{111,111} %write{110,110}
temp	int	$tmp35	%read{119,119} %write{118,118}
temp	int	$tmp36	%read{123,123} %write{122,122}
temp	int	$tmp37	%read{127,127} %write{126,126}
const	int	$const27	3		%read{132,488} %write{2147483647,-1}
temp	int	$tmp38	%read{135,135} %write{134,134}
temp	int	$tmp39	%read{139,139} %write{138,138}
temp	int	$tmp40	%read{143,143} %write{142,142}
const	string	$const28	"NG_convert_color4_color3"		%read{153,153} %write{2147483647,-1}
temp	int	$tmp41	%read{162,162} %write{161,161}
temp	int	$tmp42	%read{166,166} %write{165,165}
temp	int	$tmp43	%read{170,170} %write{169,169}
temp	int	$tmp44	%read{178,178} %write{177,177}
temp	int	$tmp45	%read{182,182} %write{181,181}
temp	int	$tmp46	%read{186,186} %write{185,185}
temp	int	$tmp47	%read{194,194} %write{193,193}
temp	int	$tmp48	%read{198,198} %write{197,197}
temp	int	$tmp49	%read{202,202} %write{201,201}
temp	int	$tmp50	%read{210,210} %write{209,209}
temp	int	$tmp51	%read{214,214} %write{213,213}
temp	int	$tmp52	%read{218,218} %write{217,217}
const	vector	$const29	0 0 0		%read{234,413} %write{2147483647,-1}
const	string	$const30	"NG_convert_color3_vector3"		%read{235,235} %write{2147483647,-1}
const	string	$const31	"NG_separate3_color3"		%read{239,239} %write{2147483647,-1}
const	string	$const32	"mx_normalmap_float"		%read{255,409} %write{2147483647,-1}
temp	float	$tmp53.x	%read{266,266} %write{256,256}
temp	float	$tmp53.y	%read{269,269} %write{257,257}
const	string	$const33	"mx_normalmap_vector2"		%read{258,412} %write{2147483647,-1}
temp	int	$tmp55	%read{260,260} %write{259,259}
const	vector	$const34	0 0 1		%read{261,415} %write{2147483647,-1}
const	float	$const35	2		%read{262,416} %write{2147483647,-1}
temp	vector	$tmp56	%read{263,263} %write{262,262}
temp	float	$tmp57	%read{265,265} %write{264,264}
temp	vector	$tmp58	%read{266,266} %write{265,265}
temp	vector	$tmp59	%read{270,270} %write{266,266}
temp	float	$tmp60	%read{268,268} %write{267,267}
temp	vector	$tmp61	%read{269,269} %write{268,268}
temp	vector	$tmp62	%read{270,270} %write{269,269}
temp	vector	$tmp63	%read{273,273} %write{270,270}
temp	float	$tmp64	%read{272,272} %write{271,271}
temp	vector	$tmp65	%read{273,273} %write{272,272}
temp	vector	$tmp66	%read{274,274} %write{273,273}
const	string	$const36	"IMP_UsdPreviewSurface_surfaceshader"		%read{278,278} %write{2147483647,-1}
temp	vector	$tmp67	%read{284,284} %write{283,283}
temp	float	$tmp68	%read{283,283} %write{280,280}
temp	float	$tmp69	%read{282,282} %write{281,281}
temp	float	$tmp70	%read{283,283} %write{282,282}
const	string	$const37	"mx_roughness_anisotropy"		%read{291,323} %write{2147483647,-1}
temp	float	$tmp71	%read{294,294} %write{292,292}
const	float	$const38	1e-08		%read{295,327} %write{2147483647,-1}
const	string	$const39	"clamp"		%read{293,611} %write{2147483647,-1}
temp	float	$tmp72	%read{295,295} %write{294,294}
temp	int	$tmp73	%read{297,297} %write{296,296}
temp	float	$tmp74	%read{301,301} %write{300,300}
const	float	$const40	0.98		%read{299,331} %write{2147483647,-1}
temp	float	$tmp75	%read{300,300} %write{299,299}
temp	float	$tmp76	%read{302,302} %write{301,301}
temp	float	$tmp77	%read{304,304} %write{303,303}
const	string	$const41	"world"		%read{310,310} %write{2147483647,-1}
temp	vector	$tmp78	%read{318,318} %write{317,317}
temp	vector	$tmp79	%read{317,317} %write{316,316}
temp	float	$tmp80	%read{316,316} %write{313,313}
temp	float	$tmp81	%read{315,315} %write{314,314}
temp	float	$tmp82	%read{316,316} %write{315,315}
const	float	$const42	0.5		%read{319,394} %write{2147483647,-1}
temp	float	$tmp83	%read{326,326} %write{324,324}
temp	float	$tmp84	%read{327,327} %write{326,326}
temp	int	$tmp85	%read{329,329} %write{328,328}
temp	float	$tmp86	%read{333,333} %write{332,332}
temp	float	$tmp87	%read{332,332} %write{331,331}
temp	float	$tmp88	%read{334,334} %write{333,333}
temp	float	$tmp89	%read{336,336} %write{335,335}
temp	float	$tmp90	%read{345,345} %write{344,344}
temp	int	$tmp91	%read{350,350} %write{348,348}
const	string	$const43	"mx_ternary"		%read{349,506} %write{2147483647,-1}
const	string	$const44	"mx_artistic_ior"		%read{357,357} %write{2147483647,-1}
temp	color	$tmp92	%read{362,362} %write{358,358}
const	float	$const45	0.99		%read{359,359} %write{2147483647,-1}
temp	color	$tmp93	%read{361,361} %write{359,359}
temp	color	$tmp94	%read{362,362} %write{361,361}
temp	color	$tmp95	%read{366,366} %write{364,364}
temp	color	$tmp96	%read{366,366} %write{365,365}
temp	color	$tmp97	%read{369,369} %write{367,367}
temp	color	$tmp98	%read{369,369} %write{368,368}
temp	color	$tmp99	%read{374,374} %write{373,373}
temp	color	$tmp100	%read{376,376} %write{374,374}
temp	color	$tmp101	%read{376,376} %write{375,375}
temp	color	$tmp102	%read{378,378} %write{376,376}
temp	color	$tmp103	%read{378,378} %write{377,377}
temp	color	$tmp104	%read{380,380} %write{379,379}
const	color	$const46	1 1 1		%read{382,581} %write{2147483647,-1}
temp	int	$tmp105	%read{388,388} %write{386,386}
temp	int	$tmp106	%read{402,402} %write{400,400}
temp	float	$tmp107.x	%read{420,420} %write{410,410}
temp	float	$tmp107.y	%read{423,423} %write{411,411}
temp	int	$tmp109	%read{414,414} %write{413,413}
temp	vector	$tmp110	%read{417,417} %write{416,416}
temp	float	$tmp111	%read{419,419} %write{418,418}
temp	vector	$tmp112	%read{420,420} %write{419,419}
temp	vector	$tmp113	%read{424,424} %write{420,420}
temp	float	$tmp114	%read{422,422} %write{421,421}
temp	vector	$tmp115	%read{423,423} %write{422,422}
temp	vector	$tmp116	%read{424,424} %write{423,423}
temp	vector	$tmp117	%read{427,427} %write{424,424}
temp	float	$tmp118	%read{426,426} %write{425,425}
temp	vector	$tmp119	%read{427,427} %write{426,426}
temp	vector	$tmp120	%read{428,428} %write{427,427}
const	string	$const47	"NG_switch_floatI"		%read{430,430} %write{2147483647,-1}
const	int	$const48	10		%read{431,431} %write{2147483647,-1}
temp	int	$tmp121	%read{435,435} %write{433,433}
const	int	$const49	9		%read{440,440} %write{2147483647,-1}
temp	int	$tmp122	%read{443,443} %write{441,441}
const	int	$const50	8		%read{448,448} %write{2147483647,-1}
temp	int	$tmp123	%read{451,451} %write{449,449}
const	int	$const51	7		%read{456,456} %write{2147483647,-1}
temp	int	$tmp124	%read{459,459} %write{457,457}
const	int	$const52	6		%read{464,464} %write{2147483647,-1}
temp	int	$tmp125	%read{467,467} %write{465,465}
const	int	$const53	5		%read{472,472} %write{2147483647,-1}
temp	int	$tmp126	%read{475,475} %write{473,473}
const	int	$const54	4		%read{480,480} %write{2147483647,-1}
temp	int	$tmp127	%read{483,483} %write{481,481}
temp	int	$tmp128	%read{491,491} %write{489,489}
temp	int	$tmp129	%read{499,499} %write{497,497}
temp	int	$tmp130	%read{507,507} %write{505,505}
const	string	$const55	"NG_convert_float_color3"		%read{514,514} %write{2147483647,-1}
const	float	$const56	5		%read{529,582} %write{2147483647,-1}
const	float	$const57	1.5		%read{529,582} %write{2147483647,-1}
const	string	$const58	"ggx"		%read{529,582} %write{2147483647,-1}
const	string	$const59	"R"		%read{521,578} %write{2147483647,-1}
const	string	$const60	"mx_generalized_schlick_bsdf"		%read{520,573} %write{2147483647,-1}
const	string	$const61	"T"		%read{521,574} %write{2147483647,-1}
temp	int	$tmp133	%read{522,522} %write{521,521}
temp	int	$tmp134	%read{526,526} %write{525,525}
temp	closure color	$tmp135	%read{530,530} %write{529,529}
const	string	$const62	"thinfilm_thickness"		%read{529,582} %write{2147483647,-1}
const	string	$const63	"thinfilm_ior"		%read{529,582} %write{2147483647,-1}
const	string	$const64	"generalized_schlick_bsdf"		%read{529,582} %write{2147483647,-1}
temp	int	$tmp138	%read{534,534} %write{533,533}
temp	int	$tmp139	%read{538,538} %write{537,537}
temp	closure color	$tmp140	%read{542,542} %write{541,541}
temp	closure color	$tmp141	%read{545,545} %write{544,544}
const	string	$const65	"oren_nayar_diffuse_bsdf"		%read{544,544} %write{2147483647,-1}
temp	float	$tmp143.x	%read{558,558} %write{547,547}
temp	float	$tmp143.y	%read{558,558} %write{548,548}
const	string	$const66	"mx_dielectric_bsdf"		%read{549,549} %write{2147483647,-1}
temp	int	$tmp144	%read{551,551} %write{550,550}
temp	int	$tmp145	%read{555,555} %write{554,554}
temp	closure color	$tmp146	%read{559,559} %write{558,558}
const	string	$const67	"dielectric_bsdf"		%read{558,558} %write{2147483647,-1}
const	string	$const68	"mix"		%read{560,590} %write{2147483647,-1}
temp	float	$tmp147	%read{562,562} %write{561,561}
temp	closure color	$tmp148	%read{564,564} %write{562,562}
temp	closure color	$tmp149	%read{564,564} %write{563,563}
const	string	$const69	"layer"		%read{565,595} %write{2147483647,-1}
temp	closure color	$tmp150	%read{571,571} %write{570,570}
const	string	$const70	"conductor_bsdf"		%read{570,570} %write{2147483647,-1}
temp	int	$tmp152	%read{575,575} %write{574,574}
temp	int	$tmp153	%read{579,579} %write{578,578}
temp	closure color	$tmp154	%read{583,583} %write{582,582}
temp	float	$tmp155	%read{587,587} %write{586,586}
temp	closure color	$tmp156	%read{589,589} %write{587,587}
temp	closure color	$tmp157	%read{589,589} %write{588,588}
temp	float	$tmp158	%read{592,592} %write{591,591}
temp	closure color	$tmp159	%read{594,594} %write{592,592}
temp	closure color	$tmp160	%read{594,594} %write{593,593}
const	string	$const71	"uniform_edf"		%read{596,596} %write{2147483647,-1}
const	string	$const72	"mx_surface"		%read{600,600} %write{2147483647,-1}
temp	float	$tmp161	%read{605,605} %write{604,604}
const	string	$const73	"mx_surfacematerial"		%read{610,610} %write{2147483647,-1}
temp	float	$tmp162	%read{613,613} %write{612,612}
temp	closure color	$tmp163	%read{615,615} %write{614,614}
temp	closure color	$tmp164	%read{619,619} %write{615,615}
temp	closure color	$tmp165	%read{618,618} %write{616,616}
const	string	$const74	"transparent"		%read{616,616} %write{2147483647,-1}
temp	float	$tmp166	%read{618,618} %write{617,617}
temp	closure color	$tmp167	%read{619,619} %write{618,618}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:441
#     textureresource N_texture_normal_file_ = {N_texture_normal_file, N_texture_normal_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{441} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:442
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		N_texture_normal_file_.filename N_texture_normal_file 	%line{442} %argrw{"wr"}
	assign		N_texture_normal_file_.colorspace N_texture_normal_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:443
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{443} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:444
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{444} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:445
#     vector2 N_texcoord_out = vector2(u,v);
	compref		$tmp7 N $const4 	%line{445} %argrw{"wrr"}
	compref		$tmp8 N $const1 	%argrw{"wrr"}
	neg		$tmp9 $tmp8 	%argrw{"wr"}
	vector		$tmp6 $tmp7 $const5 $tmp9 	%argrw{"wrrr"}
	cross		$tmp5 N $tmp6 	%argrw{"wrr"}
	normalize	geomprop_Bworld_out1 $tmp5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:446
#     vector2 N_multiply_out = N_texcoord_out * N_multiply_in2;
	assign		N_texcoord_out.x u 	%line{446} %argrw{"wr"}
	assign		N_texcoord_out.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:463
# 
	functioncall	$const6 21 	%line{463} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		N_multiply_out.x N_texcoord_out.x N_multiply_in2.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		N_multiply_out.y N_texcoord_out.y N_multiply_in2.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:448
#     float N_texture_normal_g = 0.0;
	assign		N_texture_normal_r $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{448} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:449
#     float N_texture_normal_b = 0.0;
	assign		N_texture_normal_g $const5 	%line{449} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:450
#     float N_texture_normal_a = 0.0;
	assign		N_texture_normal_b $const5 	%line{450} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:451
#     color N_texture_normal_rgb = color(0.0);
	assign		N_texture_normal_a $const5 	%line{451} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:452
#     IMP_UsdUVTexture_23(N_texture_normal_file_, N_multiply_out, N_texture_normal_wrapS, N_texture_normal_wrapT, N_texture_normal_fallback, N_texture_normal_scale, N_texture_normal_bias, N_texture_normal_r, N_texture_normal_g, N_texture_normal_b, N_texture_normal_a, N_texture_normal_rgb);
	assign		N_texture_normal_rgb $const7 	%line{452} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:453
#     vector N_convert_out = vector(0.0);
	functioncall	$const8 234 	%line{453} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:75
#     mx_image_color4(file, "", fallback, st, wrapS, wrapT, "linear", "", 0, "constant", image_reader_out);
	assign		___674_image_reader_out.rgb $const7 	%line{75} %argrw{"wr"}
	assign		___674_image_reader_out.a $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:76
#     color4 image_scale_out = image_reader_out * scale;
	functioncall	$const12 73 	%line{76} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp10 N_texture_normal_file_.filename $const9 	%line{25} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 33 46 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp12 N_texture_normal_wrapS $const11 	%line{26} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 44 44 	%argrw{"r"}
	lt		$tmp14 N_multiply_out.x $const5 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 39 42 	%argrw{"r"}
	gt		$tmp16 N_multiply_out.x $const13 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp11 $tmp19 	%line{25} %argrw{"wr"}
	neq		$tmp20 $tmp11 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp20 48 61 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:27
#     {
	eq		$tmp21 N_texture_normal_wrapT $const11 	%line{27} %argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	if		$tmp22 59 59 	%argrw{"r"}
	lt		$tmp23 N_multiply_out.y $const5 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	if		$tmp24 54 57 	%argrw{"r"}
	gt		$tmp25 N_multiply_out.y $const13 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	neq		$tmp27 $tmp24 $const1 	%argrw{"wrr"}
	assign		$tmp22 $tmp27 	%argrw{"wr"}
	neq		$tmp28 $tmp22 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp20 $tmp28 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp20 65 65 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:29
#         return;
	assign		___674_image_reader_out.rgb N_texture_normal_fallback.rgb 	%line{29} %argrw{"wr"}
	assign		___674_image_reader_out.a N_texture_normal_fallback.a 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:33
#     float missingAlpha = default_value.a;
	assign		___670_missingColor N_texture_normal_fallback.rgb 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha N_texture_normal_fallback.a 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:35
#     float alpha;
	functioncall	$const14 70 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:20
# }
	assign		___670_st.x N_multiply_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y N_multiply_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb N_texture_normal_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const9 $const17 $const10 $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 N_texture_normal_wrapS $const21 N_texture_normal_wrapT $const22 N_texture_normal_file_.colorspace 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:43
# }
	assign		___674_image_reader_out.rgb ___670_rgb 	%line{43} %argrw{"wr"}
	assign		___674_image_reader_out.a ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:463
# 
	functioncall	$const6 76 	%line{463} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/color4.h:79
#     return color4(a.rgb * b.rgb, a.a * b.a);
	mul		___674_image_scale_out.rgb ___674_image_reader_out.rgb N_texture_normal_scale.rgb 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/color4.h"} %line{79} %argrw{"wrr"}
	mul		___674_image_scale_out.a ___674_image_reader_out.a N_texture_normal_scale.a 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:463
# 
	functioncall	$const23 79 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{463} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/color4.h:29
#     return color4(a.rgb + b.rgb, a.a + b.a);
	add		___674_image_bias_out.rgb ___674_image_scale_out.rgb N_texture_normal_bias.rgb 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/color4.h"} %line{29} %argrw{"wrr"}
	add		___674_image_bias_out.a ___674_image_scale_out.a N_texture_normal_bias.a 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:79
#     float image_bias_separate_outg = 0.0;
	assign		___674_image_bias_separate_outr $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:80
#     float image_bias_separate_outb = 0.0;
	assign		___674_image_bias_separate_outg $const5 	%line{80} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:81
#     float image_bias_separate_outa = 0.0;
	assign		___674_image_bias_separate_outb $const5 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:82
#     NG_separate4_color4(image_bias_out, image_bias_separate_outr, image_bias_separate_outg, image_bias_separate_outb, image_bias_separate_outa);
	assign		___674_image_bias_separate_outa $const5 	%line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:83
#     color image_bias_color3_out = color(0.0);
	functioncall	$const24 152 	%line{83} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:48
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:49
#     int N_extract_1_index_tmp = 1;
	functioncall	$const25 100 	%line{49} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp29 ___672_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp29 90 100 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp30 ___672_N_extract_0_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp30 94 100 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp31 ___672_N_extract_0_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp31 98 100 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_0_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:50
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:51
#     int N_extract_2_index_tmp = 2;
	functioncall	$const25 116 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp32 ___672_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp32 106 116 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp33 ___672_N_extract_1_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp33 110 116 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp34 ___672_N_extract_1_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp34 114 116 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_1_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:52
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:53
#     int N_extract_3_index_tmp = 3;
	functioncall	$const25 132 	%line{53} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp35 ___672_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp35 122 132 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp36 ___672_N_extract_2_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp36 126 132 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp37 ___672_N_extract_2_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp37 130 132 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_2_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:54
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___672_N_extract_3_index_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:55
#     outr = N_extract_0_out;
	functioncall	$const25 148 	%line{55} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp38 ___672_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp38 138 148 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp39 ___672_N_extract_3_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp39 142 148 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp40 ___672_N_extract_3_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp40 146 148 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_3_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:56
#     outg = N_extract_1_out;
	assign		___674_image_bias_separate_outr ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:57
#     outb = N_extract_2_out;
	assign		___674_image_bias_separate_outg ___672_N_extract_1_out 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:58
#     outa = N_extract_3_out;
	assign		___674_image_bias_separate_outb ___672_N_extract_2_out 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:59
# }
	assign		___674_image_bias_separate_outa ___672_N_extract_3_out 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:84
#     NG_convert_color4_color3(image_bias_out, image_bias_color3_out);
	assign		___674_image_bias_color3_out $const7 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:85
#     r = image_bias_separate_outr;
	functioncall	$const28 229 	%line{85} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:64
#     float separate_outg = 0.0;
	assign		___673_separate_outr $const5 	%line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:65
#     float separate_outb = 0.0;
	assign		___673_separate_outg $const5 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:66
#     float separate_outa = 0.0;
	assign		___673_separate_outb $const5 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:67
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___673_separate_outa $const5 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:68
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const24 227 	%line{68} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:48
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:49
#     int N_extract_1_index_tmp = 1;
	functioncall	$const25 175 	%line{49} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp41 ___672_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp41 165 175 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp42 ___672_N_extract_0_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp42 169 175 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp43 ___672_N_extract_0_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp43 173 175 	%argrw{"r"}
	compref		___672_N_extract_0_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_0_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:50
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:51
#     int N_extract_2_index_tmp = 2;
	functioncall	$const25 191 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp44 ___672_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp44 181 191 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp45 ___672_N_extract_1_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp45 185 191 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp46 ___672_N_extract_1_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp46 189 191 	%argrw{"r"}
	compref		___672_N_extract_1_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_1_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:52
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:53
#     int N_extract_3_index_tmp = 3;
	functioncall	$const25 207 	%line{53} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp47 ___672_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp47 197 207 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp48 ___672_N_extract_2_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp48 201 207 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp49 ___672_N_extract_2_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp49 205 207 	%argrw{"r"}
	compref		___672_N_extract_2_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_2_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:54
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___672_N_extract_3_index_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:55
#     outr = N_extract_0_out;
	functioncall	$const25 223 	%line{55} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp50 ___672_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp50 213 223 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp51 ___672_N_extract_3_index_tmp $const26 	%line{111} %argrw{"wrr"}
	if		$tmp51 217 223 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const26 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp52 ___672_N_extract_3_index_tmp $const4 	%line{112} %argrw{"wrr"}
	if		$tmp52 221 223 	%argrw{"r"}
	compref		___672_N_extract_3_out ___674_image_bias_out.rgb $const4 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_N_extract_3_out ___674_image_bias_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:56
#     outg = N_extract_1_out;
	assign		___673_separate_outr ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:57
#     outb = N_extract_2_out;
	assign		___673_separate_outg ___672_N_extract_1_out 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:58
#     outa = N_extract_3_out;
	assign		___673_separate_outb ___672_N_extract_2_out 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:59
# }
	assign		___673_separate_outa ___672_N_extract_3_out 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:69
#     out = combine_out;
	color		___673_combine_out ___673_separate_outr ___673_separate_outg ___673_separate_outb 	%line{69} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:70
# }
	assign		___674_image_bias_color3_out ___673_combine_out 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:86
#     g = image_bias_separate_outg;
	assign		N_texture_normal_r ___674_image_bias_separate_outr 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:87
#     b = image_bias_separate_outb;
	assign		N_texture_normal_g ___674_image_bias_separate_outg 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:88
#     a = image_bias_separate_outa;
	assign		N_texture_normal_b ___674_image_bias_separate_outb 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:89
#     rgb = image_bias_color3_out;
	assign		N_texture_normal_a ___674_image_bias_separate_outa 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:90
# }
	assign		N_texture_normal_rgb ___674_image_bias_color3_out 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:454
#     NG_convert_color3_vector3(N_texture_normal_rgb, N_convert_out);
	assign		N_convert_out $const29 	%line{454} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:455
#     vector N_normalmap_out = vector(0.0);
	functioncall	$const30 254 	%line{455} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:108
#     float separate_outg = 0.0;
	assign		___676_separate_outr $const5 	%line{108} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:109
#     float separate_outb = 0.0;
	assign		___676_separate_outg $const5 	%line{109} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:110
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___676_separate_outb $const5 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:111
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const31 252 	%line{111} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:95
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___675_N_extract_0_index_tmp $const1 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:96
#     int N_extract_1_index_tmp = 1;
	functioncall	$const25 243 	%line{96} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_0_out N_texture_normal_rgb ___675_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:97
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___675_N_extract_1_index_tmp $const26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:98
#     int N_extract_2_index_tmp = 2;
	functioncall	$const25 246 	%line{98} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_1_out N_texture_normal_rgb ___675_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:99
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___675_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:100
#     outr = N_extract_0_out;
	functioncall	$const25 249 	%line{100} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___675_N_extract_2_out N_texture_normal_rgb ___675_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:101
#     outg = N_extract_1_out;
	assign		___676_separate_outr ___675_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:102
#     outb = N_extract_2_out;
	assign		___676_separate_outg ___675_N_extract_1_out 	%line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:103
# }
	assign		___676_separate_outb ___675_N_extract_2_out 	%line{103} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:112
#     out = combine_out;
	vector		___676_combine_out ___676_separate_outr ___676_separate_outg ___676_separate_outb 	%line{112} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:113
# }
	assign		N_convert_out ___676_combine_out 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:456
#     mx_normalmap_float(N_convert_out, N_normalmap_scale, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, N_normalmap_out);
	assign		N_normalmap_out $const29 	%line{456} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:457
#     surfaceshader N_surface_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const32 275 	%line{457} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:133
# }
	assign		$tmp53.x N_normalmap_scale 	%line{133} %argrw{"wr"}
	assign		$tmp53.y N_normalmap_scale 	%argrw{"wr"}
	functioncall	$const33 275 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:119
#     {
	eq		$tmp55 N_convert_out $const29 	%line{119} %argrw{"wrr"}
	if		$tmp55 262 264 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:121
#     }
	assign		___677_decodedValue $const34 	%line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:125
#     }
	mul		$tmp56 N_convert_out $const35 	%line{125} %argrw{"wrr"}
	sub		___677_decodedValue $tmp56 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:128
# }
	compref		$tmp57 ___677_decodedValue $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp58 geomprop_Tworld_out1 $tmp57 	%argrw{"wrr"}
	mul		$tmp59 $tmp58 $tmp53.x 	%argrw{"wrr"}
	compref		$tmp60 ___677_decodedValue $const26 	%argrw{"wrr"}
	mul		$tmp61 geomprop_Bworld_out1 $tmp60 	%argrw{"wrr"}
	mul		$tmp62 $tmp61 $tmp53.y 	%argrw{"wrr"}
	add		$tmp63 $tmp59 $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___677_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp65 geomprop_Nworld_out1 $tmp64 	%argrw{"wrr"}
	add		$tmp66 $tmp63 $tmp65 	%argrw{"wrr"}
	normalize	N_normalmap_out $tmp66 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:458
#     IMP_UsdPreviewSurface_surfaceshader(N_surface_diffuseColor, N_surface_emissiveColor, N_surface_useSpecularWorkflow, N_surface_specularColor, N_surface_metallic, N_surface_roughness, N_surface_clearcoat, N_surface_clearcoatRoughness, N_surface_opacity, N_surface_opacityMode, N_surface_opacityThreshold, N_surface_ior, N_normalmap_out, N_surface_displacement, N_surface_occlusion, N_surface_out);
	assign		N_surface_out.bsdf null_closure 	%line{458} %argrw{"wr"}
	assign		N_surface_out.edf null_closure 	%argrw{"wr"}
	assign		N_surface_out.opacity $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:459
#     MATERIAL N_material_out = mx_surfacematerial(N_surface_out, backsurfaceshader, displacementshader1);
	functioncall	$const36 610 	%line{459} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:225
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	assign		___690_null_closure $const1 	%line{225} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:226
#     float one_minus_ior_in1_tmp = 1.000000;
	compref		$tmp68 N $const4 	%line{226} %argrw{"wrr"}
	compref		$tmp69 N $const1 	%argrw{"wrr"}
	neg		$tmp70 $tmp69 	%argrw{"wr"}
	vector		$tmp67 $tmp68 $const5 $tmp70 	%argrw{"wrrr"}
	normalize	___690_geomprop_Tworld_out1 $tmp67 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:227
#     float one_minus_ior_out = one_minus_ior_in1_tmp - ior;
	assign		___690_one_minus_ior_in1_tmp $const13 	%line{227} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:228
#     float one_plus_ior_in1_tmp = 1.000000;
	sub		___690_one_minus_ior_out ___690_one_minus_ior_in1_tmp N_surface_ior 	%line{228} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:229
#     float one_plus_ior_out = one_plus_ior_in1_tmp + ior;
	assign		___690_one_plus_ior_in1_tmp $const13 	%line{229} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:230
#     vector2 coat_roughness_out = vector2(0.0, 0.0);
	add		___690_one_plus_ior_out ___690_one_plus_ior_in1_tmp N_surface_ior 	%line{230} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:231
#     mx_roughness_anisotropy(clearcoatRoughness, 0.000000, coat_roughness_out);
	assign		___690_coat_roughness_out.x $const5 	%line{231} %argrw{"wr"}
	assign		___690_coat_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:232
#     string geomprop_Nworld_space_tmp = "world";
	functioncall	$const37 310 	%line{232} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:138
#     if (anisotropy > 0.0)
	mul		$tmp71 N_surface_clearcoatRoughness N_surface_clearcoatRoughness 	%line{138} %argrw{"wrr"}
	functioncall	$const39 296 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp72 $tmp71 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___681_roughness_sqr $tmp72 $const38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:139
#     {
	gt		$tmp73 $const5 $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{139} %argrw{"wrr"}
	if		$tmp73 308 310 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:141
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const39 301 	%line{141} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp75 $const5 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %argrw{"wrr"}
	max		$tmp74 $tmp75 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:141
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp76 $const13 $tmp74 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %argrw{"wrr"}
	sqrt		___682_aspect $tmp76 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:142
#         result.y = roughness_sqr * aspect;
	div		$tmp77 ___681_roughness_sqr ___682_aspect 	%line{142} %argrw{"wrr"}
	min		___690_coat_roughness_out.x $tmp77 $const13 	%argrw{"wrr"}
	assign		___690_coat_roughness_out.x ___690_coat_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:143
#     }
	mul		___690_coat_roughness_out.y ___681_roughness_sqr ___682_aspect 	%line{143} %argrw{"wrr"}
	assign		___690_coat_roughness_out.y ___690_coat_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:147
#         result.y = roughness_sqr;
	assign		___690_coat_roughness_out.x ___681_roughness_sqr 	%line{147} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:148
#     }
	assign		___690_coat_roughness_out.y ___681_roughness_sqr 	%line{148} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:233
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space_tmp, N);
	assign		___690_geomprop_Nworld_space_tmp $const41 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:234
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	functioncall	$const2 313 	%line{234} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	___690_geomprop_Nworld_out1 $const3 ___690_geomprop_Nworld_space_tmp N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:235
#     float scale_normal_in2_tmp = 0.500000;
	compref		$tmp80 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{235} %argrw{"wrr"}
	compref		$tmp81 N $const1 	%argrw{"wrr"}
	neg		$tmp82 $tmp81 	%argrw{"wr"}
	vector		$tmp79 $tmp80 $const5 $tmp82 	%argrw{"wrrr"}
	cross		$tmp78 N $tmp79 	%argrw{"wrr"}
	normalize	___690_geomprop_Bworld_out1 $tmp78 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:236
#     vector scale_normal_out = normal1 * scale_normal_in2_tmp;
	assign		___690_scale_normal_in2_tmp $const42 	%line{236} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:237
#     vector2 specular_roughness_out = vector2(0.0, 0.0);
	mul		___690_scale_normal_out N_normalmap_out ___690_scale_normal_in2_tmp 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:238
#     mx_roughness_anisotropy(roughness, 0.000000, specular_roughness_out);
	assign		___690_specular_roughness_out.x $const5 	%line{238} %argrw{"wr"}
	assign		___690_specular_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:239
#     float inverse_metalness_in1_tmp = 1.000000;
	functioncall	$const37 342 	%line{239} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:138
#     if (anisotropy > 0.0)
	mul		$tmp83 N_surface_roughness N_surface_roughness 	%line{138} %argrw{"wrr"}
	functioncall	$const39 328 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp84 $tmp83 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___681_roughness_sqr $tmp84 $const38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:139
#     {
	gt		$tmp85 $const5 $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{139} %argrw{"wrr"}
	if		$tmp85 340 342 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:141
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const39 333 	%line{141} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp87 $const5 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %argrw{"wrr"}
	max		$tmp86 $tmp87 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:141
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp88 $const13 $tmp86 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %argrw{"wrr"}
	sqrt		___682_aspect $tmp88 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:142
#         result.y = roughness_sqr * aspect;
	div		$tmp89 ___681_roughness_sqr ___682_aspect 	%line{142} %argrw{"wrr"}
	min		___690_specular_roughness_out.x $tmp89 $const13 	%argrw{"wrr"}
	assign		___690_specular_roughness_out.x ___690_specular_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:143
#     }
	mul		___690_specular_roughness_out.y ___681_roughness_sqr ___682_aspect 	%line{143} %argrw{"wrr"}
	assign		___690_specular_roughness_out.y ___690_specular_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:147
#         result.y = roughness_sqr;
	assign		___690_specular_roughness_out.x ___681_roughness_sqr 	%line{147} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:148
#     }
	assign		___690_specular_roughness_out.y ___681_roughness_sqr 	%line{148} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:240
#     float inverse_metalness_out = inverse_metalness_in1_tmp - metallic;
	assign		___690_inverse_metalness_in1_tmp $const13 	%line{240} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:241
#     float use_specular_workflow_float_out = float(useSpecularWorkflow);
	sub		___690_inverse_metalness_out ___690_inverse_metalness_in1_tmp N_surface_metallic 	%line{241} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:242
#     float transmission_mix_amount_value2_tmp = 0.000000;
	assign		$tmp90 N_surface_useSpecularWorkflow 	%line{242} %argrw{"wr"}
	assign		___690_use_specular_workflow_float_out $tmp90 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:243
#     float transmission_mix_amount_in1_tmp = 1.000000;
	assign		___690_transmission_mix_amount_value2_tmp $const5 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:244
#     float transmission_mix_amount_out = mx_ternary(opacityThreshold > transmission_mix_amount_value2_tmp, transmission_mix_amount_in1_tmp, opacity);
	assign		___690_transmission_mix_amount_in1_tmp $const13 	%line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:245
#     color artistic_ior_ior = color(0.0);
	gt		$tmp91 N_surface_opacityThreshold ___690_transmission_mix_amount_value2_tmp 	%line{245} %argrw{"wrr"}
	functioncall	$const43 355 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp91 353 355 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___690_transmission_mix_amount_out ___690_transmission_mix_amount_in1_tmp 	%argrw{"wr"}
	return
	assign		___690_transmission_mix_amount_out N_surface_opacity 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:246
#     color artistic_ior_extinction = color(0.0);
	assign		___690_artistic_ior_ior $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:247
#     mx_artistic_ior(diffuseColor, diffuseColor, artistic_ior_ior, artistic_ior_extinction);
	assign		___690_artistic_ior_extinction $const7 	%line{247} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:248
#     color specular_color_metallic_bg_tmp = color(1.000000, 1.000000, 1.000000);
	functioncall	$const44 382 	%line{248} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:157
#     color r_sqrt = sqrt(r);
	assign		$tmp92 $const5 	%line{157} %argrw{"wr"}
	assign		$tmp93 $const45 	%argrw{"wr"}
	functioncall	$const39 363 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp94 N_surface_diffuseColor $tmp93 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___684_r $tmp94 $tmp92 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:158
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___684_r_sqrt ___684_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:159
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp95 $const13 ___684_r 	%line{159} %argrw{"wrr"}
	add		$tmp96 $const13 ___684_r 	%argrw{"wrr"}
	div		___684_n_min $tmp95 $tmp96 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:160
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp97 $const13 ___684_r_sqrt 	%line{160} %argrw{"wrr"}
	sub		$tmp98 $const13 ___684_r_sqrt 	%argrw{"wrr"}
	div		___684_n_max $tmp97 $tmp98 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:161
# 
	mix		___690_artistic_ior_ior ___684_n_max ___684_n_min N_surface_diffuseColor 	%line{161} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:163
#     color nm1 = ior - 1.0;
	add		___684_np1 ___690_artistic_ior_ior $const13 	%line{163} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:164
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___684_nm1 ___690_artistic_ior_ior $const13 	%line{164} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:165
#     k2 = max(k2, 0.0);
	mul		$tmp99 ___684_np1 ___684_np1 	%line{165} %argrw{"wrr"}
	mul		$tmp100 $tmp99 ___684_r 	%argrw{"wrr"}
	mul		$tmp101 ___684_nm1 ___684_nm1 	%argrw{"wrr"}
	sub		$tmp102 $tmp100 $tmp101 	%argrw{"wrr"}
	sub		$tmp103 $const13 ___684_r 	%argrw{"wrr"}
	div		___684_k2 $tmp102 $tmp103 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:166
#     extinction = sqrt(k2);
	assign		$tmp104 $const5 	%line{166} %argrw{"wr"}
	max		___684_k2 ___684_k2 $tmp104 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:167
# }
	sqrt		___690_artistic_ior_extinction ___684_k2 	%line{167} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:249
#     color specular_color_metallic_out = mix(specular_color_metallic_bg_tmp, diffuseColor, metallic);
	assign		___690_specular_color_metallic_bg_tmp $const46 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:250
#     float cutout_opacity_in1_tmp = 1.000000;
	mix		___690_specular_color_metallic_out ___690_specular_color_metallic_bg_tmp N_surface_diffuseColor N_surface_metallic 	%line{250} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:251
#     float cutout_opacity_in2_tmp = 0.000000;
	assign		___690_cutout_opacity_in1_tmp $const13 	%line{251} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:252
#     float cutout_opacity_out = mx_ternary(opacity >= opacityThreshold, cutout_opacity_in1_tmp, cutout_opacity_in2_tmp);
	assign		___690_cutout_opacity_in2_tmp $const5 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:253
#     float R_out = one_minus_ior_out / one_plus_ior_out;
	ge		$tmp105 N_surface_opacity N_surface_opacityThreshold 	%line{253} %argrw{"wrr"}
	functioncall	$const43 393 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp105 391 393 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___690_cutout_opacity_out ___690_cutout_opacity_in1_tmp 	%argrw{"wr"}
	return
	assign		___690_cutout_opacity_out ___690_cutout_opacity_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:254
#     float bias_normal_in2_tmp = 0.500000;
	div		___690_R_out ___690_one_minus_ior_out ___690_one_plus_ior_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{254} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:255
#     vector bias_normal_out = scale_normal_out + bias_normal_in2_tmp;
	assign		___690_bias_normal_in2_tmp $const42 	%line{255} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:256
#     float diffuse_bsdf_weight_fg_tmp = 1.000000;
	add		___690_bias_normal_out ___690_scale_normal_out ___690_bias_normal_in2_tmp 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:257
#     float diffuse_bsdf_weight_out = mix(inverse_metalness_out, diffuse_bsdf_weight_fg_tmp, use_specular_workflow_float_out);
	assign		___690_diffuse_bsdf_weight_fg_tmp $const13 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:258
#     float opacity_presence_value2_tmp = 0.000000;
	mix		___690_diffuse_bsdf_weight_out ___690_inverse_metalness_out ___690_diffuse_bsdf_weight_fg_tmp ___690_use_specular_workflow_float_out 	%line{258} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:259
#     float opacity_presence_in1_tmp = 0.000000;
	assign		___690_opacity_presence_value2_tmp $const5 	%line{259} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:260
#     float opacity_presence_out = mx_ternary(opacity == opacity_presence_value2_tmp, opacity_presence_in1_tmp, cutout_opacity_out);
	assign		___690_opacity_presence_in1_tmp $const5 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:261
#     float R_sq_out = R_out * R_out;
	eq		$tmp106 N_surface_opacity ___690_opacity_presence_value2_tmp 	%line{261} %argrw{"wrr"}
	functioncall	$const43 407 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp106 405 407 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___690_opacity_presence_out ___690_opacity_presence_in1_tmp 	%argrw{"wr"}
	return
	assign		___690_opacity_presence_out ___690_cutout_opacity_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:262
#     vector surface_normal_out = vector(0.0);
	mul		___690_R_sq_out ___690_R_out ___690_R_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:263
#     mx_normalmap_float(bias_normal_out, 1.000000, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, surface_normal_out);
	assign		___690_surface_normal_out $const29 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:264
#     float opacity_switch_out = 0.0;
	functioncall	$const32 429 	%line{264} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:133
# }
	assign		$tmp107.x $const13 	%line{133} %argrw{"wr"}
	assign		$tmp107.y $const13 	%argrw{"wr"}
	functioncall	$const33 429 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:119
#     {
	eq		$tmp109 ___690_bias_normal_out $const29 	%line{119} %argrw{"wrr"}
	if		$tmp109 416 418 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:121
#     }
	assign		___677_decodedValue $const34 	%line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:125
#     }
	mul		$tmp110 ___690_bias_normal_out $const35 	%line{125} %argrw{"wrr"}
	sub		___677_decodedValue $tmp110 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:128
# }
	compref		$tmp111 ___677_decodedValue $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp112 ___690_geomprop_Tworld_out1 $tmp111 	%argrw{"wrr"}
	mul		$tmp113 $tmp112 $tmp107.x 	%argrw{"wrr"}
	compref		$tmp114 ___677_decodedValue $const26 	%argrw{"wrr"}
	mul		$tmp115 ___690_geomprop_Bworld_out1 $tmp114 	%argrw{"wrr"}
	mul		$tmp116 $tmp115 $tmp107.y 	%argrw{"wrr"}
	add		$tmp117 $tmp113 $tmp116 	%argrw{"wrr"}
	compref		$tmp118 ___677_decodedValue $const4 	%argrw{"wrr"}
	mul		$tmp119 ___690_geomprop_Nworld_out1 $tmp118 	%argrw{"wrr"}
	add		$tmp120 $tmp117 $tmp119 	%argrw{"wrr"}
	normalize	___690_surface_normal_out $tmp120 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:265
#     NG_switch_floatI(cutout_opacity_out, opacity_presence_out, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, opacityMode, opacity_switch_out);
	assign		___690_opacity_switch_out $const5 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:266
#     color coat_F0_out = color(0.0);
	functioncall	$const47 513 	%line{266} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:172
#     float ifgreater_10_in2_tmp = 0.000000;
	assign		___685_ifgreater_10_value1_tmp $const48 	%line{172} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:173
#     float ifgreater_10_out = mx_ternary(ifgreater_10_value1_tmp > which, in10, ifgreater_10_in2_tmp);
	assign		___685_ifgreater_10_in2_tmp $const5 	%line{173} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:174
#     int ifgreater_9_value1_tmp = 9;
	gt		$tmp121 ___685_ifgreater_10_value1_tmp N_surface_opacityMode 	%line{174} %argrw{"wrr"}
	functioncall	$const43 440 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp121 438 440 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_10_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_10_out ___685_ifgreater_10_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:175
#     float ifgreater_9_out = mx_ternary(ifgreater_9_value1_tmp > which, in9, ifgreater_10_out);
	assign		___685_ifgreater_9_value1_tmp $const49 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{175} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:176
#     int ifgreater_8_value1_tmp = 8;
	gt		$tmp122 ___685_ifgreater_9_value1_tmp N_surface_opacityMode 	%line{176} %argrw{"wrr"}
	functioncall	$const43 448 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp122 446 448 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_9_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_9_out ___685_ifgreater_10_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:177
#     float ifgreater_8_out = mx_ternary(ifgreater_8_value1_tmp > which, in8, ifgreater_9_out);
	assign		___685_ifgreater_8_value1_tmp $const50 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{177} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:178
#     int ifgreater_7_value1_tmp = 7;
	gt		$tmp123 ___685_ifgreater_8_value1_tmp N_surface_opacityMode 	%line{178} %argrw{"wrr"}
	functioncall	$const43 456 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp123 454 456 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_8_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_8_out ___685_ifgreater_9_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:179
#     float ifgreater_7_out = mx_ternary(ifgreater_7_value1_tmp > which, in7, ifgreater_8_out);
	assign		___685_ifgreater_7_value1_tmp $const51 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{179} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:180
#     int ifgreater_6_value1_tmp = 6;
	gt		$tmp124 ___685_ifgreater_7_value1_tmp N_surface_opacityMode 	%line{180} %argrw{"wrr"}
	functioncall	$const43 464 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp124 462 464 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_7_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_7_out ___685_ifgreater_8_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:181
#     float ifgreater_6_out = mx_ternary(ifgreater_6_value1_tmp > which, in6, ifgreater_7_out);
	assign		___685_ifgreater_6_value1_tmp $const52 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{181} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:182
#     int ifgreater_5_value1_tmp = 5;
	gt		$tmp125 ___685_ifgreater_6_value1_tmp N_surface_opacityMode 	%line{182} %argrw{"wrr"}
	functioncall	$const43 472 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp125 470 472 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_6_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_6_out ___685_ifgreater_7_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:183
#     float ifgreater_5_out = mx_ternary(ifgreater_5_value1_tmp > which, in5, ifgreater_6_out);
	assign		___685_ifgreater_5_value1_tmp $const53 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{183} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:184
#     int ifgreater_4_value1_tmp = 4;
	gt		$tmp126 ___685_ifgreater_5_value1_tmp N_surface_opacityMode 	%line{184} %argrw{"wrr"}
	functioncall	$const43 480 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp126 478 480 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_5_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_5_out ___685_ifgreater_6_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:185
#     float ifgreater_4_out = mx_ternary(ifgreater_4_value1_tmp > which, in4, ifgreater_5_out);
	assign		___685_ifgreater_4_value1_tmp $const54 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{185} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:186
#     int ifgreater_3_value1_tmp = 3;
	gt		$tmp127 ___685_ifgreater_4_value1_tmp N_surface_opacityMode 	%line{186} %argrw{"wrr"}
	functioncall	$const43 488 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp127 486 488 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_4_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_4_out ___685_ifgreater_5_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:187
#     float ifgreater_3_out = mx_ternary(ifgreater_3_value1_tmp > which, in3, ifgreater_4_out);
	assign		___685_ifgreater_3_value1_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{187} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:188
#     int ifgreater_2_value1_tmp = 2;
	gt		$tmp128 ___685_ifgreater_3_value1_tmp N_surface_opacityMode 	%line{188} %argrw{"wrr"}
	functioncall	$const43 496 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp128 494 496 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_3_out $const5 	%argrw{"wr"}
	return
	assign		___685_ifgreater_3_out ___685_ifgreater_4_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:189
#     float ifgreater_2_out = mx_ternary(ifgreater_2_value1_tmp > which, in2, ifgreater_3_out);
	assign		___685_ifgreater_2_value1_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{189} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:190
#     int ifgreater_1_value1_tmp = 1;
	gt		$tmp129 ___685_ifgreater_2_value1_tmp N_surface_opacityMode 	%line{190} %argrw{"wrr"}
	functioncall	$const43 504 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp129 502 504 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_2_out ___690_opacity_presence_out 	%argrw{"wr"}
	return
	assign		___685_ifgreater_2_out ___685_ifgreater_3_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:191
#     float ifgreater_1_out = mx_ternary(ifgreater_1_value1_tmp > which, in1, ifgreater_2_out);
	assign		___685_ifgreater_1_value1_tmp $const26 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{191} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:192
#     out = ifgreater_1_out;
	gt		$tmp130 ___685_ifgreater_1_value1_tmp N_surface_opacityMode 	%line{192} %argrw{"wrr"}
	functioncall	$const43 512 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp130 510 512 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___685_ifgreater_1_out ___690_cutout_opacity_out 	%argrw{"wr"}
	return
	assign		___685_ifgreater_1_out ___685_ifgreater_2_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:193
# }
	assign		___690_opacity_switch_out ___685_ifgreater_1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{193} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:267
#     NG_convert_float_color3(R_sq_out, coat_F0_out);
	assign		___690_coat_F0_out $const7 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:268
#     color specular_color_metallic_R_sq_out = specular_color_metallic_out * R_sq_out;
	functioncall	$const55 517 	%line{268} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:198
#     out = combine_out;
	color		___686_combine_out ___690_R_sq_out ___690_R_sq_out ___690_R_sq_out 	%line{198} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:199
# }
	assign		___690_coat_F0_out ___686_combine_out 	%line{199} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:269
#     color F0_out = mix(specular_color_metallic_R_sq_out, specular_color_metallic_out, metallic);
	mul		___690_specular_color_metallic_R_sq_out ___690_specular_color_metallic_out ___690_R_sq_out 	%line{269} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:270
#     BSDF coat_dielectric_bsdf_out = null_closure;
	mix		___690_F0_out ___690_specular_color_metallic_R_sq_out ___690_specular_color_metallic_out N_surface_metallic 	%line{270} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:271
#     mx_generalized_schlick_bsdf(clearcoat, coat_F0_out, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, coat_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", coat_dielectric_bsdf_out);
	assign		___690_coat_dielectric_bsdf_out ___690_null_closure 	%line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:272
#     BSDF specular_bsdf1_out = null_closure;
	functioncall	$const60 531 	%line{272} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:204
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp133 $const59 $const61 	%line{204} %argrw{"wrr"}
	if		$tmp133 524 525 	%argrw{"r"}
	assign		___687_reflection_tint $const7 	%argrw{"wr"}
	assign		___687_reflection_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:205
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp134 $const59 $const59 	%line{205} %argrw{"wrr"}
	if		$tmp134 528 529 	%argrw{"r"}
	assign		___687_transmission_tint $const7 	%argrw{"wr"}
	assign		___687_transmission_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:206
# }
	closure		$tmp135 $const64 ___690_surface_normal_out ___690_geomprop_Tworld_out1 ___687_reflection_tint ___687_transmission_tint ___690_coat_roughness_out.x ___690_coat_roughness_out.y ___690_coat_F0_out $const46 $const56 $const58 $const62 $const5 $const63 $const57 	%line{206} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___690_coat_dielectric_bsdf_out $tmp135 N_surface_clearcoat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:273
#     mx_generalized_schlick_bsdf(1.000000, specularColor, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf1_out);
	assign		___690_specular_bsdf1_out ___690_null_closure 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:274
#     float diffuse_bsdf_roughness_tmp = 0.000000;
	functioncall	$const60 543 	%line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:204
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp138 $const59 $const61 	%line{204} %argrw{"wrr"}
	if		$tmp138 536 537 	%argrw{"r"}
	assign		___687_reflection_tint $const7 	%argrw{"wr"}
	assign		___687_reflection_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:205
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp139 $const59 $const59 	%line{205} %argrw{"wrr"}
	if		$tmp139 540 541 	%argrw{"r"}
	assign		___687_transmission_tint $const7 	%argrw{"wr"}
	assign		___687_transmission_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:206
# }
	closure		$tmp140 $const64 ___690_surface_normal_out ___690_geomprop_Tworld_out1 ___687_reflection_tint ___687_transmission_tint ___690_specular_roughness_out.x ___690_specular_roughness_out.y N_surface_specularColor $const46 $const56 $const58 $const62 $const5 $const63 $const57 	%line{206} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___690_specular_bsdf1_out $tmp140 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:275
#     BSDF diffuse_bsdf_out = diffuse_bsdf_weight_out * oren_nayar_diffuse_bsdf(surface_normal_out, diffuseColor, diffuse_bsdf_roughness_tmp);
	assign		___690_diffuse_bsdf_roughness_tmp $const5 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:276
#     BSDF transmission_bsdf_out = null_closure;
	closure		$tmp141 $const65 ___690_surface_normal_out N_surface_diffuseColor ___690_diffuse_bsdf_roughness_tmp 	%line{276} %argrw{"wrrrr"}
	mul		___690_diffuse_bsdf_out $tmp141 ___690_diffuse_bsdf_weight_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:277
#     mx_dielectric_bsdf(1.000000, color(1.000000, 1.000000, 1.000000), ior, vector2(0.000000, 0.000000), 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "T", transmission_bsdf_out);
	assign		___690_transmission_bsdf_out ___690_null_closure 	%line{277} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:278
#     BSDF transmission_mix_out = mix(transmission_bsdf_out, diffuse_bsdf_out, transmission_mix_amount_out);
	assign		$tmp143.x $const5 	%line{278} %argrw{"wr"}
	assign		$tmp143.y $const5 	%argrw{"wr"}
	functioncall	$const66 560 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:211
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp144 $const61 $const61 	%line{211} %argrw{"wrr"}
	if		$tmp144 553 554 	%argrw{"r"}
	assign		___688_reflection_tint $const7 	%argrw{"wr"}
	assign		___688_reflection_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:212
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp145 $const61 $const59 	%line{212} %argrw{"wrr"}
	if		$tmp145 557 558 	%argrw{"r"}
	assign		___688_transmission_tint $const7 	%argrw{"wr"}
	assign		___688_transmission_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:213
# }
	closure		$tmp146 $const67 ___690_surface_normal_out ___690_geomprop_Tworld_out1 ___688_reflection_tint ___688_transmission_tint $tmp143.x $tmp143.y N_surface_ior $const58 $const62 $const5 $const63 $const57 	%line{213} %argrw{"wrrrrrrrrrrrrr"}
	mul		___690_transmission_bsdf_out $tmp146 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:279
#     BSDF specular_workflow_bsdf_out = layer(specular_bsdf1_out, transmission_mix_out);
	functioncall	$const68 565 	%line{279} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp147 $const13 ___690_transmission_mix_amount_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp148 ___690_transmission_bsdf_out $tmp147 	%argrw{"wrr"}
	mul		$tmp149 ___690_diffuse_bsdf_out ___690_transmission_mix_amount_out 	%argrw{"wrr"}
	add		___690_transmission_mix_out $tmp148 $tmp149 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:280
#     float metalness_metal_bsdf_weight_tmp = 1.000000;
	closure		___690_specular_workflow_bsdf_out $const69 ___690_specular_bsdf1_out ___690_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{280} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:281
#     string metalness_metal_bsdf_distribution_tmp = "ggx";
	assign		___690_metalness_metal_bsdf_weight_tmp $const13 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:282
#     float metalness_metal_bsdf_thinfilm_thickness_tmp = 0.000000;
	assign		___690_metalness_metal_bsdf_distribution_tmp $const58 	%line{282} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:283
#     float metalness_metal_bsdf_thinfilm_ior_tmp = 1.500000;
	assign		___690_metalness_metal_bsdf_thinfilm_thickness_tmp $const5 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:284
#     BSDF metalness_metal_bsdf_out = metalness_metal_bsdf_weight_tmp * conductor_bsdf(surface_normal_out, geomprop_Tworld_out1, specular_roughness_out.x, specular_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metalness_metal_bsdf_distribution_tmp, "thinfilm_thickness", metalness_metal_bsdf_thinfilm_thickness_tmp, "thinfilm_ior", metalness_metal_bsdf_thinfilm_ior_tmp);
	assign		___690_metalness_metal_bsdf_thinfilm_ior_tmp $const57 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:285
#     BSDF specular_bsdf2_out = null_closure;
	closure		$tmp150 $const70 ___690_surface_normal_out ___690_geomprop_Tworld_out1 ___690_specular_roughness_out.x ___690_specular_roughness_out.y ___690_artistic_ior_ior ___690_artistic_ior_extinction ___690_metalness_metal_bsdf_distribution_tmp $const62 ___690_metalness_metal_bsdf_thinfilm_thickness_tmp $const63 ___690_metalness_metal_bsdf_thinfilm_ior_tmp 	%line{285} %argrw{"wrrrrrrrrrrrr"}
	mul		___690_metalness_metal_bsdf_out $tmp150 ___690_metalness_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:286
#     mx_generalized_schlick_bsdf(1.000000, F0_out, color(1.000000, 1.000000, 1.000000), specular_color_metallic_out, 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf2_out);
	assign		___690_specular_bsdf2_out ___690_null_closure 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:287
#     BSDF metalness_specular_bsdf_out = layer(specular_bsdf2_out, transmission_mix_out);
	functioncall	$const60 584 	%line{287} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:204
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp152 $const59 $const61 	%line{204} %argrw{"wrr"}
	if		$tmp152 577 578 	%argrw{"r"}
	assign		___687_reflection_tint $const7 	%argrw{"wr"}
	assign		___687_reflection_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:205
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp153 $const59 $const59 	%line{205} %argrw{"wrr"}
	if		$tmp153 581 582 	%argrw{"r"}
	assign		___687_transmission_tint $const7 	%argrw{"wr"}
	assign		___687_transmission_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:206
# }
	closure		$tmp154 $const64 ___690_surface_normal_out ___690_geomprop_Tworld_out1 ___687_reflection_tint ___687_transmission_tint ___690_specular_roughness_out.x ___690_specular_roughness_out.y ___690_F0_out ___690_specular_color_metallic_out $const56 $const58 $const62 $const5 $const63 $const57 	%line{206} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___690_specular_bsdf2_out $tmp154 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:288
#     BSDF metalness_workflow_bsdf_out = mix(metalness_specular_bsdf_out, metalness_metal_bsdf_out, metallic);
	closure		___690_metalness_specular_bsdf_out $const69 ___690_specular_bsdf2_out ___690_transmission_mix_out 	%line{288} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:289
#     BSDF workflow_selector_bsdf_out = mix(metalness_workflow_bsdf_out, specular_workflow_bsdf_out, use_specular_workflow_float_out);
	functioncall	$const68 590 	%line{289} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp155 $const13 N_surface_metallic 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp156 ___690_metalness_specular_bsdf_out $tmp155 	%argrw{"wrr"}
	mul		$tmp157 ___690_metalness_metal_bsdf_out N_surface_metallic 	%argrw{"wrr"}
	add		___690_metalness_workflow_bsdf_out $tmp156 $tmp157 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:290
#     BSDF coat_bsdf_out = layer(coat_dielectric_bsdf_out, workflow_selector_bsdf_out);
	functioncall	$const68 595 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{290} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp158 $const13 ___690_use_specular_workflow_float_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp159 ___690_metalness_workflow_bsdf_out $tmp158 	%argrw{"wrr"}
	mul		$tmp160 ___690_specular_workflow_bsdf_out ___690_use_specular_workflow_float_out 	%argrw{"wrr"}
	add		___690_workflow_selector_bsdf_out $tmp159 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:291
#     EDF emission_edf_out = uniform_edf(emissiveColor);
	closure		___690_coat_bsdf_out $const69 ___690_coat_dielectric_bsdf_out ___690_workflow_selector_bsdf_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{291} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:292
#     surfaceshader surface_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	closure		___690_emission_edf_out $const71 N_surface_emissiveColor 	%line{292} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:293
#     mx_surface(coat_bsdf_out, emission_edf_out, opacity_switch_out, 0, surface_constructor_out);
	assign		___690_surface_constructor_out.bsdf ___690_null_closure 	%line{293} %argrw{"wr"}
	assign		___690_surface_constructor_out.edf ___690_null_closure 	%argrw{"wr"}
	assign		___690_surface_constructor_out.opacity $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:294
#     out = surface_constructor_out;
	functioncall	$const72 607 	%line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:218
#     result.edf     = edf;
	assign		___690_surface_constructor_out.bsdf ___690_coat_bsdf_out 	%line{218} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:219
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___690_surface_constructor_out.edf ___690_emission_edf_out 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:220
# }
	functioncall	$const39 606 	%line{220} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp161 ___690_opacity_switch_out $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___690_surface_constructor_out.opacity $tmp161 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:220
# }
	assign		___690_surface_constructor_out.opacity ___690_surface_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{220} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:295
# }
	assign		N_surface_out.bsdf ___690_surface_constructor_out.bsdf 	%line{295} %argrw{"wr"}
	assign		N_surface_out.edf ___690_surface_constructor_out.edf 	%argrw{"wr"}
	assign		N_surface_out.opacity ___690_surface_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:460
#     out = N_material_out;
	functioncall	$const73 620 	%line{460} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:300
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const39 614 	%line{300} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp162 N_surface_out.opacity $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___691_opacity_weight $tmp162 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:301
# }
	add		$tmp163 N_surface_out.bsdf N_surface_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl"} %line{301} %argrw{"wrr"}
	mul		$tmp164 $tmp163 ___691_opacity_weight 	%argrw{"wrr"}
	closure		$tmp165 $const74 	%argrw{"wr"}
	sub		$tmp166 $const13 ___691_opacity_weight 	%argrw{"wrr"}
	mul		$tmp167 $tmp165 $tmp166 	%argrw{"wrr"}
	add		N_material_out $tmp164 $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\pbrlib\\surfaceshader\\usd_normal_map\\N_material.osl:461
# }
	assign		out N_material_out 	%line{461} %argrw{"wr"}
	end
