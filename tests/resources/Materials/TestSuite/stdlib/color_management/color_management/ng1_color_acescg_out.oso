OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_color_acescg_out.oso
surface ng1_color_acescg_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"color_acescg_out"} 
param	struct color4	color_acescg_value_cm_in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	color_acescg_value_cm_in.rgb	0.5 0 0		%read{15,93} %write{2147483647,-1} %mystruct{color_acescg_value_cm_in} %mystructfield{0}
param	float	color_acescg_value_cm_in.a	1		%read{25,95} %write{2147483647,-1} %mystruct{color_acescg_value_cm_in} %mystructfield{1}
param	string	geomprop_Nworld_space	"world"		%read{150,150} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{261,696} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{695,695} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{710,712} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{262,668} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{262,666} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{266,568} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{667,679} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{590,622} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{265,265} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{704,706} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{674,678} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{266,266} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{698,700} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{269,269} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{275,275} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{275,275} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{689,689} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{682,682} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{681,681} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{681,681} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{263,734} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{282,717} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{241,437} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{245,576} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{260,260} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{284,651} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{561,561} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{263,263} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{655,667} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{655,667} %write{2147483647,-1}
param	float	color_acescg_standard_surface5_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{287,287} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{287,287} %write{2147483647,-1}
param	color	color_acescg_standard_surface5_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{290,290} %write{2147483647,-1}
param	int	color_acescg_standard_surface5_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{276,276} %write{2147483647,-1}
oparam	closure color	color_acescg_out			%read{2147483647,-1} %write{757,757}
global	vector	I	%read{720,720} %write{2147483647,-1}
global	normal	N	%read{150,721} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{13,173} %write{11,163}
local	float	___669_N_extract_0_out	%read{75,227} %write{15,177}
local	int	___669_N_extract_1_index_tmp	%read{29,189} %write{27,179}
local	float	___669_N_extract_1_out	%read{76,228} %write{31,193}
local	int	___669_N_extract_2_index_tmp	%read{45,205} %write{43,195}
local	float	___669_N_extract_2_out	%read{77,229} %write{47,209}
local	int	___669_N_extract_3_index_tmp	%read{61,221} %write{59,211}
local	float	___669_N_extract_3_out	%read{78,230} %write{63,225}
local	float	___670_separate_outr	%read{79,231} %write{6,227}
local	float	___670_separate_outg	%read{79,231} %write{7,228}
local	float	___670_separate_outb	%read{79,231} %write{8,229}
local	float	___670_separate_outa	%read{2147483647,-1} %write{9,230}
local	color	___670_combine_out	%read{80,232} %write{79,231}
local	int	___671_N_extract_0_index_tmp	%read{107,107} %write{105,105}
local	float	___671_N_extract_0_out	%read{114,114} %write{107,107}
local	int	___671_N_extract_1_index_tmp	%read{110,110} %write{108,108}
local	float	___671_N_extract_1_out	%read{115,115} %write{110,110}
local	int	___671_N_extract_2_index_tmp	%read{113,113} %write{111,111}
local	float	___671_N_extract_2_out	%read{116,116} %write{113,113}
local	float	___672_separate_outr	%read{117,117} %write{101,114}
local	float	___672_separate_outg	%read{117,117} %write{102,115}
local	float	___672_separate_outb	%read{117,117} %write{103,116}
local	vector	___672_combine_out	%read{118,118} %write{117,117}
local	int	___673_N_extract_0_index_tmp	%read{129,129} %write{127,127}
local	float	___673_N_extract_0_out	%read{136,136} %write{129,129}
local	int	___673_N_extract_1_index_tmp	%read{132,132} %write{130,130}
local	float	___673_N_extract_1_out	%read{137,137} %write{132,132}
local	int	___673_N_extract_2_index_tmp	%read{135,135} %write{133,133}
local	float	___673_N_extract_2_out	%read{138,138} %write{135,135}
local	float	___674_separate_outx	%read{139,139} %write{123,136}
local	float	___674_separate_outy	%read{139,139} %write{124,137}
local	float	___674_separate_outz	%read{139,139} %write{125,138}
local	color	___674_combine_out	%read{140,140} %write{139,139}
local	vector	___675_asVec_out	%read{120,120} %write{99,118}
local	matrix	___675_transform_mat_tmp	%read{120,120} %write{119,119}
local	vector	___675_transform_out	%read{129,135} %write{120,120}
local	color	___675_asColor_out	%read{141,141} %write{121,140}
local	color	___676_asColor3_out	%read{107,113} %write{4,80}
local	int	___676_alpha_index_tmp	%read{83,91} %write{81,81}
local	float	___676_alpha_out	%read{146,146} %write{85,95}
local	color	___676_transform_out	%read{142,144} %write{97,141}
local	color	___676_asColor4_out.rgb	%read{147,147} %write{145,145} %mystruct{___676_asColor4_out} %mystructfield{0}
local	float	___676_asColor4_out.a	%read{148,148} %write{146,146} %mystruct{___676_asColor4_out} %mystructfield{1}
local	float	___677_roughness_sqr	%read{252,632} %write{244,618}
local	float	___678_aspect	%read{252,629} %write{251,625}
local	vector	___681_nAxis	%read{302,502} %write{298,444}
local	float	___681_s	%read{312,498} %write{299,445}
local	float	___681_c	%read{301,504} %write{300,446}
local	float	___681_oc	%read{303,501} %write{301,447}
local	float	___682_rotationRadians	%read{299,446} %write{296,442}
local	matrix	___682_m	%read{365,552} %write{359,505}
local	float	___682_trans.x	%read{409,555} %write{375,521} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{409,555} %write{386,532} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{409,555} %write{397,543} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{408,554} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{418,432} %write{417,417}
local	color	___683_r_sqrt	%read{422,423} %write{418,418}
local	color	___683_n_min	%read{425,425} %write{421,421}
local	color	___683_n_max	%read{425,425} %write{424,424}
local	color	___683_np1	%read{428,428} %write{426,426}
local	color	___683_nm1	%read{430,430} %write{427,427}
local	color	___683_k2	%read{435,436} %write{433,435}
local	color	___684_reflection_tint	%read{651,679} %write{645,674}
local	color	___684_transmission_tint	%read{651,679} %write{649,678}
local	color	___686_combine_out	%read{640,640} %write{639,639}
local	float	___698_x	%read{728,728} %write{727,727}
local	float	___699_NdotV	%read{724,724} %write{722,722}
local	color	___699_f	%read{730,730} %write{729,729}
local	closure color	___701_null_closure	%read{641,737} %write{237,237}
local	float	___701_coat_roughness_vector_out.x	%read{254,651} %write{238,257} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{256,651} %write{239,258} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{260,260} %write{259,259}
local	float	___701_coat_tangent_rotate_degree_out	%read{296,296} %write{260,260}
local	color	___701_metal_reflectivity_out	%read{416,416} %write{261,261}
local	color	___701_metal_edgecolor_out	%read{425,425} %write{262,262}
local	float	___701_coat_affect_roughness_multiply1_out	%read{437,437} %write{263,263}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{265,265} %write{264,264}
local	float	___701_tangent_rotate_degree_out	%read{442,442} %write{265,265}
local	float	___701_transmission_roughness_add_out	%read{559,559} %write{266,266}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{268,268} %write{267,267}
local	color	___701_subsurface_color_nonnegative_out	%read{633,633} %write{269,269}
local	float	___701_coat_clamped_low_tmp	%read{274,274} %write{270,270}
local	float	___701_coat_clamped_high_tmp	%read{273,273} %write{271,271}
local	float	___701_coat_clamped_out	%read{561,561} %write{274,274}
local	color	___701_subsurface_radius_scaled_out	%read{689,689} %write{275,275}
local	float	___701_subsurface_selector_out	%read{691,693} %write{277,277}
local	float	___701_base_color_nonnegative_in2_tmp	%read{279,279} %write{278,278}
local	color	___701_base_color_nonnegative_out	%read{634,634} %write{280,280}
local	color	___701_coat_attenuation_bg_tmp	%read{282,282} %write{281,281}
local	color	___701_coat_attenuation_out	%read{714,714} %write{282,282}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{284,284} %write{283,283}
local	float	___701_one_minus_coat_ior_out	%read{562,562} %write{284,284}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{286,286} %write{285,285}
local	float	___701_one_plus_coat_ior_out	%read{562,562} %write{286,286}
local	color	___701_emission_weight_out	%read{716,716} %write{287,287}
local	color	___701_opacity_luminance_out	%read{565,565} %write{288,291}
local	vector	___701_coat_tangent_rotate_out	%read{566,566} %write{292,409}
local	color	___701_artistic_ior_ior	%read{426,655} %write{410,425}
local	color	___701_artistic_ior_extinction	%read{655,655} %write{411,436}
local	float	___701_coat_affect_roughness_multiply2_out	%read{568,571} %write{437,437}
local	vector	___701_tangent_rotate_out	%read{569,569} %write{438,555}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{560,560} %write{556,556}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{559,559} %write{557,557}
local	float	___701_transmission_roughness_clamped_out	%read{571,571} %write{560,560}
local	float	___701_coat_gamma_multiply_out	%read{573,573} %write{561,561}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{574,574} %write{562,562}
local	int	___701_opacity_luminance_float_index_tmp	%read{565,565} %write{563,563}
local	float	___701_opacity_luminance_float_out	%read{743,743} %write{565,565}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{579,579} %write{566,566}
local	float	___701_coat_affected_roughness_fg_tmp	%read{568,568} %write{567,567}
local	float	___701_coat_affected_roughness_out	%read{586,586} %write{568,568}
local	vector	___701_tangent_rotate_normalize_out	%read{608,608} %write{569,569}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{571,571} %write{570,570}
local	float	___701_coat_affected_transmission_roughness_out	%read{615,615} %write{571,571}
local	float	___701_coat_gamma_in2_tmp	%read{573,573} %write{572,572}
local	float	___701_coat_gamma_out	%read{633,634} %write{573,573}
local	float	___701_coat_ior_to_F0_out	%read{636,636} %write{574,574}
local	float	___701_coat_tangent_value2_tmp	%read{576,576} %write{575,575}
local	vector	___701_coat_tangent_out	%read{651,651} %write{579,581}
local	float	___701_main_roughness_out.x	%read{599,667} %write{583,602} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{601,667} %write{584,603} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{605,605} %write{604,604}
local	vector	___701_main_tangent_out	%read{655,679} %write{608,610}
local	float	___701_transmission_roughness_out.x	%read{628,679} %write{612,631} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{630,679} %write{613,632} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{684,688} %write{633,633}
local	color	___701_coat_affected_diffuse_color_out	%read{695,695} %write{634,634}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{636,636} %write{635,635}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{639,639} %write{636,636}
local	color	___701_emission_color0_out	%read{729,729} %write{637,640}
local	closure color	___701_coat_bsdf_out	%read{715,715} %write{641,652}
local	float	___701_metal_bsdf_weight_tmp	%read{656,656} %write{653,653}
local	string	___701_metal_bsdf_distribution_tmp	%read{655,655} %write{654,654}
local	closure color	___701_metal_bsdf_out	%read{712,712} %write{656,656}
local	closure color	___701_specular_bsdf_out	%read{708,708} %write{657,668}
local	closure color	___701_transmission_bsdf_out	%read{706,706} %write{669,680}
local	closure color	___701_sheen_bsdf_out	%read{702,702} %write{682,682}
local	float	___701_translucent_bsdf_weight_tmp	%read{685,685} %write{683,683}
local	closure color	___701_translucent_bsdf_out	%read{693,693} %write{685,685}
local	closure color	___701_subsurface_bsdf_out	%read{692,692} %write{686,689}
local	closure color	___701_selected_subsurface_bsdf_out	%read{700,700} %write{694,694}
local	closure color	___701_diffuse_bsdf_out	%read{699,699} %write{696,696}
local	closure color	___701_subsurface_mix_out	%read{702,702} %write{701,701}
local	closure color	___701_sheen_layer_out	%read{705,705} %write{702,702}
local	closure color	___701_transmission_mix_out	%read{708,708} %write{707,707}
local	closure color	___701_specular_layer_out	%read{711,711} %write{708,708}
local	closure color	___701_metalness_mix_out	%read{714,714} %write{713,713}
local	closure color	___701_thin_film_layer_attenuated_out	%read{715,715} %write{714,714}
local	closure color	___701_coat_layer_out	%read{740,740} %write{715,715}
local	closure color	___701_emission_edf_out	%read{717,733} %write{716,716}
local	closure color	___701_coat_tinted_emission_edf_out	%read{730,730} %write{717,717}
local	closure color	___701_coat_emission_edf_out	%read{734,734} %write{718,730}
local	closure color	___701_blended_coat_emission_edf_out	%read{741,741} %write{735,735}
local	closure color	___701_shader_constructor_out.bsdf	%read{746,746} %write{736,740} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{747,747} %write{737,741} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{745,748} %write{738,745} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{233,234} %write{0,0}
local	color	color_acescg_value_cm_out.rgb	%read{167,223} %write{1,147} %mystruct{color_acescg_value_cm_out} %mystructfield{0}
local	float	color_acescg_value_cm_out.a	%read{177,225} %write{2,148} %mystruct{color_acescg_value_cm_out} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{298,695} %write{150,150}
local	vector	geomprop_Tworld_out1	%read{360,610} %write{155,155}
local	color	color_acescg_color3_out	%read{261,280} %write{156,232}
local	closure color	color_acescg_standard_surface5_out.bsdf	%read{752,752} %write{233,746} %mystruct{color_acescg_standard_surface5_out} %mystructfield{0}
local	closure color	color_acescg_standard_surface5_out.edf	%read{752,752} %write{234,747} %mystruct{color_acescg_standard_surface5_out} %mystructfield{1}
local	float	color_acescg_standard_surface5_out.opacity	%read{750,750} %write{235,748} %mystruct{color_acescg_standard_surface5_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{753,755} %write{751,751}
const	int	$const1	0		%read{0,563} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,729} %write{2147483647,-1}
const	float	$const3	0		%read{2,751} %write{2147483647,-1}
const	string	$const4	"NG_acescg_to_lin_rec709_color4"		%read{3,3} %write{2147483647,-1}
const	string	$const5	"NG_convert_color4_color3"		%read{5,157} %write{2147483647,-1}
const	string	$const6	"NG_separate4_color4"		%read{10,162} %write{2147483647,-1}
const	string	$const7	"mx_extract"		%read{12,564} %write{2147483647,-1}
temp	int	$tmp1	%read{14,14} %write{13,13}
const	int	$const8	1		%read{17,546} %write{2147483647,-1}
temp	int	$tmp2	%read{18,18} %write{17,17}
const	int	$const9	2		%read{21,549} %write{2147483647,-1}
temp	int	$tmp3	%read{22,22} %write{21,21}
temp	int	$tmp4	%read{30,30} %write{29,29}
temp	int	$tmp5	%read{34,34} %write{33,33}
temp	int	$tmp6	%read{38,38} %write{37,37}
temp	int	$tmp7	%read{46,46} %write{45,45}
temp	int	$tmp8	%read{50,50} %write{49,49}
temp	int	$tmp9	%read{54,54} %write{53,53}
const	int	$const10	3		%read{59,552} %write{2147483647,-1}
temp	int	$tmp10	%read{62,62} %write{61,61}
temp	int	$tmp11	%read{66,66} %write{65,65}
temp	int	$tmp12	%read{70,70} %write{69,69}
temp	int	$tmp13	%read{84,84} %write{83,83}
temp	int	$tmp14	%read{88,88} %write{87,87}
temp	int	$tmp15	%read{92,92} %write{91,91}
const	string	$const11	"NG_acescg_to_lin_rec709_color3"		%read{98,98} %write{2147483647,-1}
const	vector	$const12	0 0 0		%read{99,438} %write{2147483647,-1}
const	string	$const13	"NG_convert_color3_vector3"		%read{100,100} %write{2147483647,-1}
const	string	$const14	"NG_separate3_color3"		%read{104,104} %write{2147483647,-1}
const	float	$const15	1.705051		%read{119,119} %write{2147483647,-1}
const	float	$const16	-0.130256		%read{119,119} %write{2147483647,-1}
const	float	$const17	-0.024003		%read{119,119} %write{2147483647,-1}
const	float	$const18	-0.621792		%read{119,119} %write{2147483647,-1}
const	float	$const19	1.140805		%read{119,119} %write{2147483647,-1}
const	float	$const20	-0.128969		%read{119,119} %write{2147483647,-1}
const	float	$const21	-0.083259		%read{119,119} %write{2147483647,-1}
const	float	$const22	-0.010548		%read{119,119} %write{2147483647,-1}
const	float	$const23	1.152972		%read{119,119} %write{2147483647,-1}
const	float	$const24	1		%read{119,755} %write{2147483647,-1}
const	string	$const25	"NG_convert_vector3_color3"		%read{122,122} %write{2147483647,-1}
const	string	$const26	"NG_separate3_vector3"		%read{126,126} %write{2147483647,-1}
temp	float	$tmp16	%read{145,145} %write{142,142}
temp	float	$tmp17	%read{145,145} %write{143,143}
temp	float	$tmp18	%read{145,145} %write{144,144}
const	string	$const27	"transform"		%read{149,510} %write{2147483647,-1}
const	string	$const28	"common"		%read{150,150} %write{2147483647,-1}
temp	vector	$tmp19	%read{155,155} %write{154,154}
temp	float	$tmp20	%read{154,154} %write{151,151}
temp	float	$tmp21	%read{153,153} %write{152,152}
temp	float	$tmp22	%read{154,154} %write{153,153}
temp	int	$tmp23	%read{166,166} %write{165,165}
temp	int	$tmp24	%read{170,170} %write{169,169}
temp	int	$tmp25	%read{174,174} %write{173,173}
temp	int	$tmp26	%read{182,182} %write{181,181}
temp	int	$tmp27	%read{186,186} %write{185,185}
temp	int	$tmp28	%read{190,190} %write{189,189}
temp	int	$tmp29	%read{198,198} %write{197,197}
temp	int	$tmp30	%read{202,202} %write{201,201}
temp	int	$tmp31	%read{206,206} %write{205,205}
temp	int	$tmp32	%read{214,214} %write{213,213}
temp	int	$tmp33	%read{218,218} %write{217,217}
temp	int	$tmp34	%read{222,222} %write{221,221}
const	string	$const29	"NG_standard_surface_surfaceshader_100"		%read{236,236} %write{2147483647,-1}
const	string	$const30	"mx_roughness_anisotropy"		%read{240,614} %write{2147483647,-1}
temp	float	$tmp35	%read{243,243} %write{241,241}
const	float	$const31	1e-08		%read{244,618} %write{2147483647,-1}
const	string	$const32	"clamp"		%read{242,749} %write{2147483647,-1}
temp	float	$tmp36	%read{244,244} %write{243,243}
temp	int	$tmp37	%read{246,246} %write{245,245}
temp	float	$tmp38	%read{250,250} %write{249,249}
const	float	$const33	0.98		%read{248,622} %write{2147483647,-1}
temp	float	$tmp39	%read{249,249} %write{248,248}
temp	float	$tmp40	%read{251,251} %write{250,250}
temp	float	$tmp41	%read{253,253} %write{252,252}
const	float	$const34	360		%read{259,264} %write{2147483647,-1}
temp	color	$tmp42	%read{269,269} %write{268,268}
temp	float	$tmp43	%read{274,274} %write{273,273}
temp	float	$tmp44	%read{277,277} %write{276,276}
temp	color	$tmp45	%read{280,280} %write{279,279}
const	color	$const35	1 1 1		%read{281,650} %write{2147483647,-1}
const	color	$const36	0.272229 0.674082 0.053689		%read{290,290} %write{2147483647,-1}
const	string	$const37	"mx_luminance_color3"		%read{289,289} %write{2147483647,-1}
temp	float	$tmp47	%read{291,291} %write{290,290}
const	string	$const38	"mx_rotate_vector3"		%read{293,439} %write{2147483647,-1}
const	string	$const39	"radians"		%read{294,440} %write{2147483647,-1}
const	float	$const40	3.1415927		%read{295,441} %write{2147483647,-1}
const	float	$const41	180		%read{295,441} %write{2147483647,-1}
temp	float	$tmp48	%read{296,296} %write{295,295}
const	string	$const42	"rotationMatrix"		%read{297,443} %write{2147483647,-1}
temp	float	$tmp49	%read{303,303} %write{302,302}
temp	float	$tmp50	%read{305,305} %write{303,303}
temp	float	$tmp51	%read{305,305} %write{304,304}
temp	float	$tmp52	%read{306,306} %write{305,305}
temp	float	$tmp53	%read{359,359} %write{306,306}
temp	float	$tmp54	%read{308,308} %write{307,307}
temp	float	$tmp55	%read{310,310} %write{308,308}
temp	float	$tmp56	%read{310,310} %write{309,309}
temp	float	$tmp57	%read{313,313} %write{310,310}
temp	float	$tmp58	%read{312,312} %write{311,311}
temp	float	$tmp59	%read{313,313} %write{312,312}
temp	float	$tmp60	%read{359,359} %write{313,313}
temp	float	$tmp61	%read{315,315} %write{314,314}
temp	float	$tmp62	%read{317,317} %write{315,315}
temp	float	$tmp63	%read{317,317} %write{316,316}
temp	float	$tmp64	%read{320,320} %write{317,317}
temp	float	$tmp65	%read{319,319} %write{318,318}
temp	float	$tmp66	%read{320,320} %write{319,319}
temp	float	$tmp67	%read{359,359} %write{320,320}
temp	float	$tmp68	%read{322,322} %write{321,321}
temp	float	$tmp69	%read{324,324} %write{322,322}
temp	float	$tmp70	%read{324,324} %write{323,323}
temp	float	$tmp71	%read{327,327} %write{324,324}
temp	float	$tmp72	%read{326,326} %write{325,325}
temp	float	$tmp73	%read{327,327} %write{326,326}
temp	float	$tmp74	%read{359,359} %write{327,327}
temp	float	$tmp75	%read{329,329} %write{328,328}
temp	float	$tmp76	%read{331,331} %write{329,329}
temp	float	$tmp77	%read{331,331} %write{330,330}
temp	float	$tmp78	%read{332,332} %write{331,331}
temp	float	$tmp79	%read{359,359} %write{332,332}
temp	float	$tmp80	%read{334,334} %write{333,333}
temp	float	$tmp81	%read{336,336} %write{334,334}
temp	float	$tmp82	%read{336,336} %write{335,335}
temp	float	$tmp83	%read{339,339} %write{336,336}
temp	float	$tmp84	%read{338,338} %write{337,337}
temp	float	$tmp85	%read{339,339} %write{338,338}
temp	float	$tmp86	%read{359,359} %write{339,339}
temp	float	$tmp87	%read{341,341} %write{340,340}
temp	float	$tmp88	%read{343,343} %write{341,341}
temp	float	$tmp89	%read{343,343} %write{342,342}
temp	float	$tmp90	%read{346,346} %write{343,343}
temp	float	$tmp91	%read{345,345} %write{344,344}
temp	float	$tmp92	%read{346,346} %write{345,345}
temp	float	$tmp93	%read{359,359} %write{346,346}
temp	float	$tmp94	%read{348,348} %write{347,347}
temp	float	$tmp95	%read{350,350} %write{348,348}
temp	float	$tmp96	%read{350,350} %write{349,349}
temp	float	$tmp97	%read{353,353} %write{350,350}
temp	float	$tmp98	%read{352,352} %write{351,351}
temp	float	$tmp99	%read{353,353} %write{352,352}
temp	float	$tmp100	%read{359,359} %write{353,353}
temp	float	$tmp101	%read{355,355} %write{354,354}
temp	float	$tmp102	%read{357,357} %write{355,355}
temp	float	$tmp103	%read{357,357} %write{356,356}
temp	float	$tmp104	%read{358,358} %write{357,357}
temp	float	$tmp105	%read{359,359} %write{358,358}
temp	float	$tmp106.x	%read{366,399} %write{360,360}
temp	float	$tmp106.y	%read{368,401} %write{361,361}
temp	float	$tmp106.z	%read{371,404} %write{362,362}
temp	float	$tmp106.w	%read{374,407} %write{363,363}
temp	float	$tmp107	%read{366,366} %write{365,365}
temp	float	$tmp108	%read{369,369} %write{366,366}
temp	float	$tmp109	%read{368,368} %write{367,367}
temp	float	$tmp110	%read{369,369} %write{368,368}
temp	float	$tmp111	%read{372,372} %write{369,369}
temp	float	$tmp112	%read{371,371} %write{370,370}
temp	float	$tmp113	%read{372,372} %write{371,371}
temp	float	$tmp114	%read{375,375} %write{372,372}
temp	float	$tmp115	%read{374,374} %write{373,373}
temp	float	$tmp116	%read{375,375} %write{374,374}
temp	float	$tmp117	%read{377,377} %write{376,376}
temp	float	$tmp118	%read{380,380} %write{377,377}
temp	float	$tmp119	%read{379,379} %write{378,378}
temp	float	$tmp120	%read{380,380} %write{379,379}
temp	float	$tmp121	%read{383,383} %write{380,380}
temp	float	$tmp122	%read{382,382} %write{381,381}
temp	float	$tmp123	%read{383,383} %write{382,382}
temp	float	$tmp124	%read{386,386} %write{383,383}
temp	float	$tmp125	%read{385,385} %write{384,384}
temp	float	$tmp126	%read{386,386} %write{385,385}
temp	float	$tmp127	%read{388,388} %write{387,387}
temp	float	$tmp128	%read{391,391} %write{388,388}
temp	float	$tmp129	%read{390,390} %write{389,389}
temp	float	$tmp130	%read{391,391} %write{390,390}
temp	float	$tmp131	%read{394,394} %write{391,391}
temp	float	$tmp132	%read{393,393} %write{392,392}
temp	float	$tmp133	%read{394,394} %write{393,393}
temp	float	$tmp134	%read{397,397} %write{394,394}
temp	float	$tmp135	%read{396,396} %write{395,395}
temp	float	$tmp136	%read{397,397} %write{396,396}
temp	float	$tmp137	%read{399,399} %write{398,398}
temp	float	$tmp138	%read{402,402} %write{399,399}
temp	float	$tmp139	%read{401,401} %write{400,400}
temp	float	$tmp140	%read{402,402} %write{401,401}
temp	float	$tmp141	%read{405,405} %write{402,402}
temp	float	$tmp142	%read{404,404} %write{403,403}
temp	float	$tmp143	%read{405,405} %write{404,404}
temp	float	$tmp144	%read{408,408} %write{405,405}
temp	float	$tmp145	%read{407,407} %write{406,406}
temp	float	$tmp146	%read{408,408} %write{407,407}
const	string	$const43	"mx_artistic_ior"		%read{412,412} %write{2147483647,-1}
temp	color	$tmp147	%read{417,417} %write{413,413}
const	float	$const44	0.99		%read{414,414} %write{2147483647,-1}
temp	color	$tmp148	%read{416,416} %write{414,414}
temp	color	$tmp149	%read{417,417} %write{416,416}
temp	color	$tmp150	%read{421,421} %write{419,419}
temp	color	$tmp151	%read{421,421} %write{420,420}
temp	color	$tmp152	%read{424,424} %write{422,422}
temp	color	$tmp153	%read{424,424} %write{423,423}
temp	color	$tmp154	%read{429,429} %write{428,428}
temp	color	$tmp155	%read{431,431} %write{429,429}
temp	color	$tmp156	%read{431,431} %write{430,430}
temp	color	$tmp157	%read{433,433} %write{431,431}
temp	color	$tmp158	%read{433,433} %write{432,432}
temp	color	$tmp159	%read{435,435} %write{434,434}
temp	float	$tmp160	%read{442,442} %write{441,441}
temp	float	$tmp161	%read{449,449} %write{448,448}
temp	float	$tmp162	%read{451,451} %write{449,449}
temp	float	$tmp163	%read{451,451} %write{450,450}
temp	float	$tmp164	%read{452,452} %write{451,451}
temp	float	$tmp165	%read{505,505} %write{452,452}
temp	float	$tmp166	%read{454,454} %write{453,453}
temp	float	$tmp167	%read{456,456} %write{454,454}
temp	float	$tmp168	%read{456,456} %write{455,455}
temp	float	$tmp169	%read{459,459} %write{456,456}
temp	float	$tmp170	%read{458,458} %write{457,457}
temp	float	$tmp171	%read{459,459} %write{458,458}
temp	float	$tmp172	%read{505,505} %write{459,459}
temp	float	$tmp173	%read{461,461} %write{460,460}
temp	float	$tmp174	%read{463,463} %write{461,461}
temp	float	$tmp175	%read{463,463} %write{462,462}
temp	float	$tmp176	%read{466,466} %write{463,463}
temp	float	$tmp177	%read{465,465} %write{464,464}
temp	float	$tmp178	%read{466,466} %write{465,465}
temp	float	$tmp179	%read{505,505} %write{466,466}
temp	float	$tmp180	%read{468,468} %write{467,467}
temp	float	$tmp181	%read{470,470} %write{468,468}
temp	float	$tmp182	%read{470,470} %write{469,469}
temp	float	$tmp183	%read{473,473} %write{470,470}
temp	float	$tmp184	%read{472,472} %write{471,471}
temp	float	$tmp185	%read{473,473} %write{472,472}
temp	float	$tmp186	%read{505,505} %write{473,473}
temp	float	$tmp187	%read{475,475} %write{474,474}
temp	float	$tmp188	%read{477,477} %write{475,475}
temp	float	$tmp189	%read{477,477} %write{476,476}
temp	float	$tmp190	%read{478,478} %write{477,477}
temp	float	$tmp191	%read{505,505} %write{478,478}
temp	float	$tmp192	%read{480,480} %write{479,479}
temp	float	$tmp193	%read{482,482} %write{480,480}
temp	float	$tmp194	%read{482,482} %write{481,481}
temp	float	$tmp195	%read{485,485} %write{482,482}
temp	float	$tmp196	%read{484,484} %write{483,483}
temp	float	$tmp197	%read{485,485} %write{484,484}
temp	float	$tmp198	%read{505,505} %write{485,485}
temp	float	$tmp199	%read{487,487} %write{486,486}
temp	float	$tmp200	%read{489,489} %write{487,487}
temp	float	$tmp201	%read{489,489} %write{488,488}
temp	float	$tmp202	%read{492,492} %write{489,489}
temp	float	$tmp203	%read{491,491} %write{490,490}
temp	float	$tmp204	%read{492,492} %write{491,491}
temp	float	$tmp205	%read{505,505} %write{492,492}
temp	float	$tmp206	%read{494,494} %write{493,493}
temp	float	$tmp207	%read{496,496} %write{494,494}
temp	float	$tmp208	%read{496,496} %write{495,495}
temp	float	$tmp209	%read{499,499} %write{496,496}
temp	float	$tmp210	%read{498,498} %write{497,497}
temp	float	$tmp211	%read{499,499} %write{498,498}
temp	float	$tmp212	%read{505,505} %write{499,499}
temp	float	$tmp213	%read{501,501} %write{500,500}
temp	float	$tmp214	%read{503,503} %write{501,501}
temp	float	$tmp215	%read{503,503} %write{502,502}
temp	float	$tmp216	%read{504,504} %write{503,503}
temp	float	$tmp217	%read{505,505} %write{504,504}
temp	float	$tmp218.x	%read{512,545} %write{506,506}
temp	float	$tmp218.y	%read{514,547} %write{507,507}
temp	float	$tmp218.z	%read{517,550} %write{508,508}
temp	float	$tmp218.w	%read{520,553} %write{509,509}
temp	float	$tmp219	%read{512,512} %write{511,511}
temp	float	$tmp220	%read{515,515} %write{512,512}
temp	float	$tmp221	%read{514,514} %write{513,513}
temp	float	$tmp222	%read{515,515} %write{514,514}
temp	float	$tmp223	%read{518,518} %write{515,515}
temp	float	$tmp224	%read{517,517} %write{516,516}
temp	float	$tmp225	%read{518,518} %write{517,517}
temp	float	$tmp226	%read{521,521} %write{518,518}
temp	float	$tmp227	%read{520,520} %write{519,519}
temp	float	$tmp228	%read{521,521} %write{520,520}
temp	float	$tmp229	%read{523,523} %write{522,522}
temp	float	$tmp230	%read{526,526} %write{523,523}
temp	float	$tmp231	%read{525,525} %write{524,524}
temp	float	$tmp232	%read{526,526} %write{525,525}
temp	float	$tmp233	%read{529,529} %write{526,526}
temp	float	$tmp234	%read{528,528} %write{527,527}
temp	float	$tmp235	%read{529,529} %write{528,528}
temp	float	$tmp236	%read{532,532} %write{529,529}
temp	float	$tmp237	%read{531,531} %write{530,530}
temp	float	$tmp238	%read{532,532} %write{531,531}
temp	float	$tmp239	%read{534,534} %write{533,533}
temp	float	$tmp240	%read{537,537} %write{534,534}
temp	float	$tmp241	%read{536,536} %write{535,535}
temp	float	$tmp242	%read{537,537} %write{536,536}
temp	float	$tmp243	%read{540,540} %write{537,537}
temp	float	$tmp244	%read{539,539} %write{538,538}
temp	float	$tmp245	%read{540,540} %write{539,539}
temp	float	$tmp246	%read{543,543} %write{540,540}
temp	float	$tmp247	%read{542,542} %write{541,541}
temp	float	$tmp248	%read{543,543} %write{542,542}
temp	float	$tmp249	%read{545,545} %write{544,544}
temp	float	$tmp250	%read{548,548} %write{545,545}
temp	float	$tmp251	%read{547,547} %write{546,546}
temp	float	$tmp252	%read{548,548} %write{547,547}
temp	float	$tmp253	%read{551,551} %write{548,548}
temp	float	$tmp254	%read{550,550} %write{549,549}
temp	float	$tmp255	%read{551,551} %write{550,550}
temp	float	$tmp256	%read{554,554} %write{551,551}
temp	float	$tmp257	%read{553,553} %write{552,552}
temp	float	$tmp258	%read{554,554} %write{553,553}
temp	float	$tmp259	%read{560,560} %write{559,559}
temp	int	$tmp260	%read{578,578} %write{576,576}
const	string	$const45	"mx_ternary"		%read{577,606} %write{2147483647,-1}
temp	float	$tmp261	%read{588,588} %write{586,586}
temp	float	$tmp262	%read{589,589} %write{588,588}
temp	int	$tmp263	%read{591,591} %write{590,590}
temp	float	$tmp264	%read{595,595} %write{594,594}
temp	float	$tmp265	%read{594,594} %write{593,593}
temp	float	$tmp266	%read{596,596} %write{595,595}
temp	float	$tmp267	%read{598,598} %write{597,597}
temp	int	$tmp268	%read{607,607} %write{605,605}
temp	float	$tmp269	%read{617,617} %write{615,615}
temp	float	$tmp270	%read{618,618} %write{617,617}
temp	int	$tmp271	%read{620,620} %write{619,619}
temp	float	$tmp272	%read{624,624} %write{623,623}
temp	float	$tmp273	%read{623,623} %write{622,622}
temp	float	$tmp274	%read{625,625} %write{624,624}
temp	float	$tmp275	%read{627,627} %write{626,626}
const	string	$const46	"NG_convert_float_color3"		%read{638,638} %write{2147483647,-1}
const	float	$const47	1.5		%read{651,679} %write{2147483647,-1}
const	string	$const48	"ggx"		%read{651,679} %write{2147483647,-1}
const	string	$const49	"R"		%read{643,675} %write{2147483647,-1}
const	string	$const50	"mx_dielectric_bsdf"		%read{642,670} %write{2147483647,-1}
const	string	$const51	"T"		%read{643,675} %write{2147483647,-1}
temp	int	$tmp277	%read{644,644} %write{643,643}
temp	int	$tmp278	%read{648,648} %write{647,647}
temp	closure color	$tmp279	%read{652,652} %write{651,651}
const	string	$const52	"thinfilm_thickness"		%read{651,679} %write{2147483647,-1}
const	string	$const53	"thinfilm_ior"		%read{651,679} %write{2147483647,-1}
const	string	$const54	"dielectric_bsdf"		%read{651,679} %write{2147483647,-1}
temp	closure color	$tmp280	%read{656,656} %write{655,655}
const	string	$const55	"conductor_bsdf"		%read{655,655} %write{2147483647,-1}
temp	int	$tmp281	%read{660,660} %write{659,659}
temp	int	$tmp282	%read{664,664} %write{663,663}
temp	closure color	$tmp283	%read{668,668} %write{667,667}
temp	int	$tmp284	%read{672,672} %write{671,671}
temp	int	$tmp285	%read{676,676} %write{675,675}
temp	closure color	$tmp286	%read{680,680} %write{679,679}
temp	closure color	$tmp287	%read{682,682} %write{681,681}
const	string	$const56	"sheen_bsdf"		%read{681,681} %write{2147483647,-1}
temp	closure color	$tmp288	%read{685,685} %write{684,684}
const	string	$const57	"translucent_bsdf"		%read{684,684} %write{2147483647,-1}
const	string	$const58	"mx_subsurface_bsdf"		%read{687,687} %write{2147483647,-1}
temp	color	$tmp289	%read{689,689} %write{688,688}
const	string	$const59	"subsurface_bssrdf"		%read{689,689} %write{2147483647,-1}
const	string	$const60	"mix"		%read{690,731} %write{2147483647,-1}
temp	float	$tmp290	%read{692,692} %write{691,691}
temp	closure color	$tmp291	%read{694,694} %write{692,692}
temp	closure color	$tmp292	%read{694,694} %write{693,693}
temp	closure color	$tmp293	%read{696,696} %write{695,695}
const	string	$const61	"oren_nayar_diffuse_bsdf"		%read{695,695} %write{2147483647,-1}
temp	float	$tmp294	%read{699,699} %write{698,698}
temp	closure color	$tmp295	%read{701,701} %write{699,699}
temp	closure color	$tmp296	%read{701,701} %write{700,700}
const	string	$const62	"layer"		%read{702,715} %write{2147483647,-1}
temp	float	$tmp297	%read{705,705} %write{704,704}
temp	closure color	$tmp298	%read{707,707} %write{705,705}
temp	closure color	$tmp299	%read{707,707} %write{706,706}
temp	float	$tmp300	%read{711,711} %write{710,710}
temp	closure color	$tmp301	%read{713,713} %write{711,711}
temp	closure color	$tmp302	%read{713,713} %write{712,712}
const	string	$const63	"uniform_edf"		%read{716,716} %write{2147483647,-1}
const	float	$const64	5		%read{728,728} %write{2147483647,-1}
const	string	$const65	"mx_generalized_schlick_edf"		%read{719,719} %write{2147483647,-1}
temp	float	$tmp304	%read{722,722} %write{721,721}
temp	vector	$tmp305	%read{721,721} %write{720,720}
const	string	$const66	"mx_fresnel_schlick"		%read{723,723} %write{2147483647,-1}
temp	float	$tmp306	%read{726,726} %write{724,724}
temp	float	$tmp307	%read{727,727} %write{726,726}
temp	float	$tmp308	%read{729,729} %write{728,728}
temp	float	$tmp309	%read{733,733} %write{732,732}
temp	closure color	$tmp310	%read{735,735} %write{733,733}
temp	closure color	$tmp311	%read{735,735} %write{734,734}
const	string	$const67	"mx_surface"		%read{739,739} %write{2147483647,-1}
temp	float	$tmp312	%read{744,744} %write{743,743}
temp	float	$tmp313	%read{751,751} %write{750,750}
temp	closure color	$tmp314	%read{753,753} %write{752,752}
temp	closure color	$tmp315	%read{757,757} %write{753,753}
temp	closure color	$tmp316	%read{756,756} %write{754,754}
const	string	$const68	"transparent"		%read{754,754} %write{2147483647,-1}
temp	float	$tmp317	%read{756,756} %write{755,755}
temp	closure color	$tmp318	%read{757,757} %write{756,756}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:767
#     color4 color_acescg_value_cm_out = color4(color(0.0), 0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{767} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:768
#     NG_acescg_to_lin_rec709_color4(color_acescg_value_cm_in, color_acescg_value_cm_out);
	assign		color_acescg_value_cm_out.rgb $const2 	%line{768} %argrw{"wr"}
	assign		color_acescg_value_cm_out.a $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:769
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const4 149 	%line{769} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:104
#     NG_convert_color4_color3(in, asColor3_out);
	assign		___676_asColor3_out $const2 	%line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:105
#     int alpha_index_tmp = 3;
	functioncall	$const5 81 	%line{105} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 79 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 27 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp1 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp1 17 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp2 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp2 21 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp3 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp3 25 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_acescg_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 43 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp4 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp4 33 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp5 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp5 37 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp6 41 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_acescg_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 59 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp7 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp7 49 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp8 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp8 53 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp9 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp9 57 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_acescg_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 75 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp10 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp10 65 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp11 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp11 69 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp12 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp12 73 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_acescg_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:42
# }
	assign		___676_asColor3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:106
#     float alpha_out = mx_extract(in, alpha_index_tmp);
	assign		___676_alpha_index_tmp $const10 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:107
#     color transform_out = color(0.0);
	functioncall	$const7 97 	%line{107} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp13 ___676_alpha_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp13 87 97 	%argrw{"r"}
	compref		___676_alpha_out color_acescg_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp14 ___676_alpha_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp14 91 97 	%argrw{"r"}
	compref		___676_alpha_out color_acescg_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp15 ___676_alpha_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp15 95 97 	%argrw{"r"}
	compref		___676_alpha_out color_acescg_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___676_alpha_out color_acescg_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:108
#     NG_acescg_to_lin_rec709_color3(asColor3_out, transform_out);
	assign		___676_transform_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{108} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:109
#     color4 asColor4_out = { color(transform_out[0],transform_out[1],transform_out[2]),alpha_out };
	functioncall	$const11 142 	%line{109} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:93
#     NG_convert_color3_vector3(in, asVec_out);
	assign		___675_asVec_out $const12 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:94
#     matrix transform_mat_tmp = matrix(1.705051,  -0.130256,  -0.024003, 0.000,  -0.621792,  1.140805,  -0.128969, 0.000,  -0.083259,  -0.010548,  1.152972, 0.000, 0.000, 0.000, 0.000, 1.000);
	functioncall	$const13 119 	%line{94} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:60
#     float separate_outg = 0.0;
	assign		___672_separate_outr $const3 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:61
#     float separate_outb = 0.0;
	assign		___672_separate_outg $const3 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:62
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___672_separate_outb $const3 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:63
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const14 117 	%line{63} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:47
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___671_N_extract_0_index_tmp $const1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:48
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 108 	%line{48} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_0_out ___676_asColor3_out ___671_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:49
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___671_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:50
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 111 	%line{50} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_1_out ___676_asColor3_out ___671_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:51
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___671_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:52
#     outr = N_extract_0_out;
	functioncall	$const7 114 	%line{52} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_2_out ___676_asColor3_out ___671_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:53
#     outg = N_extract_1_out;
	assign		___672_separate_outr ___671_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{53} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:54
#     outb = N_extract_2_out;
	assign		___672_separate_outg ___671_N_extract_1_out 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:55
# }
	assign		___672_separate_outb ___671_N_extract_2_out 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:64
#     out = combine_out;
	vector		___672_combine_out ___672_separate_outr ___672_separate_outg ___672_separate_outb 	%line{64} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:65
# }
	assign		___675_asVec_out ___672_combine_out 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:95
#     vector transform_out = transform(transform_mat_tmp, asVec_out);
	matrix		___675_transform_mat_tmp $const15 $const16 $const17 $const3 $const18 $const19 $const20 $const3 $const21 $const22 $const23 $const3 $const3 $const3 $const3 $const24 	%line{95} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:96
#     color asColor_out = color(0.0);
	transformv	___675_transform_out ___675_transform_mat_tmp ___675_asVec_out 	%line{96} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:97
#     NG_convert_vector3_color3(transform_out, asColor_out);
	assign		___675_asColor_out $const2 	%line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:98
#     out = asColor_out;
	functioncall	$const25 141 	%line{98} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:83
#     float separate_outy = 0.0;
	assign		___674_separate_outx $const3 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:84
#     float separate_outz = 0.0;
	assign		___674_separate_outy $const3 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:85
#     NG_separate3_vector3(in, separate_outx, separate_outy, separate_outz);
	assign		___674_separate_outz $const3 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:86
#     color combine_out = color( separate_outx,separate_outy,separate_outz );
	functioncall	$const26 139 	%line{86} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:70
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___673_N_extract_0_index_tmp $const1 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:71
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 130 	%line{71} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___673_N_extract_0_out ___675_transform_out ___673_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:72
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___673_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:73
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 133 	%line{73} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___673_N_extract_1_out ___675_transform_out ___673_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:74
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___673_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:75
#     outx = N_extract_0_out;
	functioncall	$const7 136 	%line{75} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___673_N_extract_2_out ___675_transform_out ___673_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:76
#     outy = N_extract_1_out;
	assign		___674_separate_outx ___673_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:77
#     outz = N_extract_2_out;
	assign		___674_separate_outy ___673_N_extract_1_out 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:78
# }
	assign		___674_separate_outz ___673_N_extract_2_out 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:87
#     out = combine_out;
	color		___674_combine_out ___674_separate_outx ___674_separate_outy ___674_separate_outz 	%line{87} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:88
# }
	assign		___675_asColor_out ___674_combine_out 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:99
# }
	assign		___676_transform_out ___675_asColor_out 	%line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:110
#     out = asColor4_out;
	compref		$tmp16 ___676_transform_out $const1 	%line{110} %argrw{"wrr"}
	compref		$tmp17 ___676_transform_out $const8 	%argrw{"wrr"}
	compref		$tmp18 ___676_transform_out $const9 	%argrw{"wrr"}
	color		___676_asColor4_out.rgb $tmp16 $tmp17 $tmp18 	%argrw{"wrrr"}
	assign		___676_asColor4_out.a ___676_alpha_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:111
# }
	assign		color_acescg_value_cm_out.rgb ___676_asColor4_out.rgb 	%line{111} %argrw{"wr"}
	assign		color_acescg_value_cm_out.a ___676_asColor4_out.a 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:770
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const27 151 	%line{770} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const28 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:771
#     color color_acescg_color3_out = color(0.0);
	compref		$tmp20 N $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{771} %argrw{"wrr"}
	compref		$tmp21 N $const1 	%argrw{"wrr"}
	neg		$tmp22 $tmp21 	%argrw{"wr"}
	vector		$tmp19 $tmp20 $const3 $tmp22 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:772
#     NG_convert_color4_color3(color_acescg_value_cm_out, color_acescg_color3_out);
	assign		color_acescg_color3_out $const2 	%line{772} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:773
#     surfaceshader color_acescg_standard_surface5_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const5 233 	%line{773} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 231 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 179 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp23 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp23 169 179 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp24 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp24 173 179 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp25 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp25 177 179 	%argrw{"r"}
	compref		___669_N_extract_0_out color_acescg_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_acescg_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 195 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp26 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp26 185 195 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp27 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp27 189 195 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp28 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp28 193 195 	%argrw{"r"}
	compref		___669_N_extract_1_out color_acescg_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_acescg_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 211 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp29 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp29 201 211 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp30 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp30 205 211 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp31 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp31 209 211 	%argrw{"r"}
	compref		___669_N_extract_2_out color_acescg_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_acescg_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 227 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp32 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp32 217 227 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp33 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp33 221 227 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp34 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp34 225 227 	%argrw{"r"}
	compref		___669_N_extract_3_out color_acescg_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_acescg_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:42
# }
	assign		color_acescg_color3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:774
#     NG_standard_surface_surfaceshader_100(color_acescg_standard_surface5_base, color_acescg_color3_out, color_acescg_standard_surface5_diffuse_roughness, color_acescg_standard_surface5_metalness, color_acescg_standard_surface5_specular, color_acescg_standard_surface5_specular_color, color_acescg_standard_surface5_specular_roughness, color_acescg_standard_surface5_specular_IOR, color_acescg_standard_surface5_specular_anisotropy, color_acescg_standard_surface5_specular_rotation, color_acescg_standard_surface5_transmission, color_acescg_standard_surface5_transmission_color, color_acescg_standard_surface5_transmission_depth, color_acescg_standard_surface5_transmission_scatter, color_acescg_standard_surface5_transmission_scatter_anisotropy, color_acescg_standard_surface5_transmission_dispersion, color_acescg_standard_surface5_transmission_extra_roughness, color_acescg_standard_surface5_subsurface, color_acescg_standard_surface5_subsurface_color, color_acescg_standard_surface5_subsurface_radius, color_acescg_standard_surface5_subsurface_scale, color_acescg_standard_surface5_subsurface_anisotropy, color_acescg_standard_surface5_sheen, color_acescg_standard_surface5_sheen_color, color_acescg_standard_surface5_sheen_roughness, color_acescg_standard_surface5_coat, color_acescg_standard_surface5_coat_color, color_acescg_standard_surface5_coat_roughness, color_acescg_standard_surface5_coat_anisotropy, color_acescg_standard_surface5_coat_rotation, color_acescg_standard_surface5_coat_IOR, geomprop_Nworld_out1, color_acescg_standard_surface5_coat_affect_color, color_acescg_standard_surface5_coat_affect_roughness, color_acescg_standard_surface5_thin_film_thickness, color_acescg_standard_surface5_thin_film_IOR, color_acescg_standard_surface5_emission, color_acescg_standard_surface5_emission_color, color_acescg_standard_surface5_opacity, color_acescg_standard_surface5_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, color_acescg_standard_surface5_out);
	assign		color_acescg_standard_surface5_out.bsdf null_closure 	%line{774} %argrw{"wr"}
	assign		color_acescg_standard_surface5_out.edf null_closure 	%argrw{"wr"}
	assign		color_acescg_standard_surface5_out.opacity $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:775
#     {
	functioncall	$const29 749 	%line{775} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:291
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:292
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const3 	%line{292} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:293
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const30 259 	%line{293} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:116
#     if (anisotropy > 0.0)
	mul		$tmp35 color_acescg_standard_surface5_coat_roughness color_acescg_standard_surface5_coat_roughness 	%line{116} %argrw{"wrr"}
	functioncall	$const32 245 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp36 $tmp35 $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp36 $const31 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:117
#     {
	gt		$tmp37 color_acescg_standard_surface5_coat_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{117} %argrw{"wrr"}
	if		$tmp37 257 259 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const32 250 	%line{119} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp39 color_acescg_standard_surface5_coat_anisotropy $const33 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp38 $tmp39 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp40 $const24 $tmp38 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{119} %argrw{"wrr"}
	sqrt		___678_aspect $tmp40 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:120
#         result.y = roughness_sqr * aspect;
	div		$tmp41 ___677_roughness_sqr ___678_aspect 	%line{120} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp41 $const24 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:121
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{121} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:125
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:126
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:294
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const34 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:295
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out color_acescg_standard_surface5_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{295} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:296
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out color_acescg_color3_out color_acescg_standard_surface5_base 	%line{296} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:297
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out color_acescg_standard_surface5_specular_color color_acescg_standard_surface5_specular 	%line{297} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:298
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out color_acescg_standard_surface5_coat_affect_roughness color_acescg_standard_surface5_coat 	%line{298} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:299
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const34 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:300
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out color_acescg_standard_surface5_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{300} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:301
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out color_acescg_standard_surface5_specular_roughness color_acescg_standard_surface5_transmission_extra_roughness 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:302
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const3 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:303
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp42 ___701_subsurface_color_nonnegative_in2_tmp 	%line{303} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out color_acescg_standard_surface5_subsurface_color $tmp42 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:304
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const3 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:305
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const24 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:306
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const32 275 	%line{306} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp43 color_acescg_standard_surface5_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp43 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:307
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out color_acescg_standard_surface5_subsurface_radius color_acescg_standard_surface5_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{307} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:308
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp44 color_acescg_standard_surface5_thin_walled 	%line{308} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp44 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:309
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const3 	%line{309} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:310
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp45 ___701_base_color_nonnegative_in2_tmp 	%line{310} %argrw{"wr"}
	max		___701_base_color_nonnegative_out color_acescg_color3_out $tmp45 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:311
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const35 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:312
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp color_acescg_standard_surface5_coat_color color_acescg_standard_surface5_coat 	%line{312} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:313
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const24 	%line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:314
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp color_acescg_standard_surface5_coat_IOR 	%line{314} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:315
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const24 	%line{315} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:316
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp color_acescg_standard_surface5_coat_IOR 	%line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:317
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out color_acescg_standard_surface5_emission_color color_acescg_standard_surface5_emission 	%line{317} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:318
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const2 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:319
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const37 292 	%line{319} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:132
# }
	dot		$tmp47 color_acescg_standard_surface5_opacity $const36 	%line{132} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp47 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:320
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const12 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:321
#     color artistic_ior_ior = color(0.0);
	functioncall	$const38 410 	%line{321} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:150
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const39 297 	%line{150} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp48 $const40 $const41 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp48 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:151
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const42 360 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{151} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:137
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{137} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:138
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{138} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:139
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{139} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:140
# 
	sub		___681_oc $const24 ___681_c 	%line{140} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:142
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp49 ___681_nAxis $const1 	%line{142} %argrw{"wrr"}
	mul		$tmp50 ___681_oc $tmp49 	%argrw{"wrr"}
	compref		$tmp51 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp52 $tmp50 $tmp51 	%argrw{"wrr"}
	add		$tmp53 $tmp52 ___681_c 	%argrw{"wrr"}
	compref		$tmp54 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp55 ___681_oc $tmp54 	%argrw{"wrr"}
	compref		$tmp56 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	compref		$tmp58 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp59 $tmp58 ___681_s 	%argrw{"wrr"}
	sub		$tmp60 $tmp57 $tmp59 	%argrw{"wrr"}
	compref		$tmp61 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp62 ___681_oc $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp66 $tmp65 ___681_s 	%argrw{"wrr"}
	add		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:143
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp68 ___681_nAxis $const1 	%line{143} %argrw{"wrr"}
	mul		$tmp69 ___681_oc $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp73 $tmp72 ___681_s 	%argrw{"wrr"}
	add		$tmp74 $tmp71 $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp76 ___681_oc $tmp75 	%argrw{"wrr"}
	compref		$tmp77 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp78 $tmp76 $tmp77 	%argrw{"wrr"}
	add		$tmp79 $tmp78 ___681_c 	%argrw{"wrr"}
	compref		$tmp80 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp81 ___681_oc $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp83 $tmp81 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp85 $tmp84 ___681_s 	%argrw{"wrr"}
	sub		$tmp86 $tmp83 $tmp85 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:144
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp87 ___681_nAxis $const9 	%line{144} %argrw{"wrr"}
	mul		$tmp88 ___681_oc $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp90 $tmp88 $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp92 $tmp91 ___681_s 	%argrw{"wrr"}
	sub		$tmp93 $tmp90 $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp95 ___681_oc $tmp94 	%argrw{"wrr"}
	compref		$tmp96 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp99 $tmp98 ___681_s 	%argrw{"wrr"}
	add		$tmp100 $tmp97 $tmp99 	%argrw{"wrr"}
	compref		$tmp101 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp102 ___681_oc $tmp101 	%argrw{"wrr"}
	compref		$tmp103 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp104 $tmp102 $tmp103 	%argrw{"wrr"}
	add		$tmp105 $tmp104 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:142
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp53 $tmp60 $tmp67 $const3 $tmp74 $tmp79 $tmp86 $const3 $tmp93 $tmp100 $tmp105 $const3 $const3 $const3 $const3 $const24 	%line{142} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:152
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp106.x geomprop_Tworld_out1 $const1 	%line{152} %argrw{"wrr"}
	compref		$tmp106.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp106.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp106.w $const24 	%argrw{"wr"}
	functioncall	$const27 409 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp107 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp106.x 	%argrw{"wrr"}
	mxcompref	$tmp109 ___682_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp110 $tmp109 $tmp106.y 	%argrw{"wrr"}
	add		$tmp111 $tmp108 $tmp110 	%argrw{"wrr"}
	mxcompref	$tmp112 ___682_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp113 $tmp112 $tmp106.z 	%argrw{"wrr"}
	add		$tmp114 $tmp111 $tmp113 	%argrw{"wrr"}
	mxcompref	$tmp115 ___682_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp116 $tmp115 $tmp106.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp114 $tmp116 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp117 ___682_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp106.x 	%argrw{"wrr"}
	mxcompref	$tmp119 ___682_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp106.y 	%argrw{"wrr"}
	add		$tmp121 $tmp118 $tmp120 	%argrw{"wrr"}
	mxcompref	$tmp122 ___682_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp123 $tmp122 $tmp106.z 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	mxcompref	$tmp125 ___682_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp126 $tmp125 $tmp106.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp124 $tmp126 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp127 ___682_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp106.x 	%argrw{"wrr"}
	mxcompref	$tmp129 ___682_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp106.y 	%argrw{"wrr"}
	add		$tmp131 $tmp128 $tmp130 	%argrw{"wrr"}
	mxcompref	$tmp132 ___682_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp106.z 	%argrw{"wrr"}
	add		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	mxcompref	$tmp135 ___682_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp106.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp134 $tmp136 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp137 ___682_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp138 $tmp137 $tmp106.x 	%argrw{"wrr"}
	mxcompref	$tmp139 ___682_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp106.y 	%argrw{"wrr"}
	add		$tmp141 $tmp138 $tmp140 	%argrw{"wrr"}
	mxcompref	$tmp142 ___682_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp143 $tmp142 $tmp106.z 	%argrw{"wrr"}
	add		$tmp144 $tmp141 $tmp143 	%argrw{"wrr"}
	mxcompref	$tmp145 ___682_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp146 $tmp145 $tmp106.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp144 $tmp146 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:153
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{153} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:322
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const2 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:323
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const2 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:324
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const43 437 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:161
#     color r_sqrt = sqrt(r);
	assign		$tmp147 $const3 	%line{161} %argrw{"wr"}
	assign		$tmp148 $const44 	%argrw{"wr"}
	functioncall	$const32 418 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp149 ___701_metal_reflectivity_out $tmp148 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp149 $tmp147 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:162
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{162} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:163
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp150 $const24 ___683_r 	%line{163} %argrw{"wrr"}
	add		$tmp151 $const24 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp150 $tmp151 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:164
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp152 $const24 ___683_r_sqrt 	%line{164} %argrw{"wrr"}
	sub		$tmp153 $const24 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp152 $tmp153 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:165
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{165} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:167
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const24 	%line{167} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:168
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const24 	%line{168} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:169
#     k2 = max(k2, 0.0);
	mul		$tmp154 ___683_np1 ___683_np1 	%line{169} %argrw{"wrr"}
	mul		$tmp155 $tmp154 ___683_r 	%argrw{"wrr"}
	mul		$tmp156 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp157 $tmp155 $tmp156 	%argrw{"wrr"}
	sub		$tmp158 $const24 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp157 $tmp158 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:170
#     extinction = sqrt(k2);
	assign		$tmp159 $const3 	%line{170} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp159 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:171
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{171} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:325
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out color_acescg_standard_surface5_coat_roughness 	%line{325} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:326
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const12 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:327
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const38 556 	%line{327} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:150
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const39 443 	%line{150} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp160 $const40 $const41 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:151
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const42 506 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{151} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:137
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{137} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:138
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{138} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:139
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{139} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:140
# 
	sub		___681_oc $const24 ___681_c 	%line{140} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:142
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp161 ___681_nAxis $const1 	%line{142} %argrw{"wrr"}
	mul		$tmp162 ___681_oc $tmp161 	%argrw{"wrr"}
	compref		$tmp163 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp164 $tmp162 $tmp163 	%argrw{"wrr"}
	add		$tmp165 $tmp164 ___681_c 	%argrw{"wrr"}
	compref		$tmp166 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp167 ___681_oc $tmp166 	%argrw{"wrr"}
	compref		$tmp168 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp169 $tmp167 $tmp168 	%argrw{"wrr"}
	compref		$tmp170 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp171 $tmp170 ___681_s 	%argrw{"wrr"}
	sub		$tmp172 $tmp169 $tmp171 	%argrw{"wrr"}
	compref		$tmp173 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp174 ___681_oc $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp178 $tmp177 ___681_s 	%argrw{"wrr"}
	add		$tmp179 $tmp176 $tmp178 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:143
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp180 ___681_nAxis $const1 	%line{143} %argrw{"wrr"}
	mul		$tmp181 ___681_oc $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp183 $tmp181 $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp185 $tmp184 ___681_s 	%argrw{"wrr"}
	add		$tmp186 $tmp183 $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp188 ___681_oc $tmp187 	%argrw{"wrr"}
	compref		$tmp189 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp190 $tmp188 $tmp189 	%argrw{"wrr"}
	add		$tmp191 $tmp190 ___681_c 	%argrw{"wrr"}
	compref		$tmp192 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp193 ___681_oc $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp195 $tmp193 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___681_s 	%argrw{"wrr"}
	sub		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:144
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp199 ___681_nAxis $const9 	%line{144} %argrw{"wrr"}
	mul		$tmp200 ___681_oc $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp202 $tmp200 $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp204 $tmp203 ___681_s 	%argrw{"wrr"}
	sub		$tmp205 $tmp202 $tmp204 	%argrw{"wrr"}
	compref		$tmp206 ___681_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp207 ___681_oc $tmp206 	%argrw{"wrr"}
	compref		$tmp208 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp211 $tmp210 ___681_s 	%argrw{"wrr"}
	add		$tmp212 $tmp209 $tmp211 	%argrw{"wrr"}
	compref		$tmp213 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp214 ___681_oc $tmp213 	%argrw{"wrr"}
	compref		$tmp215 ___681_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp216 $tmp214 $tmp215 	%argrw{"wrr"}
	add		$tmp217 $tmp216 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:142
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp165 $tmp172 $tmp179 $const3 $tmp186 $tmp191 $tmp198 $const3 $tmp205 $tmp212 $tmp217 $const3 $const3 $const3 $const3 $const24 	%line{142} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:152
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp218.x geomprop_Tworld_out1 $const1 	%line{152} %argrw{"wrr"}
	compref		$tmp218.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp218.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp218.w $const24 	%argrw{"wr"}
	functioncall	$const27 555 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp219 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp218.x 	%argrw{"wrr"}
	mxcompref	$tmp221 ___682_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp218.y 	%argrw{"wrr"}
	add		$tmp223 $tmp220 $tmp222 	%argrw{"wrr"}
	mxcompref	$tmp224 ___682_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp225 $tmp224 $tmp218.z 	%argrw{"wrr"}
	add		$tmp226 $tmp223 $tmp225 	%argrw{"wrr"}
	mxcompref	$tmp227 ___682_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp228 $tmp227 $tmp218.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp226 $tmp228 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp229 ___682_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp218.x 	%argrw{"wrr"}
	mxcompref	$tmp231 ___682_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp218.y 	%argrw{"wrr"}
	add		$tmp233 $tmp230 $tmp232 	%argrw{"wrr"}
	mxcompref	$tmp234 ___682_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp235 $tmp234 $tmp218.z 	%argrw{"wrr"}
	add		$tmp236 $tmp233 $tmp235 	%argrw{"wrr"}
	mxcompref	$tmp237 ___682_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp238 $tmp237 $tmp218.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp236 $tmp238 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp239 ___682_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp218.x 	%argrw{"wrr"}
	mxcompref	$tmp241 ___682_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp218.y 	%argrw{"wrr"}
	add		$tmp243 $tmp240 $tmp242 	%argrw{"wrr"}
	mxcompref	$tmp244 ___682_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp218.z 	%argrw{"wrr"}
	add		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	mxcompref	$tmp247 ___682_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp218.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp246 $tmp248 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp249 ___682_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp250 $tmp249 $tmp218.x 	%argrw{"wrr"}
	mxcompref	$tmp251 ___682_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp218.y 	%argrw{"wrr"}
	add		$tmp253 $tmp250 $tmp252 	%argrw{"wrr"}
	mxcompref	$tmp254 ___682_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp255 $tmp254 $tmp218.z 	%argrw{"wrr"}
	add		$tmp256 $tmp253 $tmp255 	%argrw{"wrr"}
	mxcompref	$tmp257 ___682_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp258 $tmp257 $tmp218.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp256 $tmp258 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:153
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{153} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:328
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const3 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:329
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const24 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:330
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const32 561 	%line{330} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp259 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp259 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:331
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out color_acescg_standard_surface5_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{331} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:332
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:333
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:334
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const7 566 	%line{334} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:335
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:336
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const24 	%line{336} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:337
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out color_acescg_standard_surface5_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{337} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:338
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:339
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const24 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:340
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{340} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:341
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const24 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:342
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{342} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:343
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{343} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:344
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const3 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:345
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp260 color_acescg_standard_surface5_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{345} %argrw{"wrr"}
	functioncall	$const45 583 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp260 581 583 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:346
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{346} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:347
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const30 604 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:116
#     if (anisotropy > 0.0)
	mul		$tmp261 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{116} %argrw{"wrr"}
	functioncall	$const32 590 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp262 $tmp261 $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp262 $const31 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:117
#     {
	gt		$tmp263 color_acescg_standard_surface5_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{117} %argrw{"wrr"}
	if		$tmp263 602 604 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const32 595 	%line{119} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp265 color_acescg_standard_surface5_specular_anisotropy $const33 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp264 $tmp265 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp266 $const24 $tmp264 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{119} %argrw{"wrr"}
	sqrt		___678_aspect $tmp266 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:120
#         result.y = roughness_sqr * aspect;
	div		$tmp267 ___677_roughness_sqr ___678_aspect 	%line{120} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp267 $const24 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:121
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{121} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:125
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:126
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:348
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const3 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:349
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp268 color_acescg_standard_surface5_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{349} %argrw{"wrr"}
	functioncall	$const45 612 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp268 610 612 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:350
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{350} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:351
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const30 633 	%line{351} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:116
#     if (anisotropy > 0.0)
	mul		$tmp269 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{116} %argrw{"wrr"}
	functioncall	$const32 619 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp270 $tmp269 $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp270 $const31 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:117
#     {
	gt		$tmp271 color_acescg_standard_surface5_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{117} %argrw{"wrr"}
	if		$tmp271 631 633 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const32 624 	%line{119} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp273 color_acescg_standard_surface5_specular_anisotropy $const33 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp272 $tmp273 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:119
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp274 $const24 $tmp272 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{119} %argrw{"wrr"}
	sqrt		___678_aspect $tmp274 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:120
#         result.y = roughness_sqr * aspect;
	div		$tmp275 ___677_roughness_sqr ___678_aspect 	%line{120} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp275 $const24 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:121
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{121} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:125
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:126
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:352
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{352} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:353
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{353} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:354
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const24 	%line{354} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:355
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{355} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:356
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const2 	%line{356} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:357
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const46 641 	%line{357} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:192
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{192} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:193
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{193} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:358
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{358} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:359
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const50 653 	%line{359} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:176
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp277 $const49 $const51 	%line{176} %argrw{"wrr"}
	if		$tmp277 646 647 	%argrw{"r"}
	assign		___684_reflection_tint $const2 	%argrw{"wr"}
	assign		___684_reflection_tint $const35 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:177
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp278 $const49 $const49 	%line{177} %argrw{"wrr"}
	if		$tmp278 650 651 	%argrw{"r"}
	assign		___684_transmission_tint $const2 	%argrw{"wr"}
	assign		___684_transmission_tint $const35 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:178
# }
	closure		$tmp279 $const54 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y color_acescg_standard_surface5_coat_IOR $const48 $const52 $const3 $const53 $const47 	%line{178} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp279 color_acescg_standard_surface5_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:360
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const24 	%line{360} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:361
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const48 	%line{361} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:362
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp280 $const55 geomprop_Nworld_out1 ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const52 color_acescg_standard_surface5_thin_film_thickness $const53 color_acescg_standard_surface5_thin_film_IOR 	%line{362} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp280 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:363
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{363} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:364
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const50 669 	%line{364} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:176
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp281 $const49 $const51 	%line{176} %argrw{"wrr"}
	if		$tmp281 662 663 	%argrw{"r"}
	assign		___684_reflection_tint $const2 	%argrw{"wr"}
	assign		___684_reflection_tint color_acescg_standard_surface5_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:177
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp282 $const49 $const49 	%line{177} %argrw{"wrr"}
	if		$tmp282 666 667 	%argrw{"r"}
	assign		___684_transmission_tint $const2 	%argrw{"wr"}
	assign		___684_transmission_tint color_acescg_standard_surface5_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:178
# }
	closure		$tmp283 $const54 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y color_acescg_standard_surface5_specular_IOR $const48 $const52 color_acescg_standard_surface5_thin_film_thickness $const53 color_acescg_standard_surface5_thin_film_IOR 	%line{178} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp283 color_acescg_standard_surface5_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:365
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{365} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:366
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const50 681 	%line{366} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:176
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp284 $const51 $const51 	%line{176} %argrw{"wrr"}
	if		$tmp284 674 675 	%argrw{"r"}
	assign		___684_reflection_tint $const2 	%argrw{"wr"}
	assign		___684_reflection_tint color_acescg_standard_surface5_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:177
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp285 $const51 $const49 	%line{177} %argrw{"wrr"}
	if		$tmp285 678 679 	%argrw{"r"}
	assign		___684_transmission_tint $const2 	%argrw{"wr"}
	assign		___684_transmission_tint color_acescg_standard_surface5_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:178
# }
	closure		$tmp286 $const54 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y color_acescg_standard_surface5_specular_IOR $const48 $const52 $const3 $const53 $const47 	%line{178} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp286 $const24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:367
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp287 $const56 geomprop_Nworld_out1 color_acescg_standard_surface5_sheen_color color_acescg_standard_surface5_sheen_roughness 	%line{367} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp287 color_acescg_standard_surface5_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:368
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const24 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:369
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp288 $const57 geomprop_Nworld_out1 ___701_coat_affected_subsurface_color_out 	%line{369} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp288 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:370
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:371
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const58 690 	%line{371} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:186
# #endif
	mul		$tmp289 $const24 ___701_coat_affected_subsurface_color_out 	%line{186} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const59 geomprop_Nworld_out1 $tmp289 $const24 ___701_subsurface_radius_scaled_out color_acescg_standard_surface5_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:372
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const60 695 	%line{372} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp290 $const24 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp291 ___701_subsurface_bsdf_out $tmp290 	%argrw{"wrr"}
	mul		$tmp292 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp291 $tmp292 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:373
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp293 $const61 geomprop_Nworld_out1 ___701_coat_affected_diffuse_color_out color_acescg_standard_surface5_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{373} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp293 color_acescg_standard_surface5_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:374
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const60 702 	%line{374} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp294 $const24 color_acescg_standard_surface5_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp295 ___701_diffuse_bsdf_out $tmp294 	%argrw{"wrr"}
	mul		$tmp296 ___701_selected_subsurface_bsdf_out color_acescg_standard_surface5_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp295 $tmp296 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:375
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const62 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{375} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:376
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const60 708 	%line{376} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp297 $const24 color_acescg_standard_surface5_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp298 ___701_sheen_layer_out $tmp297 	%argrw{"wrr"}
	mul		$tmp299 ___701_transmission_bsdf_out color_acescg_standard_surface5_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp298 $tmp299 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:377
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const62 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{377} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:378
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const60 714 	%line{378} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp300 $const24 color_acescg_standard_surface5_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp301 ___701_specular_layer_out $tmp300 	%argrw{"wrr"}
	mul		$tmp302 ___701_metal_bsdf_out color_acescg_standard_surface5_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp301 $tmp302 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:379
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{379} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:380
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const62 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{380} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:381
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const63 ___701_emission_weight_out 	%line{381} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:382
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out color_acescg_standard_surface5_coat_color 	%line{382} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:383
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{383} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:384
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const65 731 	%line{384} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:277
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp305 I 	%line{277} %argrw{"wr"}
	dot		$tmp304 N $tmp305 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp304 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:278
#     result = base * f;
	functioncall	$const66 730 	%line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:271
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp306 $const24 ___699_NdotV 	%line{271} %argrw{"wrr"}
	functioncall	$const32 728 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp307 $tmp306 $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp307 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:272
# }
	pow		$tmp308 ___698_x $const64 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{272} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const2 $tmp308 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:279
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{279} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:385
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const60 736 	%line{385} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp309 $const24 color_acescg_standard_surface5_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp310 ___701_emission_edf_out $tmp309 	%argrw{"wrr"}
	mul		$tmp311 ___701_coat_emission_edf_out color_acescg_standard_surface5_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp310 $tmp311 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:386
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{386} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:387
#     out = shader_constructor_out;
	functioncall	$const67 746 	%line{387} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:284
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:285
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:286
# }
	functioncall	$const32 745 	%line{286} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp312 ___701_opacity_luminance_float_out $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp312 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:286
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:388
# }
	assign		color_acescg_standard_surface5_out.bsdf ___701_shader_constructor_out.bsdf 	%line{388} %argrw{"wr"}
	assign		color_acescg_standard_surface5_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		color_acescg_standard_surface5_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:777
#         color_acescg_out = (color_acescg_standard_surface5_out.bsdf + color_acescg_standard_surface5_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const32 752 	%line{777} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp313 color_acescg_standard_surface5_out.opacity $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp313 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl:778
#     }
	add		$tmp314 color_acescg_standard_surface5_out.bsdf color_acescg_standard_surface5_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_acescg_out.osl"} %line{778} %argrw{"wrr"}
	mul		$tmp315 $tmp314 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp316 $const68 	%argrw{"wr"}
	sub		$tmp317 $const24 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp318 $tmp316 $tmp317 	%argrw{"wrr"}
	add		color_acescg_out $tmp315 $tmp318 	%argrw{"wrr"}
	end
