OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_color_gamma18_out.oso
surface ng1_color_gamma18_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"color_gamma18_out"} 
param	struct color4	color_gamma18_value_cm_in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	color_gamma18_value_cm_in.rgb	0.5 0 0		%read{15,93} %write{2147483647,-1} %mystruct{color_gamma18_value_cm_in} %mystructfield{0}
param	float	color_gamma18_value_cm_in.a	1		%read{25,95} %write{2147483647,-1} %mystruct{color_gamma18_value_cm_in} %mystructfield{1}
param	string	geomprop_Nworld_space	"world"		%read{113,113} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{224,659} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{658,658} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{673,675} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{225,631} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{225,629} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{229,531} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{630,642} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{553,585} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{228,228} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{667,669} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{637,641} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{229,229} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{661,663} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{232,232} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{238,238} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{238,238} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{652,652} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{645,645} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{644,644} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{644,644} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{226,697} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{245,680} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{204,400} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{208,539} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{223,223} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{247,614} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{524,524} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{226,226} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{618,630} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{618,630} %write{2147483647,-1}
param	float	color_gamma18_standard_surface2_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{250,250} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{250,250} %write{2147483647,-1}
param	color	color_gamma18_standard_surface2_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{253,253} %write{2147483647,-1}
param	int	color_gamma18_standard_surface2_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{239,239} %write{2147483647,-1}
oparam	closure color	color_gamma18_out			%read{2147483647,-1} %write{720,720}
global	vector	I	%read{683,683} %write{2147483647,-1}
global	normal	N	%read{113,684} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{13,136} %write{11,126}
local	float	___669_N_extract_0_out	%read{75,190} %write{15,140}
local	int	___669_N_extract_1_index_tmp	%read{29,152} %write{27,142}
local	float	___669_N_extract_1_out	%read{76,191} %write{31,156}
local	int	___669_N_extract_2_index_tmp	%read{45,168} %write{43,158}
local	float	___669_N_extract_2_out	%read{77,192} %write{47,172}
local	int	___669_N_extract_3_index_tmp	%read{61,184} %write{59,174}
local	float	___669_N_extract_3_out	%read{78,193} %write{63,188}
local	float	___670_separate_outr	%read{79,194} %write{6,190}
local	float	___670_separate_outg	%read{79,194} %write{7,191}
local	float	___670_separate_outb	%read{79,194} %write{8,192}
local	float	___670_separate_outa	%read{2147483647,-1} %write{9,193}
local	color	___670_combine_out	%read{80,195} %write{79,194}
local	float	___671_max_in2_tmp	%read{100,100} %write{99,99}
local	color	___671_max_out	%read{103,103} %write{101,101}
local	float	___671_gamma_in2_tmp	%read{103,103} %write{102,102}
local	color	___671_gamma_out	%read{104,104} %write{103,103}
local	color	___672_asColor3_out	%read{101,101} %write{4,80}
local	int	___672_alpha_index_tmp	%read{83,91} %write{81,81}
local	float	___672_alpha_out	%read{109,109} %write{85,95}
local	color	___672_transform_out	%read{105,107} %write{97,104}
local	color	___672_asColor4_out.rgb	%read{110,110} %write{108,108} %mystruct{___672_asColor4_out} %mystructfield{0}
local	float	___672_asColor4_out.a	%read{111,111} %write{109,109} %mystruct{___672_asColor4_out} %mystructfield{1}
local	float	___673_roughness_sqr	%read{215,595} %write{207,581}
local	float	___674_aspect	%read{215,592} %write{214,588}
local	vector	___677_nAxis	%read{265,465} %write{261,407}
local	float	___677_s	%read{275,461} %write{262,408}
local	float	___677_c	%read{264,467} %write{263,409}
local	float	___677_oc	%read{266,464} %write{264,410}
local	float	___678_rotationRadians	%read{262,409} %write{259,405}
local	matrix	___678_m	%read{328,515} %write{322,468}
local	float	___678_trans.x	%read{372,518} %write{338,484} %mystruct{___678_trans} %mystructfield{0}
local	float	___678_trans.y	%read{372,518} %write{349,495} %mystruct{___678_trans} %mystructfield{1}
local	float	___678_trans.z	%read{372,518} %write{360,506} %mystruct{___678_trans} %mystructfield{2}
local	float	___678_trans.w	%read{2147483647,-1} %write{371,517} %mystruct{___678_trans} %mystructfield{3}
local	color	___679_r	%read{381,395} %write{380,380}
local	color	___679_r_sqrt	%read{385,386} %write{381,381}
local	color	___679_n_min	%read{388,388} %write{384,384}
local	color	___679_n_max	%read{388,388} %write{387,387}
local	color	___679_np1	%read{391,391} %write{389,389}
local	color	___679_nm1	%read{393,393} %write{390,390}
local	color	___679_k2	%read{398,399} %write{396,398}
local	color	___680_reflection_tint	%read{614,642} %write{608,637}
local	color	___680_transmission_tint	%read{614,642} %write{612,641}
local	color	___682_combine_out	%read{603,603} %write{602,602}
local	float	___694_x	%read{691,691} %write{690,690}
local	float	___695_NdotV	%read{687,687} %write{685,685}
local	color	___695_f	%read{693,693} %write{692,692}
local	closure color	___697_null_closure	%read{604,700} %write{200,200}
local	float	___697_coat_roughness_vector_out.x	%read{217,614} %write{201,220} %mystruct{___697_coat_roughness_vector_out} %mystructfield{0}
local	float	___697_coat_roughness_vector_out.y	%read{219,614} %write{202,221} %mystruct{___697_coat_roughness_vector_out} %mystructfield{1}
local	float	___697_coat_tangent_rotate_degree_in2_tmp	%read{223,223} %write{222,222}
local	float	___697_coat_tangent_rotate_degree_out	%read{259,259} %write{223,223}
local	color	___697_metal_reflectivity_out	%read{379,379} %write{224,224}
local	color	___697_metal_edgecolor_out	%read{388,388} %write{225,225}
local	float	___697_coat_affect_roughness_multiply1_out	%read{400,400} %write{226,226}
local	float	___697_tangent_rotate_degree_in2_tmp	%read{228,228} %write{227,227}
local	float	___697_tangent_rotate_degree_out	%read{405,405} %write{228,228}
local	float	___697_transmission_roughness_add_out	%read{522,522} %write{229,229}
local	float	___697_subsurface_color_nonnegative_in2_tmp	%read{231,231} %write{230,230}
local	color	___697_subsurface_color_nonnegative_out	%read{596,596} %write{232,232}
local	float	___697_coat_clamped_low_tmp	%read{237,237} %write{233,233}
local	float	___697_coat_clamped_high_tmp	%read{236,236} %write{234,234}
local	float	___697_coat_clamped_out	%read{524,524} %write{237,237}
local	color	___697_subsurface_radius_scaled_out	%read{652,652} %write{238,238}
local	float	___697_subsurface_selector_out	%read{654,656} %write{240,240}
local	float	___697_base_color_nonnegative_in2_tmp	%read{242,242} %write{241,241}
local	color	___697_base_color_nonnegative_out	%read{597,597} %write{243,243}
local	color	___697_coat_attenuation_bg_tmp	%read{245,245} %write{244,244}
local	color	___697_coat_attenuation_out	%read{677,677} %write{245,245}
local	float	___697_one_minus_coat_ior_in1_tmp	%read{247,247} %write{246,246}
local	float	___697_one_minus_coat_ior_out	%read{525,525} %write{247,247}
local	float	___697_one_plus_coat_ior_in1_tmp	%read{249,249} %write{248,248}
local	float	___697_one_plus_coat_ior_out	%read{525,525} %write{249,249}
local	color	___697_emission_weight_out	%read{679,679} %write{250,250}
local	color	___697_opacity_luminance_out	%read{528,528} %write{251,254}
local	vector	___697_coat_tangent_rotate_out	%read{529,529} %write{255,372}
local	color	___697_artistic_ior_ior	%read{389,618} %write{373,388}
local	color	___697_artistic_ior_extinction	%read{618,618} %write{374,399}
local	float	___697_coat_affect_roughness_multiply2_out	%read{531,534} %write{400,400}
local	vector	___697_tangent_rotate_out	%read{532,532} %write{401,518}
local	float	___697_transmission_roughness_clamped_low_tmp	%read{523,523} %write{519,519}
local	float	___697_transmission_roughness_clamped_high_tmp	%read{522,522} %write{520,520}
local	float	___697_transmission_roughness_clamped_out	%read{534,534} %write{523,523}
local	float	___697_coat_gamma_multiply_out	%read{536,536} %write{524,524}
local	float	___697_coat_ior_to_F0_sqrt_out	%read{537,537} %write{525,525}
local	int	___697_opacity_luminance_float_index_tmp	%read{528,528} %write{526,526}
local	float	___697_opacity_luminance_float_out	%read{706,706} %write{528,528}
local	vector	___697_coat_tangent_rotate_normalize_out	%read{542,542} %write{529,529}
local	float	___697_coat_affected_roughness_fg_tmp	%read{531,531} %write{530,530}
local	float	___697_coat_affected_roughness_out	%read{549,549} %write{531,531}
local	vector	___697_tangent_rotate_normalize_out	%read{571,571} %write{532,532}
local	float	___697_coat_affected_transmission_roughness_fg_tmp	%read{534,534} %write{533,533}
local	float	___697_coat_affected_transmission_roughness_out	%read{578,578} %write{534,534}
local	float	___697_coat_gamma_in2_tmp	%read{536,536} %write{535,535}
local	float	___697_coat_gamma_out	%read{596,597} %write{536,536}
local	float	___697_coat_ior_to_F0_out	%read{599,599} %write{537,537}
local	float	___697_coat_tangent_value2_tmp	%read{539,539} %write{538,538}
local	vector	___697_coat_tangent_out	%read{614,614} %write{542,544}
local	float	___697_main_roughness_out.x	%read{562,630} %write{546,565} %mystruct{___697_main_roughness_out} %mystructfield{0}
local	float	___697_main_roughness_out.y	%read{564,630} %write{547,566} %mystruct{___697_main_roughness_out} %mystructfield{1}
local	float	___697_main_tangent_value2_tmp	%read{568,568} %write{567,567}
local	vector	___697_main_tangent_out	%read{618,642} %write{571,573}
local	float	___697_transmission_roughness_out.x	%read{591,642} %write{575,594} %mystruct{___697_transmission_roughness_out} %mystructfield{0}
local	float	___697_transmission_roughness_out.y	%read{593,642} %write{576,595} %mystruct{___697_transmission_roughness_out} %mystructfield{1}
local	color	___697_coat_affected_subsurface_color_out	%read{647,651} %write{596,596}
local	color	___697_coat_affected_diffuse_color_out	%read{658,658} %write{597,597}
local	float	___697_one_minus_coat_ior_to_F0_in1_tmp	%read{599,599} %write{598,598}
local	float	___697_one_minus_coat_ior_to_F0_out	%read{602,602} %write{599,599}
local	color	___697_emission_color0_out	%read{692,692} %write{600,603}
local	closure color	___697_coat_bsdf_out	%read{678,678} %write{604,615}
local	float	___697_metal_bsdf_weight_tmp	%read{619,619} %write{616,616}
local	string	___697_metal_bsdf_distribution_tmp	%read{618,618} %write{617,617}
local	closure color	___697_metal_bsdf_out	%read{675,675} %write{619,619}
local	closure color	___697_specular_bsdf_out	%read{671,671} %write{620,631}
local	closure color	___697_transmission_bsdf_out	%read{669,669} %write{632,643}
local	closure color	___697_sheen_bsdf_out	%read{665,665} %write{645,645}
local	float	___697_translucent_bsdf_weight_tmp	%read{648,648} %write{646,646}
local	closure color	___697_translucent_bsdf_out	%read{656,656} %write{648,648}
local	closure color	___697_subsurface_bsdf_out	%read{655,655} %write{649,652}
local	closure color	___697_selected_subsurface_bsdf_out	%read{663,663} %write{657,657}
local	closure color	___697_diffuse_bsdf_out	%read{662,662} %write{659,659}
local	closure color	___697_subsurface_mix_out	%read{665,665} %write{664,664}
local	closure color	___697_sheen_layer_out	%read{668,668} %write{665,665}
local	closure color	___697_transmission_mix_out	%read{671,671} %write{670,670}
local	closure color	___697_specular_layer_out	%read{674,674} %write{671,671}
local	closure color	___697_metalness_mix_out	%read{677,677} %write{676,676}
local	closure color	___697_thin_film_layer_attenuated_out	%read{678,678} %write{677,677}
local	closure color	___697_coat_layer_out	%read{703,703} %write{678,678}
local	closure color	___697_emission_edf_out	%read{680,696} %write{679,679}
local	closure color	___697_coat_tinted_emission_edf_out	%read{693,693} %write{680,680}
local	closure color	___697_coat_emission_edf_out	%read{697,697} %write{681,693}
local	closure color	___697_blended_coat_emission_edf_out	%read{704,704} %write{698,698}
local	closure color	___697_shader_constructor_out.bsdf	%read{709,709} %write{699,703} %mystruct{___697_shader_constructor_out} %mystructfield{0}
local	closure color	___697_shader_constructor_out.edf	%read{710,710} %write{700,704} %mystruct{___697_shader_constructor_out} %mystructfield{1}
local	float	___697_shader_constructor_out.opacity	%read{708,711} %write{701,708} %mystruct{___697_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{196,197} %write{0,0}
local	color	color_gamma18_value_cm_out.rgb	%read{130,186} %write{1,110} %mystruct{color_gamma18_value_cm_out} %mystructfield{0}
local	float	color_gamma18_value_cm_out.a	%read{140,188} %write{2,111} %mystruct{color_gamma18_value_cm_out} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{261,658} %write{113,113}
local	vector	geomprop_Tworld_out1	%read{323,573} %write{118,118}
local	color	color_gamma18_color3_out	%read{224,243} %write{119,195}
local	closure color	color_gamma18_standard_surface2_out.bsdf	%read{715,715} %write{196,709} %mystruct{color_gamma18_standard_surface2_out} %mystructfield{0}
local	closure color	color_gamma18_standard_surface2_out.edf	%read{715,715} %write{197,710} %mystruct{color_gamma18_standard_surface2_out} %mystructfield{1}
local	float	color_gamma18_standard_surface2_out.opacity	%read{713,713} %write{198,711} %mystruct{color_gamma18_standard_surface2_out} %mystructfield{2}
local	float	___698_opacity_weight	%read{716,718} %write{714,714}
const	int	$const1	0		%read{0,526} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,692} %write{2147483647,-1}
const	float	$const3	0		%read{2,714} %write{2147483647,-1}
const	string	$const4	"NG_g18_rec709_to_lin_rec709_color4"		%read{3,3} %write{2147483647,-1}
const	string	$const5	"NG_convert_color4_color3"		%read{5,120} %write{2147483647,-1}
const	string	$const6	"NG_separate4_color4"		%read{10,125} %write{2147483647,-1}
const	string	$const7	"mx_extract"		%read{12,527} %write{2147483647,-1}
temp	int	$tmp1	%read{14,14} %write{13,13}
const	int	$const8	1		%read{17,509} %write{2147483647,-1}
temp	int	$tmp2	%read{18,18} %write{17,17}
const	int	$const9	2		%read{21,512} %write{2147483647,-1}
temp	int	$tmp3	%read{22,22} %write{21,21}
temp	int	$tmp4	%read{30,30} %write{29,29}
temp	int	$tmp5	%read{34,34} %write{33,33}
temp	int	$tmp6	%read{38,38} %write{37,37}
temp	int	$tmp7	%read{46,46} %write{45,45}
temp	int	$tmp8	%read{50,50} %write{49,49}
temp	int	$tmp9	%read{54,54} %write{53,53}
const	int	$const10	3		%read{59,515} %write{2147483647,-1}
temp	int	$tmp10	%read{62,62} %write{61,61}
temp	int	$tmp11	%read{66,66} %write{65,65}
temp	int	$tmp12	%read{70,70} %write{69,69}
temp	int	$tmp13	%read{84,84} %write{83,83}
temp	int	$tmp14	%read{88,88} %write{87,87}
temp	int	$tmp15	%read{92,92} %write{91,91}
const	string	$const11	"NG_g18_rec709_to_lin_rec709_color3"		%read{98,98} %write{2147483647,-1}
temp	color	$tmp16	%read{101,101} %write{100,100}
const	float	$const12	1.8		%read{102,102} %write{2147483647,-1}
temp	float	$tmp17	%read{108,108} %write{105,105}
temp	float	$tmp18	%read{108,108} %write{106,106}
temp	float	$tmp19	%read{108,108} %write{107,107}
const	string	$const13	"transform"		%read{112,473} %write{2147483647,-1}
const	string	$const14	"common"		%read{113,113} %write{2147483647,-1}
temp	vector	$tmp20	%read{118,118} %write{117,117}
temp	float	$tmp21	%read{117,117} %write{114,114}
temp	float	$tmp22	%read{116,116} %write{115,115}
temp	float	$tmp23	%read{117,117} %write{116,116}
temp	int	$tmp24	%read{129,129} %write{128,128}
temp	int	$tmp25	%read{133,133} %write{132,132}
temp	int	$tmp26	%read{137,137} %write{136,136}
temp	int	$tmp27	%read{145,145} %write{144,144}
temp	int	$tmp28	%read{149,149} %write{148,148}
temp	int	$tmp29	%read{153,153} %write{152,152}
temp	int	$tmp30	%read{161,161} %write{160,160}
temp	int	$tmp31	%read{165,165} %write{164,164}
temp	int	$tmp32	%read{169,169} %write{168,168}
temp	int	$tmp33	%read{177,177} %write{176,176}
temp	int	$tmp34	%read{181,181} %write{180,180}
temp	int	$tmp35	%read{185,185} %write{184,184}
const	float	$const15	1		%read{198,718} %write{2147483647,-1}
const	string	$const16	"NG_standard_surface_surfaceshader_100"		%read{199,199} %write{2147483647,-1}
const	string	$const17	"mx_roughness_anisotropy"		%read{203,577} %write{2147483647,-1}
temp	float	$tmp36	%read{206,206} %write{204,204}
const	float	$const18	1e-08		%read{207,581} %write{2147483647,-1}
const	string	$const19	"clamp"		%read{205,712} %write{2147483647,-1}
temp	float	$tmp37	%read{207,207} %write{206,206}
temp	int	$tmp38	%read{209,209} %write{208,208}
temp	float	$tmp39	%read{213,213} %write{212,212}
const	float	$const20	0.98		%read{211,585} %write{2147483647,-1}
temp	float	$tmp40	%read{212,212} %write{211,211}
temp	float	$tmp41	%read{214,214} %write{213,213}
temp	float	$tmp42	%read{216,216} %write{215,215}
const	float	$const21	360		%read{222,227} %write{2147483647,-1}
temp	color	$tmp43	%read{232,232} %write{231,231}
temp	float	$tmp44	%read{237,237} %write{236,236}
temp	float	$tmp45	%read{240,240} %write{239,239}
temp	color	$tmp46	%read{243,243} %write{242,242}
const	color	$const22	1 1 1		%read{244,613} %write{2147483647,-1}
const	color	$const23	0.272229 0.674082 0.053689		%read{253,253} %write{2147483647,-1}
const	string	$const24	"mx_luminance_color3"		%read{252,252} %write{2147483647,-1}
temp	float	$tmp48	%read{254,254} %write{253,253}
const	vector	$const25	0 0 0		%read{255,401} %write{2147483647,-1}
const	string	$const26	"mx_rotate_vector3"		%read{256,402} %write{2147483647,-1}
const	string	$const27	"radians"		%read{257,403} %write{2147483647,-1}
const	float	$const28	3.1415927		%read{258,404} %write{2147483647,-1}
const	float	$const29	180		%read{258,404} %write{2147483647,-1}
temp	float	$tmp49	%read{259,259} %write{258,258}
const	string	$const30	"rotationMatrix"		%read{260,406} %write{2147483647,-1}
temp	float	$tmp50	%read{266,266} %write{265,265}
temp	float	$tmp51	%read{268,268} %write{266,266}
temp	float	$tmp52	%read{268,268} %write{267,267}
temp	float	$tmp53	%read{269,269} %write{268,268}
temp	float	$tmp54	%read{322,322} %write{269,269}
temp	float	$tmp55	%read{271,271} %write{270,270}
temp	float	$tmp56	%read{273,273} %write{271,271}
temp	float	$tmp57	%read{273,273} %write{272,272}
temp	float	$tmp58	%read{276,276} %write{273,273}
temp	float	$tmp59	%read{275,275} %write{274,274}
temp	float	$tmp60	%read{276,276} %write{275,275}
temp	float	$tmp61	%read{322,322} %write{276,276}
temp	float	$tmp62	%read{278,278} %write{277,277}
temp	float	$tmp63	%read{280,280} %write{278,278}
temp	float	$tmp64	%read{280,280} %write{279,279}
temp	float	$tmp65	%read{283,283} %write{280,280}
temp	float	$tmp66	%read{282,282} %write{281,281}
temp	float	$tmp67	%read{283,283} %write{282,282}
temp	float	$tmp68	%read{322,322} %write{283,283}
temp	float	$tmp69	%read{285,285} %write{284,284}
temp	float	$tmp70	%read{287,287} %write{285,285}
temp	float	$tmp71	%read{287,287} %write{286,286}
temp	float	$tmp72	%read{290,290} %write{287,287}
temp	float	$tmp73	%read{289,289} %write{288,288}
temp	float	$tmp74	%read{290,290} %write{289,289}
temp	float	$tmp75	%read{322,322} %write{290,290}
temp	float	$tmp76	%read{292,292} %write{291,291}
temp	float	$tmp77	%read{294,294} %write{292,292}
temp	float	$tmp78	%read{294,294} %write{293,293}
temp	float	$tmp79	%read{295,295} %write{294,294}
temp	float	$tmp80	%read{322,322} %write{295,295}
temp	float	$tmp81	%read{297,297} %write{296,296}
temp	float	$tmp82	%read{299,299} %write{297,297}
temp	float	$tmp83	%read{299,299} %write{298,298}
temp	float	$tmp84	%read{302,302} %write{299,299}
temp	float	$tmp85	%read{301,301} %write{300,300}
temp	float	$tmp86	%read{302,302} %write{301,301}
temp	float	$tmp87	%read{322,322} %write{302,302}
temp	float	$tmp88	%read{304,304} %write{303,303}
temp	float	$tmp89	%read{306,306} %write{304,304}
temp	float	$tmp90	%read{306,306} %write{305,305}
temp	float	$tmp91	%read{309,309} %write{306,306}
temp	float	$tmp92	%read{308,308} %write{307,307}
temp	float	$tmp93	%read{309,309} %write{308,308}
temp	float	$tmp94	%read{322,322} %write{309,309}
temp	float	$tmp95	%read{311,311} %write{310,310}
temp	float	$tmp96	%read{313,313} %write{311,311}
temp	float	$tmp97	%read{313,313} %write{312,312}
temp	float	$tmp98	%read{316,316} %write{313,313}
temp	float	$tmp99	%read{315,315} %write{314,314}
temp	float	$tmp100	%read{316,316} %write{315,315}
temp	float	$tmp101	%read{322,322} %write{316,316}
temp	float	$tmp102	%read{318,318} %write{317,317}
temp	float	$tmp103	%read{320,320} %write{318,318}
temp	float	$tmp104	%read{320,320} %write{319,319}
temp	float	$tmp105	%read{321,321} %write{320,320}
temp	float	$tmp106	%read{322,322} %write{321,321}
temp	float	$tmp107.x	%read{329,362} %write{323,323}
temp	float	$tmp107.y	%read{331,364} %write{324,324}
temp	float	$tmp107.z	%read{334,367} %write{325,325}
temp	float	$tmp107.w	%read{337,370} %write{326,326}
temp	float	$tmp108	%read{329,329} %write{328,328}
temp	float	$tmp109	%read{332,332} %write{329,329}
temp	float	$tmp110	%read{331,331} %write{330,330}
temp	float	$tmp111	%read{332,332} %write{331,331}
temp	float	$tmp112	%read{335,335} %write{332,332}
temp	float	$tmp113	%read{334,334} %write{333,333}
temp	float	$tmp114	%read{335,335} %write{334,334}
temp	float	$tmp115	%read{338,338} %write{335,335}
temp	float	$tmp116	%read{337,337} %write{336,336}
temp	float	$tmp117	%read{338,338} %write{337,337}
temp	float	$tmp118	%read{340,340} %write{339,339}
temp	float	$tmp119	%read{343,343} %write{340,340}
temp	float	$tmp120	%read{342,342} %write{341,341}
temp	float	$tmp121	%read{343,343} %write{342,342}
temp	float	$tmp122	%read{346,346} %write{343,343}
temp	float	$tmp123	%read{345,345} %write{344,344}
temp	float	$tmp124	%read{346,346} %write{345,345}
temp	float	$tmp125	%read{349,349} %write{346,346}
temp	float	$tmp126	%read{348,348} %write{347,347}
temp	float	$tmp127	%read{349,349} %write{348,348}
temp	float	$tmp128	%read{351,351} %write{350,350}
temp	float	$tmp129	%read{354,354} %write{351,351}
temp	float	$tmp130	%read{353,353} %write{352,352}
temp	float	$tmp131	%read{354,354} %write{353,353}
temp	float	$tmp132	%read{357,357} %write{354,354}
temp	float	$tmp133	%read{356,356} %write{355,355}
temp	float	$tmp134	%read{357,357} %write{356,356}
temp	float	$tmp135	%read{360,360} %write{357,357}
temp	float	$tmp136	%read{359,359} %write{358,358}
temp	float	$tmp137	%read{360,360} %write{359,359}
temp	float	$tmp138	%read{362,362} %write{361,361}
temp	float	$tmp139	%read{365,365} %write{362,362}
temp	float	$tmp140	%read{364,364} %write{363,363}
temp	float	$tmp141	%read{365,365} %write{364,364}
temp	float	$tmp142	%read{368,368} %write{365,365}
temp	float	$tmp143	%read{367,367} %write{366,366}
temp	float	$tmp144	%read{368,368} %write{367,367}
temp	float	$tmp145	%read{371,371} %write{368,368}
temp	float	$tmp146	%read{370,370} %write{369,369}
temp	float	$tmp147	%read{371,371} %write{370,370}
const	string	$const31	"mx_artistic_ior"		%read{375,375} %write{2147483647,-1}
temp	color	$tmp148	%read{380,380} %write{376,376}
const	float	$const32	0.99		%read{377,377} %write{2147483647,-1}
temp	color	$tmp149	%read{379,379} %write{377,377}
temp	color	$tmp150	%read{380,380} %write{379,379}
temp	color	$tmp151	%read{384,384} %write{382,382}
temp	color	$tmp152	%read{384,384} %write{383,383}
temp	color	$tmp153	%read{387,387} %write{385,385}
temp	color	$tmp154	%read{387,387} %write{386,386}
temp	color	$tmp155	%read{392,392} %write{391,391}
temp	color	$tmp156	%read{394,394} %write{392,392}
temp	color	$tmp157	%read{394,394} %write{393,393}
temp	color	$tmp158	%read{396,396} %write{394,394}
temp	color	$tmp159	%read{396,396} %write{395,395}
temp	color	$tmp160	%read{398,398} %write{397,397}
temp	float	$tmp161	%read{405,405} %write{404,404}
temp	float	$tmp162	%read{412,412} %write{411,411}
temp	float	$tmp163	%read{414,414} %write{412,412}
temp	float	$tmp164	%read{414,414} %write{413,413}
temp	float	$tmp165	%read{415,415} %write{414,414}
temp	float	$tmp166	%read{468,468} %write{415,415}
temp	float	$tmp167	%read{417,417} %write{416,416}
temp	float	$tmp168	%read{419,419} %write{417,417}
temp	float	$tmp169	%read{419,419} %write{418,418}
temp	float	$tmp170	%read{422,422} %write{419,419}
temp	float	$tmp171	%read{421,421} %write{420,420}
temp	float	$tmp172	%read{422,422} %write{421,421}
temp	float	$tmp173	%read{468,468} %write{422,422}
temp	float	$tmp174	%read{424,424} %write{423,423}
temp	float	$tmp175	%read{426,426} %write{424,424}
temp	float	$tmp176	%read{426,426} %write{425,425}
temp	float	$tmp177	%read{429,429} %write{426,426}
temp	float	$tmp178	%read{428,428} %write{427,427}
temp	float	$tmp179	%read{429,429} %write{428,428}
temp	float	$tmp180	%read{468,468} %write{429,429}
temp	float	$tmp181	%read{431,431} %write{430,430}
temp	float	$tmp182	%read{433,433} %write{431,431}
temp	float	$tmp183	%read{433,433} %write{432,432}
temp	float	$tmp184	%read{436,436} %write{433,433}
temp	float	$tmp185	%read{435,435} %write{434,434}
temp	float	$tmp186	%read{436,436} %write{435,435}
temp	float	$tmp187	%read{468,468} %write{436,436}
temp	float	$tmp188	%read{438,438} %write{437,437}
temp	float	$tmp189	%read{440,440} %write{438,438}
temp	float	$tmp190	%read{440,440} %write{439,439}
temp	float	$tmp191	%read{441,441} %write{440,440}
temp	float	$tmp192	%read{468,468} %write{441,441}
temp	float	$tmp193	%read{443,443} %write{442,442}
temp	float	$tmp194	%read{445,445} %write{443,443}
temp	float	$tmp195	%read{445,445} %write{444,444}
temp	float	$tmp196	%read{448,448} %write{445,445}
temp	float	$tmp197	%read{447,447} %write{446,446}
temp	float	$tmp198	%read{448,448} %write{447,447}
temp	float	$tmp199	%read{468,468} %write{448,448}
temp	float	$tmp200	%read{450,450} %write{449,449}
temp	float	$tmp201	%read{452,452} %write{450,450}
temp	float	$tmp202	%read{452,452} %write{451,451}
temp	float	$tmp203	%read{455,455} %write{452,452}
temp	float	$tmp204	%read{454,454} %write{453,453}
temp	float	$tmp205	%read{455,455} %write{454,454}
temp	float	$tmp206	%read{468,468} %write{455,455}
temp	float	$tmp207	%read{457,457} %write{456,456}
temp	float	$tmp208	%read{459,459} %write{457,457}
temp	float	$tmp209	%read{459,459} %write{458,458}
temp	float	$tmp210	%read{462,462} %write{459,459}
temp	float	$tmp211	%read{461,461} %write{460,460}
temp	float	$tmp212	%read{462,462} %write{461,461}
temp	float	$tmp213	%read{468,468} %write{462,462}
temp	float	$tmp214	%read{464,464} %write{463,463}
temp	float	$tmp215	%read{466,466} %write{464,464}
temp	float	$tmp216	%read{466,466} %write{465,465}
temp	float	$tmp217	%read{467,467} %write{466,466}
temp	float	$tmp218	%read{468,468} %write{467,467}
temp	float	$tmp219.x	%read{475,508} %write{469,469}
temp	float	$tmp219.y	%read{477,510} %write{470,470}
temp	float	$tmp219.z	%read{480,513} %write{471,471}
temp	float	$tmp219.w	%read{483,516} %write{472,472}
temp	float	$tmp220	%read{475,475} %write{474,474}
temp	float	$tmp221	%read{478,478} %write{475,475}
temp	float	$tmp222	%read{477,477} %write{476,476}
temp	float	$tmp223	%read{478,478} %write{477,477}
temp	float	$tmp224	%read{481,481} %write{478,478}
temp	float	$tmp225	%read{480,480} %write{479,479}
temp	float	$tmp226	%read{481,481} %write{480,480}
temp	float	$tmp227	%read{484,484} %write{481,481}
temp	float	$tmp228	%read{483,483} %write{482,482}
temp	float	$tmp229	%read{484,484} %write{483,483}
temp	float	$tmp230	%read{486,486} %write{485,485}
temp	float	$tmp231	%read{489,489} %write{486,486}
temp	float	$tmp232	%read{488,488} %write{487,487}
temp	float	$tmp233	%read{489,489} %write{488,488}
temp	float	$tmp234	%read{492,492} %write{489,489}
temp	float	$tmp235	%read{491,491} %write{490,490}
temp	float	$tmp236	%read{492,492} %write{491,491}
temp	float	$tmp237	%read{495,495} %write{492,492}
temp	float	$tmp238	%read{494,494} %write{493,493}
temp	float	$tmp239	%read{495,495} %write{494,494}
temp	float	$tmp240	%read{497,497} %write{496,496}
temp	float	$tmp241	%read{500,500} %write{497,497}
temp	float	$tmp242	%read{499,499} %write{498,498}
temp	float	$tmp243	%read{500,500} %write{499,499}
temp	float	$tmp244	%read{503,503} %write{500,500}
temp	float	$tmp245	%read{502,502} %write{501,501}
temp	float	$tmp246	%read{503,503} %write{502,502}
temp	float	$tmp247	%read{506,506} %write{503,503}
temp	float	$tmp248	%read{505,505} %write{504,504}
temp	float	$tmp249	%read{506,506} %write{505,505}
temp	float	$tmp250	%read{508,508} %write{507,507}
temp	float	$tmp251	%read{511,511} %write{508,508}
temp	float	$tmp252	%read{510,510} %write{509,509}
temp	float	$tmp253	%read{511,511} %write{510,510}
temp	float	$tmp254	%read{514,514} %write{511,511}
temp	float	$tmp255	%read{513,513} %write{512,512}
temp	float	$tmp256	%read{514,514} %write{513,513}
temp	float	$tmp257	%read{517,517} %write{514,514}
temp	float	$tmp258	%read{516,516} %write{515,515}
temp	float	$tmp259	%read{517,517} %write{516,516}
temp	float	$tmp260	%read{523,523} %write{522,522}
temp	int	$tmp261	%read{541,541} %write{539,539}
const	string	$const33	"mx_ternary"		%read{540,569} %write{2147483647,-1}
temp	float	$tmp262	%read{551,551} %write{549,549}
temp	float	$tmp263	%read{552,552} %write{551,551}
temp	int	$tmp264	%read{554,554} %write{553,553}
temp	float	$tmp265	%read{558,558} %write{557,557}
temp	float	$tmp266	%read{557,557} %write{556,556}
temp	float	$tmp267	%read{559,559} %write{558,558}
temp	float	$tmp268	%read{561,561} %write{560,560}
temp	int	$tmp269	%read{570,570} %write{568,568}
temp	float	$tmp270	%read{580,580} %write{578,578}
temp	float	$tmp271	%read{581,581} %write{580,580}
temp	int	$tmp272	%read{583,583} %write{582,582}
temp	float	$tmp273	%read{587,587} %write{586,586}
temp	float	$tmp274	%read{586,586} %write{585,585}
temp	float	$tmp275	%read{588,588} %write{587,587}
temp	float	$tmp276	%read{590,590} %write{589,589}
const	string	$const34	"NG_convert_float_color3"		%read{601,601} %write{2147483647,-1}
const	float	$const35	1.5		%read{614,642} %write{2147483647,-1}
const	string	$const36	"ggx"		%read{614,642} %write{2147483647,-1}
const	string	$const37	"R"		%read{606,638} %write{2147483647,-1}
const	string	$const38	"mx_dielectric_bsdf"		%read{605,633} %write{2147483647,-1}
const	string	$const39	"T"		%read{606,638} %write{2147483647,-1}
temp	int	$tmp278	%read{607,607} %write{606,606}
temp	int	$tmp279	%read{611,611} %write{610,610}
temp	closure color	$tmp280	%read{615,615} %write{614,614}
const	string	$const40	"thinfilm_thickness"		%read{614,642} %write{2147483647,-1}
const	string	$const41	"thinfilm_ior"		%read{614,642} %write{2147483647,-1}
const	string	$const42	"dielectric_bsdf"		%read{614,642} %write{2147483647,-1}
temp	closure color	$tmp281	%read{619,619} %write{618,618}
const	string	$const43	"conductor_bsdf"		%read{618,618} %write{2147483647,-1}
temp	int	$tmp282	%read{623,623} %write{622,622}
temp	int	$tmp283	%read{627,627} %write{626,626}
temp	closure color	$tmp284	%read{631,631} %write{630,630}
temp	int	$tmp285	%read{635,635} %write{634,634}
temp	int	$tmp286	%read{639,639} %write{638,638}
temp	closure color	$tmp287	%read{643,643} %write{642,642}
temp	closure color	$tmp288	%read{645,645} %write{644,644}
const	string	$const44	"sheen_bsdf"		%read{644,644} %write{2147483647,-1}
temp	closure color	$tmp289	%read{648,648} %write{647,647}
const	string	$const45	"translucent_bsdf"		%read{647,647} %write{2147483647,-1}
const	string	$const46	"mx_subsurface_bsdf"		%read{650,650} %write{2147483647,-1}
temp	color	$tmp290	%read{652,652} %write{651,651}
const	string	$const47	"subsurface_bssrdf"		%read{652,652} %write{2147483647,-1}
const	string	$const48	"mix"		%read{653,694} %write{2147483647,-1}
temp	float	$tmp291	%read{655,655} %write{654,654}
temp	closure color	$tmp292	%read{657,657} %write{655,655}
temp	closure color	$tmp293	%read{657,657} %write{656,656}
temp	closure color	$tmp294	%read{659,659} %write{658,658}
const	string	$const49	"oren_nayar_diffuse_bsdf"		%read{658,658} %write{2147483647,-1}
temp	float	$tmp295	%read{662,662} %write{661,661}
temp	closure color	$tmp296	%read{664,664} %write{662,662}
temp	closure color	$tmp297	%read{664,664} %write{663,663}
const	string	$const50	"layer"		%read{665,678} %write{2147483647,-1}
temp	float	$tmp298	%read{668,668} %write{667,667}
temp	closure color	$tmp299	%read{670,670} %write{668,668}
temp	closure color	$tmp300	%read{670,670} %write{669,669}
temp	float	$tmp301	%read{674,674} %write{673,673}
temp	closure color	$tmp302	%read{676,676} %write{674,674}
temp	closure color	$tmp303	%read{676,676} %write{675,675}
const	string	$const51	"uniform_edf"		%read{679,679} %write{2147483647,-1}
const	float	$const52	5		%read{691,691} %write{2147483647,-1}
const	string	$const53	"mx_generalized_schlick_edf"		%read{682,682} %write{2147483647,-1}
temp	float	$tmp305	%read{685,685} %write{684,684}
temp	vector	$tmp306	%read{684,684} %write{683,683}
const	string	$const54	"mx_fresnel_schlick"		%read{686,686} %write{2147483647,-1}
temp	float	$tmp307	%read{689,689} %write{687,687}
temp	float	$tmp308	%read{690,690} %write{689,689}
temp	float	$tmp309	%read{692,692} %write{691,691}
temp	float	$tmp310	%read{696,696} %write{695,695}
temp	closure color	$tmp311	%read{698,698} %write{696,696}
temp	closure color	$tmp312	%read{698,698} %write{697,697}
const	string	$const55	"mx_surface"		%read{702,702} %write{2147483647,-1}
temp	float	$tmp313	%read{707,707} %write{706,706}
temp	float	$tmp314	%read{714,714} %write{713,713}
temp	closure color	$tmp315	%read{716,716} %write{715,715}
temp	closure color	$tmp316	%read{720,720} %write{716,716}
temp	closure color	$tmp317	%read{719,719} %write{717,717}
const	string	$const56	"transparent"		%read{717,717} %write{2147483647,-1}
temp	float	$tmp318	%read{719,719} %write{718,718}
temp	closure color	$tmp319	%read{720,720} %write{719,719}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:719
#     color4 color_gamma18_value_cm_out = color4(color(0.0), 0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{719} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:720
#     NG_g18_rec709_to_lin_rec709_color4(color_gamma18_value_cm_in, color_gamma18_value_cm_out);
	assign		color_gamma18_value_cm_out.rgb $const2 	%line{720} %argrw{"wr"}
	assign		color_gamma18_value_cm_out.a $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:721
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const4 112 	%line{721} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:56
#     NG_convert_color4_color3(in, asColor3_out);
	assign		___672_asColor3_out $const2 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:57
#     int alpha_index_tmp = 3;
	functioncall	$const5 81 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 79 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 27 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp1 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp1 17 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp2 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp2 21 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp3 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp3 25 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_gamma18_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 43 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp4 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp4 33 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp5 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp5 37 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp6 41 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_gamma18_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 59 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp7 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp7 49 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp8 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp8 53 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp9 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp9 57 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_gamma18_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 75 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp10 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp10 65 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp11 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp11 69 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp12 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp12 73 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_gamma18_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:42
# }
	assign		___672_asColor3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:58
#     float alpha_out = mx_extract(in, alpha_index_tmp);
	assign		___672_alpha_index_tmp $const10 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:59
#     color transform_out = color(0.0);
	functioncall	$const7 97 	%line{59} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp13 ___672_alpha_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp13 87 97 	%argrw{"r"}
	compref		___672_alpha_out color_gamma18_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp14 ___672_alpha_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp14 91 97 	%argrw{"r"}
	compref		___672_alpha_out color_gamma18_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp15 ___672_alpha_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp15 95 97 	%argrw{"r"}
	compref		___672_alpha_out color_gamma18_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___672_alpha_out color_gamma18_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:60
#     NG_g18_rec709_to_lin_rec709_color3(asColor3_out, transform_out);
	assign		___672_transform_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:61
#     color4 asColor4_out = { color(transform_out[0],transform_out[1],transform_out[2]),alpha_out };
	functioncall	$const11 105 	%line{61} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:47
#     color max_out = max(in, max_in2_tmp);
	assign		___671_max_in2_tmp $const3 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:48
#     float gamma_in2_tmp = 1.800000;
	assign		$tmp16 ___671_max_in2_tmp 	%line{48} %argrw{"wr"}
	max		___671_max_out ___672_asColor3_out $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:49
#     color gamma_out = pow(max_out, gamma_in2_tmp);
	assign		___671_gamma_in2_tmp $const12 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:50
#     out = gamma_out;
	pow		___671_gamma_out ___671_max_out ___671_gamma_in2_tmp 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:51
# }
	assign		___672_transform_out ___671_gamma_out 	%line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:62
#     out = asColor4_out;
	compref		$tmp17 ___672_transform_out $const1 	%line{62} %argrw{"wrr"}
	compref		$tmp18 ___672_transform_out $const8 	%argrw{"wrr"}
	compref		$tmp19 ___672_transform_out $const9 	%argrw{"wrr"}
	color		___672_asColor4_out.rgb $tmp17 $tmp18 $tmp19 	%argrw{"wrrr"}
	assign		___672_asColor4_out.a ___672_alpha_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:63
# }
	assign		color_gamma18_value_cm_out.rgb ___672_asColor4_out.rgb 	%line{63} %argrw{"wr"}
	assign		color_gamma18_value_cm_out.a ___672_asColor4_out.a 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:722
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const13 114 	%line{722} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const14 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:723
#     color color_gamma18_color3_out = color(0.0);
	compref		$tmp21 N $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{723} %argrw{"wrr"}
	compref		$tmp22 N $const1 	%argrw{"wrr"}
	neg		$tmp23 $tmp22 	%argrw{"wr"}
	vector		$tmp20 $tmp21 $const3 $tmp23 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp20 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:724
#     NG_convert_color4_color3(color_gamma18_value_cm_out, color_gamma18_color3_out);
	assign		color_gamma18_color3_out $const2 	%line{724} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:725
#     surfaceshader color_gamma18_standard_surface2_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const5 196 	%line{725} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 194 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 142 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp24 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp24 132 142 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp25 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp25 136 142 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp26 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp26 140 142 	%argrw{"r"}
	compref		___669_N_extract_0_out color_gamma18_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_gamma18_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 158 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp27 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp27 148 158 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp28 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp28 152 158 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp29 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp29 156 158 	%argrw{"r"}
	compref		___669_N_extract_1_out color_gamma18_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_gamma18_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 174 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp30 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp30 164 174 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp31 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp31 168 174 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp32 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp32 172 174 	%argrw{"r"}
	compref		___669_N_extract_2_out color_gamma18_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_gamma18_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 190 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp33 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp33 180 190 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp34 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp34 184 190 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp35 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp35 188 190 	%argrw{"r"}
	compref		___669_N_extract_3_out color_gamma18_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_gamma18_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:42
# }
	assign		color_gamma18_color3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:726
#     NG_standard_surface_surfaceshader_100(color_gamma18_standard_surface2_base, color_gamma18_color3_out, color_gamma18_standard_surface2_diffuse_roughness, color_gamma18_standard_surface2_metalness, color_gamma18_standard_surface2_specular, color_gamma18_standard_surface2_specular_color, color_gamma18_standard_surface2_specular_roughness, color_gamma18_standard_surface2_specular_IOR, color_gamma18_standard_surface2_specular_anisotropy, color_gamma18_standard_surface2_specular_rotation, color_gamma18_standard_surface2_transmission, color_gamma18_standard_surface2_transmission_color, color_gamma18_standard_surface2_transmission_depth, color_gamma18_standard_surface2_transmission_scatter, color_gamma18_standard_surface2_transmission_scatter_anisotropy, color_gamma18_standard_surface2_transmission_dispersion, color_gamma18_standard_surface2_transmission_extra_roughness, color_gamma18_standard_surface2_subsurface, color_gamma18_standard_surface2_subsurface_color, color_gamma18_standard_surface2_subsurface_radius, color_gamma18_standard_surface2_subsurface_scale, color_gamma18_standard_surface2_subsurface_anisotropy, color_gamma18_standard_surface2_sheen, color_gamma18_standard_surface2_sheen_color, color_gamma18_standard_surface2_sheen_roughness, color_gamma18_standard_surface2_coat, color_gamma18_standard_surface2_coat_color, color_gamma18_standard_surface2_coat_roughness, color_gamma18_standard_surface2_coat_anisotropy, color_gamma18_standard_surface2_coat_rotation, color_gamma18_standard_surface2_coat_IOR, geomprop_Nworld_out1, color_gamma18_standard_surface2_coat_affect_color, color_gamma18_standard_surface2_coat_affect_roughness, color_gamma18_standard_surface2_thin_film_thickness, color_gamma18_standard_surface2_thin_film_IOR, color_gamma18_standard_surface2_emission, color_gamma18_standard_surface2_emission_color, color_gamma18_standard_surface2_opacity, color_gamma18_standard_surface2_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, color_gamma18_standard_surface2_out);
	assign		color_gamma18_standard_surface2_out.bsdf null_closure 	%line{726} %argrw{"wr"}
	assign		color_gamma18_standard_surface2_out.edf null_closure 	%argrw{"wr"}
	assign		color_gamma18_standard_surface2_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:727
#     {
	functioncall	$const16 712 	%line{727} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:243
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___697_null_closure $const1 	%line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:244
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___697_coat_roughness_vector_out.x $const3 	%line{244} %argrw{"wr"}
	assign		___697_coat_roughness_vector_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:245
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const17 222 	%line{245} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:68
#     if (anisotropy > 0.0)
	mul		$tmp36 color_gamma18_standard_surface2_coat_roughness color_gamma18_standard_surface2_coat_roughness 	%line{68} %argrw{"wrr"}
	functioncall	$const19 208 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp37 $tmp36 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp37 $const18 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:69
#     {
	gt		$tmp38 color_gamma18_standard_surface2_coat_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{69} %argrw{"wrr"}
	if		$tmp38 220 222 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const19 213 	%line{71} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 color_gamma18_standard_surface2_coat_anisotropy $const20 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp39 $tmp40 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp41 $const15 $tmp39 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{71} %argrw{"wrr"}
	sqrt		___674_aspect $tmp41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:72
#         result.y = roughness_sqr * aspect;
	div		$tmp42 ___673_roughness_sqr ___674_aspect 	%line{72} %argrw{"wrr"}
	min		___697_coat_roughness_vector_out.x $tmp42 $const15 	%argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:73
#     }
	mul		___697_coat_roughness_vector_out.y ___673_roughness_sqr ___674_aspect 	%line{73} %argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.y ___697_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:77
#         result.y = roughness_sqr;
	assign		___697_coat_roughness_vector_out.x ___673_roughness_sqr 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:78
#     }
	assign		___697_coat_roughness_vector_out.y ___673_roughness_sqr 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:246
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___697_coat_tangent_rotate_degree_in2_tmp $const21 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:247
#     color metal_reflectivity_out = base_color * base;
	mul		___697_coat_tangent_rotate_degree_out color_gamma18_standard_surface2_coat_rotation ___697_coat_tangent_rotate_degree_in2_tmp 	%line{247} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:248
#     color metal_edgecolor_out = specular_color * specular;
	mul		___697_metal_reflectivity_out color_gamma18_color3_out color_gamma18_standard_surface2_base 	%line{248} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:249
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___697_metal_edgecolor_out color_gamma18_standard_surface2_specular_color color_gamma18_standard_surface2_specular 	%line{249} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:250
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___697_coat_affect_roughness_multiply1_out color_gamma18_standard_surface2_coat_affect_roughness color_gamma18_standard_surface2_coat 	%line{250} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:251
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___697_tangent_rotate_degree_in2_tmp $const21 	%line{251} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:252
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___697_tangent_rotate_degree_out color_gamma18_standard_surface2_specular_rotation ___697_tangent_rotate_degree_in2_tmp 	%line{252} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:253
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___697_transmission_roughness_add_out color_gamma18_standard_surface2_specular_roughness color_gamma18_standard_surface2_transmission_extra_roughness 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:254
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___697_subsurface_color_nonnegative_in2_tmp $const3 	%line{254} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:255
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp43 ___697_subsurface_color_nonnegative_in2_tmp 	%line{255} %argrw{"wr"}
	max		___697_subsurface_color_nonnegative_out color_gamma18_standard_surface2_subsurface_color $tmp43 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:256
#     float coat_clamped_high_tmp = 1.000000;
	assign		___697_coat_clamped_low_tmp $const3 	%line{256} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:257
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___697_coat_clamped_high_tmp $const15 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:258
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const19 238 	%line{258} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp44 color_gamma18_standard_surface2_coat ___697_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_coat_clamped_out $tmp44 ___697_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:259
#     float subsurface_selector_out = float(thin_walled);
	mul		___697_subsurface_radius_scaled_out color_gamma18_standard_surface2_subsurface_radius color_gamma18_standard_surface2_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{259} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:260
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp45 color_gamma18_standard_surface2_thin_walled 	%line{260} %argrw{"wr"}
	assign		___697_subsurface_selector_out $tmp45 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:261
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___697_base_color_nonnegative_in2_tmp $const3 	%line{261} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:262
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp46 ___697_base_color_nonnegative_in2_tmp 	%line{262} %argrw{"wr"}
	max		___697_base_color_nonnegative_out color_gamma18_color3_out $tmp46 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:263
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___697_coat_attenuation_bg_tmp $const22 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:264
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___697_coat_attenuation_out ___697_coat_attenuation_bg_tmp color_gamma18_standard_surface2_coat_color color_gamma18_standard_surface2_coat 	%line{264} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:265
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___697_one_minus_coat_ior_in1_tmp $const15 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:266
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___697_one_minus_coat_ior_out ___697_one_minus_coat_ior_in1_tmp color_gamma18_standard_surface2_coat_IOR 	%line{266} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:267
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___697_one_plus_coat_ior_in1_tmp $const15 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:268
#     color emission_weight_out = emission_color * emission1;
	add		___697_one_plus_coat_ior_out ___697_one_plus_coat_ior_in1_tmp color_gamma18_standard_surface2_coat_IOR 	%line{268} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:269
#     color opacity_luminance_out = color(0.0);
	mul		___697_emission_weight_out color_gamma18_standard_surface2_emission_color color_gamma18_standard_surface2_emission 	%line{269} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:270
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___697_opacity_luminance_out $const2 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:271
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const24 255 	%line{271} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:84
# }
	dot		$tmp48 color_gamma18_standard_surface2_opacity $const23 	%line{84} %argrw{"wrr"}
	assign		___697_opacity_luminance_out $tmp48 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:272
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___697_coat_tangent_rotate_out $const25 	%line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:273
#     color artistic_ior_ior = color(0.0);
	functioncall	$const26 373 	%line{273} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:102
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const27 260 	%line{102} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp49 $const28 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___678_rotationRadians ___697_coat_tangent_rotate_degree_out $tmp49 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:103
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const30 323 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{103} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:89
#     float s = sin(angle);
	normalize	___677_nAxis geomprop_Nworld_out1 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:90
#     float c = cos(angle);
	sin		___677_s ___678_rotationRadians 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:91
#     float oc = 1.0 - c;
	cos		___677_c ___678_rotationRadians 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:92
# 
	sub		___677_oc $const15 ___677_c 	%line{92} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:94
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp50 ___677_nAxis $const1 	%line{94} %argrw{"wrr"}
	mul		$tmp51 ___677_oc $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	add		$tmp54 $tmp53 ___677_c 	%argrw{"wrr"}
	compref		$tmp55 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp56 ___677_oc $tmp55 	%argrw{"wrr"}
	compref		$tmp57 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp60 $tmp59 ___677_s 	%argrw{"wrr"}
	sub		$tmp61 $tmp58 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp63 ___677_oc $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___677_s 	%argrw{"wrr"}
	add		$tmp68 $tmp65 $tmp67 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:95
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp69 ___677_nAxis $const1 	%line{95} %argrw{"wrr"}
	mul		$tmp70 ___677_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp74 $tmp73 ___677_s 	%argrw{"wrr"}
	add		$tmp75 $tmp72 $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp77 ___677_oc $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	add		$tmp80 $tmp79 ___677_c 	%argrw{"wrr"}
	compref		$tmp81 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp82 ___677_oc $tmp81 	%argrw{"wrr"}
	compref		$tmp83 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp84 $tmp82 $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp86 $tmp85 ___677_s 	%argrw{"wrr"}
	sub		$tmp87 $tmp84 $tmp86 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:96
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp88 ___677_nAxis $const9 	%line{96} %argrw{"wrr"}
	mul		$tmp89 ___677_oc $tmp88 	%argrw{"wrr"}
	compref		$tmp90 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	compref		$tmp92 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp93 $tmp92 ___677_s 	%argrw{"wrr"}
	sub		$tmp94 $tmp91 $tmp93 	%argrw{"wrr"}
	compref		$tmp95 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp96 ___677_oc $tmp95 	%argrw{"wrr"}
	compref		$tmp97 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp98 $tmp96 $tmp97 	%argrw{"wrr"}
	compref		$tmp99 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp100 $tmp99 ___677_s 	%argrw{"wrr"}
	add		$tmp101 $tmp98 $tmp100 	%argrw{"wrr"}
	compref		$tmp102 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp103 ___677_oc $tmp102 	%argrw{"wrr"}
	compref		$tmp104 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp105 $tmp103 $tmp104 	%argrw{"wrr"}
	add		$tmp106 $tmp105 ___677_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:94
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___678_m $tmp54 $tmp61 $tmp68 $const3 $tmp75 $tmp80 $tmp87 $const3 $tmp94 $tmp101 $tmp106 $const3 $const3 $const3 $const3 $const15 	%line{94} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:104
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp107.x geomprop_Tworld_out1 $const1 	%line{104} %argrw{"wrr"}
	compref		$tmp107.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp107.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp107.w $const15 	%argrw{"wr"}
	functioncall	$const13 372 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp108 ___678_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp109 $tmp108 $tmp107.x 	%argrw{"wrr"}
	mxcompref	$tmp110 ___678_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp111 $tmp110 $tmp107.y 	%argrw{"wrr"}
	add		$tmp112 $tmp109 $tmp111 	%argrw{"wrr"}
	mxcompref	$tmp113 ___678_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp107.z 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	mxcompref	$tmp116 ___678_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp107.w 	%argrw{"wrr"}
	add		___678_trans.x $tmp115 $tmp117 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp118 ___678_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp119 $tmp118 $tmp107.x 	%argrw{"wrr"}
	mxcompref	$tmp120 ___678_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp121 $tmp120 $tmp107.y 	%argrw{"wrr"}
	add		$tmp122 $tmp119 $tmp121 	%argrw{"wrr"}
	mxcompref	$tmp123 ___678_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp124 $tmp123 $tmp107.z 	%argrw{"wrr"}
	add		$tmp125 $tmp122 $tmp124 	%argrw{"wrr"}
	mxcompref	$tmp126 ___678_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp107.w 	%argrw{"wrr"}
	add		___678_trans.y $tmp125 $tmp127 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp128 ___678_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp129 $tmp128 $tmp107.x 	%argrw{"wrr"}
	mxcompref	$tmp130 ___678_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp131 $tmp130 $tmp107.y 	%argrw{"wrr"}
	add		$tmp132 $tmp129 $tmp131 	%argrw{"wrr"}
	mxcompref	$tmp133 ___678_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp134 $tmp133 $tmp107.z 	%argrw{"wrr"}
	add		$tmp135 $tmp132 $tmp134 	%argrw{"wrr"}
	mxcompref	$tmp136 ___678_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp107.w 	%argrw{"wrr"}
	add		___678_trans.z $tmp135 $tmp137 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp138 ___678_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp139 $tmp138 $tmp107.x 	%argrw{"wrr"}
	mxcompref	$tmp140 ___678_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp141 $tmp140 $tmp107.y 	%argrw{"wrr"}
	add		$tmp142 $tmp139 $tmp141 	%argrw{"wrr"}
	mxcompref	$tmp143 ___678_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp144 $tmp143 $tmp107.z 	%argrw{"wrr"}
	add		$tmp145 $tmp142 $tmp144 	%argrw{"wrr"}
	mxcompref	$tmp146 ___678_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp107.w 	%argrw{"wrr"}
	add		___678_trans.w $tmp145 $tmp147 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:105
# }
	vector		___697_coat_tangent_rotate_out ___678_trans.x ___678_trans.y ___678_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{105} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:274
#     color artistic_ior_extinction = color(0.0);
	assign		___697_artistic_ior_ior $const2 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:275
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___697_artistic_ior_extinction $const2 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:276
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const31 400 	%line{276} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:113
#     color r_sqrt = sqrt(r);
	assign		$tmp148 $const3 	%line{113} %argrw{"wr"}
	assign		$tmp149 $const32 	%argrw{"wr"}
	functioncall	$const19 381 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp150 ___697_metal_reflectivity_out $tmp149 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___679_r $tmp150 $tmp148 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:114
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___679_r_sqrt ___679_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:115
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp151 $const15 ___679_r 	%line{115} %argrw{"wrr"}
	add		$tmp152 $const15 ___679_r 	%argrw{"wrr"}
	div		___679_n_min $tmp151 $tmp152 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:116
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp153 $const15 ___679_r_sqrt 	%line{116} %argrw{"wrr"}
	sub		$tmp154 $const15 ___679_r_sqrt 	%argrw{"wrr"}
	div		___679_n_max $tmp153 $tmp154 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:117
# 
	mix		___697_artistic_ior_ior ___679_n_max ___679_n_min ___697_metal_edgecolor_out 	%line{117} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:119
#     color nm1 = ior - 1.0;
	add		___679_np1 ___697_artistic_ior_ior $const15 	%line{119} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:120
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___679_nm1 ___697_artistic_ior_ior $const15 	%line{120} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:121
#     k2 = max(k2, 0.0);
	mul		$tmp155 ___679_np1 ___679_np1 	%line{121} %argrw{"wrr"}
	mul		$tmp156 $tmp155 ___679_r 	%argrw{"wrr"}
	mul		$tmp157 ___679_nm1 ___679_nm1 	%argrw{"wrr"}
	sub		$tmp158 $tmp156 $tmp157 	%argrw{"wrr"}
	sub		$tmp159 $const15 ___679_r 	%argrw{"wrr"}
	div		___679_k2 $tmp158 $tmp159 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:122
#     extinction = sqrt(k2);
	assign		$tmp160 $const3 	%line{122} %argrw{"wr"}
	max		___679_k2 ___679_k2 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:123
# }
	sqrt		___697_artistic_ior_extinction ___679_k2 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:277
#     vector tangent_rotate_out = vector(0.0);
	mul		___697_coat_affect_roughness_multiply2_out ___697_coat_affect_roughness_multiply1_out color_gamma18_standard_surface2_coat_roughness 	%line{277} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:278
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___697_tangent_rotate_out $const25 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:279
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const26 519 	%line{279} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:102
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const27 406 	%line{102} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp161 $const28 $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___678_rotationRadians ___697_tangent_rotate_degree_out $tmp161 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:103
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const30 469 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{103} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:89
#     float s = sin(angle);
	normalize	___677_nAxis geomprop_Nworld_out1 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:90
#     float c = cos(angle);
	sin		___677_s ___678_rotationRadians 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:91
#     float oc = 1.0 - c;
	cos		___677_c ___678_rotationRadians 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:92
# 
	sub		___677_oc $const15 ___677_c 	%line{92} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:94
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp162 ___677_nAxis $const1 	%line{94} %argrw{"wrr"}
	mul		$tmp163 ___677_oc $tmp162 	%argrw{"wrr"}
	compref		$tmp164 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	add		$tmp166 $tmp165 ___677_c 	%argrw{"wrr"}
	compref		$tmp167 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp168 ___677_oc $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp170 $tmp168 $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp172 $tmp171 ___677_s 	%argrw{"wrr"}
	sub		$tmp173 $tmp170 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp175 ___677_oc $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp177 $tmp175 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp179 $tmp178 ___677_s 	%argrw{"wrr"}
	add		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:95
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp181 ___677_nAxis $const1 	%line{95} %argrw{"wrr"}
	mul		$tmp182 ___677_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___677_s 	%argrw{"wrr"}
	add		$tmp187 $tmp184 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp189 ___677_oc $tmp188 	%argrw{"wrr"}
	compref		$tmp190 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp191 $tmp189 $tmp190 	%argrw{"wrr"}
	add		$tmp192 $tmp191 ___677_c 	%argrw{"wrr"}
	compref		$tmp193 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp194 ___677_oc $tmp193 	%argrw{"wrr"}
	compref		$tmp195 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp196 $tmp194 $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp198 $tmp197 ___677_s 	%argrw{"wrr"}
	sub		$tmp199 $tmp196 $tmp198 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:96
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp200 ___677_nAxis $const9 	%line{96} %argrw{"wrr"}
	mul		$tmp201 ___677_oc $tmp200 	%argrw{"wrr"}
	compref		$tmp202 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp203 $tmp201 $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp205 $tmp204 ___677_s 	%argrw{"wrr"}
	sub		$tmp206 $tmp203 $tmp205 	%argrw{"wrr"}
	compref		$tmp207 ___677_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp208 ___677_oc $tmp207 	%argrw{"wrr"}
	compref		$tmp209 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp210 $tmp208 $tmp209 	%argrw{"wrr"}
	compref		$tmp211 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp212 $tmp211 ___677_s 	%argrw{"wrr"}
	add		$tmp213 $tmp210 $tmp212 	%argrw{"wrr"}
	compref		$tmp214 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp215 ___677_oc $tmp214 	%argrw{"wrr"}
	compref		$tmp216 ___677_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp217 $tmp215 $tmp216 	%argrw{"wrr"}
	add		$tmp218 $tmp217 ___677_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:94
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___678_m $tmp166 $tmp173 $tmp180 $const3 $tmp187 $tmp192 $tmp199 $const3 $tmp206 $tmp213 $tmp218 $const3 $const3 $const3 $const3 $const15 	%line{94} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:104
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp219.x geomprop_Tworld_out1 $const1 	%line{104} %argrw{"wrr"}
	compref		$tmp219.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp219.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp219.w $const15 	%argrw{"wr"}
	functioncall	$const13 518 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp220 ___678_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp221 $tmp220 $tmp219.x 	%argrw{"wrr"}
	mxcompref	$tmp222 ___678_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp223 $tmp222 $tmp219.y 	%argrw{"wrr"}
	add		$tmp224 $tmp221 $tmp223 	%argrw{"wrr"}
	mxcompref	$tmp225 ___678_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp219.z 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	mxcompref	$tmp228 ___678_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp219.w 	%argrw{"wrr"}
	add		___678_trans.x $tmp227 $tmp229 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp230 ___678_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp231 $tmp230 $tmp219.x 	%argrw{"wrr"}
	mxcompref	$tmp232 ___678_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp233 $tmp232 $tmp219.y 	%argrw{"wrr"}
	add		$tmp234 $tmp231 $tmp233 	%argrw{"wrr"}
	mxcompref	$tmp235 ___678_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp236 $tmp235 $tmp219.z 	%argrw{"wrr"}
	add		$tmp237 $tmp234 $tmp236 	%argrw{"wrr"}
	mxcompref	$tmp238 ___678_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp219.w 	%argrw{"wrr"}
	add		___678_trans.y $tmp237 $tmp239 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp240 ___678_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp241 $tmp240 $tmp219.x 	%argrw{"wrr"}
	mxcompref	$tmp242 ___678_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp243 $tmp242 $tmp219.y 	%argrw{"wrr"}
	add		$tmp244 $tmp241 $tmp243 	%argrw{"wrr"}
	mxcompref	$tmp245 ___678_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp246 $tmp245 $tmp219.z 	%argrw{"wrr"}
	add		$tmp247 $tmp244 $tmp246 	%argrw{"wrr"}
	mxcompref	$tmp248 ___678_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp219.w 	%argrw{"wrr"}
	add		___678_trans.z $tmp247 $tmp249 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp250 ___678_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp251 $tmp250 $tmp219.x 	%argrw{"wrr"}
	mxcompref	$tmp252 ___678_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp253 $tmp252 $tmp219.y 	%argrw{"wrr"}
	add		$tmp254 $tmp251 $tmp253 	%argrw{"wrr"}
	mxcompref	$tmp255 ___678_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp256 $tmp255 $tmp219.z 	%argrw{"wrr"}
	add		$tmp257 $tmp254 $tmp256 	%argrw{"wrr"}
	mxcompref	$tmp258 ___678_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp219.w 	%argrw{"wrr"}
	add		___678_trans.w $tmp257 $tmp259 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:105
# }
	vector		___697_tangent_rotate_out ___678_trans.x ___678_trans.y ___678_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{105} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:280
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___697_transmission_roughness_clamped_low_tmp $const3 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:281
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___697_transmission_roughness_clamped_high_tmp $const15 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:282
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const19 524 	%line{282} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp260 ___697_transmission_roughness_add_out ___697_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_transmission_roughness_clamped_out $tmp260 ___697_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:283
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___697_coat_gamma_multiply_out ___697_coat_clamped_out color_gamma18_standard_surface2_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:284
#     int opacity_luminance_float_index_tmp = 0;
	div		___697_coat_ior_to_F0_sqrt_out ___697_one_minus_coat_ior_out ___697_one_plus_coat_ior_out 	%line{284} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:285
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___697_opacity_luminance_float_index_tmp $const1 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:286
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const7 529 	%line{286} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___697_opacity_luminance_float_out ___697_opacity_luminance_out ___697_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:287
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___697_coat_tangent_rotate_normalize_out ___697_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:288
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_roughness_fg_tmp $const15 	%line{288} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:289
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___697_coat_affected_roughness_out color_gamma18_standard_surface2_specular_roughness ___697_coat_affected_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{289} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:290
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___697_tangent_rotate_normalize_out ___697_tangent_rotate_out 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:291
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_transmission_roughness_fg_tmp $const15 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:292
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___697_coat_affected_transmission_roughness_out ___697_transmission_roughness_clamped_out ___697_coat_affected_transmission_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{292} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:293
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___697_coat_gamma_in2_tmp $const15 	%line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:294
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___697_coat_gamma_out ___697_coat_gamma_multiply_out ___697_coat_gamma_in2_tmp 	%line{294} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:295
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___697_coat_ior_to_F0_out ___697_coat_ior_to_F0_sqrt_out ___697_coat_ior_to_F0_sqrt_out 	%line{295} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:296
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___697_coat_tangent_value2_tmp $const3 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:297
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp261 color_gamma18_standard_surface2_coat_anisotropy ___697_coat_tangent_value2_tmp 	%line{297} %argrw{"wrr"}
	functioncall	$const33 546 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp261 544 546 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_coat_tangent_out ___697_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:298
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___697_main_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{298} %argrw{"wr"}
	assign		___697_main_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:299
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const17 567 	%line{299} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:68
#     if (anisotropy > 0.0)
	mul		$tmp262 ___697_coat_affected_roughness_out ___697_coat_affected_roughness_out 	%line{68} %argrw{"wrr"}
	functioncall	$const19 553 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp263 $tmp262 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp263 $const18 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:69
#     {
	gt		$tmp264 color_gamma18_standard_surface2_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{69} %argrw{"wrr"}
	if		$tmp264 565 567 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const19 558 	%line{71} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp266 color_gamma18_standard_surface2_specular_anisotropy $const20 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp265 $tmp266 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp267 $const15 $tmp265 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{71} %argrw{"wrr"}
	sqrt		___674_aspect $tmp267 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:72
#         result.y = roughness_sqr * aspect;
	div		$tmp268 ___673_roughness_sqr ___674_aspect 	%line{72} %argrw{"wrr"}
	min		___697_main_roughness_out.x $tmp268 $const15 	%argrw{"wrr"}
	assign		___697_main_roughness_out.x ___697_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:73
#     }
	mul		___697_main_roughness_out.y ___673_roughness_sqr ___674_aspect 	%line{73} %argrw{"wrr"}
	assign		___697_main_roughness_out.y ___697_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:77
#         result.y = roughness_sqr;
	assign		___697_main_roughness_out.x ___673_roughness_sqr 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:78
#     }
	assign		___697_main_roughness_out.y ___673_roughness_sqr 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:300
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___697_main_tangent_value2_tmp $const3 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:301
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp269 color_gamma18_standard_surface2_specular_anisotropy ___697_main_tangent_value2_tmp 	%line{301} %argrw{"wrr"}
	functioncall	$const33 575 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp269 573 575 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_main_tangent_out ___697_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:302
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___697_transmission_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{302} %argrw{"wr"}
	assign		___697_transmission_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:303
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const17 596 	%line{303} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:68
#     if (anisotropy > 0.0)
	mul		$tmp270 ___697_coat_affected_transmission_roughness_out ___697_coat_affected_transmission_roughness_out 	%line{68} %argrw{"wrr"}
	functioncall	$const19 582 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp271 $tmp270 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp271 $const18 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:69
#     {
	gt		$tmp272 color_gamma18_standard_surface2_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{69} %argrw{"wrr"}
	if		$tmp272 594 596 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const19 587 	%line{71} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 color_gamma18_standard_surface2_specular_anisotropy $const20 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp273 $tmp274 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:71
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp275 $const15 $tmp273 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{71} %argrw{"wrr"}
	sqrt		___674_aspect $tmp275 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:72
#         result.y = roughness_sqr * aspect;
	div		$tmp276 ___673_roughness_sqr ___674_aspect 	%line{72} %argrw{"wrr"}
	min		___697_transmission_roughness_out.x $tmp276 $const15 	%argrw{"wrr"}
	assign		___697_transmission_roughness_out.x ___697_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:73
#     }
	mul		___697_transmission_roughness_out.y ___673_roughness_sqr ___674_aspect 	%line{73} %argrw{"wrr"}
	assign		___697_transmission_roughness_out.y ___697_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:77
#         result.y = roughness_sqr;
	assign		___697_transmission_roughness_out.x ___673_roughness_sqr 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:78
#     }
	assign		___697_transmission_roughness_out.y ___673_roughness_sqr 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:304
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___697_coat_affected_subsurface_color_out ___697_subsurface_color_nonnegative_out ___697_coat_gamma_out 	%line{304} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:305
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___697_coat_affected_diffuse_color_out ___697_base_color_nonnegative_out ___697_coat_gamma_out 	%line{305} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:306
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___697_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{306} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:307
#     color emission_color0_out = color(0.0);
	sub		___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_in1_tmp ___697_coat_ior_to_F0_out 	%line{307} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:308
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___697_emission_color0_out $const2 	%line{308} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:309
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const34 604 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:144
#     out = combine_out;
	color		___682_combine_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out 	%line{144} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:145
# }
	assign		___697_emission_color0_out ___682_combine_out 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:310
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___697_coat_bsdf_out ___697_null_closure 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:311
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const38 616 	%line{311} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:128
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp278 $const37 $const39 	%line{128} %argrw{"wrr"}
	if		$tmp278 609 610 	%argrw{"r"}
	assign		___680_reflection_tint $const2 	%argrw{"wr"}
	assign		___680_reflection_tint $const22 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:129
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp279 $const37 $const37 	%line{129} %argrw{"wrr"}
	if		$tmp279 613 614 	%argrw{"r"}
	assign		___680_transmission_tint $const2 	%argrw{"wr"}
	assign		___680_transmission_tint $const22 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:130
# }
	closure		$tmp280 $const42 geomprop_Nworld_out1 ___697_coat_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.y color_gamma18_standard_surface2_coat_IOR $const36 $const40 $const3 $const41 $const35 	%line{130} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_coat_bsdf_out $tmp280 color_gamma18_standard_surface2_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:312
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___697_metal_bsdf_weight_tmp $const15 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:313
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___697_metal_bsdf_distribution_tmp $const36 	%line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:314
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp281 $const43 geomprop_Nworld_out1 ___697_main_tangent_out ___697_main_roughness_out.x ___697_main_roughness_out.y ___697_artistic_ior_ior ___697_artistic_ior_extinction ___697_metal_bsdf_distribution_tmp $const40 color_gamma18_standard_surface2_thin_film_thickness $const41 color_gamma18_standard_surface2_thin_film_IOR 	%line{314} %argrw{"wrrrrrrrrrrrr"}
	mul		___697_metal_bsdf_out $tmp281 ___697_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:315
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___697_specular_bsdf_out ___697_null_closure 	%line{315} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:316
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const38 632 	%line{316} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:128
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp282 $const37 $const39 	%line{128} %argrw{"wrr"}
	if		$tmp282 625 626 	%argrw{"r"}
	assign		___680_reflection_tint $const2 	%argrw{"wr"}
	assign		___680_reflection_tint color_gamma18_standard_surface2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:129
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp283 $const37 $const37 	%line{129} %argrw{"wrr"}
	if		$tmp283 629 630 	%argrw{"r"}
	assign		___680_transmission_tint $const2 	%argrw{"wr"}
	assign		___680_transmission_tint color_gamma18_standard_surface2_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:130
# }
	closure		$tmp284 $const42 geomprop_Nworld_out1 ___697_main_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_main_roughness_out.x ___697_main_roughness_out.y color_gamma18_standard_surface2_specular_IOR $const36 $const40 color_gamma18_standard_surface2_thin_film_thickness $const41 color_gamma18_standard_surface2_thin_film_IOR 	%line{130} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_specular_bsdf_out $tmp284 color_gamma18_standard_surface2_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:317
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___697_transmission_bsdf_out ___697_null_closure 	%line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:318
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const38 644 	%line{318} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:128
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp285 $const39 $const39 	%line{128} %argrw{"wrr"}
	if		$tmp285 637 638 	%argrw{"r"}
	assign		___680_reflection_tint $const2 	%argrw{"wr"}
	assign		___680_reflection_tint color_gamma18_standard_surface2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:129
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp286 $const39 $const37 	%line{129} %argrw{"wrr"}
	if		$tmp286 641 642 	%argrw{"r"}
	assign		___680_transmission_tint $const2 	%argrw{"wr"}
	assign		___680_transmission_tint color_gamma18_standard_surface2_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:130
# }
	closure		$tmp287 $const42 geomprop_Nworld_out1 ___697_main_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_transmission_roughness_out.x ___697_transmission_roughness_out.y color_gamma18_standard_surface2_specular_IOR $const36 $const40 $const3 $const41 $const35 	%line{130} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_transmission_bsdf_out $tmp287 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:319
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp288 $const44 geomprop_Nworld_out1 color_gamma18_standard_surface2_sheen_color color_gamma18_standard_surface2_sheen_roughness 	%line{319} %argrw{"wrrrr"}
	mul		___697_sheen_bsdf_out $tmp288 color_gamma18_standard_surface2_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:320
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___697_translucent_bsdf_weight_tmp $const15 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:321
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp289 $const45 geomprop_Nworld_out1 ___697_coat_affected_subsurface_color_out 	%line{321} %argrw{"wrrr"}
	mul		___697_translucent_bsdf_out $tmp289 ___697_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:322
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___697_subsurface_bsdf_out ___697_null_closure 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:323
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const46 653 	%line{323} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:138
# #endif
	mul		$tmp290 $const15 ___697_coat_affected_subsurface_color_out 	%line{138} %argrw{"wrr"}
	closure		___697_subsurface_bsdf_out $const47 geomprop_Nworld_out1 $tmp290 $const15 ___697_subsurface_radius_scaled_out color_gamma18_standard_surface2_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:324
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const48 658 	%line{324} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp291 $const15 ___697_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp292 ___697_subsurface_bsdf_out $tmp291 	%argrw{"wrr"}
	mul		$tmp293 ___697_translucent_bsdf_out ___697_subsurface_selector_out 	%argrw{"wrr"}
	add		___697_selected_subsurface_bsdf_out $tmp292 $tmp293 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:325
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp294 $const49 geomprop_Nworld_out1 ___697_coat_affected_diffuse_color_out color_gamma18_standard_surface2_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{325} %argrw{"wrrrr"}
	mul		___697_diffuse_bsdf_out $tmp294 color_gamma18_standard_surface2_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:326
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const48 665 	%line{326} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp295 $const15 color_gamma18_standard_surface2_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp296 ___697_diffuse_bsdf_out $tmp295 	%argrw{"wrr"}
	mul		$tmp297 ___697_selected_subsurface_bsdf_out color_gamma18_standard_surface2_subsurface 	%argrw{"wrr"}
	add		___697_subsurface_mix_out $tmp296 $tmp297 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:327
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___697_sheen_layer_out $const50 ___697_sheen_bsdf_out ___697_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{327} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:328
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const48 671 	%line{328} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp298 $const15 color_gamma18_standard_surface2_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp299 ___697_sheen_layer_out $tmp298 	%argrw{"wrr"}
	mul		$tmp300 ___697_transmission_bsdf_out color_gamma18_standard_surface2_transmission 	%argrw{"wrr"}
	add		___697_transmission_mix_out $tmp299 $tmp300 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:329
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___697_specular_layer_out $const50 ___697_specular_bsdf_out ___697_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{329} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:330
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const48 677 	%line{330} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp301 $const15 color_gamma18_standard_surface2_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp302 ___697_specular_layer_out $tmp301 	%argrw{"wrr"}
	mul		$tmp303 ___697_metal_bsdf_out color_gamma18_standard_surface2_metalness 	%argrw{"wrr"}
	add		___697_metalness_mix_out $tmp302 $tmp303 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:331
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___697_thin_film_layer_attenuated_out ___697_metalness_mix_out ___697_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{331} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:332
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___697_coat_layer_out $const50 ___697_coat_bsdf_out ___697_thin_film_layer_attenuated_out 	%line{332} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:333
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___697_emission_edf_out $const51 ___697_emission_weight_out 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:334
#     EDF coat_emission_edf_out = null_closure;
	mul		___697_coat_tinted_emission_edf_out ___697_emission_edf_out color_gamma18_standard_surface2_coat_color 	%line{334} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:335
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___697_coat_emission_edf_out ___697_null_closure 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:336
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const53 694 	%line{336} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:229
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp306 I 	%line{229} %argrw{"wr"}
	dot		$tmp305 N $tmp306 	%argrw{"wrr"}
	fabs		___695_NdotV $tmp305 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:230
#     result = base * f;
	functioncall	$const54 693 	%line{230} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:223
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp307 $const15 ___695_NdotV 	%line{223} %argrw{"wrr"}
	functioncall	$const19 691 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp308 $tmp307 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_x $tmp308 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:224
# }
	pow		$tmp309 ___694_x $const52 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{224} %argrw{"wrr"}
	mix		___695_f ___697_emission_color0_out $const2 $tmp309 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:231
# }
	mul		___697_coat_emission_edf_out ___697_coat_tinted_emission_edf_out ___695_f 	%line{231} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:337
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const48 699 	%line{337} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp310 $const15 color_gamma18_standard_surface2_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp311 ___697_emission_edf_out $tmp310 	%argrw{"wrr"}
	mul		$tmp312 ___697_coat_emission_edf_out color_gamma18_standard_surface2_coat 	%argrw{"wrr"}
	add		___697_blended_coat_emission_edf_out $tmp311 $tmp312 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:338
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___697_shader_constructor_out.bsdf ___697_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{338} %argrw{"wr"}
	assign		___697_shader_constructor_out.edf ___697_null_closure 	%argrw{"wr"}
	assign		___697_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:339
#     out = shader_constructor_out;
	functioncall	$const55 709 	%line{339} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:236
#     result.edf     = edf;
	assign		___697_shader_constructor_out.bsdf ___697_coat_layer_out 	%line{236} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:237
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___697_shader_constructor_out.edf ___697_blended_coat_emission_edf_out 	%line{237} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:238
# }
	functioncall	$const19 708 	%line{238} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp313 ___697_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_shader_constructor_out.opacity $tmp313 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:238
# }
	assign		___697_shader_constructor_out.opacity ___697_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{238} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:340
# }
	assign		color_gamma18_standard_surface2_out.bsdf ___697_shader_constructor_out.bsdf 	%line{340} %argrw{"wr"}
	assign		color_gamma18_standard_surface2_out.edf ___697_shader_constructor_out.edf 	%argrw{"wr"}
	assign		color_gamma18_standard_surface2_out.opacity ___697_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:729
#         color_gamma18_out = (color_gamma18_standard_surface2_out.bsdf + color_gamma18_standard_surface2_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const19 715 	%line{729} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp314 color_gamma18_standard_surface2_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_opacity_weight $tmp314 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl:730
#     }
	add		$tmp315 color_gamma18_standard_surface2_out.bsdf color_gamma18_standard_surface2_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_gamma18_out.osl"} %line{730} %argrw{"wrr"}
	mul		$tmp316 $tmp315 ___698_opacity_weight 	%argrw{"wrr"}
	closure		$tmp317 $const56 	%argrw{"wr"}
	sub		$tmp318 $const15 ___698_opacity_weight 	%argrw{"wrr"}
	mul		$tmp319 $tmp317 $tmp318 	%argrw{"wrr"}
	add		color_gamma18_out $tmp316 $tmp319 	%argrw{"wrr"}
	end
