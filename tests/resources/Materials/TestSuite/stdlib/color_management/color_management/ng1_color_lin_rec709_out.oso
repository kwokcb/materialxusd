OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_color_lin_rec709_out.oso
surface ng1_color_lin_rec709_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"color_lin_rec709_out"} 
param	struct color4	color_lin_rec709_color3_in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	color_lin_rec709_color3_in.rgb	0.5 0 0		%read{12,68} %write{2147483647,-1} %mystruct{color_lin_rec709_color3_in} %mystructfield{0}
param	float	color_lin_rec709_color3_in.a	1		%read{22,70} %write{2147483647,-1} %mystruct{color_lin_rec709_color3_in} %mystructfield{1}
param	string	geomprop_Nworld_space	"world"		%read{79,79} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{113,548} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{547,547} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{562,564} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{114,520} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{114,518} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{118,420} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{519,531} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{442,474} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{117,117} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{556,558} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{526,530} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{118,118} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{550,552} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{121,121} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{127,127} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{127,127} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{541,541} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{534,534} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{533,533} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{533,533} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{115,586} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{134,569} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{93,289} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{97,428} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{112,112} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{136,503} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{413,413} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{115,115} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{507,519} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{507,519} %write{2147483647,-1}
param	float	color_lin_rec709_standard_surface_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{139,139} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{139,139} %write{2147483647,-1}
param	color	color_lin_rec709_standard_surface_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{142,142} %write{2147483647,-1}
param	int	color_lin_rec709_standard_surface_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{128,128} %write{2147483647,-1}
oparam	closure color	color_lin_rec709_out			%read{2147483647,-1} %write{609,609}
global	vector	I	%read{572,572} %write{2147483647,-1}
global	normal	N	%read{79,573} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{10,18} %write{8,8}
local	float	___669_N_extract_0_out	%read{72,72} %write{12,22}
local	int	___669_N_extract_1_index_tmp	%read{26,34} %write{24,24}
local	float	___669_N_extract_1_out	%read{73,73} %write{28,38}
local	int	___669_N_extract_2_index_tmp	%read{42,50} %write{40,40}
local	float	___669_N_extract_2_out	%read{74,74} %write{44,54}
local	int	___669_N_extract_3_index_tmp	%read{58,66} %write{56,56}
local	float	___669_N_extract_3_out	%read{75,75} %write{60,70}
local	float	___670_separate_outr	%read{76,76} %write{3,72}
local	float	___670_separate_outg	%read{76,76} %write{4,73}
local	float	___670_separate_outb	%read{76,76} %write{5,74}
local	float	___670_separate_outa	%read{2147483647,-1} %write{6,75}
local	color	___670_combine_out	%read{77,77} %write{76,76}
local	float	___671_roughness_sqr	%read{104,484} %write{96,470}
local	float	___672_aspect	%read{104,481} %write{103,477}
local	vector	___675_nAxis	%read{154,354} %write{150,296}
local	float	___675_s	%read{164,350} %write{151,297}
local	float	___675_c	%read{153,356} %write{152,298}
local	float	___675_oc	%read{155,353} %write{153,299}
local	float	___676_rotationRadians	%read{151,298} %write{148,294}
local	matrix	___676_m	%read{217,404} %write{211,357}
local	float	___676_trans.x	%read{261,407} %write{227,373} %mystruct{___676_trans} %mystructfield{0}
local	float	___676_trans.y	%read{261,407} %write{238,384} %mystruct{___676_trans} %mystructfield{1}
local	float	___676_trans.z	%read{261,407} %write{249,395} %mystruct{___676_trans} %mystructfield{2}
local	float	___676_trans.w	%read{2147483647,-1} %write{260,406} %mystruct{___676_trans} %mystructfield{3}
local	color	___677_r	%read{270,284} %write{269,269}
local	color	___677_r_sqrt	%read{274,275} %write{270,270}
local	color	___677_n_min	%read{277,277} %write{273,273}
local	color	___677_n_max	%read{277,277} %write{276,276}
local	color	___677_np1	%read{280,280} %write{278,278}
local	color	___677_nm1	%read{282,282} %write{279,279}
local	color	___677_k2	%read{287,288} %write{285,287}
local	color	___678_reflection_tint	%read{503,531} %write{497,526}
local	color	___678_transmission_tint	%read{503,531} %write{501,530}
local	color	___680_combine_out	%read{492,492} %write{491,491}
local	float	___692_x	%read{580,580} %write{579,579}
local	float	___693_NdotV	%read{576,576} %write{574,574}
local	color	___693_f	%read{582,582} %write{581,581}
local	closure color	___695_null_closure	%read{493,589} %write{89,89}
local	float	___695_coat_roughness_vector_out.x	%read{106,503} %write{90,109} %mystruct{___695_coat_roughness_vector_out} %mystructfield{0}
local	float	___695_coat_roughness_vector_out.y	%read{108,503} %write{91,110} %mystruct{___695_coat_roughness_vector_out} %mystructfield{1}
local	float	___695_coat_tangent_rotate_degree_in2_tmp	%read{112,112} %write{111,111}
local	float	___695_coat_tangent_rotate_degree_out	%read{148,148} %write{112,112}
local	color	___695_metal_reflectivity_out	%read{268,268} %write{113,113}
local	color	___695_metal_edgecolor_out	%read{277,277} %write{114,114}
local	float	___695_coat_affect_roughness_multiply1_out	%read{289,289} %write{115,115}
local	float	___695_tangent_rotate_degree_in2_tmp	%read{117,117} %write{116,116}
local	float	___695_tangent_rotate_degree_out	%read{294,294} %write{117,117}
local	float	___695_transmission_roughness_add_out	%read{411,411} %write{118,118}
local	float	___695_subsurface_color_nonnegative_in2_tmp	%read{120,120} %write{119,119}
local	color	___695_subsurface_color_nonnegative_out	%read{485,485} %write{121,121}
local	float	___695_coat_clamped_low_tmp	%read{126,126} %write{122,122}
local	float	___695_coat_clamped_high_tmp	%read{125,125} %write{123,123}
local	float	___695_coat_clamped_out	%read{413,413} %write{126,126}
local	color	___695_subsurface_radius_scaled_out	%read{541,541} %write{127,127}
local	float	___695_subsurface_selector_out	%read{543,545} %write{129,129}
local	float	___695_base_color_nonnegative_in2_tmp	%read{131,131} %write{130,130}
local	color	___695_base_color_nonnegative_out	%read{486,486} %write{132,132}
local	color	___695_coat_attenuation_bg_tmp	%read{134,134} %write{133,133}
local	color	___695_coat_attenuation_out	%read{566,566} %write{134,134}
local	float	___695_one_minus_coat_ior_in1_tmp	%read{136,136} %write{135,135}
local	float	___695_one_minus_coat_ior_out	%read{414,414} %write{136,136}
local	float	___695_one_plus_coat_ior_in1_tmp	%read{138,138} %write{137,137}
local	float	___695_one_plus_coat_ior_out	%read{414,414} %write{138,138}
local	color	___695_emission_weight_out	%read{568,568} %write{139,139}
local	color	___695_opacity_luminance_out	%read{417,417} %write{140,143}
local	vector	___695_coat_tangent_rotate_out	%read{418,418} %write{144,261}
local	color	___695_artistic_ior_ior	%read{278,507} %write{262,277}
local	color	___695_artistic_ior_extinction	%read{507,507} %write{263,288}
local	float	___695_coat_affect_roughness_multiply2_out	%read{420,423} %write{289,289}
local	vector	___695_tangent_rotate_out	%read{421,421} %write{290,407}
local	float	___695_transmission_roughness_clamped_low_tmp	%read{412,412} %write{408,408}
local	float	___695_transmission_roughness_clamped_high_tmp	%read{411,411} %write{409,409}
local	float	___695_transmission_roughness_clamped_out	%read{423,423} %write{412,412}
local	float	___695_coat_gamma_multiply_out	%read{425,425} %write{413,413}
local	float	___695_coat_ior_to_F0_sqrt_out	%read{426,426} %write{414,414}
local	int	___695_opacity_luminance_float_index_tmp	%read{417,417} %write{415,415}
local	float	___695_opacity_luminance_float_out	%read{595,595} %write{417,417}
local	vector	___695_coat_tangent_rotate_normalize_out	%read{431,431} %write{418,418}
local	float	___695_coat_affected_roughness_fg_tmp	%read{420,420} %write{419,419}
local	float	___695_coat_affected_roughness_out	%read{438,438} %write{420,420}
local	vector	___695_tangent_rotate_normalize_out	%read{460,460} %write{421,421}
local	float	___695_coat_affected_transmission_roughness_fg_tmp	%read{423,423} %write{422,422}
local	float	___695_coat_affected_transmission_roughness_out	%read{467,467} %write{423,423}
local	float	___695_coat_gamma_in2_tmp	%read{425,425} %write{424,424}
local	float	___695_coat_gamma_out	%read{485,486} %write{425,425}
local	float	___695_coat_ior_to_F0_out	%read{488,488} %write{426,426}
local	float	___695_coat_tangent_value2_tmp	%read{428,428} %write{427,427}
local	vector	___695_coat_tangent_out	%read{503,503} %write{431,433}
local	float	___695_main_roughness_out.x	%read{451,519} %write{435,454} %mystruct{___695_main_roughness_out} %mystructfield{0}
local	float	___695_main_roughness_out.y	%read{453,519} %write{436,455} %mystruct{___695_main_roughness_out} %mystructfield{1}
local	float	___695_main_tangent_value2_tmp	%read{457,457} %write{456,456}
local	vector	___695_main_tangent_out	%read{507,531} %write{460,462}
local	float	___695_transmission_roughness_out.x	%read{480,531} %write{464,483} %mystruct{___695_transmission_roughness_out} %mystructfield{0}
local	float	___695_transmission_roughness_out.y	%read{482,531} %write{465,484} %mystruct{___695_transmission_roughness_out} %mystructfield{1}
local	color	___695_coat_affected_subsurface_color_out	%read{536,540} %write{485,485}
local	color	___695_coat_affected_diffuse_color_out	%read{547,547} %write{486,486}
local	float	___695_one_minus_coat_ior_to_F0_in1_tmp	%read{488,488} %write{487,487}
local	float	___695_one_minus_coat_ior_to_F0_out	%read{491,491} %write{488,488}
local	color	___695_emission_color0_out	%read{581,581} %write{489,492}
local	closure color	___695_coat_bsdf_out	%read{567,567} %write{493,504}
local	float	___695_metal_bsdf_weight_tmp	%read{508,508} %write{505,505}
local	string	___695_metal_bsdf_distribution_tmp	%read{507,507} %write{506,506}
local	closure color	___695_metal_bsdf_out	%read{564,564} %write{508,508}
local	closure color	___695_specular_bsdf_out	%read{560,560} %write{509,520}
local	closure color	___695_transmission_bsdf_out	%read{558,558} %write{521,532}
local	closure color	___695_sheen_bsdf_out	%read{554,554} %write{534,534}
local	float	___695_translucent_bsdf_weight_tmp	%read{537,537} %write{535,535}
local	closure color	___695_translucent_bsdf_out	%read{545,545} %write{537,537}
local	closure color	___695_subsurface_bsdf_out	%read{544,544} %write{538,541}
local	closure color	___695_selected_subsurface_bsdf_out	%read{552,552} %write{546,546}
local	closure color	___695_diffuse_bsdf_out	%read{551,551} %write{548,548}
local	closure color	___695_subsurface_mix_out	%read{554,554} %write{553,553}
local	closure color	___695_sheen_layer_out	%read{557,557} %write{554,554}
local	closure color	___695_transmission_mix_out	%read{560,560} %write{559,559}
local	closure color	___695_specular_layer_out	%read{563,563} %write{560,560}
local	closure color	___695_metalness_mix_out	%read{566,566} %write{565,565}
local	closure color	___695_thin_film_layer_attenuated_out	%read{567,567} %write{566,566}
local	closure color	___695_coat_layer_out	%read{592,592} %write{567,567}
local	closure color	___695_emission_edf_out	%read{569,585} %write{568,568}
local	closure color	___695_coat_tinted_emission_edf_out	%read{582,582} %write{569,569}
local	closure color	___695_coat_emission_edf_out	%read{586,586} %write{570,582}
local	closure color	___695_blended_coat_emission_edf_out	%read{593,593} %write{587,587}
local	closure color	___695_shader_constructor_out.bsdf	%read{598,598} %write{588,592} %mystruct{___695_shader_constructor_out} %mystructfield{0}
local	closure color	___695_shader_constructor_out.edf	%read{599,599} %write{589,593} %mystruct{___695_shader_constructor_out} %mystructfield{1}
local	float	___695_shader_constructor_out.opacity	%read{597,600} %write{590,597} %mystruct{___695_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{85,86} %write{0,0}
local	color	color_lin_rec709_color3_out	%read{113,132} %write{1,77}
local	vector	geomprop_Nworld_out1	%read{150,547} %write{79,79}
local	vector	geomprop_Tworld_out1	%read{212,462} %write{84,84}
local	closure color	color_lin_rec709_standard_surface_out.bsdf	%read{604,604} %write{85,598} %mystruct{color_lin_rec709_standard_surface_out} %mystructfield{0}
local	closure color	color_lin_rec709_standard_surface_out.edf	%read{604,604} %write{86,599} %mystruct{color_lin_rec709_standard_surface_out} %mystructfield{1}
local	float	color_lin_rec709_standard_surface_out.opacity	%read{602,602} %write{87,600} %mystruct{color_lin_rec709_standard_surface_out} %mystructfield{2}
local	float	___696_opacity_weight	%read{605,607} %write{603,603}
const	int	$const1	0		%read{0,415} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,581} %write{2147483647,-1}
const	string	$const3	"NG_convert_color4_color3"		%read{2,2} %write{2147483647,-1}
const	float	$const4	0		%read{3,603} %write{2147483647,-1}
const	string	$const5	"NG_separate4_color4"		%read{7,7} %write{2147483647,-1}
const	string	$const6	"mx_extract"		%read{9,416} %write{2147483647,-1}
temp	int	$tmp1	%read{11,11} %write{10,10}
const	int	$const7	1		%read{14,398} %write{2147483647,-1}
temp	int	$tmp2	%read{15,15} %write{14,14}
const	int	$const8	2		%read{18,401} %write{2147483647,-1}
temp	int	$tmp3	%read{19,19} %write{18,18}
temp	int	$tmp4	%read{27,27} %write{26,26}
temp	int	$tmp5	%read{31,31} %write{30,30}
temp	int	$tmp6	%read{35,35} %write{34,34}
temp	int	$tmp7	%read{43,43} %write{42,42}
temp	int	$tmp8	%read{47,47} %write{46,46}
temp	int	$tmp9	%read{51,51} %write{50,50}
const	int	$const9	3		%read{56,404} %write{2147483647,-1}
temp	int	$tmp10	%read{59,59} %write{58,58}
temp	int	$tmp11	%read{63,63} %write{62,62}
temp	int	$tmp12	%read{67,67} %write{66,66}
const	string	$const10	"transform"		%read{78,362} %write{2147483647,-1}
const	string	$const11	"common"		%read{79,79} %write{2147483647,-1}
temp	vector	$tmp13	%read{84,84} %write{83,83}
temp	float	$tmp14	%read{83,83} %write{80,80}
temp	float	$tmp15	%read{82,82} %write{81,81}
temp	float	$tmp16	%read{83,83} %write{82,82}
const	float	$const12	1		%read{87,607} %write{2147483647,-1}
const	string	$const13	"NG_standard_surface_surfaceshader_100"		%read{88,88} %write{2147483647,-1}
const	string	$const14	"mx_roughness_anisotropy"		%read{92,466} %write{2147483647,-1}
temp	float	$tmp17	%read{95,95} %write{93,93}
const	float	$const15	1e-08		%read{96,470} %write{2147483647,-1}
const	string	$const16	"clamp"		%read{94,601} %write{2147483647,-1}
temp	float	$tmp18	%read{96,96} %write{95,95}
temp	int	$tmp19	%read{98,98} %write{97,97}
temp	float	$tmp20	%read{102,102} %write{101,101}
const	float	$const17	0.98		%read{100,474} %write{2147483647,-1}
temp	float	$tmp21	%read{101,101} %write{100,100}
temp	float	$tmp22	%read{103,103} %write{102,102}
temp	float	$tmp23	%read{105,105} %write{104,104}
const	float	$const18	360		%read{111,116} %write{2147483647,-1}
temp	color	$tmp24	%read{121,121} %write{120,120}
temp	float	$tmp25	%read{126,126} %write{125,125}
temp	float	$tmp26	%read{129,129} %write{128,128}
temp	color	$tmp27	%read{132,132} %write{131,131}
const	color	$const19	1 1 1		%read{133,502} %write{2147483647,-1}
const	color	$const20	0.272229 0.674082 0.053689		%read{142,142} %write{2147483647,-1}
const	string	$const21	"mx_luminance_color3"		%read{141,141} %write{2147483647,-1}
temp	float	$tmp29	%read{143,143} %write{142,142}
const	vector	$const22	0 0 0		%read{144,290} %write{2147483647,-1}
const	string	$const23	"mx_rotate_vector3"		%read{145,291} %write{2147483647,-1}
const	string	$const24	"radians"		%read{146,292} %write{2147483647,-1}
const	float	$const25	3.1415927		%read{147,293} %write{2147483647,-1}
const	float	$const26	180		%read{147,293} %write{2147483647,-1}
temp	float	$tmp30	%read{148,148} %write{147,147}
const	string	$const27	"rotationMatrix"		%read{149,295} %write{2147483647,-1}
temp	float	$tmp31	%read{155,155} %write{154,154}
temp	float	$tmp32	%read{157,157} %write{155,155}
temp	float	$tmp33	%read{157,157} %write{156,156}
temp	float	$tmp34	%read{158,158} %write{157,157}
temp	float	$tmp35	%read{211,211} %write{158,158}
temp	float	$tmp36	%read{160,160} %write{159,159}
temp	float	$tmp37	%read{162,162} %write{160,160}
temp	float	$tmp38	%read{162,162} %write{161,161}
temp	float	$tmp39	%read{165,165} %write{162,162}
temp	float	$tmp40	%read{164,164} %write{163,163}
temp	float	$tmp41	%read{165,165} %write{164,164}
temp	float	$tmp42	%read{211,211} %write{165,165}
temp	float	$tmp43	%read{167,167} %write{166,166}
temp	float	$tmp44	%read{169,169} %write{167,167}
temp	float	$tmp45	%read{169,169} %write{168,168}
temp	float	$tmp46	%read{172,172} %write{169,169}
temp	float	$tmp47	%read{171,171} %write{170,170}
temp	float	$tmp48	%read{172,172} %write{171,171}
temp	float	$tmp49	%read{211,211} %write{172,172}
temp	float	$tmp50	%read{174,174} %write{173,173}
temp	float	$tmp51	%read{176,176} %write{174,174}
temp	float	$tmp52	%read{176,176} %write{175,175}
temp	float	$tmp53	%read{179,179} %write{176,176}
temp	float	$tmp54	%read{178,178} %write{177,177}
temp	float	$tmp55	%read{179,179} %write{178,178}
temp	float	$tmp56	%read{211,211} %write{179,179}
temp	float	$tmp57	%read{181,181} %write{180,180}
temp	float	$tmp58	%read{183,183} %write{181,181}
temp	float	$tmp59	%read{183,183} %write{182,182}
temp	float	$tmp60	%read{184,184} %write{183,183}
temp	float	$tmp61	%read{211,211} %write{184,184}
temp	float	$tmp62	%read{186,186} %write{185,185}
temp	float	$tmp63	%read{188,188} %write{186,186}
temp	float	$tmp64	%read{188,188} %write{187,187}
temp	float	$tmp65	%read{191,191} %write{188,188}
temp	float	$tmp66	%read{190,190} %write{189,189}
temp	float	$tmp67	%read{191,191} %write{190,190}
temp	float	$tmp68	%read{211,211} %write{191,191}
temp	float	$tmp69	%read{193,193} %write{192,192}
temp	float	$tmp70	%read{195,195} %write{193,193}
temp	float	$tmp71	%read{195,195} %write{194,194}
temp	float	$tmp72	%read{198,198} %write{195,195}
temp	float	$tmp73	%read{197,197} %write{196,196}
temp	float	$tmp74	%read{198,198} %write{197,197}
temp	float	$tmp75	%read{211,211} %write{198,198}
temp	float	$tmp76	%read{200,200} %write{199,199}
temp	float	$tmp77	%read{202,202} %write{200,200}
temp	float	$tmp78	%read{202,202} %write{201,201}
temp	float	$tmp79	%read{205,205} %write{202,202}
temp	float	$tmp80	%read{204,204} %write{203,203}
temp	float	$tmp81	%read{205,205} %write{204,204}
temp	float	$tmp82	%read{211,211} %write{205,205}
temp	float	$tmp83	%read{207,207} %write{206,206}
temp	float	$tmp84	%read{209,209} %write{207,207}
temp	float	$tmp85	%read{209,209} %write{208,208}
temp	float	$tmp86	%read{210,210} %write{209,209}
temp	float	$tmp87	%read{211,211} %write{210,210}
temp	float	$tmp88.x	%read{218,251} %write{212,212}
temp	float	$tmp88.y	%read{220,253} %write{213,213}
temp	float	$tmp88.z	%read{223,256} %write{214,214}
temp	float	$tmp88.w	%read{226,259} %write{215,215}
temp	float	$tmp89	%read{218,218} %write{217,217}
temp	float	$tmp90	%read{221,221} %write{218,218}
temp	float	$tmp91	%read{220,220} %write{219,219}
temp	float	$tmp92	%read{221,221} %write{220,220}
temp	float	$tmp93	%read{224,224} %write{221,221}
temp	float	$tmp94	%read{223,223} %write{222,222}
temp	float	$tmp95	%read{224,224} %write{223,223}
temp	float	$tmp96	%read{227,227} %write{224,224}
temp	float	$tmp97	%read{226,226} %write{225,225}
temp	float	$tmp98	%read{227,227} %write{226,226}
temp	float	$tmp99	%read{229,229} %write{228,228}
temp	float	$tmp100	%read{232,232} %write{229,229}
temp	float	$tmp101	%read{231,231} %write{230,230}
temp	float	$tmp102	%read{232,232} %write{231,231}
temp	float	$tmp103	%read{235,235} %write{232,232}
temp	float	$tmp104	%read{234,234} %write{233,233}
temp	float	$tmp105	%read{235,235} %write{234,234}
temp	float	$tmp106	%read{238,238} %write{235,235}
temp	float	$tmp107	%read{237,237} %write{236,236}
temp	float	$tmp108	%read{238,238} %write{237,237}
temp	float	$tmp109	%read{240,240} %write{239,239}
temp	float	$tmp110	%read{243,243} %write{240,240}
temp	float	$tmp111	%read{242,242} %write{241,241}
temp	float	$tmp112	%read{243,243} %write{242,242}
temp	float	$tmp113	%read{246,246} %write{243,243}
temp	float	$tmp114	%read{245,245} %write{244,244}
temp	float	$tmp115	%read{246,246} %write{245,245}
temp	float	$tmp116	%read{249,249} %write{246,246}
temp	float	$tmp117	%read{248,248} %write{247,247}
temp	float	$tmp118	%read{249,249} %write{248,248}
temp	float	$tmp119	%read{251,251} %write{250,250}
temp	float	$tmp120	%read{254,254} %write{251,251}
temp	float	$tmp121	%read{253,253} %write{252,252}
temp	float	$tmp122	%read{254,254} %write{253,253}
temp	float	$tmp123	%read{257,257} %write{254,254}
temp	float	$tmp124	%read{256,256} %write{255,255}
temp	float	$tmp125	%read{257,257} %write{256,256}
temp	float	$tmp126	%read{260,260} %write{257,257}
temp	float	$tmp127	%read{259,259} %write{258,258}
temp	float	$tmp128	%read{260,260} %write{259,259}
const	string	$const28	"mx_artistic_ior"		%read{264,264} %write{2147483647,-1}
temp	color	$tmp129	%read{269,269} %write{265,265}
const	float	$const29	0.99		%read{266,266} %write{2147483647,-1}
temp	color	$tmp130	%read{268,268} %write{266,266}
temp	color	$tmp131	%read{269,269} %write{268,268}
temp	color	$tmp132	%read{273,273} %write{271,271}
temp	color	$tmp133	%read{273,273} %write{272,272}
temp	color	$tmp134	%read{276,276} %write{274,274}
temp	color	$tmp135	%read{276,276} %write{275,275}
temp	color	$tmp136	%read{281,281} %write{280,280}
temp	color	$tmp137	%read{283,283} %write{281,281}
temp	color	$tmp138	%read{283,283} %write{282,282}
temp	color	$tmp139	%read{285,285} %write{283,283}
temp	color	$tmp140	%read{285,285} %write{284,284}
temp	color	$tmp141	%read{287,287} %write{286,286}
temp	float	$tmp142	%read{294,294} %write{293,293}
temp	float	$tmp143	%read{301,301} %write{300,300}
temp	float	$tmp144	%read{303,303} %write{301,301}
temp	float	$tmp145	%read{303,303} %write{302,302}
temp	float	$tmp146	%read{304,304} %write{303,303}
temp	float	$tmp147	%read{357,357} %write{304,304}
temp	float	$tmp148	%read{306,306} %write{305,305}
temp	float	$tmp149	%read{308,308} %write{306,306}
temp	float	$tmp150	%read{308,308} %write{307,307}
temp	float	$tmp151	%read{311,311} %write{308,308}
temp	float	$tmp152	%read{310,310} %write{309,309}
temp	float	$tmp153	%read{311,311} %write{310,310}
temp	float	$tmp154	%read{357,357} %write{311,311}
temp	float	$tmp155	%read{313,313} %write{312,312}
temp	float	$tmp156	%read{315,315} %write{313,313}
temp	float	$tmp157	%read{315,315} %write{314,314}
temp	float	$tmp158	%read{318,318} %write{315,315}
temp	float	$tmp159	%read{317,317} %write{316,316}
temp	float	$tmp160	%read{318,318} %write{317,317}
temp	float	$tmp161	%read{357,357} %write{318,318}
temp	float	$tmp162	%read{320,320} %write{319,319}
temp	float	$tmp163	%read{322,322} %write{320,320}
temp	float	$tmp164	%read{322,322} %write{321,321}
temp	float	$tmp165	%read{325,325} %write{322,322}
temp	float	$tmp166	%read{324,324} %write{323,323}
temp	float	$tmp167	%read{325,325} %write{324,324}
temp	float	$tmp168	%read{357,357} %write{325,325}
temp	float	$tmp169	%read{327,327} %write{326,326}
temp	float	$tmp170	%read{329,329} %write{327,327}
temp	float	$tmp171	%read{329,329} %write{328,328}
temp	float	$tmp172	%read{330,330} %write{329,329}
temp	float	$tmp173	%read{357,357} %write{330,330}
temp	float	$tmp174	%read{332,332} %write{331,331}
temp	float	$tmp175	%read{334,334} %write{332,332}
temp	float	$tmp176	%read{334,334} %write{333,333}
temp	float	$tmp177	%read{337,337} %write{334,334}
temp	float	$tmp178	%read{336,336} %write{335,335}
temp	float	$tmp179	%read{337,337} %write{336,336}
temp	float	$tmp180	%read{357,357} %write{337,337}
temp	float	$tmp181	%read{339,339} %write{338,338}
temp	float	$tmp182	%read{341,341} %write{339,339}
temp	float	$tmp183	%read{341,341} %write{340,340}
temp	float	$tmp184	%read{344,344} %write{341,341}
temp	float	$tmp185	%read{343,343} %write{342,342}
temp	float	$tmp186	%read{344,344} %write{343,343}
temp	float	$tmp187	%read{357,357} %write{344,344}
temp	float	$tmp188	%read{346,346} %write{345,345}
temp	float	$tmp189	%read{348,348} %write{346,346}
temp	float	$tmp190	%read{348,348} %write{347,347}
temp	float	$tmp191	%read{351,351} %write{348,348}
temp	float	$tmp192	%read{350,350} %write{349,349}
temp	float	$tmp193	%read{351,351} %write{350,350}
temp	float	$tmp194	%read{357,357} %write{351,351}
temp	float	$tmp195	%read{353,353} %write{352,352}
temp	float	$tmp196	%read{355,355} %write{353,353}
temp	float	$tmp197	%read{355,355} %write{354,354}
temp	float	$tmp198	%read{356,356} %write{355,355}
temp	float	$tmp199	%read{357,357} %write{356,356}
temp	float	$tmp200.x	%read{364,397} %write{358,358}
temp	float	$tmp200.y	%read{366,399} %write{359,359}
temp	float	$tmp200.z	%read{369,402} %write{360,360}
temp	float	$tmp200.w	%read{372,405} %write{361,361}
temp	float	$tmp201	%read{364,364} %write{363,363}
temp	float	$tmp202	%read{367,367} %write{364,364}
temp	float	$tmp203	%read{366,366} %write{365,365}
temp	float	$tmp204	%read{367,367} %write{366,366}
temp	float	$tmp205	%read{370,370} %write{367,367}
temp	float	$tmp206	%read{369,369} %write{368,368}
temp	float	$tmp207	%read{370,370} %write{369,369}
temp	float	$tmp208	%read{373,373} %write{370,370}
temp	float	$tmp209	%read{372,372} %write{371,371}
temp	float	$tmp210	%read{373,373} %write{372,372}
temp	float	$tmp211	%read{375,375} %write{374,374}
temp	float	$tmp212	%read{378,378} %write{375,375}
temp	float	$tmp213	%read{377,377} %write{376,376}
temp	float	$tmp214	%read{378,378} %write{377,377}
temp	float	$tmp215	%read{381,381} %write{378,378}
temp	float	$tmp216	%read{380,380} %write{379,379}
temp	float	$tmp217	%read{381,381} %write{380,380}
temp	float	$tmp218	%read{384,384} %write{381,381}
temp	float	$tmp219	%read{383,383} %write{382,382}
temp	float	$tmp220	%read{384,384} %write{383,383}
temp	float	$tmp221	%read{386,386} %write{385,385}
temp	float	$tmp222	%read{389,389} %write{386,386}
temp	float	$tmp223	%read{388,388} %write{387,387}
temp	float	$tmp224	%read{389,389} %write{388,388}
temp	float	$tmp225	%read{392,392} %write{389,389}
temp	float	$tmp226	%read{391,391} %write{390,390}
temp	float	$tmp227	%read{392,392} %write{391,391}
temp	float	$tmp228	%read{395,395} %write{392,392}
temp	float	$tmp229	%read{394,394} %write{393,393}
temp	float	$tmp230	%read{395,395} %write{394,394}
temp	float	$tmp231	%read{397,397} %write{396,396}
temp	float	$tmp232	%read{400,400} %write{397,397}
temp	float	$tmp233	%read{399,399} %write{398,398}
temp	float	$tmp234	%read{400,400} %write{399,399}
temp	float	$tmp235	%read{403,403} %write{400,400}
temp	float	$tmp236	%read{402,402} %write{401,401}
temp	float	$tmp237	%read{403,403} %write{402,402}
temp	float	$tmp238	%read{406,406} %write{403,403}
temp	float	$tmp239	%read{405,405} %write{404,404}
temp	float	$tmp240	%read{406,406} %write{405,405}
temp	float	$tmp241	%read{412,412} %write{411,411}
temp	int	$tmp242	%read{430,430} %write{428,428}
const	string	$const30	"mx_ternary"		%read{429,458} %write{2147483647,-1}
temp	float	$tmp243	%read{440,440} %write{438,438}
temp	float	$tmp244	%read{441,441} %write{440,440}
temp	int	$tmp245	%read{443,443} %write{442,442}
temp	float	$tmp246	%read{447,447} %write{446,446}
temp	float	$tmp247	%read{446,446} %write{445,445}
temp	float	$tmp248	%read{448,448} %write{447,447}
temp	float	$tmp249	%read{450,450} %write{449,449}
temp	int	$tmp250	%read{459,459} %write{457,457}
temp	float	$tmp251	%read{469,469} %write{467,467}
temp	float	$tmp252	%read{470,470} %write{469,469}
temp	int	$tmp253	%read{472,472} %write{471,471}
temp	float	$tmp254	%read{476,476} %write{475,475}
temp	float	$tmp255	%read{475,475} %write{474,474}
temp	float	$tmp256	%read{477,477} %write{476,476}
temp	float	$tmp257	%read{479,479} %write{478,478}
const	string	$const31	"NG_convert_float_color3"		%read{490,490} %write{2147483647,-1}
const	float	$const32	1.5		%read{503,531} %write{2147483647,-1}
const	string	$const33	"ggx"		%read{503,531} %write{2147483647,-1}
const	string	$const34	"R"		%read{495,527} %write{2147483647,-1}
const	string	$const35	"mx_dielectric_bsdf"		%read{494,522} %write{2147483647,-1}
const	string	$const36	"T"		%read{495,527} %write{2147483647,-1}
temp	int	$tmp259	%read{496,496} %write{495,495}
temp	int	$tmp260	%read{500,500} %write{499,499}
temp	closure color	$tmp261	%read{504,504} %write{503,503}
const	string	$const37	"thinfilm_thickness"		%read{503,531} %write{2147483647,-1}
const	string	$const38	"thinfilm_ior"		%read{503,531} %write{2147483647,-1}
const	string	$const39	"dielectric_bsdf"		%read{503,531} %write{2147483647,-1}
temp	closure color	$tmp262	%read{508,508} %write{507,507}
const	string	$const40	"conductor_bsdf"		%read{507,507} %write{2147483647,-1}
temp	int	$tmp263	%read{512,512} %write{511,511}
temp	int	$tmp264	%read{516,516} %write{515,515}
temp	closure color	$tmp265	%read{520,520} %write{519,519}
temp	int	$tmp266	%read{524,524} %write{523,523}
temp	int	$tmp267	%read{528,528} %write{527,527}
temp	closure color	$tmp268	%read{532,532} %write{531,531}
temp	closure color	$tmp269	%read{534,534} %write{533,533}
const	string	$const41	"sheen_bsdf"		%read{533,533} %write{2147483647,-1}
temp	closure color	$tmp270	%read{537,537} %write{536,536}
const	string	$const42	"translucent_bsdf"		%read{536,536} %write{2147483647,-1}
const	string	$const43	"mx_subsurface_bsdf"		%read{539,539} %write{2147483647,-1}
temp	color	$tmp271	%read{541,541} %write{540,540}
const	string	$const44	"subsurface_bssrdf"		%read{541,541} %write{2147483647,-1}
const	string	$const45	"mix"		%read{542,583} %write{2147483647,-1}
temp	float	$tmp272	%read{544,544} %write{543,543}
temp	closure color	$tmp273	%read{546,546} %write{544,544}
temp	closure color	$tmp274	%read{546,546} %write{545,545}
temp	closure color	$tmp275	%read{548,548} %write{547,547}
const	string	$const46	"oren_nayar_diffuse_bsdf"		%read{547,547} %write{2147483647,-1}
temp	float	$tmp276	%read{551,551} %write{550,550}
temp	closure color	$tmp277	%read{553,553} %write{551,551}
temp	closure color	$tmp278	%read{553,553} %write{552,552}
const	string	$const47	"layer"		%read{554,567} %write{2147483647,-1}
temp	float	$tmp279	%read{557,557} %write{556,556}
temp	closure color	$tmp280	%read{559,559} %write{557,557}
temp	closure color	$tmp281	%read{559,559} %write{558,558}
temp	float	$tmp282	%read{563,563} %write{562,562}
temp	closure color	$tmp283	%read{565,565} %write{563,563}
temp	closure color	$tmp284	%read{565,565} %write{564,564}
const	string	$const48	"uniform_edf"		%read{568,568} %write{2147483647,-1}
const	float	$const49	5		%read{580,580} %write{2147483647,-1}
const	string	$const50	"mx_generalized_schlick_edf"		%read{571,571} %write{2147483647,-1}
temp	float	$tmp286	%read{574,574} %write{573,573}
temp	vector	$tmp287	%read{573,573} %write{572,572}
const	string	$const51	"mx_fresnel_schlick"		%read{575,575} %write{2147483647,-1}
temp	float	$tmp288	%read{578,578} %write{576,576}
temp	float	$tmp289	%read{579,579} %write{578,578}
temp	float	$tmp290	%read{581,581} %write{580,580}
temp	float	$tmp291	%read{585,585} %write{584,584}
temp	closure color	$tmp292	%read{587,587} %write{585,585}
temp	closure color	$tmp293	%read{587,587} %write{586,586}
const	string	$const52	"mx_surface"		%read{591,591} %write{2147483647,-1}
temp	float	$tmp294	%read{596,596} %write{595,595}
temp	float	$tmp295	%read{603,603} %write{602,602}
temp	closure color	$tmp296	%read{605,605} %write{604,604}
temp	closure color	$tmp297	%read{609,609} %write{605,605}
temp	closure color	$tmp298	%read{608,608} %write{606,606}
const	string	$const53	"transparent"		%read{606,606} %write{2147483647,-1}
temp	float	$tmp299	%read{608,608} %write{607,607}
temp	closure color	$tmp300	%read{609,609} %write{608,608}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:698
#     color color_lin_rec709_color3_out = color(0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{698} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:699
#     NG_convert_color4_color3(color_lin_rec709_color3_in, color_lin_rec709_color3_out);
	assign		color_lin_rec709_color3_out $const2 	%line{699} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:700
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const3 78 	%line{700} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const4 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const4 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const4 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const4 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const5 76 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const6 24 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp1 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp1 14 24 	%argrw{"r"}
	compref		___669_N_extract_0_out color_lin_rec709_color3_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp2 ___669_N_extract_0_index_tmp $const7 	%line{111} %argrw{"wrr"}
	if		$tmp2 18 24 	%argrw{"r"}
	compref		___669_N_extract_0_out color_lin_rec709_color3_in.rgb $const7 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp3 ___669_N_extract_0_index_tmp $const8 	%line{112} %argrw{"wrr"}
	if		$tmp3 22 24 	%argrw{"r"}
	compref		___669_N_extract_0_out color_lin_rec709_color3_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_lin_rec709_color3_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const7 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const6 40 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp4 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp4 30 40 	%argrw{"r"}
	compref		___669_N_extract_1_out color_lin_rec709_color3_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp5 ___669_N_extract_1_index_tmp $const7 	%line{111} %argrw{"wrr"}
	if		$tmp5 34 40 	%argrw{"r"}
	compref		___669_N_extract_1_out color_lin_rec709_color3_in.rgb $const7 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const8 	%line{112} %argrw{"wrr"}
	if		$tmp6 38 40 	%argrw{"r"}
	compref		___669_N_extract_1_out color_lin_rec709_color3_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_lin_rec709_color3_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const6 56 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp7 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp7 46 56 	%argrw{"r"}
	compref		___669_N_extract_2_out color_lin_rec709_color3_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp8 ___669_N_extract_2_index_tmp $const7 	%line{111} %argrw{"wrr"}
	if		$tmp8 50 56 	%argrw{"r"}
	compref		___669_N_extract_2_out color_lin_rec709_color3_in.rgb $const7 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp9 ___669_N_extract_2_index_tmp $const8 	%line{112} %argrw{"wrr"}
	if		$tmp9 54 56 	%argrw{"r"}
	compref		___669_N_extract_2_out color_lin_rec709_color3_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_lin_rec709_color3_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const6 72 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp10 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp10 62 72 	%argrw{"r"}
	compref		___669_N_extract_3_out color_lin_rec709_color3_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp11 ___669_N_extract_3_index_tmp $const7 	%line{111} %argrw{"wrr"}
	if		$tmp11 66 72 	%argrw{"r"}
	compref		___669_N_extract_3_out color_lin_rec709_color3_in.rgb $const7 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp12 ___669_N_extract_3_index_tmp $const8 	%line{112} %argrw{"wrr"}
	if		$tmp12 70 72 	%argrw{"r"}
	compref		___669_N_extract_3_out color_lin_rec709_color3_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_lin_rec709_color3_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:42
# }
	assign		color_lin_rec709_color3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:701
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const10 80 	%line{701} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const11 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:702
#     surfaceshader color_lin_rec709_standard_surface_out = surfaceshader(null_closure, null_closure, 1.0);
	compref		$tmp14 N $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{702} %argrw{"wrr"}
	compref		$tmp15 N $const1 	%argrw{"wrr"}
	neg		$tmp16 $tmp15 	%argrw{"wr"}
	vector		$tmp13 $tmp14 $const4 $tmp16 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:703
#     NG_standard_surface_surfaceshader_100(color_lin_rec709_standard_surface_base, color_lin_rec709_color3_out, color_lin_rec709_standard_surface_diffuse_roughness, color_lin_rec709_standard_surface_metalness, color_lin_rec709_standard_surface_specular, color_lin_rec709_standard_surface_specular_color, color_lin_rec709_standard_surface_specular_roughness, color_lin_rec709_standard_surface_specular_IOR, color_lin_rec709_standard_surface_specular_anisotropy, color_lin_rec709_standard_surface_specular_rotation, color_lin_rec709_standard_surface_transmission, color_lin_rec709_standard_surface_transmission_color, color_lin_rec709_standard_surface_transmission_depth, color_lin_rec709_standard_surface_transmission_scatter, color_lin_rec709_standard_surface_transmission_scatter_anisotropy, color_lin_rec709_standard_surface_transmission_dispersion, color_lin_rec709_standard_surface_transmission_extra_roughness, color_lin_rec709_standard_surface_subsurface, color_lin_rec709_standard_surface_subsurface_color, color_lin_rec709_standard_surface_subsurface_radius, color_lin_rec709_standard_surface_subsurface_scale, color_lin_rec709_standard_surface_subsurface_anisotropy, color_lin_rec709_standard_surface_sheen, color_lin_rec709_standard_surface_sheen_color, color_lin_rec709_standard_surface_sheen_roughness, color_lin_rec709_standard_surface_coat, color_lin_rec709_standard_surface_coat_color, color_lin_rec709_standard_surface_coat_roughness, color_lin_rec709_standard_surface_coat_anisotropy, color_lin_rec709_standard_surface_coat_rotation, color_lin_rec709_standard_surface_coat_IOR, geomprop_Nworld_out1, color_lin_rec709_standard_surface_coat_affect_color, color_lin_rec709_standard_surface_coat_affect_roughness, color_lin_rec709_standard_surface_thin_film_thickness, color_lin_rec709_standard_surface_thin_film_IOR, color_lin_rec709_standard_surface_emission, color_lin_rec709_standard_surface_emission_color, color_lin_rec709_standard_surface_opacity, color_lin_rec709_standard_surface_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, color_lin_rec709_standard_surface_out);
	assign		color_lin_rec709_standard_surface_out.bsdf null_closure 	%line{703} %argrw{"wr"}
	assign		color_lin_rec709_standard_surface_out.edf null_closure 	%argrw{"wr"}
	assign		color_lin_rec709_standard_surface_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:704
#     {
	functioncall	$const13 601 	%line{704} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:222
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___695_null_closure $const1 	%line{222} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:223
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___695_coat_roughness_vector_out.x $const4 	%line{223} %argrw{"wr"}
	assign		___695_coat_roughness_vector_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:224
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const14 111 	%line{224} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:47
#     if (anisotropy > 0.0)
	mul		$tmp17 color_lin_rec709_standard_surface_coat_roughness color_lin_rec709_standard_surface_coat_roughness 	%line{47} %argrw{"wrr"}
	functioncall	$const16 97 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp18 $tmp17 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_roughness_sqr $tmp18 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:48
#     {
	gt		$tmp19 color_lin_rec709_standard_surface_coat_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{48} %argrw{"wrr"}
	if		$tmp19 109 111 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 102 	%line{50} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp21 color_lin_rec709_standard_surface_coat_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp20 $tmp21 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp22 $const12 $tmp20 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{50} %argrw{"wrr"}
	sqrt		___672_aspect $tmp22 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:51
#         result.y = roughness_sqr * aspect;
	div		$tmp23 ___671_roughness_sqr ___672_aspect 	%line{51} %argrw{"wrr"}
	min		___695_coat_roughness_vector_out.x $tmp23 $const12 	%argrw{"wrr"}
	assign		___695_coat_roughness_vector_out.x ___695_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:52
#     }
	mul		___695_coat_roughness_vector_out.y ___671_roughness_sqr ___672_aspect 	%line{52} %argrw{"wrr"}
	assign		___695_coat_roughness_vector_out.y ___695_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:56
#         result.y = roughness_sqr;
	assign		___695_coat_roughness_vector_out.x ___671_roughness_sqr 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:57
#     }
	assign		___695_coat_roughness_vector_out.y ___671_roughness_sqr 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:225
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___695_coat_tangent_rotate_degree_in2_tmp $const18 	%line{225} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:226
#     color metal_reflectivity_out = base_color * base;
	mul		___695_coat_tangent_rotate_degree_out color_lin_rec709_standard_surface_coat_rotation ___695_coat_tangent_rotate_degree_in2_tmp 	%line{226} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:227
#     color metal_edgecolor_out = specular_color * specular;
	mul		___695_metal_reflectivity_out color_lin_rec709_color3_out color_lin_rec709_standard_surface_base 	%line{227} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:228
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___695_metal_edgecolor_out color_lin_rec709_standard_surface_specular_color color_lin_rec709_standard_surface_specular 	%line{228} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:229
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___695_coat_affect_roughness_multiply1_out color_lin_rec709_standard_surface_coat_affect_roughness color_lin_rec709_standard_surface_coat 	%line{229} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:230
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___695_tangent_rotate_degree_in2_tmp $const18 	%line{230} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:231
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___695_tangent_rotate_degree_out color_lin_rec709_standard_surface_specular_rotation ___695_tangent_rotate_degree_in2_tmp 	%line{231} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:232
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___695_transmission_roughness_add_out color_lin_rec709_standard_surface_specular_roughness color_lin_rec709_standard_surface_transmission_extra_roughness 	%line{232} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:233
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___695_subsurface_color_nonnegative_in2_tmp $const4 	%line{233} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:234
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp24 ___695_subsurface_color_nonnegative_in2_tmp 	%line{234} %argrw{"wr"}
	max		___695_subsurface_color_nonnegative_out color_lin_rec709_standard_surface_subsurface_color $tmp24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:235
#     float coat_clamped_high_tmp = 1.000000;
	assign		___695_coat_clamped_low_tmp $const4 	%line{235} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:236
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___695_coat_clamped_high_tmp $const12 	%line{236} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:237
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const16 127 	%line{237} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp25 color_lin_rec709_standard_surface_coat ___695_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_coat_clamped_out $tmp25 ___695_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:238
#     float subsurface_selector_out = float(thin_walled);
	mul		___695_subsurface_radius_scaled_out color_lin_rec709_standard_surface_subsurface_radius color_lin_rec709_standard_surface_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{238} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:239
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp26 color_lin_rec709_standard_surface_thin_walled 	%line{239} %argrw{"wr"}
	assign		___695_subsurface_selector_out $tmp26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:240
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___695_base_color_nonnegative_in2_tmp $const4 	%line{240} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:241
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp27 ___695_base_color_nonnegative_in2_tmp 	%line{241} %argrw{"wr"}
	max		___695_base_color_nonnegative_out color_lin_rec709_color3_out $tmp27 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:242
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___695_coat_attenuation_bg_tmp $const19 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:243
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___695_coat_attenuation_out ___695_coat_attenuation_bg_tmp color_lin_rec709_standard_surface_coat_color color_lin_rec709_standard_surface_coat 	%line{243} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:244
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___695_one_minus_coat_ior_in1_tmp $const12 	%line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:245
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___695_one_minus_coat_ior_out ___695_one_minus_coat_ior_in1_tmp color_lin_rec709_standard_surface_coat_IOR 	%line{245} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:246
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___695_one_plus_coat_ior_in1_tmp $const12 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:247
#     color emission_weight_out = emission_color * emission1;
	add		___695_one_plus_coat_ior_out ___695_one_plus_coat_ior_in1_tmp color_lin_rec709_standard_surface_coat_IOR 	%line{247} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:248
#     color opacity_luminance_out = color(0.0);
	mul		___695_emission_weight_out color_lin_rec709_standard_surface_emission_color color_lin_rec709_standard_surface_emission 	%line{248} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:249
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___695_opacity_luminance_out $const2 	%line{249} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:250
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const21 144 	%line{250} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:63
# }
	dot		$tmp29 color_lin_rec709_standard_surface_opacity $const20 	%line{63} %argrw{"wrr"}
	assign		___695_opacity_luminance_out $tmp29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:251
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___695_coat_tangent_rotate_out $const22 	%line{251} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:252
#     color artistic_ior_ior = color(0.0);
	functioncall	$const23 262 	%line{252} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:81
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const24 149 	%line{81} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp30 $const25 $const26 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___676_rotationRadians ___695_coat_tangent_rotate_degree_out $tmp30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:82
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const27 212 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{82} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:68
#     float s = sin(angle);
	normalize	___675_nAxis geomprop_Nworld_out1 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:69
#     float c = cos(angle);
	sin		___675_s ___676_rotationRadians 	%line{69} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:70
#     float oc = 1.0 - c;
	cos		___675_c ___676_rotationRadians 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:71
# 
	sub		___675_oc $const12 ___675_c 	%line{71} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:73
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp31 ___675_nAxis $const1 	%line{73} %argrw{"wrr"}
	mul		$tmp32 ___675_oc $tmp31 	%argrw{"wrr"}
	compref		$tmp33 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp34 $tmp32 $tmp33 	%argrw{"wrr"}
	add		$tmp35 $tmp34 ___675_c 	%argrw{"wrr"}
	compref		$tmp36 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp37 ___675_oc $tmp36 	%argrw{"wrr"}
	compref		$tmp38 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp41 $tmp40 ___675_s 	%argrw{"wrr"}
	sub		$tmp42 $tmp39 $tmp41 	%argrw{"wrr"}
	compref		$tmp43 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp44 ___675_oc $tmp43 	%argrw{"wrr"}
	compref		$tmp45 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
	compref		$tmp47 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp48 $tmp47 ___675_s 	%argrw{"wrr"}
	add		$tmp49 $tmp46 $tmp48 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:74
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp50 ___675_nAxis $const1 	%line{74} %argrw{"wrr"}
	mul		$tmp51 ___675_oc $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	compref		$tmp54 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp55 $tmp54 ___675_s 	%argrw{"wrr"}
	add		$tmp56 $tmp53 $tmp55 	%argrw{"wrr"}
	compref		$tmp57 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp58 ___675_oc $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
	add		$tmp61 $tmp60 ___675_c 	%argrw{"wrr"}
	compref		$tmp62 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp63 ___675_oc $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___675_s 	%argrw{"wrr"}
	sub		$tmp68 $tmp65 $tmp67 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:75
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp69 ___675_nAxis $const8 	%line{75} %argrw{"wrr"}
	mul		$tmp70 ___675_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp74 $tmp73 ___675_s 	%argrw{"wrr"}
	sub		$tmp75 $tmp72 $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp77 ___675_oc $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp81 $tmp80 ___675_s 	%argrw{"wrr"}
	add		$tmp82 $tmp79 $tmp81 	%argrw{"wrr"}
	compref		$tmp83 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp84 ___675_oc $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
	add		$tmp87 $tmp86 ___675_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:73
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___676_m $tmp35 $tmp42 $tmp49 $const4 $tmp56 $tmp61 $tmp68 $const4 $tmp75 $tmp82 $tmp87 $const4 $const4 $const4 $const4 $const12 	%line{73} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:83
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp88.x geomprop_Tworld_out1 $const1 	%line{83} %argrw{"wrr"}
	compref		$tmp88.y geomprop_Tworld_out1 $const7 	%argrw{"wrr"}
	compref		$tmp88.z geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	assign		$tmp88.w $const12 	%argrw{"wr"}
	functioncall	$const10 261 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp89 ___676_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp90 $tmp89 $tmp88.x 	%argrw{"wrr"}
	mxcompref	$tmp91 ___676_m $const7 $const1 	%argrw{"wrrr"}
	mul		$tmp92 $tmp91 $tmp88.y 	%argrw{"wrr"}
	add		$tmp93 $tmp90 $tmp92 	%argrw{"wrr"}
	mxcompref	$tmp94 ___676_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp95 $tmp94 $tmp88.z 	%argrw{"wrr"}
	add		$tmp96 $tmp93 $tmp95 	%argrw{"wrr"}
	mxcompref	$tmp97 ___676_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp98 $tmp97 $tmp88.w 	%argrw{"wrr"}
	add		___676_trans.x $tmp96 $tmp98 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp99 ___676_m $const1 $const7 	%line{416} %argrw{"wrrr"}
	mul		$tmp100 $tmp99 $tmp88.x 	%argrw{"wrr"}
	mxcompref	$tmp101 ___676_m $const7 $const7 	%argrw{"wrrr"}
	mul		$tmp102 $tmp101 $tmp88.y 	%argrw{"wrr"}
	add		$tmp103 $tmp100 $tmp102 	%argrw{"wrr"}
	mxcompref	$tmp104 ___676_m $const8 $const7 	%argrw{"wrrr"}
	mul		$tmp105 $tmp104 $tmp88.z 	%argrw{"wrr"}
	add		$tmp106 $tmp103 $tmp105 	%argrw{"wrr"}
	mxcompref	$tmp107 ___676_m $const9 $const7 	%argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp88.w 	%argrw{"wrr"}
	add		___676_trans.y $tmp106 $tmp108 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp109 ___676_m $const1 $const8 	%line{417} %argrw{"wrrr"}
	mul		$tmp110 $tmp109 $tmp88.x 	%argrw{"wrr"}
	mxcompref	$tmp111 ___676_m $const7 $const8 	%argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp88.y 	%argrw{"wrr"}
	add		$tmp113 $tmp110 $tmp112 	%argrw{"wrr"}
	mxcompref	$tmp114 ___676_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp115 $tmp114 $tmp88.z 	%argrw{"wrr"}
	add		$tmp116 $tmp113 $tmp115 	%argrw{"wrr"}
	mxcompref	$tmp117 ___676_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp88.w 	%argrw{"wrr"}
	add		___676_trans.z $tmp116 $tmp118 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp119 ___676_m $const1 $const9 	%line{418} %argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp88.x 	%argrw{"wrr"}
	mxcompref	$tmp121 ___676_m $const7 $const9 	%argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp88.y 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	mxcompref	$tmp124 ___676_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp88.z 	%argrw{"wrr"}
	add		$tmp126 $tmp123 $tmp125 	%argrw{"wrr"}
	mxcompref	$tmp127 ___676_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp88.w 	%argrw{"wrr"}
	add		___676_trans.w $tmp126 $tmp128 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:84
# }
	vector		___695_coat_tangent_rotate_out ___676_trans.x ___676_trans.y ___676_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:253
#     color artistic_ior_extinction = color(0.0);
	assign		___695_artistic_ior_ior $const2 	%line{253} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:254
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___695_artistic_ior_extinction $const2 	%line{254} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:255
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const28 289 	%line{255} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:92
#     color r_sqrt = sqrt(r);
	assign		$tmp129 $const4 	%line{92} %argrw{"wr"}
	assign		$tmp130 $const29 	%argrw{"wr"}
	functioncall	$const16 270 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp131 ___695_metal_reflectivity_out $tmp130 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___677_r $tmp131 $tmp129 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:93
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___677_r_sqrt ___677_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:94
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp132 $const12 ___677_r 	%line{94} %argrw{"wrr"}
	add		$tmp133 $const12 ___677_r 	%argrw{"wrr"}
	div		___677_n_min $tmp132 $tmp133 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:95
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp134 $const12 ___677_r_sqrt 	%line{95} %argrw{"wrr"}
	sub		$tmp135 $const12 ___677_r_sqrt 	%argrw{"wrr"}
	div		___677_n_max $tmp134 $tmp135 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:96
# 
	mix		___695_artistic_ior_ior ___677_n_max ___677_n_min ___695_metal_edgecolor_out 	%line{96} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:98
#     color nm1 = ior - 1.0;
	add		___677_np1 ___695_artistic_ior_ior $const12 	%line{98} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:99
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___677_nm1 ___695_artistic_ior_ior $const12 	%line{99} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:100
#     k2 = max(k2, 0.0);
	mul		$tmp136 ___677_np1 ___677_np1 	%line{100} %argrw{"wrr"}
	mul		$tmp137 $tmp136 ___677_r 	%argrw{"wrr"}
	mul		$tmp138 ___677_nm1 ___677_nm1 	%argrw{"wrr"}
	sub		$tmp139 $tmp137 $tmp138 	%argrw{"wrr"}
	sub		$tmp140 $const12 ___677_r 	%argrw{"wrr"}
	div		___677_k2 $tmp139 $tmp140 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:101
#     extinction = sqrt(k2);
	assign		$tmp141 $const4 	%line{101} %argrw{"wr"}
	max		___677_k2 ___677_k2 $tmp141 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:102
# }
	sqrt		___695_artistic_ior_extinction ___677_k2 	%line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:256
#     vector tangent_rotate_out = vector(0.0);
	mul		___695_coat_affect_roughness_multiply2_out ___695_coat_affect_roughness_multiply1_out color_lin_rec709_standard_surface_coat_roughness 	%line{256} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:257
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___695_tangent_rotate_out $const22 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:258
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const23 408 	%line{258} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:81
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const24 295 	%line{81} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp142 $const25 $const26 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___676_rotationRadians ___695_tangent_rotate_degree_out $tmp142 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:82
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const27 358 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{82} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:68
#     float s = sin(angle);
	normalize	___675_nAxis geomprop_Nworld_out1 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:69
#     float c = cos(angle);
	sin		___675_s ___676_rotationRadians 	%line{69} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:70
#     float oc = 1.0 - c;
	cos		___675_c ___676_rotationRadians 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:71
# 
	sub		___675_oc $const12 ___675_c 	%line{71} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:73
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp143 ___675_nAxis $const1 	%line{73} %argrw{"wrr"}
	mul		$tmp144 ___675_oc $tmp143 	%argrw{"wrr"}
	compref		$tmp145 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp146 $tmp144 $tmp145 	%argrw{"wrr"}
	add		$tmp147 $tmp146 ___675_c 	%argrw{"wrr"}
	compref		$tmp148 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp149 ___675_oc $tmp148 	%argrw{"wrr"}
	compref		$tmp150 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp151 $tmp149 $tmp150 	%argrw{"wrr"}
	compref		$tmp152 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp153 $tmp152 ___675_s 	%argrw{"wrr"}
	sub		$tmp154 $tmp151 $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp156 ___675_oc $tmp155 	%argrw{"wrr"}
	compref		$tmp157 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp158 $tmp156 $tmp157 	%argrw{"wrr"}
	compref		$tmp159 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp160 $tmp159 ___675_s 	%argrw{"wrr"}
	add		$tmp161 $tmp158 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:74
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp162 ___675_nAxis $const1 	%line{74} %argrw{"wrr"}
	mul		$tmp163 ___675_oc $tmp162 	%argrw{"wrr"}
	compref		$tmp164 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	compref		$tmp166 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp167 $tmp166 ___675_s 	%argrw{"wrr"}
	add		$tmp168 $tmp165 $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp170 ___675_oc $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp172 $tmp170 $tmp171 	%argrw{"wrr"}
	add		$tmp173 $tmp172 ___675_c 	%argrw{"wrr"}
	compref		$tmp174 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp175 ___675_oc $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp177 $tmp175 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp179 $tmp178 ___675_s 	%argrw{"wrr"}
	sub		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:75
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp181 ___675_nAxis $const8 	%line{75} %argrw{"wrr"}
	mul		$tmp182 ___675_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___675_s 	%argrw{"wrr"}
	sub		$tmp187 $tmp184 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___675_nAxis $const7 	%argrw{"wrr"}
	mul		$tmp189 ___675_oc $tmp188 	%argrw{"wrr"}
	compref		$tmp190 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp191 $tmp189 $tmp190 	%argrw{"wrr"}
	compref		$tmp192 ___675_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp193 $tmp192 ___675_s 	%argrw{"wrr"}
	add		$tmp194 $tmp191 $tmp193 	%argrw{"wrr"}
	compref		$tmp195 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp196 ___675_oc $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___675_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp198 $tmp196 $tmp197 	%argrw{"wrr"}
	add		$tmp199 $tmp198 ___675_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:73
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___676_m $tmp147 $tmp154 $tmp161 $const4 $tmp168 $tmp173 $tmp180 $const4 $tmp187 $tmp194 $tmp199 $const4 $const4 $const4 $const4 $const12 	%line{73} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:83
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp200.x geomprop_Tworld_out1 $const1 	%line{83} %argrw{"wrr"}
	compref		$tmp200.y geomprop_Tworld_out1 $const7 	%argrw{"wrr"}
	compref		$tmp200.z geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	assign		$tmp200.w $const12 	%argrw{"wr"}
	functioncall	$const10 407 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp201 ___676_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp202 $tmp201 $tmp200.x 	%argrw{"wrr"}
	mxcompref	$tmp203 ___676_m $const7 $const1 	%argrw{"wrrr"}
	mul		$tmp204 $tmp203 $tmp200.y 	%argrw{"wrr"}
	add		$tmp205 $tmp202 $tmp204 	%argrw{"wrr"}
	mxcompref	$tmp206 ___676_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp207 $tmp206 $tmp200.z 	%argrw{"wrr"}
	add		$tmp208 $tmp205 $tmp207 	%argrw{"wrr"}
	mxcompref	$tmp209 ___676_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp210 $tmp209 $tmp200.w 	%argrw{"wrr"}
	add		___676_trans.x $tmp208 $tmp210 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp211 ___676_m $const1 $const7 	%line{416} %argrw{"wrrr"}
	mul		$tmp212 $tmp211 $tmp200.x 	%argrw{"wrr"}
	mxcompref	$tmp213 ___676_m $const7 $const7 	%argrw{"wrrr"}
	mul		$tmp214 $tmp213 $tmp200.y 	%argrw{"wrr"}
	add		$tmp215 $tmp212 $tmp214 	%argrw{"wrr"}
	mxcompref	$tmp216 ___676_m $const8 $const7 	%argrw{"wrrr"}
	mul		$tmp217 $tmp216 $tmp200.z 	%argrw{"wrr"}
	add		$tmp218 $tmp215 $tmp217 	%argrw{"wrr"}
	mxcompref	$tmp219 ___676_m $const9 $const7 	%argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp200.w 	%argrw{"wrr"}
	add		___676_trans.y $tmp218 $tmp220 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp221 ___676_m $const1 $const8 	%line{417} %argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp200.x 	%argrw{"wrr"}
	mxcompref	$tmp223 ___676_m $const7 $const8 	%argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp200.y 	%argrw{"wrr"}
	add		$tmp225 $tmp222 $tmp224 	%argrw{"wrr"}
	mxcompref	$tmp226 ___676_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp200.z 	%argrw{"wrr"}
	add		$tmp228 $tmp225 $tmp227 	%argrw{"wrr"}
	mxcompref	$tmp229 ___676_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp200.w 	%argrw{"wrr"}
	add		___676_trans.z $tmp228 $tmp230 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp231 ___676_m $const1 $const9 	%line{418} %argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp200.x 	%argrw{"wrr"}
	mxcompref	$tmp233 ___676_m $const7 $const9 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp200.y 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___676_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp200.z 	%argrw{"wrr"}
	add		$tmp238 $tmp235 $tmp237 	%argrw{"wrr"}
	mxcompref	$tmp239 ___676_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp200.w 	%argrw{"wrr"}
	add		___676_trans.w $tmp238 $tmp240 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:84
# }
	vector		___695_tangent_rotate_out ___676_trans.x ___676_trans.y ___676_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:259
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___695_transmission_roughness_clamped_low_tmp $const4 	%line{259} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:260
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___695_transmission_roughness_clamped_high_tmp $const12 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:261
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const16 413 	%line{261} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp241 ___695_transmission_roughness_add_out ___695_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_transmission_roughness_clamped_out $tmp241 ___695_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:262
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___695_coat_gamma_multiply_out ___695_coat_clamped_out color_lin_rec709_standard_surface_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:263
#     int opacity_luminance_float_index_tmp = 0;
	div		___695_coat_ior_to_F0_sqrt_out ___695_one_minus_coat_ior_out ___695_one_plus_coat_ior_out 	%line{263} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:264
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___695_opacity_luminance_float_index_tmp $const1 	%line{264} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:265
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const6 418 	%line{265} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___695_opacity_luminance_float_out ___695_opacity_luminance_out ___695_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:266
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___695_coat_tangent_rotate_normalize_out ___695_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{266} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:267
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___695_coat_affected_roughness_fg_tmp $const12 	%line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:268
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___695_coat_affected_roughness_out color_lin_rec709_standard_surface_specular_roughness ___695_coat_affected_roughness_fg_tmp ___695_coat_affect_roughness_multiply2_out 	%line{268} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:269
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___695_tangent_rotate_normalize_out ___695_tangent_rotate_out 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:270
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___695_coat_affected_transmission_roughness_fg_tmp $const12 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:271
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___695_coat_affected_transmission_roughness_out ___695_transmission_roughness_clamped_out ___695_coat_affected_transmission_roughness_fg_tmp ___695_coat_affect_roughness_multiply2_out 	%line{271} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:272
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___695_coat_gamma_in2_tmp $const12 	%line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:273
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___695_coat_gamma_out ___695_coat_gamma_multiply_out ___695_coat_gamma_in2_tmp 	%line{273} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:274
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___695_coat_ior_to_F0_out ___695_coat_ior_to_F0_sqrt_out ___695_coat_ior_to_F0_sqrt_out 	%line{274} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:275
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___695_coat_tangent_value2_tmp $const4 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:276
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp242 color_lin_rec709_standard_surface_coat_anisotropy ___695_coat_tangent_value2_tmp 	%line{276} %argrw{"wrr"}
	functioncall	$const30 435 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp242 433 435 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___695_coat_tangent_out ___695_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___695_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:277
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___695_main_roughness_out.x $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{277} %argrw{"wr"}
	assign		___695_main_roughness_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:278
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const14 456 	%line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:47
#     if (anisotropy > 0.0)
	mul		$tmp243 ___695_coat_affected_roughness_out ___695_coat_affected_roughness_out 	%line{47} %argrw{"wrr"}
	functioncall	$const16 442 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp244 $tmp243 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_roughness_sqr $tmp244 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:48
#     {
	gt		$tmp245 color_lin_rec709_standard_surface_specular_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{48} %argrw{"wrr"}
	if		$tmp245 454 456 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 447 	%line{50} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp247 color_lin_rec709_standard_surface_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp246 $tmp247 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp248 $const12 $tmp246 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{50} %argrw{"wrr"}
	sqrt		___672_aspect $tmp248 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:51
#         result.y = roughness_sqr * aspect;
	div		$tmp249 ___671_roughness_sqr ___672_aspect 	%line{51} %argrw{"wrr"}
	min		___695_main_roughness_out.x $tmp249 $const12 	%argrw{"wrr"}
	assign		___695_main_roughness_out.x ___695_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:52
#     }
	mul		___695_main_roughness_out.y ___671_roughness_sqr ___672_aspect 	%line{52} %argrw{"wrr"}
	assign		___695_main_roughness_out.y ___695_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:56
#         result.y = roughness_sqr;
	assign		___695_main_roughness_out.x ___671_roughness_sqr 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:57
#     }
	assign		___695_main_roughness_out.y ___671_roughness_sqr 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:279
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___695_main_tangent_value2_tmp $const4 	%line{279} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:280
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp250 color_lin_rec709_standard_surface_specular_anisotropy ___695_main_tangent_value2_tmp 	%line{280} %argrw{"wrr"}
	functioncall	$const30 464 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp250 462 464 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___695_main_tangent_out ___695_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___695_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:281
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___695_transmission_roughness_out.x $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{281} %argrw{"wr"}
	assign		___695_transmission_roughness_out.y $const4 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:282
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const14 485 	%line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:47
#     if (anisotropy > 0.0)
	mul		$tmp251 ___695_coat_affected_transmission_roughness_out ___695_coat_affected_transmission_roughness_out 	%line{47} %argrw{"wrr"}
	functioncall	$const16 471 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp252 $tmp251 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_roughness_sqr $tmp252 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:48
#     {
	gt		$tmp253 color_lin_rec709_standard_surface_specular_anisotropy $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{48} %argrw{"wrr"}
	if		$tmp253 483 485 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const16 476 	%line{50} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp255 color_lin_rec709_standard_surface_specular_anisotropy $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp254 $tmp255 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:50
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp256 $const12 $tmp254 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{50} %argrw{"wrr"}
	sqrt		___672_aspect $tmp256 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:51
#         result.y = roughness_sqr * aspect;
	div		$tmp257 ___671_roughness_sqr ___672_aspect 	%line{51} %argrw{"wrr"}
	min		___695_transmission_roughness_out.x $tmp257 $const12 	%argrw{"wrr"}
	assign		___695_transmission_roughness_out.x ___695_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:52
#     }
	mul		___695_transmission_roughness_out.y ___671_roughness_sqr ___672_aspect 	%line{52} %argrw{"wrr"}
	assign		___695_transmission_roughness_out.y ___695_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:56
#         result.y = roughness_sqr;
	assign		___695_transmission_roughness_out.x ___671_roughness_sqr 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:57
#     }
	assign		___695_transmission_roughness_out.y ___671_roughness_sqr 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:283
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___695_coat_affected_subsurface_color_out ___695_subsurface_color_nonnegative_out ___695_coat_gamma_out 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:284
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___695_coat_affected_diffuse_color_out ___695_base_color_nonnegative_out ___695_coat_gamma_out 	%line{284} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:285
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___695_one_minus_coat_ior_to_F0_in1_tmp $const12 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:286
#     color emission_color0_out = color(0.0);
	sub		___695_one_minus_coat_ior_to_F0_out ___695_one_minus_coat_ior_to_F0_in1_tmp ___695_coat_ior_to_F0_out 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:287
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___695_emission_color0_out $const2 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:288
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const31 493 	%line{288} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:123
#     out = combine_out;
	color		___680_combine_out ___695_one_minus_coat_ior_to_F0_out ___695_one_minus_coat_ior_to_F0_out ___695_one_minus_coat_ior_to_F0_out 	%line{123} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:124
# }
	assign		___695_emission_color0_out ___680_combine_out 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:289
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___695_coat_bsdf_out ___695_null_closure 	%line{289} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:290
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const35 505 	%line{290} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:107
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp259 $const34 $const36 	%line{107} %argrw{"wrr"}
	if		$tmp259 498 499 	%argrw{"r"}
	assign		___678_reflection_tint $const2 	%argrw{"wr"}
	assign		___678_reflection_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:108
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp260 $const34 $const34 	%line{108} %argrw{"wrr"}
	if		$tmp260 502 503 	%argrw{"r"}
	assign		___678_transmission_tint $const2 	%argrw{"wr"}
	assign		___678_transmission_tint $const19 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:109
# }
	closure		$tmp261 $const39 geomprop_Nworld_out1 ___695_coat_tangent_out ___678_reflection_tint ___678_transmission_tint ___695_coat_roughness_vector_out.x ___695_coat_roughness_vector_out.y color_lin_rec709_standard_surface_coat_IOR $const33 $const37 $const4 $const38 $const32 	%line{109} %argrw{"wrrrrrrrrrrrrr"}
	mul		___695_coat_bsdf_out $tmp261 color_lin_rec709_standard_surface_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:291
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___695_metal_bsdf_weight_tmp $const12 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:292
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___695_metal_bsdf_distribution_tmp $const33 	%line{292} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:293
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp262 $const40 geomprop_Nworld_out1 ___695_main_tangent_out ___695_main_roughness_out.x ___695_main_roughness_out.y ___695_artistic_ior_ior ___695_artistic_ior_extinction ___695_metal_bsdf_distribution_tmp $const37 color_lin_rec709_standard_surface_thin_film_thickness $const38 color_lin_rec709_standard_surface_thin_film_IOR 	%line{293} %argrw{"wrrrrrrrrrrrr"}
	mul		___695_metal_bsdf_out $tmp262 ___695_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:294
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___695_specular_bsdf_out ___695_null_closure 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:295
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const35 521 	%line{295} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:107
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp263 $const34 $const36 	%line{107} %argrw{"wrr"}
	if		$tmp263 514 515 	%argrw{"r"}
	assign		___678_reflection_tint $const2 	%argrw{"wr"}
	assign		___678_reflection_tint color_lin_rec709_standard_surface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:108
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp264 $const34 $const34 	%line{108} %argrw{"wrr"}
	if		$tmp264 518 519 	%argrw{"r"}
	assign		___678_transmission_tint $const2 	%argrw{"wr"}
	assign		___678_transmission_tint color_lin_rec709_standard_surface_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:109
# }
	closure		$tmp265 $const39 geomprop_Nworld_out1 ___695_main_tangent_out ___678_reflection_tint ___678_transmission_tint ___695_main_roughness_out.x ___695_main_roughness_out.y color_lin_rec709_standard_surface_specular_IOR $const33 $const37 color_lin_rec709_standard_surface_thin_film_thickness $const38 color_lin_rec709_standard_surface_thin_film_IOR 	%line{109} %argrw{"wrrrrrrrrrrrrr"}
	mul		___695_specular_bsdf_out $tmp265 color_lin_rec709_standard_surface_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:296
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___695_transmission_bsdf_out ___695_null_closure 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:297
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const35 533 	%line{297} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:107
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp266 $const36 $const36 	%line{107} %argrw{"wrr"}
	if		$tmp266 526 527 	%argrw{"r"}
	assign		___678_reflection_tint $const2 	%argrw{"wr"}
	assign		___678_reflection_tint color_lin_rec709_standard_surface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:108
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp267 $const36 $const34 	%line{108} %argrw{"wrr"}
	if		$tmp267 530 531 	%argrw{"r"}
	assign		___678_transmission_tint $const2 	%argrw{"wr"}
	assign		___678_transmission_tint color_lin_rec709_standard_surface_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:109
# }
	closure		$tmp268 $const39 geomprop_Nworld_out1 ___695_main_tangent_out ___678_reflection_tint ___678_transmission_tint ___695_transmission_roughness_out.x ___695_transmission_roughness_out.y color_lin_rec709_standard_surface_specular_IOR $const33 $const37 $const4 $const38 $const32 	%line{109} %argrw{"wrrrrrrrrrrrrr"}
	mul		___695_transmission_bsdf_out $tmp268 $const12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:298
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp269 $const41 geomprop_Nworld_out1 color_lin_rec709_standard_surface_sheen_color color_lin_rec709_standard_surface_sheen_roughness 	%line{298} %argrw{"wrrrr"}
	mul		___695_sheen_bsdf_out $tmp269 color_lin_rec709_standard_surface_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:299
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___695_translucent_bsdf_weight_tmp $const12 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:300
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp270 $const42 geomprop_Nworld_out1 ___695_coat_affected_subsurface_color_out 	%line{300} %argrw{"wrrr"}
	mul		___695_translucent_bsdf_out $tmp270 ___695_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:301
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___695_subsurface_bsdf_out ___695_null_closure 	%line{301} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:302
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const43 542 	%line{302} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:117
# #endif
	mul		$tmp271 $const12 ___695_coat_affected_subsurface_color_out 	%line{117} %argrw{"wrr"}
	closure		___695_subsurface_bsdf_out $const44 geomprop_Nworld_out1 $tmp271 $const12 ___695_subsurface_radius_scaled_out color_lin_rec709_standard_surface_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:303
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const45 547 	%line{303} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp272 $const12 ___695_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp273 ___695_subsurface_bsdf_out $tmp272 	%argrw{"wrr"}
	mul		$tmp274 ___695_translucent_bsdf_out ___695_subsurface_selector_out 	%argrw{"wrr"}
	add		___695_selected_subsurface_bsdf_out $tmp273 $tmp274 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:304
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp275 $const46 geomprop_Nworld_out1 ___695_coat_affected_diffuse_color_out color_lin_rec709_standard_surface_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{304} %argrw{"wrrrr"}
	mul		___695_diffuse_bsdf_out $tmp275 color_lin_rec709_standard_surface_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:305
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const45 554 	%line{305} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp276 $const12 color_lin_rec709_standard_surface_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp277 ___695_diffuse_bsdf_out $tmp276 	%argrw{"wrr"}
	mul		$tmp278 ___695_selected_subsurface_bsdf_out color_lin_rec709_standard_surface_subsurface 	%argrw{"wrr"}
	add		___695_subsurface_mix_out $tmp277 $tmp278 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:306
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___695_sheen_layer_out $const47 ___695_sheen_bsdf_out ___695_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{306} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:307
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const45 560 	%line{307} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp279 $const12 color_lin_rec709_standard_surface_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp280 ___695_sheen_layer_out $tmp279 	%argrw{"wrr"}
	mul		$tmp281 ___695_transmission_bsdf_out color_lin_rec709_standard_surface_transmission 	%argrw{"wrr"}
	add		___695_transmission_mix_out $tmp280 $tmp281 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:308
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___695_specular_layer_out $const47 ___695_specular_bsdf_out ___695_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{308} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:309
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const45 566 	%line{309} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp282 $const12 color_lin_rec709_standard_surface_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp283 ___695_specular_layer_out $tmp282 	%argrw{"wrr"}
	mul		$tmp284 ___695_metal_bsdf_out color_lin_rec709_standard_surface_metalness 	%argrw{"wrr"}
	add		___695_metalness_mix_out $tmp283 $tmp284 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:310
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___695_thin_film_layer_attenuated_out ___695_metalness_mix_out ___695_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:311
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___695_coat_layer_out $const47 ___695_coat_bsdf_out ___695_thin_film_layer_attenuated_out 	%line{311} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:312
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___695_emission_edf_out $const48 ___695_emission_weight_out 	%line{312} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:313
#     EDF coat_emission_edf_out = null_closure;
	mul		___695_coat_tinted_emission_edf_out ___695_emission_edf_out color_lin_rec709_standard_surface_coat_color 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:314
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___695_coat_emission_edf_out ___695_null_closure 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:315
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const50 583 	%line{315} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:208
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp287 I 	%line{208} %argrw{"wr"}
	dot		$tmp286 N $tmp287 	%argrw{"wrr"}
	fabs		___693_NdotV $tmp286 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:209
#     result = base * f;
	functioncall	$const51 582 	%line{209} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:202
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp288 $const12 ___693_NdotV 	%line{202} %argrw{"wrr"}
	functioncall	$const16 580 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp289 $tmp288 $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___692_x $tmp289 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:203
# }
	pow		$tmp290 ___692_x $const49 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{203} %argrw{"wrr"}
	mix		___693_f ___695_emission_color0_out $const2 $tmp290 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:210
# }
	mul		___695_coat_emission_edf_out ___695_coat_tinted_emission_edf_out ___693_f 	%line{210} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:316
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const45 588 	%line{316} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp291 $const12 color_lin_rec709_standard_surface_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp292 ___695_emission_edf_out $tmp291 	%argrw{"wrr"}
	mul		$tmp293 ___695_coat_emission_edf_out color_lin_rec709_standard_surface_coat 	%argrw{"wrr"}
	add		___695_blended_coat_emission_edf_out $tmp292 $tmp293 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:317
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___695_shader_constructor_out.bsdf ___695_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{317} %argrw{"wr"}
	assign		___695_shader_constructor_out.edf ___695_null_closure 	%argrw{"wr"}
	assign		___695_shader_constructor_out.opacity $const12 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:318
#     out = shader_constructor_out;
	functioncall	$const52 598 	%line{318} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:215
#     result.edf     = edf;
	assign		___695_shader_constructor_out.bsdf ___695_coat_layer_out 	%line{215} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:216
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___695_shader_constructor_out.edf ___695_blended_coat_emission_edf_out 	%line{216} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:217
# }
	functioncall	$const16 597 	%line{217} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp294 ___695_opacity_luminance_float_out $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_shader_constructor_out.opacity $tmp294 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:217
# }
	assign		___695_shader_constructor_out.opacity ___695_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{217} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:319
# }
	assign		color_lin_rec709_standard_surface_out.bsdf ___695_shader_constructor_out.bsdf 	%line{319} %argrw{"wr"}
	assign		color_lin_rec709_standard_surface_out.edf ___695_shader_constructor_out.edf 	%argrw{"wr"}
	assign		color_lin_rec709_standard_surface_out.opacity ___695_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:706
#         color_lin_rec709_out = (color_lin_rec709_standard_surface_out.bsdf + color_lin_rec709_standard_surface_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const16 604 	%line{706} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp295 color_lin_rec709_standard_surface_out.opacity $const12 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___696_opacity_weight $tmp295 $const4 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl:707
#     }
	add		$tmp296 color_lin_rec709_standard_surface_out.bsdf color_lin_rec709_standard_surface_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_lin_rec709_out.osl"} %line{707} %argrw{"wrr"}
	mul		$tmp297 $tmp296 ___696_opacity_weight 	%argrw{"wrr"}
	closure		$tmp298 $const53 	%argrw{"wr"}
	sub		$tmp299 $const12 ___696_opacity_weight 	%argrw{"wrr"}
	mul		$tmp300 $tmp298 $tmp299 	%argrw{"wrr"}
	add		color_lin_rec709_out $tmp297 $tmp300 	%argrw{"wrr"}
	end
