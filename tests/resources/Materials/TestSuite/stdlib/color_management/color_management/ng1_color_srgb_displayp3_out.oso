OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_color_srgb_displayp3_out.oso
surface ng1_color_srgb_displayp3_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"color_srgb_displayp3_out"} 
param	struct color4	color_srgb_displayp3_value_cm_in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	color_srgb_displayp3_value_cm_in.rgb	0.5 0 0		%read{15,93} %write{2147483647,-1} %mystruct{color_srgb_displayp3_value_cm_in} %mystructfield{0}
param	float	color_srgb_displayp3_value_cm_in.a	1		%read{25,95} %write{2147483647,-1} %mystruct{color_srgb_displayp3_value_cm_in} %mystructfield{1}
param	string	geomprop_Nworld_space	"world"		%read{212,212} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{323,758} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{757,757} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{772,774} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{324,730} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{324,728} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{328,630} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{729,741} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{652,684} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{327,327} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{766,768} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{736,740} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{328,328} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{760,762} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{331,331} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{337,337} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{337,337} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{751,751} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{744,744} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{743,743} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{743,743} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{325,796} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{344,779} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{303,499} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{307,638} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{322,322} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{346,713} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{623,623} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{325,325} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{717,729} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{717,729} %write{2147483647,-1}
param	float	color_srgb_displayp3_standard_surface5_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{349,349} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{349,349} %write{2147483647,-1}
param	color	color_srgb_displayp3_standard_surface5_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{352,352} %write{2147483647,-1}
param	int	color_srgb_displayp3_standard_surface5_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{338,338} %write{2147483647,-1}
oparam	closure color	color_srgb_displayp3_out			%read{2147483647,-1} %write{819,819}
global	vector	I	%read{782,782} %write{2147483647,-1}
global	normal	N	%read{212,783} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{13,235} %write{11,225}
local	float	___669_N_extract_0_out	%read{75,289} %write{15,239}
local	int	___669_N_extract_1_index_tmp	%read{29,251} %write{27,241}
local	float	___669_N_extract_1_out	%read{76,290} %write{31,255}
local	int	___669_N_extract_2_index_tmp	%read{45,267} %write{43,257}
local	float	___669_N_extract_2_out	%read{77,291} %write{47,271}
local	int	___669_N_extract_3_index_tmp	%read{61,283} %write{59,273}
local	float	___669_N_extract_3_out	%read{78,292} %write{63,287}
local	float	___670_separate_outr	%read{79,293} %write{6,289}
local	float	___670_separate_outg	%read{79,293} %write{7,290}
local	float	___670_separate_outb	%read{79,293} %write{8,291}
local	float	___670_separate_outa	%read{2147483647,-1} %write{9,292}
local	color	___670_combine_out	%read{80,294} %write{79,293}
local	int	___671_N_extract_0_index_tmp	%read{111,169} %write{109,167}
local	float	___671_N_extract_0_out	%read{118,176} %write{111,169}
local	int	___671_N_extract_1_index_tmp	%read{114,172} %write{112,170}
local	float	___671_N_extract_1_out	%read{119,177} %write{114,172}
local	int	___671_N_extract_2_index_tmp	%read{117,175} %write{115,173}
local	float	___671_N_extract_2_out	%read{120,178} %write{117,175}
local	float	___672_bias_in2_tmp	%read{102,102} %write{101,101}
local	color	___672_bias_out	%read{123,123} %write{102,102}
local	float	___672_linSeg_in2_tmp	%read{104,104} %write{103,103}
local	color	___672_linSeg_out	%read{159,159} %write{104,104}
local	float	___672_colorSeparate_outr	%read{127,127} %write{105,118}
local	float	___672_colorSeparate_outg	%read{137,137} %write{106,119}
local	float	___672_colorSeparate_outb	%read{147,147} %write{107,120}
local	float	___672_max_in2_tmp	%read{122,122} %write{121,121}
local	color	___672_max_out	%read{155,155} %write{123,123}
local	float	___672_isAboveR_value2_tmp	%read{127,127} %write{124,124}
local	float	___672_isAboveR_in1_tmp	%read{130,130} %write{125,125}
local	float	___672_isAboveR_in2_tmp	%read{132,132} %write{126,126}
local	float	___672_isAboveR_out	%read{156,156} %write{130,132}
local	float	___672_isAboveG_value2_tmp	%read{137,137} %write{134,134}
local	float	___672_isAboveG_in1_tmp	%read{140,140} %write{135,135}
local	float	___672_isAboveG_in2_tmp	%read{142,142} %write{136,136}
local	float	___672_isAboveG_out	%read{156,156} %write{140,142}
local	float	___672_isAboveB_value2_tmp	%read{147,147} %write{144,144}
local	float	___672_isAboveB_in1_tmp	%read{150,150} %write{145,145}
local	float	___672_isAboveB_in2_tmp	%read{152,152} %write{146,146}
local	float	___672_isAboveB_out	%read{156,156} %write{150,152}
local	float	___672_scale_in2_tmp	%read{155,155} %write{154,154}
local	color	___672_scale_out	%read{158,158} %write{155,155}
local	color	___672_isAbove_out	%read{159,159} %write{156,156}
local	float	___672_powSeg_in2_tmp	%read{158,158} %write{157,157}
local	color	___672_powSeg_out	%read{159,159} %write{158,158}
local	color	___672_mix_out	%read{160,160} %write{159,159}
local	float	___673_separate_outr	%read{179,179} %write{163,176}
local	float	___673_separate_outg	%read{179,179} %write{164,177}
local	float	___673_separate_outb	%read{179,179} %write{165,178}
local	vector	___673_combine_out	%read{180,180} %write{179,179}
local	int	___674_N_extract_0_index_tmp	%read{191,191} %write{189,189}
local	float	___674_N_extract_0_out	%read{198,198} %write{191,191}
local	int	___674_N_extract_1_index_tmp	%read{194,194} %write{192,192}
local	float	___674_N_extract_1_out	%read{199,199} %write{194,194}
local	int	___674_N_extract_2_index_tmp	%read{197,197} %write{195,195}
local	float	___674_N_extract_2_out	%read{200,200} %write{197,197}
local	float	___675_separate_outx	%read{201,201} %write{185,198}
local	float	___675_separate_outy	%read{201,201} %write{186,199}
local	float	___675_separate_outz	%read{201,201} %write{187,200}
local	color	___675_combine_out	%read{202,202} %write{201,201}
local	color	___676_srgb_transform_out	%read{169,175} %write{99,160}
local	vector	___676_asVec_out	%read{182,182} %write{161,180}
local	matrix	___676_transform_mat_tmp	%read{182,182} %write{181,181}
local	vector	___676_transform_out	%read{191,197} %write{182,182}
local	color	___676_asColor_out	%read{203,203} %write{183,202}
local	color	___677_asColor3_out	%read{102,117} %write{4,80}
local	int	___677_alpha_index_tmp	%read{83,91} %write{81,81}
local	float	___677_alpha_out	%read{208,208} %write{85,95}
local	color	___677_transform_out	%read{204,206} %write{97,203}
local	color	___677_asColor4_out.rgb	%read{209,209} %write{207,207} %mystruct{___677_asColor4_out} %mystructfield{0}
local	float	___677_asColor4_out.a	%read{210,210} %write{208,208} %mystruct{___677_asColor4_out} %mystructfield{1}
local	float	___678_roughness_sqr	%read{314,694} %write{306,680}
local	float	___679_aspect	%read{314,691} %write{313,687}
local	vector	___682_nAxis	%read{364,564} %write{360,506}
local	float	___682_s	%read{374,560} %write{361,507}
local	float	___682_c	%read{363,566} %write{362,508}
local	float	___682_oc	%read{365,563} %write{363,509}
local	float	___683_rotationRadians	%read{361,508} %write{358,504}
local	matrix	___683_m	%read{427,614} %write{421,567}
local	float	___683_trans.x	%read{471,617} %write{437,583} %mystruct{___683_trans} %mystructfield{0}
local	float	___683_trans.y	%read{471,617} %write{448,594} %mystruct{___683_trans} %mystructfield{1}
local	float	___683_trans.z	%read{471,617} %write{459,605} %mystruct{___683_trans} %mystructfield{2}
local	float	___683_trans.w	%read{2147483647,-1} %write{470,616} %mystruct{___683_trans} %mystructfield{3}
local	color	___684_r	%read{480,494} %write{479,479}
local	color	___684_r_sqrt	%read{484,485} %write{480,480}
local	color	___684_n_min	%read{487,487} %write{483,483}
local	color	___684_n_max	%read{487,487} %write{486,486}
local	color	___684_np1	%read{490,490} %write{488,488}
local	color	___684_nm1	%read{492,492} %write{489,489}
local	color	___684_k2	%read{497,498} %write{495,497}
local	color	___685_reflection_tint	%read{713,741} %write{707,736}
local	color	___685_transmission_tint	%read{713,741} %write{711,740}
local	color	___687_combine_out	%read{702,702} %write{701,701}
local	float	___699_x	%read{790,790} %write{789,789}
local	float	___700_NdotV	%read{786,786} %write{784,784}
local	color	___700_f	%read{792,792} %write{791,791}
local	closure color	___702_null_closure	%read{703,799} %write{299,299}
local	float	___702_coat_roughness_vector_out.x	%read{316,713} %write{300,319} %mystruct{___702_coat_roughness_vector_out} %mystructfield{0}
local	float	___702_coat_roughness_vector_out.y	%read{318,713} %write{301,320} %mystruct{___702_coat_roughness_vector_out} %mystructfield{1}
local	float	___702_coat_tangent_rotate_degree_in2_tmp	%read{322,322} %write{321,321}
local	float	___702_coat_tangent_rotate_degree_out	%read{358,358} %write{322,322}
local	color	___702_metal_reflectivity_out	%read{478,478} %write{323,323}
local	color	___702_metal_edgecolor_out	%read{487,487} %write{324,324}
local	float	___702_coat_affect_roughness_multiply1_out	%read{499,499} %write{325,325}
local	float	___702_tangent_rotate_degree_in2_tmp	%read{327,327} %write{326,326}
local	float	___702_tangent_rotate_degree_out	%read{504,504} %write{327,327}
local	float	___702_transmission_roughness_add_out	%read{621,621} %write{328,328}
local	float	___702_subsurface_color_nonnegative_in2_tmp	%read{330,330} %write{329,329}
local	color	___702_subsurface_color_nonnegative_out	%read{695,695} %write{331,331}
local	float	___702_coat_clamped_low_tmp	%read{336,336} %write{332,332}
local	float	___702_coat_clamped_high_tmp	%read{335,335} %write{333,333}
local	float	___702_coat_clamped_out	%read{623,623} %write{336,336}
local	color	___702_subsurface_radius_scaled_out	%read{751,751} %write{337,337}
local	float	___702_subsurface_selector_out	%read{753,755} %write{339,339}
local	float	___702_base_color_nonnegative_in2_tmp	%read{341,341} %write{340,340}
local	color	___702_base_color_nonnegative_out	%read{696,696} %write{342,342}
local	color	___702_coat_attenuation_bg_tmp	%read{344,344} %write{343,343}
local	color	___702_coat_attenuation_out	%read{776,776} %write{344,344}
local	float	___702_one_minus_coat_ior_in1_tmp	%read{346,346} %write{345,345}
local	float	___702_one_minus_coat_ior_out	%read{624,624} %write{346,346}
local	float	___702_one_plus_coat_ior_in1_tmp	%read{348,348} %write{347,347}
local	float	___702_one_plus_coat_ior_out	%read{624,624} %write{348,348}
local	color	___702_emission_weight_out	%read{778,778} %write{349,349}
local	color	___702_opacity_luminance_out	%read{627,627} %write{350,353}
local	vector	___702_coat_tangent_rotate_out	%read{628,628} %write{354,471}
local	color	___702_artistic_ior_ior	%read{488,717} %write{472,487}
local	color	___702_artistic_ior_extinction	%read{717,717} %write{473,498}
local	float	___702_coat_affect_roughness_multiply2_out	%read{630,633} %write{499,499}
local	vector	___702_tangent_rotate_out	%read{631,631} %write{500,617}
local	float	___702_transmission_roughness_clamped_low_tmp	%read{622,622} %write{618,618}
local	float	___702_transmission_roughness_clamped_high_tmp	%read{621,621} %write{619,619}
local	float	___702_transmission_roughness_clamped_out	%read{633,633} %write{622,622}
local	float	___702_coat_gamma_multiply_out	%read{635,635} %write{623,623}
local	float	___702_coat_ior_to_F0_sqrt_out	%read{636,636} %write{624,624}
local	int	___702_opacity_luminance_float_index_tmp	%read{627,627} %write{625,625}
local	float	___702_opacity_luminance_float_out	%read{805,805} %write{627,627}
local	vector	___702_coat_tangent_rotate_normalize_out	%read{641,641} %write{628,628}
local	float	___702_coat_affected_roughness_fg_tmp	%read{630,630} %write{629,629}
local	float	___702_coat_affected_roughness_out	%read{648,648} %write{630,630}
local	vector	___702_tangent_rotate_normalize_out	%read{670,670} %write{631,631}
local	float	___702_coat_affected_transmission_roughness_fg_tmp	%read{633,633} %write{632,632}
local	float	___702_coat_affected_transmission_roughness_out	%read{677,677} %write{633,633}
local	float	___702_coat_gamma_in2_tmp	%read{635,635} %write{634,634}
local	float	___702_coat_gamma_out	%read{695,696} %write{635,635}
local	float	___702_coat_ior_to_F0_out	%read{698,698} %write{636,636}
local	float	___702_coat_tangent_value2_tmp	%read{638,638} %write{637,637}
local	vector	___702_coat_tangent_out	%read{713,713} %write{641,643}
local	float	___702_main_roughness_out.x	%read{661,729} %write{645,664} %mystruct{___702_main_roughness_out} %mystructfield{0}
local	float	___702_main_roughness_out.y	%read{663,729} %write{646,665} %mystruct{___702_main_roughness_out} %mystructfield{1}
local	float	___702_main_tangent_value2_tmp	%read{667,667} %write{666,666}
local	vector	___702_main_tangent_out	%read{717,741} %write{670,672}
local	float	___702_transmission_roughness_out.x	%read{690,741} %write{674,693} %mystruct{___702_transmission_roughness_out} %mystructfield{0}
local	float	___702_transmission_roughness_out.y	%read{692,741} %write{675,694} %mystruct{___702_transmission_roughness_out} %mystructfield{1}
local	color	___702_coat_affected_subsurface_color_out	%read{746,750} %write{695,695}
local	color	___702_coat_affected_diffuse_color_out	%read{757,757} %write{696,696}
local	float	___702_one_minus_coat_ior_to_F0_in1_tmp	%read{698,698} %write{697,697}
local	float	___702_one_minus_coat_ior_to_F0_out	%read{701,701} %write{698,698}
local	color	___702_emission_color0_out	%read{791,791} %write{699,702}
local	closure color	___702_coat_bsdf_out	%read{777,777} %write{703,714}
local	float	___702_metal_bsdf_weight_tmp	%read{718,718} %write{715,715}
local	string	___702_metal_bsdf_distribution_tmp	%read{717,717} %write{716,716}
local	closure color	___702_metal_bsdf_out	%read{774,774} %write{718,718}
local	closure color	___702_specular_bsdf_out	%read{770,770} %write{719,730}
local	closure color	___702_transmission_bsdf_out	%read{768,768} %write{731,742}
local	closure color	___702_sheen_bsdf_out	%read{764,764} %write{744,744}
local	float	___702_translucent_bsdf_weight_tmp	%read{747,747} %write{745,745}
local	closure color	___702_translucent_bsdf_out	%read{755,755} %write{747,747}
local	closure color	___702_subsurface_bsdf_out	%read{754,754} %write{748,751}
local	closure color	___702_selected_subsurface_bsdf_out	%read{762,762} %write{756,756}
local	closure color	___702_diffuse_bsdf_out	%read{761,761} %write{758,758}
local	closure color	___702_subsurface_mix_out	%read{764,764} %write{763,763}
local	closure color	___702_sheen_layer_out	%read{767,767} %write{764,764}
local	closure color	___702_transmission_mix_out	%read{770,770} %write{769,769}
local	closure color	___702_specular_layer_out	%read{773,773} %write{770,770}
local	closure color	___702_metalness_mix_out	%read{776,776} %write{775,775}
local	closure color	___702_thin_film_layer_attenuated_out	%read{777,777} %write{776,776}
local	closure color	___702_coat_layer_out	%read{802,802} %write{777,777}
local	closure color	___702_emission_edf_out	%read{779,795} %write{778,778}
local	closure color	___702_coat_tinted_emission_edf_out	%read{792,792} %write{779,779}
local	closure color	___702_coat_emission_edf_out	%read{796,796} %write{780,792}
local	closure color	___702_blended_coat_emission_edf_out	%read{803,803} %write{797,797}
local	closure color	___702_shader_constructor_out.bsdf	%read{808,808} %write{798,802} %mystruct{___702_shader_constructor_out} %mystructfield{0}
local	closure color	___702_shader_constructor_out.edf	%read{809,809} %write{799,803} %mystruct{___702_shader_constructor_out} %mystructfield{1}
local	float	___702_shader_constructor_out.opacity	%read{807,810} %write{800,807} %mystruct{___702_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{295,296} %write{0,0}
local	color	color_srgb_displayp3_value_cm_out.rgb	%read{229,285} %write{1,209} %mystruct{color_srgb_displayp3_value_cm_out} %mystructfield{0}
local	float	color_srgb_displayp3_value_cm_out.a	%read{239,287} %write{2,210} %mystruct{color_srgb_displayp3_value_cm_out} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{360,757} %write{212,212}
local	vector	geomprop_Tworld_out1	%read{422,672} %write{217,217}
local	color	color_srgb_displayp3_color3_out	%read{323,342} %write{218,294}
local	closure color	color_srgb_displayp3_standard_surface5_out.bsdf	%read{814,814} %write{295,808} %mystruct{color_srgb_displayp3_standard_surface5_out} %mystructfield{0}
local	closure color	color_srgb_displayp3_standard_surface5_out.edf	%read{814,814} %write{296,809} %mystruct{color_srgb_displayp3_standard_surface5_out} %mystructfield{1}
local	float	color_srgb_displayp3_standard_surface5_out.opacity	%read{812,812} %write{297,810} %mystruct{color_srgb_displayp3_standard_surface5_out} %mystructfield{2}
local	float	___703_opacity_weight	%read{815,817} %write{813,813}
const	int	$const1	0		%read{0,625} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,791} %write{2147483647,-1}
const	float	$const3	0		%read{2,813} %write{2147483647,-1}
const	string	$const4	"NG_srgb_displayp3_to_lin_rec709_color4"		%read{3,3} %write{2147483647,-1}
const	string	$const5	"NG_convert_color4_color3"		%read{5,219} %write{2147483647,-1}
const	string	$const6	"NG_separate4_color4"		%read{10,224} %write{2147483647,-1}
const	string	$const7	"mx_extract"		%read{12,626} %write{2147483647,-1}
temp	int	$tmp1	%read{14,14} %write{13,13}
const	int	$const8	1		%read{17,608} %write{2147483647,-1}
temp	int	$tmp2	%read{18,18} %write{17,17}
const	int	$const9	2		%read{21,611} %write{2147483647,-1}
temp	int	$tmp3	%read{22,22} %write{21,21}
temp	int	$tmp4	%read{30,30} %write{29,29}
temp	int	$tmp5	%read{34,34} %write{33,33}
temp	int	$tmp6	%read{38,38} %write{37,37}
temp	int	$tmp7	%read{46,46} %write{45,45}
temp	int	$tmp8	%read{50,50} %write{49,49}
temp	int	$tmp9	%read{54,54} %write{53,53}
const	int	$const10	3		%read{59,614} %write{2147483647,-1}
temp	int	$tmp10	%read{62,62} %write{61,61}
temp	int	$tmp11	%read{66,66} %write{65,65}
temp	int	$tmp12	%read{70,70} %write{69,69}
temp	int	$tmp13	%read{84,84} %write{83,83}
temp	int	$tmp14	%read{88,88} %write{87,87}
temp	int	$tmp15	%read{92,92} %write{91,91}
const	string	$const11	"NG_srgb_displayp3_to_lin_rec709_color3"		%read{98,98} %write{2147483647,-1}
const	string	$const12	"NG_srgb_texture_to_lin_rec709_color3"		%read{100,100} %write{2147483647,-1}
const	float	$const13	0.055		%read{101,101} %write{2147483647,-1}
const	float	$const14	12.92		%read{103,103} %write{2147483647,-1}
const	string	$const15	"NG_separate3_color3"		%read{108,166} %write{2147483647,-1}
temp	color	$tmp16	%read{123,123} %write{122,122}
const	float	$const16	0.04045		%read{124,144} %write{2147483647,-1}
const	float	$const17	1		%read{125,817} %write{2147483647,-1}
temp	int	$tmp17	%read{129,129} %write{127,127}
const	string	$const18	"mx_ternary"		%read{128,668} %write{2147483647,-1}
temp	int	$tmp18	%read{139,139} %write{137,137}
temp	int	$tmp19	%read{149,149} %write{147,147}
const	float	$const19	1.055		%read{154,154} %write{2147483647,-1}
const	float	$const20	2.4		%read{157,157} %write{2147483647,-1}
const	vector	$const21	0 0 0		%read{161,500} %write{2147483647,-1}
const	string	$const22	"NG_convert_color3_vector3"		%read{162,162} %write{2147483647,-1}
const	float	$const23	1.22493		%read{181,181} %write{2147483647,-1}
const	float	$const24	-0.042059		%read{181,181} %write{2147483647,-1}
const	float	$const25	-0.019641		%read{181,181} %write{2147483647,-1}
const	float	$const26	-0.22493		%read{181,181} %write{2147483647,-1}
const	float	$const27	1.042059		%read{181,181} %write{2147483647,-1}
const	float	$const28	-0.078648		%read{181,181} %write{2147483647,-1}
const	float	$const29	1.098289		%read{181,181} %write{2147483647,-1}
const	string	$const30	"NG_convert_vector3_color3"		%read{184,184} %write{2147483647,-1}
const	string	$const31	"NG_separate3_vector3"		%read{188,188} %write{2147483647,-1}
temp	float	$tmp20	%read{207,207} %write{204,204}
temp	float	$tmp21	%read{207,207} %write{205,205}
temp	float	$tmp22	%read{207,207} %write{206,206}
const	string	$const32	"transform"		%read{211,572} %write{2147483647,-1}
const	string	$const33	"common"		%read{212,212} %write{2147483647,-1}
temp	vector	$tmp23	%read{217,217} %write{216,216}
temp	float	$tmp24	%read{216,216} %write{213,213}
temp	float	$tmp25	%read{215,215} %write{214,214}
temp	float	$tmp26	%read{216,216} %write{215,215}
temp	int	$tmp27	%read{228,228} %write{227,227}
temp	int	$tmp28	%read{232,232} %write{231,231}
temp	int	$tmp29	%read{236,236} %write{235,235}
temp	int	$tmp30	%read{244,244} %write{243,243}
temp	int	$tmp31	%read{248,248} %write{247,247}
temp	int	$tmp32	%read{252,252} %write{251,251}
temp	int	$tmp33	%read{260,260} %write{259,259}
temp	int	$tmp34	%read{264,264} %write{263,263}
temp	int	$tmp35	%read{268,268} %write{267,267}
temp	int	$tmp36	%read{276,276} %write{275,275}
temp	int	$tmp37	%read{280,280} %write{279,279}
temp	int	$tmp38	%read{284,284} %write{283,283}
const	string	$const34	"NG_standard_surface_surfaceshader_100"		%read{298,298} %write{2147483647,-1}
const	string	$const35	"mx_roughness_anisotropy"		%read{302,676} %write{2147483647,-1}
temp	float	$tmp39	%read{305,305} %write{303,303}
const	float	$const36	1e-08		%read{306,680} %write{2147483647,-1}
const	string	$const37	"clamp"		%read{304,811} %write{2147483647,-1}
temp	float	$tmp40	%read{306,306} %write{305,305}
temp	int	$tmp41	%read{308,308} %write{307,307}
temp	float	$tmp42	%read{312,312} %write{311,311}
const	float	$const38	0.98		%read{310,684} %write{2147483647,-1}
temp	float	$tmp43	%read{311,311} %write{310,310}
temp	float	$tmp44	%read{313,313} %write{312,312}
temp	float	$tmp45	%read{315,315} %write{314,314}
const	float	$const39	360		%read{321,326} %write{2147483647,-1}
temp	color	$tmp46	%read{331,331} %write{330,330}
temp	float	$tmp47	%read{336,336} %write{335,335}
temp	float	$tmp48	%read{339,339} %write{338,338}
temp	color	$tmp49	%read{342,342} %write{341,341}
const	color	$const40	1 1 1		%read{343,712} %write{2147483647,-1}
const	color	$const41	0.272229 0.674082 0.053689		%read{352,352} %write{2147483647,-1}
const	string	$const42	"mx_luminance_color3"		%read{351,351} %write{2147483647,-1}
temp	float	$tmp51	%read{353,353} %write{352,352}
const	string	$const43	"mx_rotate_vector3"		%read{355,501} %write{2147483647,-1}
const	string	$const44	"radians"		%read{356,502} %write{2147483647,-1}
const	float	$const45	3.1415927		%read{357,503} %write{2147483647,-1}
const	float	$const46	180		%read{357,503} %write{2147483647,-1}
temp	float	$tmp52	%read{358,358} %write{357,357}
const	string	$const47	"rotationMatrix"		%read{359,505} %write{2147483647,-1}
temp	float	$tmp53	%read{365,365} %write{364,364}
temp	float	$tmp54	%read{367,367} %write{365,365}
temp	float	$tmp55	%read{367,367} %write{366,366}
temp	float	$tmp56	%read{368,368} %write{367,367}
temp	float	$tmp57	%read{421,421} %write{368,368}
temp	float	$tmp58	%read{370,370} %write{369,369}
temp	float	$tmp59	%read{372,372} %write{370,370}
temp	float	$tmp60	%read{372,372} %write{371,371}
temp	float	$tmp61	%read{375,375} %write{372,372}
temp	float	$tmp62	%read{374,374} %write{373,373}
temp	float	$tmp63	%read{375,375} %write{374,374}
temp	float	$tmp64	%read{421,421} %write{375,375}
temp	float	$tmp65	%read{377,377} %write{376,376}
temp	float	$tmp66	%read{379,379} %write{377,377}
temp	float	$tmp67	%read{379,379} %write{378,378}
temp	float	$tmp68	%read{382,382} %write{379,379}
temp	float	$tmp69	%read{381,381} %write{380,380}
temp	float	$tmp70	%read{382,382} %write{381,381}
temp	float	$tmp71	%read{421,421} %write{382,382}
temp	float	$tmp72	%read{384,384} %write{383,383}
temp	float	$tmp73	%read{386,386} %write{384,384}
temp	float	$tmp74	%read{386,386} %write{385,385}
temp	float	$tmp75	%read{389,389} %write{386,386}
temp	float	$tmp76	%read{388,388} %write{387,387}
temp	float	$tmp77	%read{389,389} %write{388,388}
temp	float	$tmp78	%read{421,421} %write{389,389}
temp	float	$tmp79	%read{391,391} %write{390,390}
temp	float	$tmp80	%read{393,393} %write{391,391}
temp	float	$tmp81	%read{393,393} %write{392,392}
temp	float	$tmp82	%read{394,394} %write{393,393}
temp	float	$tmp83	%read{421,421} %write{394,394}
temp	float	$tmp84	%read{396,396} %write{395,395}
temp	float	$tmp85	%read{398,398} %write{396,396}
temp	float	$tmp86	%read{398,398} %write{397,397}
temp	float	$tmp87	%read{401,401} %write{398,398}
temp	float	$tmp88	%read{400,400} %write{399,399}
temp	float	$tmp89	%read{401,401} %write{400,400}
temp	float	$tmp90	%read{421,421} %write{401,401}
temp	float	$tmp91	%read{403,403} %write{402,402}
temp	float	$tmp92	%read{405,405} %write{403,403}
temp	float	$tmp93	%read{405,405} %write{404,404}
temp	float	$tmp94	%read{408,408} %write{405,405}
temp	float	$tmp95	%read{407,407} %write{406,406}
temp	float	$tmp96	%read{408,408} %write{407,407}
temp	float	$tmp97	%read{421,421} %write{408,408}
temp	float	$tmp98	%read{410,410} %write{409,409}
temp	float	$tmp99	%read{412,412} %write{410,410}
temp	float	$tmp100	%read{412,412} %write{411,411}
temp	float	$tmp101	%read{415,415} %write{412,412}
temp	float	$tmp102	%read{414,414} %write{413,413}
temp	float	$tmp103	%read{415,415} %write{414,414}
temp	float	$tmp104	%read{421,421} %write{415,415}
temp	float	$tmp105	%read{417,417} %write{416,416}
temp	float	$tmp106	%read{419,419} %write{417,417}
temp	float	$tmp107	%read{419,419} %write{418,418}
temp	float	$tmp108	%read{420,420} %write{419,419}
temp	float	$tmp109	%read{421,421} %write{420,420}
temp	float	$tmp110.x	%read{428,461} %write{422,422}
temp	float	$tmp110.y	%read{430,463} %write{423,423}
temp	float	$tmp110.z	%read{433,466} %write{424,424}
temp	float	$tmp110.w	%read{436,469} %write{425,425}
temp	float	$tmp111	%read{428,428} %write{427,427}
temp	float	$tmp112	%read{431,431} %write{428,428}
temp	float	$tmp113	%read{430,430} %write{429,429}
temp	float	$tmp114	%read{431,431} %write{430,430}
temp	float	$tmp115	%read{434,434} %write{431,431}
temp	float	$tmp116	%read{433,433} %write{432,432}
temp	float	$tmp117	%read{434,434} %write{433,433}
temp	float	$tmp118	%read{437,437} %write{434,434}
temp	float	$tmp119	%read{436,436} %write{435,435}
temp	float	$tmp120	%read{437,437} %write{436,436}
temp	float	$tmp121	%read{439,439} %write{438,438}
temp	float	$tmp122	%read{442,442} %write{439,439}
temp	float	$tmp123	%read{441,441} %write{440,440}
temp	float	$tmp124	%read{442,442} %write{441,441}
temp	float	$tmp125	%read{445,445} %write{442,442}
temp	float	$tmp126	%read{444,444} %write{443,443}
temp	float	$tmp127	%read{445,445} %write{444,444}
temp	float	$tmp128	%read{448,448} %write{445,445}
temp	float	$tmp129	%read{447,447} %write{446,446}
temp	float	$tmp130	%read{448,448} %write{447,447}
temp	float	$tmp131	%read{450,450} %write{449,449}
temp	float	$tmp132	%read{453,453} %write{450,450}
temp	float	$tmp133	%read{452,452} %write{451,451}
temp	float	$tmp134	%read{453,453} %write{452,452}
temp	float	$tmp135	%read{456,456} %write{453,453}
temp	float	$tmp136	%read{455,455} %write{454,454}
temp	float	$tmp137	%read{456,456} %write{455,455}
temp	float	$tmp138	%read{459,459} %write{456,456}
temp	float	$tmp139	%read{458,458} %write{457,457}
temp	float	$tmp140	%read{459,459} %write{458,458}
temp	float	$tmp141	%read{461,461} %write{460,460}
temp	float	$tmp142	%read{464,464} %write{461,461}
temp	float	$tmp143	%read{463,463} %write{462,462}
temp	float	$tmp144	%read{464,464} %write{463,463}
temp	float	$tmp145	%read{467,467} %write{464,464}
temp	float	$tmp146	%read{466,466} %write{465,465}
temp	float	$tmp147	%read{467,467} %write{466,466}
temp	float	$tmp148	%read{470,470} %write{467,467}
temp	float	$tmp149	%read{469,469} %write{468,468}
temp	float	$tmp150	%read{470,470} %write{469,469}
const	string	$const48	"mx_artistic_ior"		%read{474,474} %write{2147483647,-1}
temp	color	$tmp151	%read{479,479} %write{475,475}
const	float	$const49	0.99		%read{476,476} %write{2147483647,-1}
temp	color	$tmp152	%read{478,478} %write{476,476}
temp	color	$tmp153	%read{479,479} %write{478,478}
temp	color	$tmp154	%read{483,483} %write{481,481}
temp	color	$tmp155	%read{483,483} %write{482,482}
temp	color	$tmp156	%read{486,486} %write{484,484}
temp	color	$tmp157	%read{486,486} %write{485,485}
temp	color	$tmp158	%read{491,491} %write{490,490}
temp	color	$tmp159	%read{493,493} %write{491,491}
temp	color	$tmp160	%read{493,493} %write{492,492}
temp	color	$tmp161	%read{495,495} %write{493,493}
temp	color	$tmp162	%read{495,495} %write{494,494}
temp	color	$tmp163	%read{497,497} %write{496,496}
temp	float	$tmp164	%read{504,504} %write{503,503}
temp	float	$tmp165	%read{511,511} %write{510,510}
temp	float	$tmp166	%read{513,513} %write{511,511}
temp	float	$tmp167	%read{513,513} %write{512,512}
temp	float	$tmp168	%read{514,514} %write{513,513}
temp	float	$tmp169	%read{567,567} %write{514,514}
temp	float	$tmp170	%read{516,516} %write{515,515}
temp	float	$tmp171	%read{518,518} %write{516,516}
temp	float	$tmp172	%read{518,518} %write{517,517}
temp	float	$tmp173	%read{521,521} %write{518,518}
temp	float	$tmp174	%read{520,520} %write{519,519}
temp	float	$tmp175	%read{521,521} %write{520,520}
temp	float	$tmp176	%read{567,567} %write{521,521}
temp	float	$tmp177	%read{523,523} %write{522,522}
temp	float	$tmp178	%read{525,525} %write{523,523}
temp	float	$tmp179	%read{525,525} %write{524,524}
temp	float	$tmp180	%read{528,528} %write{525,525}
temp	float	$tmp181	%read{527,527} %write{526,526}
temp	float	$tmp182	%read{528,528} %write{527,527}
temp	float	$tmp183	%read{567,567} %write{528,528}
temp	float	$tmp184	%read{530,530} %write{529,529}
temp	float	$tmp185	%read{532,532} %write{530,530}
temp	float	$tmp186	%read{532,532} %write{531,531}
temp	float	$tmp187	%read{535,535} %write{532,532}
temp	float	$tmp188	%read{534,534} %write{533,533}
temp	float	$tmp189	%read{535,535} %write{534,534}
temp	float	$tmp190	%read{567,567} %write{535,535}
temp	float	$tmp191	%read{537,537} %write{536,536}
temp	float	$tmp192	%read{539,539} %write{537,537}
temp	float	$tmp193	%read{539,539} %write{538,538}
temp	float	$tmp194	%read{540,540} %write{539,539}
temp	float	$tmp195	%read{567,567} %write{540,540}
temp	float	$tmp196	%read{542,542} %write{541,541}
temp	float	$tmp197	%read{544,544} %write{542,542}
temp	float	$tmp198	%read{544,544} %write{543,543}
temp	float	$tmp199	%read{547,547} %write{544,544}
temp	float	$tmp200	%read{546,546} %write{545,545}
temp	float	$tmp201	%read{547,547} %write{546,546}
temp	float	$tmp202	%read{567,567} %write{547,547}
temp	float	$tmp203	%read{549,549} %write{548,548}
temp	float	$tmp204	%read{551,551} %write{549,549}
temp	float	$tmp205	%read{551,551} %write{550,550}
temp	float	$tmp206	%read{554,554} %write{551,551}
temp	float	$tmp207	%read{553,553} %write{552,552}
temp	float	$tmp208	%read{554,554} %write{553,553}
temp	float	$tmp209	%read{567,567} %write{554,554}
temp	float	$tmp210	%read{556,556} %write{555,555}
temp	float	$tmp211	%read{558,558} %write{556,556}
temp	float	$tmp212	%read{558,558} %write{557,557}
temp	float	$tmp213	%read{561,561} %write{558,558}
temp	float	$tmp214	%read{560,560} %write{559,559}
temp	float	$tmp215	%read{561,561} %write{560,560}
temp	float	$tmp216	%read{567,567} %write{561,561}
temp	float	$tmp217	%read{563,563} %write{562,562}
temp	float	$tmp218	%read{565,565} %write{563,563}
temp	float	$tmp219	%read{565,565} %write{564,564}
temp	float	$tmp220	%read{566,566} %write{565,565}
temp	float	$tmp221	%read{567,567} %write{566,566}
temp	float	$tmp222.x	%read{574,607} %write{568,568}
temp	float	$tmp222.y	%read{576,609} %write{569,569}
temp	float	$tmp222.z	%read{579,612} %write{570,570}
temp	float	$tmp222.w	%read{582,615} %write{571,571}
temp	float	$tmp223	%read{574,574} %write{573,573}
temp	float	$tmp224	%read{577,577} %write{574,574}
temp	float	$tmp225	%read{576,576} %write{575,575}
temp	float	$tmp226	%read{577,577} %write{576,576}
temp	float	$tmp227	%read{580,580} %write{577,577}
temp	float	$tmp228	%read{579,579} %write{578,578}
temp	float	$tmp229	%read{580,580} %write{579,579}
temp	float	$tmp230	%read{583,583} %write{580,580}
temp	float	$tmp231	%read{582,582} %write{581,581}
temp	float	$tmp232	%read{583,583} %write{582,582}
temp	float	$tmp233	%read{585,585} %write{584,584}
temp	float	$tmp234	%read{588,588} %write{585,585}
temp	float	$tmp235	%read{587,587} %write{586,586}
temp	float	$tmp236	%read{588,588} %write{587,587}
temp	float	$tmp237	%read{591,591} %write{588,588}
temp	float	$tmp238	%read{590,590} %write{589,589}
temp	float	$tmp239	%read{591,591} %write{590,590}
temp	float	$tmp240	%read{594,594} %write{591,591}
temp	float	$tmp241	%read{593,593} %write{592,592}
temp	float	$tmp242	%read{594,594} %write{593,593}
temp	float	$tmp243	%read{596,596} %write{595,595}
temp	float	$tmp244	%read{599,599} %write{596,596}
temp	float	$tmp245	%read{598,598} %write{597,597}
temp	float	$tmp246	%read{599,599} %write{598,598}
temp	float	$tmp247	%read{602,602} %write{599,599}
temp	float	$tmp248	%read{601,601} %write{600,600}
temp	float	$tmp249	%read{602,602} %write{601,601}
temp	float	$tmp250	%read{605,605} %write{602,602}
temp	float	$tmp251	%read{604,604} %write{603,603}
temp	float	$tmp252	%read{605,605} %write{604,604}
temp	float	$tmp253	%read{607,607} %write{606,606}
temp	float	$tmp254	%read{610,610} %write{607,607}
temp	float	$tmp255	%read{609,609} %write{608,608}
temp	float	$tmp256	%read{610,610} %write{609,609}
temp	float	$tmp257	%read{613,613} %write{610,610}
temp	float	$tmp258	%read{612,612} %write{611,611}
temp	float	$tmp259	%read{613,613} %write{612,612}
temp	float	$tmp260	%read{616,616} %write{613,613}
temp	float	$tmp261	%read{615,615} %write{614,614}
temp	float	$tmp262	%read{616,616} %write{615,615}
temp	float	$tmp263	%read{622,622} %write{621,621}
temp	int	$tmp264	%read{640,640} %write{638,638}
temp	float	$tmp265	%read{650,650} %write{648,648}
temp	float	$tmp266	%read{651,651} %write{650,650}
temp	int	$tmp267	%read{653,653} %write{652,652}
temp	float	$tmp268	%read{657,657} %write{656,656}
temp	float	$tmp269	%read{656,656} %write{655,655}
temp	float	$tmp270	%read{658,658} %write{657,657}
temp	float	$tmp271	%read{660,660} %write{659,659}
temp	int	$tmp272	%read{669,669} %write{667,667}
temp	float	$tmp273	%read{679,679} %write{677,677}
temp	float	$tmp274	%read{680,680} %write{679,679}
temp	int	$tmp275	%read{682,682} %write{681,681}
temp	float	$tmp276	%read{686,686} %write{685,685}
temp	float	$tmp277	%read{685,685} %write{684,684}
temp	float	$tmp278	%read{687,687} %write{686,686}
temp	float	$tmp279	%read{689,689} %write{688,688}
const	string	$const50	"NG_convert_float_color3"		%read{700,700} %write{2147483647,-1}
const	float	$const51	1.5		%read{713,741} %write{2147483647,-1}
const	string	$const52	"ggx"		%read{713,741} %write{2147483647,-1}
const	string	$const53	"R"		%read{705,737} %write{2147483647,-1}
const	string	$const54	"mx_dielectric_bsdf"		%read{704,732} %write{2147483647,-1}
const	string	$const55	"T"		%read{705,737} %write{2147483647,-1}
temp	int	$tmp281	%read{706,706} %write{705,705}
temp	int	$tmp282	%read{710,710} %write{709,709}
temp	closure color	$tmp283	%read{714,714} %write{713,713}
const	string	$const56	"thinfilm_thickness"		%read{713,741} %write{2147483647,-1}
const	string	$const57	"thinfilm_ior"		%read{713,741} %write{2147483647,-1}
const	string	$const58	"dielectric_bsdf"		%read{713,741} %write{2147483647,-1}
temp	closure color	$tmp284	%read{718,718} %write{717,717}
const	string	$const59	"conductor_bsdf"		%read{717,717} %write{2147483647,-1}
temp	int	$tmp285	%read{722,722} %write{721,721}
temp	int	$tmp286	%read{726,726} %write{725,725}
temp	closure color	$tmp287	%read{730,730} %write{729,729}
temp	int	$tmp288	%read{734,734} %write{733,733}
temp	int	$tmp289	%read{738,738} %write{737,737}
temp	closure color	$tmp290	%read{742,742} %write{741,741}
temp	closure color	$tmp291	%read{744,744} %write{743,743}
const	string	$const60	"sheen_bsdf"		%read{743,743} %write{2147483647,-1}
temp	closure color	$tmp292	%read{747,747} %write{746,746}
const	string	$const61	"translucent_bsdf"		%read{746,746} %write{2147483647,-1}
const	string	$const62	"mx_subsurface_bsdf"		%read{749,749} %write{2147483647,-1}
temp	color	$tmp293	%read{751,751} %write{750,750}
const	string	$const63	"subsurface_bssrdf"		%read{751,751} %write{2147483647,-1}
const	string	$const64	"mix"		%read{752,793} %write{2147483647,-1}
temp	float	$tmp294	%read{754,754} %write{753,753}
temp	closure color	$tmp295	%read{756,756} %write{754,754}
temp	closure color	$tmp296	%read{756,756} %write{755,755}
temp	closure color	$tmp297	%read{758,758} %write{757,757}
const	string	$const65	"oren_nayar_diffuse_bsdf"		%read{757,757} %write{2147483647,-1}
temp	float	$tmp298	%read{761,761} %write{760,760}
temp	closure color	$tmp299	%read{763,763} %write{761,761}
temp	closure color	$tmp300	%read{763,763} %write{762,762}
const	string	$const66	"layer"		%read{764,777} %write{2147483647,-1}
temp	float	$tmp301	%read{767,767} %write{766,766}
temp	closure color	$tmp302	%read{769,769} %write{767,767}
temp	closure color	$tmp303	%read{769,769} %write{768,768}
temp	float	$tmp304	%read{773,773} %write{772,772}
temp	closure color	$tmp305	%read{775,775} %write{773,773}
temp	closure color	$tmp306	%read{775,775} %write{774,774}
const	string	$const67	"uniform_edf"		%read{778,778} %write{2147483647,-1}
const	float	$const68	5		%read{790,790} %write{2147483647,-1}
const	string	$const69	"mx_generalized_schlick_edf"		%read{781,781} %write{2147483647,-1}
temp	float	$tmp308	%read{784,784} %write{783,783}
temp	vector	$tmp309	%read{783,783} %write{782,782}
const	string	$const70	"mx_fresnel_schlick"		%read{785,785} %write{2147483647,-1}
temp	float	$tmp310	%read{788,788} %write{786,786}
temp	float	$tmp311	%read{789,789} %write{788,788}
temp	float	$tmp312	%read{791,791} %write{790,790}
temp	float	$tmp313	%read{795,795} %write{794,794}
temp	closure color	$tmp314	%read{797,797} %write{795,795}
temp	closure color	$tmp315	%read{797,797} %write{796,796}
const	string	$const71	"mx_surface"		%read{801,801} %write{2147483647,-1}
temp	float	$tmp316	%read{806,806} %write{805,805}
temp	float	$tmp317	%read{813,813} %write{812,812}
temp	closure color	$tmp318	%read{815,815} %write{814,814}
temp	closure color	$tmp319	%read{819,819} %write{815,815}
temp	closure color	$tmp320	%read{818,818} %write{816,816}
const	string	$const72	"transparent"		%read{816,816} %write{2147483647,-1}
temp	float	$tmp321	%read{818,818} %write{817,817}
temp	closure color	$tmp322	%read{819,819} %write{818,818}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:802
#     color4 color_srgb_displayp3_value_cm_out = color4(color(0.0), 0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{802} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:803
#     NG_srgb_displayp3_to_lin_rec709_color4(color_srgb_displayp3_value_cm_in, color_srgb_displayp3_value_cm_out);
	assign		color_srgb_displayp3_value_cm_out.rgb $const2 	%line{803} %argrw{"wr"}
	assign		color_srgb_displayp3_value_cm_out.a $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:804
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const4 211 	%line{804} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:139
#     NG_convert_color4_color3(in, asColor3_out);
	assign		___677_asColor3_out $const2 	%line{139} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:140
#     int alpha_index_tmp = 3;
	functioncall	$const5 81 	%line{140} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 79 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 27 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp1 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp1 17 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp2 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp2 21 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp3 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp3 25 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_srgb_displayp3_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 43 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp4 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp4 33 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp5 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp5 37 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp6 41 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_srgb_displayp3_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 59 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp7 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp7 49 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp8 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp8 53 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp9 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp9 57 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_srgb_displayp3_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 75 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp10 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp10 65 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp11 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp11 69 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp12 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp12 73 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_srgb_displayp3_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:42
# }
	assign		___677_asColor3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:141
#     float alpha_out = mx_extract(in, alpha_index_tmp);
	assign		___677_alpha_index_tmp $const10 	%line{141} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:142
#     color transform_out = color(0.0);
	functioncall	$const7 97 	%line{142} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp13 ___677_alpha_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp13 87 97 	%argrw{"r"}
	compref		___677_alpha_out color_srgb_displayp3_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp14 ___677_alpha_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp14 91 97 	%argrw{"r"}
	compref		___677_alpha_out color_srgb_displayp3_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp15 ___677_alpha_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp15 95 97 	%argrw{"r"}
	compref		___677_alpha_out color_srgb_displayp3_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___677_alpha_out color_srgb_displayp3_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:143
#     NG_srgb_displayp3_to_lin_rec709_color3(asColor3_out, transform_out);
	assign		___677_transform_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{143} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:144
#     color4 asColor4_out = { color(transform_out[0],transform_out[1],transform_out[2]),alpha_out };
	functioncall	$const11 204 	%line{144} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:126
#     NG_srgb_texture_to_lin_rec709_color3(in, srgb_transform_out);
	assign		___676_srgb_transform_out $const2 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:127
#     vector asVec_out = vector(0.0);
	functioncall	$const12 161 	%line{127} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:60
#     color bias_out = in + bias_in2_tmp;
	assign		___672_bias_in2_tmp $const13 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:61
#     float linSeg_in2_tmp = 12.920000;
	add		___672_bias_out ___677_asColor3_out ___672_bias_in2_tmp 	%line{61} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:62
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___672_linSeg_in2_tmp $const14 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:63
#     float colorSeparate_outr = 0.0;
	div		___672_linSeg_out ___677_asColor3_out ___672_linSeg_in2_tmp 	%line{63} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:64
#     float colorSeparate_outg = 0.0;
	assign		___672_colorSeparate_outr $const3 	%line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:65
#     float colorSeparate_outb = 0.0;
	assign		___672_colorSeparate_outg $const3 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:66
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___672_colorSeparate_outb $const3 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:67
#     float max_in2_tmp = 0.000000;
	functioncall	$const15 121 	%line{67} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:47
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___671_N_extract_0_index_tmp $const1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:48
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 112 	%line{48} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_0_out ___677_asColor3_out ___671_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:49
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___671_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:50
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 115 	%line{50} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_1_out ___677_asColor3_out ___671_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:51
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___671_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:52
#     outr = N_extract_0_out;
	functioncall	$const7 118 	%line{52} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_2_out ___677_asColor3_out ___671_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:53
#     outg = N_extract_1_out;
	assign		___672_colorSeparate_outr ___671_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{53} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:54
#     outb = N_extract_2_out;
	assign		___672_colorSeparate_outg ___671_N_extract_1_out 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:55
# }
	assign		___672_colorSeparate_outb ___671_N_extract_2_out 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:68
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___672_max_in2_tmp $const3 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:69
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp16 ___672_max_in2_tmp 	%line{69} %argrw{"wr"}
	max		___672_max_out ___672_bias_out $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:70
#     float isAboveR_in1_tmp = 1.000000;
	assign		___672_isAboveR_value2_tmp $const16 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:71
#     float isAboveR_in2_tmp = 0.000000;
	assign		___672_isAboveR_in1_tmp $const17 	%line{71} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:72
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___672_isAboveR_in2_tmp $const3 	%line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:73
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp17 ___672_colorSeparate_outr ___672_isAboveR_value2_tmp 	%line{73} %argrw{"wrr"}
	functioncall	$const18 134 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp17 132 134 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveR_out ___672_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveR_out ___672_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:74
#     float isAboveG_in1_tmp = 1.000000;
	assign		___672_isAboveG_value2_tmp $const16 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:75
#     float isAboveG_in2_tmp = 0.000000;
	assign		___672_isAboveG_in1_tmp $const17 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:76
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___672_isAboveG_in2_tmp $const3 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:77
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp18 ___672_colorSeparate_outg ___672_isAboveG_value2_tmp 	%line{77} %argrw{"wrr"}
	functioncall	$const18 144 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp18 142 144 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveG_out ___672_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveG_out ___672_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:78
#     float isAboveB_in1_tmp = 1.000000;
	assign		___672_isAboveB_value2_tmp $const16 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:79
#     float isAboveB_in2_tmp = 0.000000;
	assign		___672_isAboveB_in1_tmp $const17 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:80
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___672_isAboveB_in2_tmp $const3 	%line{80} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:81
#     float scale_in2_tmp = 1.055000;
	gt		$tmp19 ___672_colorSeparate_outb ___672_isAboveB_value2_tmp 	%line{81} %argrw{"wrr"}
	functioncall	$const18 154 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp19 152 154 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveB_out ___672_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveB_out ___672_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:82
#     color scale_out = max_out / scale_in2_tmp;
	assign		___672_scale_in2_tmp $const19 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:83
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___672_scale_out ___672_max_out ___672_scale_in2_tmp 	%line{83} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:84
#     float powSeg_in2_tmp = 2.400000;
	color		___672_isAbove_out ___672_isAboveR_out ___672_isAboveG_out ___672_isAboveB_out 	%line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:85
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___672_powSeg_in2_tmp $const20 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:86
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___672_powSeg_out ___672_scale_out ___672_powSeg_in2_tmp 	%line{86} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:87
#     out = mix_out;
	mix		___672_mix_out ___672_linSeg_out ___672_powSeg_out ___672_isAbove_out 	%line{87} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:88
# }
	assign		___676_srgb_transform_out ___672_mix_out 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:128
#     NG_convert_color3_vector3(srgb_transform_out, asVec_out);
	assign		___676_asVec_out $const21 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:129
#     matrix transform_mat_tmp = matrix(1.224930,  -0.042059,  -0.019641, 0.000,  -0.224930,  1.042059,  -0.078648, 0.000,  0.000000,  -0.000000,  1.098289, 0.000, 0.000, 0.000, 0.000, 1.000);
	functioncall	$const22 181 	%line{129} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:93
#     float separate_outg = 0.0;
	assign		___673_separate_outr $const3 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:94
#     float separate_outb = 0.0;
	assign		___673_separate_outg $const3 	%line{94} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:95
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___673_separate_outb $const3 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:96
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const15 179 	%line{96} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:47
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___671_N_extract_0_index_tmp $const1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:48
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 170 	%line{48} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_0_out ___676_srgb_transform_out ___671_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:49
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___671_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:50
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 173 	%line{50} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_1_out ___676_srgb_transform_out ___671_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:51
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___671_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:52
#     outr = N_extract_0_out;
	functioncall	$const7 176 	%line{52} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_2_out ___676_srgb_transform_out ___671_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:53
#     outg = N_extract_1_out;
	assign		___673_separate_outr ___671_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{53} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:54
#     outb = N_extract_2_out;
	assign		___673_separate_outg ___671_N_extract_1_out 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:55
# }
	assign		___673_separate_outb ___671_N_extract_2_out 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:97
#     out = combine_out;
	vector		___673_combine_out ___673_separate_outr ___673_separate_outg ___673_separate_outb 	%line{97} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:98
# }
	assign		___676_asVec_out ___673_combine_out 	%line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:130
#     vector transform_out = transform(transform_mat_tmp, asVec_out);
	matrix		___676_transform_mat_tmp $const23 $const24 $const25 $const3 $const26 $const27 $const28 $const3 $const3 $const3 $const29 $const3 $const3 $const3 $const3 $const17 	%line{130} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:131
#     color asColor_out = color(0.0);
	transformv	___676_transform_out ___676_transform_mat_tmp ___676_asVec_out 	%line{131} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:132
#     NG_convert_vector3_color3(transform_out, asColor_out);
	assign		___676_asColor_out $const2 	%line{132} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:133
#     out = asColor_out;
	functioncall	$const30 203 	%line{133} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:116
#     float separate_outy = 0.0;
	assign		___675_separate_outx $const3 	%line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:117
#     float separate_outz = 0.0;
	assign		___675_separate_outy $const3 	%line{117} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:118
#     NG_separate3_vector3(in, separate_outx, separate_outy, separate_outz);
	assign		___675_separate_outz $const3 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:119
#     color combine_out = color( separate_outx,separate_outy,separate_outz );
	functioncall	$const31 201 	%line{119} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:103
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___674_N_extract_0_index_tmp $const1 	%line{103} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:104
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 192 	%line{104} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_0_out ___676_transform_out ___674_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:105
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___674_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{105} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:106
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 195 	%line{106} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_1_out ___676_transform_out ___674_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:107
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___674_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:108
#     outx = N_extract_0_out;
	functioncall	$const7 198 	%line{108} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_2_out ___676_transform_out ___674_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:109
#     outy = N_extract_1_out;
	assign		___675_separate_outx ___674_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{109} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:110
#     outz = N_extract_2_out;
	assign		___675_separate_outy ___674_N_extract_1_out 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:111
# }
	assign		___675_separate_outz ___674_N_extract_2_out 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:120
#     out = combine_out;
	color		___675_combine_out ___675_separate_outx ___675_separate_outy ___675_separate_outz 	%line{120} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:121
# }
	assign		___676_asColor_out ___675_combine_out 	%line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:134
# }
	assign		___677_transform_out ___676_asColor_out 	%line{134} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:145
#     out = asColor4_out;
	compref		$tmp20 ___677_transform_out $const1 	%line{145} %argrw{"wrr"}
	compref		$tmp21 ___677_transform_out $const8 	%argrw{"wrr"}
	compref		$tmp22 ___677_transform_out $const9 	%argrw{"wrr"}
	color		___677_asColor4_out.rgb $tmp20 $tmp21 $tmp22 	%argrw{"wrrr"}
	assign		___677_asColor4_out.a ___677_alpha_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:146
# }
	assign		color_srgb_displayp3_value_cm_out.rgb ___677_asColor4_out.rgb 	%line{146} %argrw{"wr"}
	assign		color_srgb_displayp3_value_cm_out.a ___677_asColor4_out.a 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:805
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const32 213 	%line{805} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const33 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:806
#     color color_srgb_displayp3_color3_out = color(0.0);
	compref		$tmp24 N $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{806} %argrw{"wrr"}
	compref		$tmp25 N $const1 	%argrw{"wrr"}
	neg		$tmp26 $tmp25 	%argrw{"wr"}
	vector		$tmp23 $tmp24 $const3 $tmp26 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp23 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:807
#     NG_convert_color4_color3(color_srgb_displayp3_value_cm_out, color_srgb_displayp3_color3_out);
	assign		color_srgb_displayp3_color3_out $const2 	%line{807} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:808
#     surfaceshader color_srgb_displayp3_standard_surface5_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const5 295 	%line{808} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 293 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 241 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp27 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp27 231 241 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp28 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp28 235 241 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp29 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp29 239 241 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_displayp3_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_srgb_displayp3_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 257 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp30 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp30 247 257 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp31 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp31 251 257 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp32 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp32 255 257 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_displayp3_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_srgb_displayp3_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 273 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp33 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp33 263 273 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp34 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp34 267 273 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp35 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp35 271 273 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_displayp3_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_srgb_displayp3_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 289 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp36 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp36 279 289 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp37 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp37 283 289 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp38 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp38 287 289 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_displayp3_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_srgb_displayp3_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:42
# }
	assign		color_srgb_displayp3_color3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:809
#     NG_standard_surface_surfaceshader_100(color_srgb_displayp3_standard_surface5_base, color_srgb_displayp3_color3_out, color_srgb_displayp3_standard_surface5_diffuse_roughness, color_srgb_displayp3_standard_surface5_metalness, color_srgb_displayp3_standard_surface5_specular, color_srgb_displayp3_standard_surface5_specular_color, color_srgb_displayp3_standard_surface5_specular_roughness, color_srgb_displayp3_standard_surface5_specular_IOR, color_srgb_displayp3_standard_surface5_specular_anisotropy, color_srgb_displayp3_standard_surface5_specular_rotation, color_srgb_displayp3_standard_surface5_transmission, color_srgb_displayp3_standard_surface5_transmission_color, color_srgb_displayp3_standard_surface5_transmission_depth, color_srgb_displayp3_standard_surface5_transmission_scatter, color_srgb_displayp3_standard_surface5_transmission_scatter_anisotropy, color_srgb_displayp3_standard_surface5_transmission_dispersion, color_srgb_displayp3_standard_surface5_transmission_extra_roughness, color_srgb_displayp3_standard_surface5_subsurface, color_srgb_displayp3_standard_surface5_subsurface_color, color_srgb_displayp3_standard_surface5_subsurface_radius, color_srgb_displayp3_standard_surface5_subsurface_scale, color_srgb_displayp3_standard_surface5_subsurface_anisotropy, color_srgb_displayp3_standard_surface5_sheen, color_srgb_displayp3_standard_surface5_sheen_color, color_srgb_displayp3_standard_surface5_sheen_roughness, color_srgb_displayp3_standard_surface5_coat, color_srgb_displayp3_standard_surface5_coat_color, color_srgb_displayp3_standard_surface5_coat_roughness, color_srgb_displayp3_standard_surface5_coat_anisotropy, color_srgb_displayp3_standard_surface5_coat_rotation, color_srgb_displayp3_standard_surface5_coat_IOR, geomprop_Nworld_out1, color_srgb_displayp3_standard_surface5_coat_affect_color, color_srgb_displayp3_standard_surface5_coat_affect_roughness, color_srgb_displayp3_standard_surface5_thin_film_thickness, color_srgb_displayp3_standard_surface5_thin_film_IOR, color_srgb_displayp3_standard_surface5_emission, color_srgb_displayp3_standard_surface5_emission_color, color_srgb_displayp3_standard_surface5_opacity, color_srgb_displayp3_standard_surface5_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, color_srgb_displayp3_standard_surface5_out);
	assign		color_srgb_displayp3_standard_surface5_out.bsdf null_closure 	%line{809} %argrw{"wr"}
	assign		color_srgb_displayp3_standard_surface5_out.edf null_closure 	%argrw{"wr"}
	assign		color_srgb_displayp3_standard_surface5_out.opacity $const17 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:810
#     {
	functioncall	$const34 811 	%line{810} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:326
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___702_null_closure $const1 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:327
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___702_coat_roughness_vector_out.x $const3 	%line{327} %argrw{"wr"}
	assign		___702_coat_roughness_vector_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:328
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const35 321 	%line{328} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:151
#     if (anisotropy > 0.0)
	mul		$tmp39 color_srgb_displayp3_standard_surface5_coat_roughness color_srgb_displayp3_standard_surface5_coat_roughness 	%line{151} %argrw{"wrr"}
	functioncall	$const37 307 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 $tmp39 $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp40 $const36 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:152
#     {
	gt		$tmp41 color_srgb_displayp3_standard_surface5_coat_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{152} %argrw{"wrr"}
	if		$tmp41 319 321 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const37 312 	%line{154} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp43 color_srgb_displayp3_standard_surface5_coat_anisotropy $const38 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp42 $tmp43 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp44 $const17 $tmp42 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{154} %argrw{"wrr"}
	sqrt		___679_aspect $tmp44 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:155
#         result.y = roughness_sqr * aspect;
	div		$tmp45 ___678_roughness_sqr ___679_aspect 	%line{155} %argrw{"wrr"}
	min		___702_coat_roughness_vector_out.x $tmp45 $const17 	%argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:156
#     }
	mul		___702_coat_roughness_vector_out.y ___678_roughness_sqr ___679_aspect 	%line{156} %argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.y ___702_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:160
#         result.y = roughness_sqr;
	assign		___702_coat_roughness_vector_out.x ___678_roughness_sqr 	%line{160} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:161
#     }
	assign		___702_coat_roughness_vector_out.y ___678_roughness_sqr 	%line{161} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:329
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___702_coat_tangent_rotate_degree_in2_tmp $const39 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:330
#     color metal_reflectivity_out = base_color * base;
	mul		___702_coat_tangent_rotate_degree_out color_srgb_displayp3_standard_surface5_coat_rotation ___702_coat_tangent_rotate_degree_in2_tmp 	%line{330} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:331
#     color metal_edgecolor_out = specular_color * specular;
	mul		___702_metal_reflectivity_out color_srgb_displayp3_color3_out color_srgb_displayp3_standard_surface5_base 	%line{331} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:332
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___702_metal_edgecolor_out color_srgb_displayp3_standard_surface5_specular_color color_srgb_displayp3_standard_surface5_specular 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:333
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___702_coat_affect_roughness_multiply1_out color_srgb_displayp3_standard_surface5_coat_affect_roughness color_srgb_displayp3_standard_surface5_coat 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:334
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___702_tangent_rotate_degree_in2_tmp $const39 	%line{334} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:335
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___702_tangent_rotate_degree_out color_srgb_displayp3_standard_surface5_specular_rotation ___702_tangent_rotate_degree_in2_tmp 	%line{335} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:336
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___702_transmission_roughness_add_out color_srgb_displayp3_standard_surface5_specular_roughness color_srgb_displayp3_standard_surface5_transmission_extra_roughness 	%line{336} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:337
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___702_subsurface_color_nonnegative_in2_tmp $const3 	%line{337} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:338
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp46 ___702_subsurface_color_nonnegative_in2_tmp 	%line{338} %argrw{"wr"}
	max		___702_subsurface_color_nonnegative_out color_srgb_displayp3_standard_surface5_subsurface_color $tmp46 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:339
#     float coat_clamped_high_tmp = 1.000000;
	assign		___702_coat_clamped_low_tmp $const3 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:340
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___702_coat_clamped_high_tmp $const17 	%line{340} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:341
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const37 337 	%line{341} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp47 color_srgb_displayp3_standard_surface5_coat ___702_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_coat_clamped_out $tmp47 ___702_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:342
#     float subsurface_selector_out = float(thin_walled);
	mul		___702_subsurface_radius_scaled_out color_srgb_displayp3_standard_surface5_subsurface_radius color_srgb_displayp3_standard_surface5_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{342} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:343
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp48 color_srgb_displayp3_standard_surface5_thin_walled 	%line{343} %argrw{"wr"}
	assign		___702_subsurface_selector_out $tmp48 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:344
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___702_base_color_nonnegative_in2_tmp $const3 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:345
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp49 ___702_base_color_nonnegative_in2_tmp 	%line{345} %argrw{"wr"}
	max		___702_base_color_nonnegative_out color_srgb_displayp3_color3_out $tmp49 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:346
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___702_coat_attenuation_bg_tmp $const40 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:347
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___702_coat_attenuation_out ___702_coat_attenuation_bg_tmp color_srgb_displayp3_standard_surface5_coat_color color_srgb_displayp3_standard_surface5_coat 	%line{347} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:348
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___702_one_minus_coat_ior_in1_tmp $const17 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:349
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___702_one_minus_coat_ior_out ___702_one_minus_coat_ior_in1_tmp color_srgb_displayp3_standard_surface5_coat_IOR 	%line{349} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:350
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___702_one_plus_coat_ior_in1_tmp $const17 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:351
#     color emission_weight_out = emission_color * emission1;
	add		___702_one_plus_coat_ior_out ___702_one_plus_coat_ior_in1_tmp color_srgb_displayp3_standard_surface5_coat_IOR 	%line{351} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:352
#     color opacity_luminance_out = color(0.0);
	mul		___702_emission_weight_out color_srgb_displayp3_standard_surface5_emission_color color_srgb_displayp3_standard_surface5_emission 	%line{352} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:353
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___702_opacity_luminance_out $const2 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:354
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const42 354 	%line{354} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:167
# }
	dot		$tmp51 color_srgb_displayp3_standard_surface5_opacity $const41 	%line{167} %argrw{"wrr"}
	assign		___702_opacity_luminance_out $tmp51 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:355
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___702_coat_tangent_rotate_out $const21 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:356
#     color artistic_ior_ior = color(0.0);
	functioncall	$const43 472 	%line{356} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:185
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const44 359 	%line{185} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp52 $const45 $const46 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_coat_tangent_rotate_degree_out $tmp52 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:186
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const47 422 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{186} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:172
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{172} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:173
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{173} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:174
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{174} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:175
# 
	sub		___682_oc $const17 ___682_c 	%line{175} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:177
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp53 ___682_nAxis $const1 	%line{177} %argrw{"wrr"}
	mul		$tmp54 ___682_oc $tmp53 	%argrw{"wrr"}
	compref		$tmp55 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
	add		$tmp57 $tmp56 ___682_c 	%argrw{"wrr"}
	compref		$tmp58 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp59 ___682_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp63 $tmp62 ___682_s 	%argrw{"wrr"}
	sub		$tmp64 $tmp61 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp66 ___682_oc $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp70 $tmp69 ___682_s 	%argrw{"wrr"}
	add		$tmp71 $tmp68 $tmp70 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:178
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp72 ___682_nAxis $const1 	%line{178} %argrw{"wrr"}
	mul		$tmp73 ___682_oc $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp77 $tmp76 ___682_s 	%argrw{"wrr"}
	add		$tmp78 $tmp75 $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp80 ___682_oc $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp82 $tmp80 $tmp81 	%argrw{"wrr"}
	add		$tmp83 $tmp82 ___682_c 	%argrw{"wrr"}
	compref		$tmp84 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp85 ___682_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	compref		$tmp88 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp89 $tmp88 ___682_s 	%argrw{"wrr"}
	sub		$tmp90 $tmp87 $tmp89 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:179
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp91 ___682_nAxis $const9 	%line{179} %argrw{"wrr"}
	mul		$tmp92 ___682_oc $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp94 $tmp92 $tmp93 	%argrw{"wrr"}
	compref		$tmp95 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp96 $tmp95 ___682_s 	%argrw{"wrr"}
	sub		$tmp97 $tmp94 $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp99 ___682_oc $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp101 $tmp99 $tmp100 	%argrw{"wrr"}
	compref		$tmp102 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp103 $tmp102 ___682_s 	%argrw{"wrr"}
	add		$tmp104 $tmp101 $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp106 ___682_oc $tmp105 	%argrw{"wrr"}
	compref		$tmp107 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp108 $tmp106 $tmp107 	%argrw{"wrr"}
	add		$tmp109 $tmp108 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:177
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp57 $tmp64 $tmp71 $const3 $tmp78 $tmp83 $tmp90 $const3 $tmp97 $tmp104 $tmp109 $const3 $const3 $const3 $const3 $const17 	%line{177} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:187
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp110.x geomprop_Tworld_out1 $const1 	%line{187} %argrw{"wrr"}
	compref		$tmp110.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp110.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp110.w $const17 	%argrw{"wr"}
	functioncall	$const32 471 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp111 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp113 ___683_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp110.y 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	mxcompref	$tmp116 ___683_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp110.z 	%argrw{"wrr"}
	add		$tmp118 $tmp115 $tmp117 	%argrw{"wrr"}
	mxcompref	$tmp119 ___683_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp110.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp118 $tmp120 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp121 ___683_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp123 ___683_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp124 $tmp123 $tmp110.y 	%argrw{"wrr"}
	add		$tmp125 $tmp122 $tmp124 	%argrw{"wrr"}
	mxcompref	$tmp126 ___683_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp110.z 	%argrw{"wrr"}
	add		$tmp128 $tmp125 $tmp127 	%argrw{"wrr"}
	mxcompref	$tmp129 ___683_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp110.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp128 $tmp130 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp131 ___683_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp133 ___683_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp134 $tmp133 $tmp110.y 	%argrw{"wrr"}
	add		$tmp135 $tmp132 $tmp134 	%argrw{"wrr"}
	mxcompref	$tmp136 ___683_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp110.z 	%argrw{"wrr"}
	add		$tmp138 $tmp135 $tmp137 	%argrw{"wrr"}
	mxcompref	$tmp139 ___683_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp110.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp138 $tmp140 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp141 ___683_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp143 ___683_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp144 $tmp143 $tmp110.y 	%argrw{"wrr"}
	add		$tmp145 $tmp142 $tmp144 	%argrw{"wrr"}
	mxcompref	$tmp146 ___683_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp110.z 	%argrw{"wrr"}
	add		$tmp148 $tmp145 $tmp147 	%argrw{"wrr"}
	mxcompref	$tmp149 ___683_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp110.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp148 $tmp150 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:188
# }
	vector		___702_coat_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{188} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:357
#     color artistic_ior_extinction = color(0.0);
	assign		___702_artistic_ior_ior $const2 	%line{357} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:358
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___702_artistic_ior_extinction $const2 	%line{358} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:359
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const48 499 	%line{359} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:196
#     color r_sqrt = sqrt(r);
	assign		$tmp151 $const3 	%line{196} %argrw{"wr"}
	assign		$tmp152 $const49 	%argrw{"wr"}
	functioncall	$const37 480 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp153 ___702_metal_reflectivity_out $tmp152 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___684_r $tmp153 $tmp151 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:197
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___684_r_sqrt ___684_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{197} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:198
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp154 $const17 ___684_r 	%line{198} %argrw{"wrr"}
	add		$tmp155 $const17 ___684_r 	%argrw{"wrr"}
	div		___684_n_min $tmp154 $tmp155 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:199
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp156 $const17 ___684_r_sqrt 	%line{199} %argrw{"wrr"}
	sub		$tmp157 $const17 ___684_r_sqrt 	%argrw{"wrr"}
	div		___684_n_max $tmp156 $tmp157 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:200
# 
	mix		___702_artistic_ior_ior ___684_n_max ___684_n_min ___702_metal_edgecolor_out 	%line{200} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:202
#     color nm1 = ior - 1.0;
	add		___684_np1 ___702_artistic_ior_ior $const17 	%line{202} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:203
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___684_nm1 ___702_artistic_ior_ior $const17 	%line{203} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:204
#     k2 = max(k2, 0.0);
	mul		$tmp158 ___684_np1 ___684_np1 	%line{204} %argrw{"wrr"}
	mul		$tmp159 $tmp158 ___684_r 	%argrw{"wrr"}
	mul		$tmp160 ___684_nm1 ___684_nm1 	%argrw{"wrr"}
	sub		$tmp161 $tmp159 $tmp160 	%argrw{"wrr"}
	sub		$tmp162 $const17 ___684_r 	%argrw{"wrr"}
	div		___684_k2 $tmp161 $tmp162 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:205
#     extinction = sqrt(k2);
	assign		$tmp163 $const3 	%line{205} %argrw{"wr"}
	max		___684_k2 ___684_k2 $tmp163 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:206
# }
	sqrt		___702_artistic_ior_extinction ___684_k2 	%line{206} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:360
#     vector tangent_rotate_out = vector(0.0);
	mul		___702_coat_affect_roughness_multiply2_out ___702_coat_affect_roughness_multiply1_out color_srgb_displayp3_standard_surface5_coat_roughness 	%line{360} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:361
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___702_tangent_rotate_out $const21 	%line{361} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:362
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const43 618 	%line{362} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:185
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const44 505 	%line{185} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp164 $const45 $const46 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_tangent_rotate_degree_out $tmp164 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:186
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const47 568 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{186} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:172
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{172} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:173
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{173} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:174
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{174} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:175
# 
	sub		___682_oc $const17 ___682_c 	%line{175} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:177
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp165 ___682_nAxis $const1 	%line{177} %argrw{"wrr"}
	mul		$tmp166 ___682_oc $tmp165 	%argrw{"wrr"}
	compref		$tmp167 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp168 $tmp166 $tmp167 	%argrw{"wrr"}
	add		$tmp169 $tmp168 ___682_c 	%argrw{"wrr"}
	compref		$tmp170 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp171 ___682_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp175 $tmp174 ___682_s 	%argrw{"wrr"}
	sub		$tmp176 $tmp173 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp178 ___682_oc $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp180 $tmp178 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp182 $tmp181 ___682_s 	%argrw{"wrr"}
	add		$tmp183 $tmp180 $tmp182 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:178
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp184 ___682_nAxis $const1 	%line{178} %argrw{"wrr"}
	mul		$tmp185 ___682_oc $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp189 $tmp188 ___682_s 	%argrw{"wrr"}
	add		$tmp190 $tmp187 $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp192 ___682_oc $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp194 $tmp192 $tmp193 	%argrw{"wrr"}
	add		$tmp195 $tmp194 ___682_c 	%argrw{"wrr"}
	compref		$tmp196 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp197 ___682_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	compref		$tmp200 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp201 $tmp200 ___682_s 	%argrw{"wrr"}
	sub		$tmp202 $tmp199 $tmp201 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:179
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp203 ___682_nAxis $const9 	%line{179} %argrw{"wrr"}
	mul		$tmp204 ___682_oc $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
	compref		$tmp207 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp208 $tmp207 ___682_s 	%argrw{"wrr"}
	sub		$tmp209 $tmp206 $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___682_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp211 ___682_oc $tmp210 	%argrw{"wrr"}
	compref		$tmp212 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp213 $tmp211 $tmp212 	%argrw{"wrr"}
	compref		$tmp214 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp215 $tmp214 ___682_s 	%argrw{"wrr"}
	add		$tmp216 $tmp213 $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp218 ___682_oc $tmp217 	%argrw{"wrr"}
	compref		$tmp219 ___682_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp220 $tmp218 $tmp219 	%argrw{"wrr"}
	add		$tmp221 $tmp220 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:177
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp169 $tmp176 $tmp183 $const3 $tmp190 $tmp195 $tmp202 $const3 $tmp209 $tmp216 $tmp221 $const3 $const3 $const3 $const3 $const17 	%line{177} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:187
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp222.x geomprop_Tworld_out1 $const1 	%line{187} %argrw{"wrr"}
	compref		$tmp222.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp222.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp222.w $const17 	%argrw{"wr"}
	functioncall	$const32 617 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp223 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp225 ___683_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp222.y 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	mxcompref	$tmp228 ___683_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp222.z 	%argrw{"wrr"}
	add		$tmp230 $tmp227 $tmp229 	%argrw{"wrr"}
	mxcompref	$tmp231 ___683_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp222.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp230 $tmp232 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp233 ___683_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp235 ___683_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp236 $tmp235 $tmp222.y 	%argrw{"wrr"}
	add		$tmp237 $tmp234 $tmp236 	%argrw{"wrr"}
	mxcompref	$tmp238 ___683_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp222.z 	%argrw{"wrr"}
	add		$tmp240 $tmp237 $tmp239 	%argrw{"wrr"}
	mxcompref	$tmp241 ___683_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp222.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp240 $tmp242 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp243 ___683_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp245 ___683_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp246 $tmp245 $tmp222.y 	%argrw{"wrr"}
	add		$tmp247 $tmp244 $tmp246 	%argrw{"wrr"}
	mxcompref	$tmp248 ___683_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp222.z 	%argrw{"wrr"}
	add		$tmp250 $tmp247 $tmp249 	%argrw{"wrr"}
	mxcompref	$tmp251 ___683_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp222.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp250 $tmp252 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp253 ___683_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp255 ___683_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp256 $tmp255 $tmp222.y 	%argrw{"wrr"}
	add		$tmp257 $tmp254 $tmp256 	%argrw{"wrr"}
	mxcompref	$tmp258 ___683_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp222.z 	%argrw{"wrr"}
	add		$tmp260 $tmp257 $tmp259 	%argrw{"wrr"}
	mxcompref	$tmp261 ___683_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp222.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp260 $tmp262 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:188
# }
	vector		___702_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{188} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:363
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___702_transmission_roughness_clamped_low_tmp $const3 	%line{363} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:364
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___702_transmission_roughness_clamped_high_tmp $const17 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:365
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const37 623 	%line{365} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp263 ___702_transmission_roughness_add_out ___702_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_transmission_roughness_clamped_out $tmp263 ___702_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:366
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___702_coat_gamma_multiply_out ___702_coat_clamped_out color_srgb_displayp3_standard_surface5_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{366} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:367
#     int opacity_luminance_float_index_tmp = 0;
	div		___702_coat_ior_to_F0_sqrt_out ___702_one_minus_coat_ior_out ___702_one_plus_coat_ior_out 	%line{367} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:368
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___702_opacity_luminance_float_index_tmp $const1 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:369
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const7 628 	%line{369} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___702_opacity_luminance_float_out ___702_opacity_luminance_out ___702_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:370
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___702_coat_tangent_rotate_normalize_out ___702_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:371
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_roughness_fg_tmp $const17 	%line{371} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:372
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___702_coat_affected_roughness_out color_srgb_displayp3_standard_surface5_specular_roughness ___702_coat_affected_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{372} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:373
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___702_tangent_rotate_normalize_out ___702_tangent_rotate_out 	%line{373} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:374
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_transmission_roughness_fg_tmp $const17 	%line{374} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:375
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___702_coat_affected_transmission_roughness_out ___702_transmission_roughness_clamped_out ___702_coat_affected_transmission_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{375} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:376
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___702_coat_gamma_in2_tmp $const17 	%line{376} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:377
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___702_coat_gamma_out ___702_coat_gamma_multiply_out ___702_coat_gamma_in2_tmp 	%line{377} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:378
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___702_coat_ior_to_F0_out ___702_coat_ior_to_F0_sqrt_out ___702_coat_ior_to_F0_sqrt_out 	%line{378} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:379
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___702_coat_tangent_value2_tmp $const3 	%line{379} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:380
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp264 color_srgb_displayp3_standard_surface5_coat_anisotropy ___702_coat_tangent_value2_tmp 	%line{380} %argrw{"wrr"}
	functioncall	$const18 645 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp264 643 645 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_coat_tangent_out ___702_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:381
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___702_main_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{381} %argrw{"wr"}
	assign		___702_main_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:382
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const35 666 	%line{382} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:151
#     if (anisotropy > 0.0)
	mul		$tmp265 ___702_coat_affected_roughness_out ___702_coat_affected_roughness_out 	%line{151} %argrw{"wrr"}
	functioncall	$const37 652 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp266 $tmp265 $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp266 $const36 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:152
#     {
	gt		$tmp267 color_srgb_displayp3_standard_surface5_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{152} %argrw{"wrr"}
	if		$tmp267 664 666 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const37 657 	%line{154} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp269 color_srgb_displayp3_standard_surface5_specular_anisotropy $const38 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp268 $tmp269 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp270 $const17 $tmp268 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{154} %argrw{"wrr"}
	sqrt		___679_aspect $tmp270 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:155
#         result.y = roughness_sqr * aspect;
	div		$tmp271 ___678_roughness_sqr ___679_aspect 	%line{155} %argrw{"wrr"}
	min		___702_main_roughness_out.x $tmp271 $const17 	%argrw{"wrr"}
	assign		___702_main_roughness_out.x ___702_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:156
#     }
	mul		___702_main_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{156} %argrw{"wrr"}
	assign		___702_main_roughness_out.y ___702_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:160
#         result.y = roughness_sqr;
	assign		___702_main_roughness_out.x ___678_roughness_sqr 	%line{160} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:161
#     }
	assign		___702_main_roughness_out.y ___678_roughness_sqr 	%line{161} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:383
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___702_main_tangent_value2_tmp $const3 	%line{383} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:384
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp272 color_srgb_displayp3_standard_surface5_specular_anisotropy ___702_main_tangent_value2_tmp 	%line{384} %argrw{"wrr"}
	functioncall	$const18 674 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp272 672 674 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_main_tangent_out ___702_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:385
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___702_transmission_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{385} %argrw{"wr"}
	assign		___702_transmission_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:386
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const35 695 	%line{386} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:151
#     if (anisotropy > 0.0)
	mul		$tmp273 ___702_coat_affected_transmission_roughness_out ___702_coat_affected_transmission_roughness_out 	%line{151} %argrw{"wrr"}
	functioncall	$const37 681 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 $tmp273 $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp274 $const36 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:152
#     {
	gt		$tmp275 color_srgb_displayp3_standard_surface5_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{152} %argrw{"wrr"}
	if		$tmp275 693 695 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const37 686 	%line{154} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp277 color_srgb_displayp3_standard_surface5_specular_anisotropy $const38 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp276 $tmp277 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:154
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp278 $const17 $tmp276 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{154} %argrw{"wrr"}
	sqrt		___679_aspect $tmp278 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:155
#         result.y = roughness_sqr * aspect;
	div		$tmp279 ___678_roughness_sqr ___679_aspect 	%line{155} %argrw{"wrr"}
	min		___702_transmission_roughness_out.x $tmp279 $const17 	%argrw{"wrr"}
	assign		___702_transmission_roughness_out.x ___702_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:156
#     }
	mul		___702_transmission_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{156} %argrw{"wrr"}
	assign		___702_transmission_roughness_out.y ___702_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:160
#         result.y = roughness_sqr;
	assign		___702_transmission_roughness_out.x ___678_roughness_sqr 	%line{160} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:161
#     }
	assign		___702_transmission_roughness_out.y ___678_roughness_sqr 	%line{161} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:387
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___702_coat_affected_subsurface_color_out ___702_subsurface_color_nonnegative_out ___702_coat_gamma_out 	%line{387} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:388
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___702_coat_affected_diffuse_color_out ___702_base_color_nonnegative_out ___702_coat_gamma_out 	%line{388} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:389
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___702_one_minus_coat_ior_to_F0_in1_tmp $const17 	%line{389} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:390
#     color emission_color0_out = color(0.0);
	sub		___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_in1_tmp ___702_coat_ior_to_F0_out 	%line{390} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:391
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___702_emission_color0_out $const2 	%line{391} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:392
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const50 703 	%line{392} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:227
#     out = combine_out;
	color		___687_combine_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out 	%line{227} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:228
# }
	assign		___702_emission_color0_out ___687_combine_out 	%line{228} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:393
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___702_coat_bsdf_out ___702_null_closure 	%line{393} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:394
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const54 715 	%line{394} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:211
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp281 $const53 $const55 	%line{211} %argrw{"wrr"}
	if		$tmp281 708 709 	%argrw{"r"}
	assign		___685_reflection_tint $const2 	%argrw{"wr"}
	assign		___685_reflection_tint $const40 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:212
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp282 $const53 $const53 	%line{212} %argrw{"wrr"}
	if		$tmp282 712 713 	%argrw{"r"}
	assign		___685_transmission_tint $const2 	%argrw{"wr"}
	assign		___685_transmission_tint $const40 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:213
# }
	closure		$tmp283 $const58 geomprop_Nworld_out1 ___702_coat_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.y color_srgb_displayp3_standard_surface5_coat_IOR $const52 $const56 $const3 $const57 $const51 	%line{213} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_coat_bsdf_out $tmp283 color_srgb_displayp3_standard_surface5_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:395
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___702_metal_bsdf_weight_tmp $const17 	%line{395} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:396
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___702_metal_bsdf_distribution_tmp $const52 	%line{396} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:397
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp284 $const59 geomprop_Nworld_out1 ___702_main_tangent_out ___702_main_roughness_out.x ___702_main_roughness_out.y ___702_artistic_ior_ior ___702_artistic_ior_extinction ___702_metal_bsdf_distribution_tmp $const56 color_srgb_displayp3_standard_surface5_thin_film_thickness $const57 color_srgb_displayp3_standard_surface5_thin_film_IOR 	%line{397} %argrw{"wrrrrrrrrrrrr"}
	mul		___702_metal_bsdf_out $tmp284 ___702_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:398
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___702_specular_bsdf_out ___702_null_closure 	%line{398} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:399
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const54 731 	%line{399} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:211
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp285 $const53 $const55 	%line{211} %argrw{"wrr"}
	if		$tmp285 724 725 	%argrw{"r"}
	assign		___685_reflection_tint $const2 	%argrw{"wr"}
	assign		___685_reflection_tint color_srgb_displayp3_standard_surface5_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:212
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp286 $const53 $const53 	%line{212} %argrw{"wrr"}
	if		$tmp286 728 729 	%argrw{"r"}
	assign		___685_transmission_tint $const2 	%argrw{"wr"}
	assign		___685_transmission_tint color_srgb_displayp3_standard_surface5_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:213
# }
	closure		$tmp287 $const58 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_main_roughness_out.x ___702_main_roughness_out.y color_srgb_displayp3_standard_surface5_specular_IOR $const52 $const56 color_srgb_displayp3_standard_surface5_thin_film_thickness $const57 color_srgb_displayp3_standard_surface5_thin_film_IOR 	%line{213} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_specular_bsdf_out $tmp287 color_srgb_displayp3_standard_surface5_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:400
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___702_transmission_bsdf_out ___702_null_closure 	%line{400} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:401
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const54 743 	%line{401} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:211
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp288 $const55 $const55 	%line{211} %argrw{"wrr"}
	if		$tmp288 736 737 	%argrw{"r"}
	assign		___685_reflection_tint $const2 	%argrw{"wr"}
	assign		___685_reflection_tint color_srgb_displayp3_standard_surface5_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:212
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp289 $const55 $const53 	%line{212} %argrw{"wrr"}
	if		$tmp289 740 741 	%argrw{"r"}
	assign		___685_transmission_tint $const2 	%argrw{"wr"}
	assign		___685_transmission_tint color_srgb_displayp3_standard_surface5_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:213
# }
	closure		$tmp290 $const58 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_transmission_roughness_out.x ___702_transmission_roughness_out.y color_srgb_displayp3_standard_surface5_specular_IOR $const52 $const56 $const3 $const57 $const51 	%line{213} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_transmission_bsdf_out $tmp290 $const17 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:402
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp291 $const60 geomprop_Nworld_out1 color_srgb_displayp3_standard_surface5_sheen_color color_srgb_displayp3_standard_surface5_sheen_roughness 	%line{402} %argrw{"wrrrr"}
	mul		___702_sheen_bsdf_out $tmp291 color_srgb_displayp3_standard_surface5_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:403
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___702_translucent_bsdf_weight_tmp $const17 	%line{403} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:404
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp292 $const61 geomprop_Nworld_out1 ___702_coat_affected_subsurface_color_out 	%line{404} %argrw{"wrrr"}
	mul		___702_translucent_bsdf_out $tmp292 ___702_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:405
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___702_subsurface_bsdf_out ___702_null_closure 	%line{405} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:406
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const62 752 	%line{406} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:221
# #endif
	mul		$tmp293 $const17 ___702_coat_affected_subsurface_color_out 	%line{221} %argrw{"wrr"}
	closure		___702_subsurface_bsdf_out $const63 geomprop_Nworld_out1 $tmp293 $const17 ___702_subsurface_radius_scaled_out color_srgb_displayp3_standard_surface5_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:407
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const64 757 	%line{407} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp294 $const17 ___702_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp295 ___702_subsurface_bsdf_out $tmp294 	%argrw{"wrr"}
	mul		$tmp296 ___702_translucent_bsdf_out ___702_subsurface_selector_out 	%argrw{"wrr"}
	add		___702_selected_subsurface_bsdf_out $tmp295 $tmp296 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:408
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp297 $const65 geomprop_Nworld_out1 ___702_coat_affected_diffuse_color_out color_srgb_displayp3_standard_surface5_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{408} %argrw{"wrrrr"}
	mul		___702_diffuse_bsdf_out $tmp297 color_srgb_displayp3_standard_surface5_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:409
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const64 764 	%line{409} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp298 $const17 color_srgb_displayp3_standard_surface5_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp299 ___702_diffuse_bsdf_out $tmp298 	%argrw{"wrr"}
	mul		$tmp300 ___702_selected_subsurface_bsdf_out color_srgb_displayp3_standard_surface5_subsurface 	%argrw{"wrr"}
	add		___702_subsurface_mix_out $tmp299 $tmp300 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:410
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___702_sheen_layer_out $const66 ___702_sheen_bsdf_out ___702_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{410} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:411
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const64 770 	%line{411} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp301 $const17 color_srgb_displayp3_standard_surface5_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp302 ___702_sheen_layer_out $tmp301 	%argrw{"wrr"}
	mul		$tmp303 ___702_transmission_bsdf_out color_srgb_displayp3_standard_surface5_transmission 	%argrw{"wrr"}
	add		___702_transmission_mix_out $tmp302 $tmp303 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:412
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___702_specular_layer_out $const66 ___702_specular_bsdf_out ___702_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{412} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:413
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const64 776 	%line{413} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp304 $const17 color_srgb_displayp3_standard_surface5_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp305 ___702_specular_layer_out $tmp304 	%argrw{"wrr"}
	mul		$tmp306 ___702_metal_bsdf_out color_srgb_displayp3_standard_surface5_metalness 	%argrw{"wrr"}
	add		___702_metalness_mix_out $tmp305 $tmp306 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:414
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___702_thin_film_layer_attenuated_out ___702_metalness_mix_out ___702_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{414} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:415
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___702_coat_layer_out $const66 ___702_coat_bsdf_out ___702_thin_film_layer_attenuated_out 	%line{415} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:416
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___702_emission_edf_out $const67 ___702_emission_weight_out 	%line{416} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:417
#     EDF coat_emission_edf_out = null_closure;
	mul		___702_coat_tinted_emission_edf_out ___702_emission_edf_out color_srgb_displayp3_standard_surface5_coat_color 	%line{417} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:418
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___702_coat_emission_edf_out ___702_null_closure 	%line{418} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:419
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const69 793 	%line{419} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:312
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp309 I 	%line{312} %argrw{"wr"}
	dot		$tmp308 N $tmp309 	%argrw{"wrr"}
	fabs		___700_NdotV $tmp308 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:313
#     result = base * f;
	functioncall	$const70 792 	%line{313} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:306
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp310 $const17 ___700_NdotV 	%line{306} %argrw{"wrr"}
	functioncall	$const37 790 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp311 $tmp310 $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_x $tmp311 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:307
# }
	pow		$tmp312 ___699_x $const68 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{307} %argrw{"wrr"}
	mix		___700_f ___702_emission_color0_out $const2 $tmp312 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:314
# }
	mul		___702_coat_emission_edf_out ___702_coat_tinted_emission_edf_out ___700_f 	%line{314} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:420
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const64 798 	%line{420} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp313 $const17 color_srgb_displayp3_standard_surface5_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp314 ___702_emission_edf_out $tmp313 	%argrw{"wrr"}
	mul		$tmp315 ___702_coat_emission_edf_out color_srgb_displayp3_standard_surface5_coat 	%argrw{"wrr"}
	add		___702_blended_coat_emission_edf_out $tmp314 $tmp315 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:421
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___702_shader_constructor_out.bsdf ___702_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{421} %argrw{"wr"}
	assign		___702_shader_constructor_out.edf ___702_null_closure 	%argrw{"wr"}
	assign		___702_shader_constructor_out.opacity $const17 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:422
#     out = shader_constructor_out;
	functioncall	$const71 808 	%line{422} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:319
#     result.edf     = edf;
	assign		___702_shader_constructor_out.bsdf ___702_coat_layer_out 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:320
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___702_shader_constructor_out.edf ___702_blended_coat_emission_edf_out 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:321
# }
	functioncall	$const37 807 	%line{321} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp316 ___702_opacity_luminance_float_out $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_shader_constructor_out.opacity $tmp316 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:321
# }
	assign		___702_shader_constructor_out.opacity ___702_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:423
# }
	assign		color_srgb_displayp3_standard_surface5_out.bsdf ___702_shader_constructor_out.bsdf 	%line{423} %argrw{"wr"}
	assign		color_srgb_displayp3_standard_surface5_out.edf ___702_shader_constructor_out.edf 	%argrw{"wr"}
	assign		color_srgb_displayp3_standard_surface5_out.opacity ___702_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:812
#         color_srgb_displayp3_out = (color_srgb_displayp3_standard_surface5_out.bsdf + color_srgb_displayp3_standard_surface5_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const37 814 	%line{812} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp317 color_srgb_displayp3_standard_surface5_out.opacity $const17 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___703_opacity_weight $tmp317 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl:813
#     }
	add		$tmp318 color_srgb_displayp3_standard_surface5_out.bsdf color_srgb_displayp3_standard_surface5_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_displayp3_out.osl"} %line{813} %argrw{"wrr"}
	mul		$tmp319 $tmp318 ___703_opacity_weight 	%argrw{"wrr"}
	closure		$tmp320 $const72 	%argrw{"wr"}
	sub		$tmp321 $const17 ___703_opacity_weight 	%argrw{"wrr"}
	mul		$tmp322 $tmp320 $tmp321 	%argrw{"wrr"}
	add		color_srgb_displayp3_out $tmp319 $tmp322 	%argrw{"wrr"}
	end
