OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_color_srgb_texture_out.oso
surface ng1_color_srgb_texture_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"color_srgb_texture_out"} 
param	struct color4	color_srgb_texture_value_cm_in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	color_srgb_texture_value_cm_in.rgb	0.5 0 0		%read{15,93} %write{2147483647,-1} %mystruct{color_srgb_texture_value_cm_in} %mystructfield{0}
param	float	color_srgb_texture_value_cm_in.a	1		%read{25,95} %write{2147483647,-1} %mystruct{color_srgb_texture_value_cm_in} %mystructfield{1}
param	string	geomprop_Nworld_space	"world"		%read{167,167} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{278,713} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{712,712} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{727,729} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{279,685} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{279,683} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{283,585} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{684,696} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{607,639} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{282,282} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{721,723} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{691,695} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{283,283} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{715,717} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{286,286} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{292,292} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{292,292} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{706,706} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{699,699} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{698,698} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{698,698} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{280,751} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{299,734} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{258,454} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{262,593} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{277,277} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{301,668} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{578,578} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{280,280} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{672,684} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{672,684} %write{2147483647,-1}
param	float	color_srgb_texture_standard_surface6_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{304,304} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{304,304} %write{2147483647,-1}
param	color	color_srgb_texture_standard_surface6_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{307,307} %write{2147483647,-1}
param	int	color_srgb_texture_standard_surface6_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{293,293} %write{2147483647,-1}
oparam	closure color	color_srgb_texture_out			%read{2147483647,-1} %write{774,774}
global	vector	I	%read{737,737} %write{2147483647,-1}
global	normal	N	%read{167,738} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{13,190} %write{11,180}
local	float	___669_N_extract_0_out	%read{75,244} %write{15,194}
local	int	___669_N_extract_1_index_tmp	%read{29,206} %write{27,196}
local	float	___669_N_extract_1_out	%read{76,245} %write{31,210}
local	int	___669_N_extract_2_index_tmp	%read{45,222} %write{43,212}
local	float	___669_N_extract_2_out	%read{77,246} %write{47,226}
local	int	___669_N_extract_3_index_tmp	%read{61,238} %write{59,228}
local	float	___669_N_extract_3_out	%read{78,247} %write{63,242}
local	float	___670_separate_outr	%read{79,248} %write{6,244}
local	float	___670_separate_outg	%read{79,248} %write{7,245}
local	float	___670_separate_outb	%read{79,248} %write{8,246}
local	float	___670_separate_outa	%read{2147483647,-1} %write{9,247}
local	color	___670_combine_out	%read{80,249} %write{79,248}
local	int	___671_N_extract_0_index_tmp	%read{109,109} %write{107,107}
local	float	___671_N_extract_0_out	%read{116,116} %write{109,109}
local	int	___671_N_extract_1_index_tmp	%read{112,112} %write{110,110}
local	float	___671_N_extract_1_out	%read{117,117} %write{112,112}
local	int	___671_N_extract_2_index_tmp	%read{115,115} %write{113,113}
local	float	___671_N_extract_2_out	%read{118,118} %write{115,115}
local	float	___672_bias_in2_tmp	%read{100,100} %write{99,99}
local	color	___672_bias_out	%read{121,121} %write{100,100}
local	float	___672_linSeg_in2_tmp	%read{102,102} %write{101,101}
local	color	___672_linSeg_out	%read{157,157} %write{102,102}
local	float	___672_colorSeparate_outr	%read{125,125} %write{103,116}
local	float	___672_colorSeparate_outg	%read{135,135} %write{104,117}
local	float	___672_colorSeparate_outb	%read{145,145} %write{105,118}
local	float	___672_max_in2_tmp	%read{120,120} %write{119,119}
local	color	___672_max_out	%read{153,153} %write{121,121}
local	float	___672_isAboveR_value2_tmp	%read{125,125} %write{122,122}
local	float	___672_isAboveR_in1_tmp	%read{128,128} %write{123,123}
local	float	___672_isAboveR_in2_tmp	%read{130,130} %write{124,124}
local	float	___672_isAboveR_out	%read{154,154} %write{128,130}
local	float	___672_isAboveG_value2_tmp	%read{135,135} %write{132,132}
local	float	___672_isAboveG_in1_tmp	%read{138,138} %write{133,133}
local	float	___672_isAboveG_in2_tmp	%read{140,140} %write{134,134}
local	float	___672_isAboveG_out	%read{154,154} %write{138,140}
local	float	___672_isAboveB_value2_tmp	%read{145,145} %write{142,142}
local	float	___672_isAboveB_in1_tmp	%read{148,148} %write{143,143}
local	float	___672_isAboveB_in2_tmp	%read{150,150} %write{144,144}
local	float	___672_isAboveB_out	%read{154,154} %write{148,150}
local	float	___672_scale_in2_tmp	%read{153,153} %write{152,152}
local	color	___672_scale_out	%read{156,156} %write{153,153}
local	color	___672_isAbove_out	%read{157,157} %write{154,154}
local	float	___672_powSeg_in2_tmp	%read{156,156} %write{155,155}
local	color	___672_powSeg_out	%read{157,157} %write{156,156}
local	color	___672_mix_out	%read{158,158} %write{157,157}
local	color	___673_asColor3_out	%read{100,115} %write{4,80}
local	int	___673_alpha_index_tmp	%read{83,91} %write{81,81}
local	float	___673_alpha_out	%read{163,163} %write{85,95}
local	color	___673_transform_out	%read{159,161} %write{97,158}
local	color	___673_asColor4_out.rgb	%read{164,164} %write{162,162} %mystruct{___673_asColor4_out} %mystructfield{0}
local	float	___673_asColor4_out.a	%read{165,165} %write{163,163} %mystruct{___673_asColor4_out} %mystructfield{1}
local	float	___674_roughness_sqr	%read{269,649} %write{261,635}
local	float	___675_aspect	%read{269,646} %write{268,642}
local	vector	___678_nAxis	%read{319,519} %write{315,461}
local	float	___678_s	%read{329,515} %write{316,462}
local	float	___678_c	%read{318,521} %write{317,463}
local	float	___678_oc	%read{320,518} %write{318,464}
local	float	___679_rotationRadians	%read{316,463} %write{313,459}
local	matrix	___679_m	%read{382,569} %write{376,522}
local	float	___679_trans.x	%read{426,572} %write{392,538} %mystruct{___679_trans} %mystructfield{0}
local	float	___679_trans.y	%read{426,572} %write{403,549} %mystruct{___679_trans} %mystructfield{1}
local	float	___679_trans.z	%read{426,572} %write{414,560} %mystruct{___679_trans} %mystructfield{2}
local	float	___679_trans.w	%read{2147483647,-1} %write{425,571} %mystruct{___679_trans} %mystructfield{3}
local	color	___680_r	%read{435,449} %write{434,434}
local	color	___680_r_sqrt	%read{439,440} %write{435,435}
local	color	___680_n_min	%read{442,442} %write{438,438}
local	color	___680_n_max	%read{442,442} %write{441,441}
local	color	___680_np1	%read{445,445} %write{443,443}
local	color	___680_nm1	%read{447,447} %write{444,444}
local	color	___680_k2	%read{452,453} %write{450,452}
local	color	___681_reflection_tint	%read{668,696} %write{662,691}
local	color	___681_transmission_tint	%read{668,696} %write{666,695}
local	color	___683_combine_out	%read{657,657} %write{656,656}
local	float	___695_x	%read{745,745} %write{744,744}
local	float	___696_NdotV	%read{741,741} %write{739,739}
local	color	___696_f	%read{747,747} %write{746,746}
local	closure color	___698_null_closure	%read{658,754} %write{254,254}
local	float	___698_coat_roughness_vector_out.x	%read{271,668} %write{255,274} %mystruct{___698_coat_roughness_vector_out} %mystructfield{0}
local	float	___698_coat_roughness_vector_out.y	%read{273,668} %write{256,275} %mystruct{___698_coat_roughness_vector_out} %mystructfield{1}
local	float	___698_coat_tangent_rotate_degree_in2_tmp	%read{277,277} %write{276,276}
local	float	___698_coat_tangent_rotate_degree_out	%read{313,313} %write{277,277}
local	color	___698_metal_reflectivity_out	%read{433,433} %write{278,278}
local	color	___698_metal_edgecolor_out	%read{442,442} %write{279,279}
local	float	___698_coat_affect_roughness_multiply1_out	%read{454,454} %write{280,280}
local	float	___698_tangent_rotate_degree_in2_tmp	%read{282,282} %write{281,281}
local	float	___698_tangent_rotate_degree_out	%read{459,459} %write{282,282}
local	float	___698_transmission_roughness_add_out	%read{576,576} %write{283,283}
local	float	___698_subsurface_color_nonnegative_in2_tmp	%read{285,285} %write{284,284}
local	color	___698_subsurface_color_nonnegative_out	%read{650,650} %write{286,286}
local	float	___698_coat_clamped_low_tmp	%read{291,291} %write{287,287}
local	float	___698_coat_clamped_high_tmp	%read{290,290} %write{288,288}
local	float	___698_coat_clamped_out	%read{578,578} %write{291,291}
local	color	___698_subsurface_radius_scaled_out	%read{706,706} %write{292,292}
local	float	___698_subsurface_selector_out	%read{708,710} %write{294,294}
local	float	___698_base_color_nonnegative_in2_tmp	%read{296,296} %write{295,295}
local	color	___698_base_color_nonnegative_out	%read{651,651} %write{297,297}
local	color	___698_coat_attenuation_bg_tmp	%read{299,299} %write{298,298}
local	color	___698_coat_attenuation_out	%read{731,731} %write{299,299}
local	float	___698_one_minus_coat_ior_in1_tmp	%read{301,301} %write{300,300}
local	float	___698_one_minus_coat_ior_out	%read{579,579} %write{301,301}
local	float	___698_one_plus_coat_ior_in1_tmp	%read{303,303} %write{302,302}
local	float	___698_one_plus_coat_ior_out	%read{579,579} %write{303,303}
local	color	___698_emission_weight_out	%read{733,733} %write{304,304}
local	color	___698_opacity_luminance_out	%read{582,582} %write{305,308}
local	vector	___698_coat_tangent_rotate_out	%read{583,583} %write{309,426}
local	color	___698_artistic_ior_ior	%read{443,672} %write{427,442}
local	color	___698_artistic_ior_extinction	%read{672,672} %write{428,453}
local	float	___698_coat_affect_roughness_multiply2_out	%read{585,588} %write{454,454}
local	vector	___698_tangent_rotate_out	%read{586,586} %write{455,572}
local	float	___698_transmission_roughness_clamped_low_tmp	%read{577,577} %write{573,573}
local	float	___698_transmission_roughness_clamped_high_tmp	%read{576,576} %write{574,574}
local	float	___698_transmission_roughness_clamped_out	%read{588,588} %write{577,577}
local	float	___698_coat_gamma_multiply_out	%read{590,590} %write{578,578}
local	float	___698_coat_ior_to_F0_sqrt_out	%read{591,591} %write{579,579}
local	int	___698_opacity_luminance_float_index_tmp	%read{582,582} %write{580,580}
local	float	___698_opacity_luminance_float_out	%read{760,760} %write{582,582}
local	vector	___698_coat_tangent_rotate_normalize_out	%read{596,596} %write{583,583}
local	float	___698_coat_affected_roughness_fg_tmp	%read{585,585} %write{584,584}
local	float	___698_coat_affected_roughness_out	%read{603,603} %write{585,585}
local	vector	___698_tangent_rotate_normalize_out	%read{625,625} %write{586,586}
local	float	___698_coat_affected_transmission_roughness_fg_tmp	%read{588,588} %write{587,587}
local	float	___698_coat_affected_transmission_roughness_out	%read{632,632} %write{588,588}
local	float	___698_coat_gamma_in2_tmp	%read{590,590} %write{589,589}
local	float	___698_coat_gamma_out	%read{650,651} %write{590,590}
local	float	___698_coat_ior_to_F0_out	%read{653,653} %write{591,591}
local	float	___698_coat_tangent_value2_tmp	%read{593,593} %write{592,592}
local	vector	___698_coat_tangent_out	%read{668,668} %write{596,598}
local	float	___698_main_roughness_out.x	%read{616,684} %write{600,619} %mystruct{___698_main_roughness_out} %mystructfield{0}
local	float	___698_main_roughness_out.y	%read{618,684} %write{601,620} %mystruct{___698_main_roughness_out} %mystructfield{1}
local	float	___698_main_tangent_value2_tmp	%read{622,622} %write{621,621}
local	vector	___698_main_tangent_out	%read{672,696} %write{625,627}
local	float	___698_transmission_roughness_out.x	%read{645,696} %write{629,648} %mystruct{___698_transmission_roughness_out} %mystructfield{0}
local	float	___698_transmission_roughness_out.y	%read{647,696} %write{630,649} %mystruct{___698_transmission_roughness_out} %mystructfield{1}
local	color	___698_coat_affected_subsurface_color_out	%read{701,705} %write{650,650}
local	color	___698_coat_affected_diffuse_color_out	%read{712,712} %write{651,651}
local	float	___698_one_minus_coat_ior_to_F0_in1_tmp	%read{653,653} %write{652,652}
local	float	___698_one_minus_coat_ior_to_F0_out	%read{656,656} %write{653,653}
local	color	___698_emission_color0_out	%read{746,746} %write{654,657}
local	closure color	___698_coat_bsdf_out	%read{732,732} %write{658,669}
local	float	___698_metal_bsdf_weight_tmp	%read{673,673} %write{670,670}
local	string	___698_metal_bsdf_distribution_tmp	%read{672,672} %write{671,671}
local	closure color	___698_metal_bsdf_out	%read{729,729} %write{673,673}
local	closure color	___698_specular_bsdf_out	%read{725,725} %write{674,685}
local	closure color	___698_transmission_bsdf_out	%read{723,723} %write{686,697}
local	closure color	___698_sheen_bsdf_out	%read{719,719} %write{699,699}
local	float	___698_translucent_bsdf_weight_tmp	%read{702,702} %write{700,700}
local	closure color	___698_translucent_bsdf_out	%read{710,710} %write{702,702}
local	closure color	___698_subsurface_bsdf_out	%read{709,709} %write{703,706}
local	closure color	___698_selected_subsurface_bsdf_out	%read{717,717} %write{711,711}
local	closure color	___698_diffuse_bsdf_out	%read{716,716} %write{713,713}
local	closure color	___698_subsurface_mix_out	%read{719,719} %write{718,718}
local	closure color	___698_sheen_layer_out	%read{722,722} %write{719,719}
local	closure color	___698_transmission_mix_out	%read{725,725} %write{724,724}
local	closure color	___698_specular_layer_out	%read{728,728} %write{725,725}
local	closure color	___698_metalness_mix_out	%read{731,731} %write{730,730}
local	closure color	___698_thin_film_layer_attenuated_out	%read{732,732} %write{731,731}
local	closure color	___698_coat_layer_out	%read{757,757} %write{732,732}
local	closure color	___698_emission_edf_out	%read{734,750} %write{733,733}
local	closure color	___698_coat_tinted_emission_edf_out	%read{747,747} %write{734,734}
local	closure color	___698_coat_emission_edf_out	%read{751,751} %write{735,747}
local	closure color	___698_blended_coat_emission_edf_out	%read{758,758} %write{752,752}
local	closure color	___698_shader_constructor_out.bsdf	%read{763,763} %write{753,757} %mystruct{___698_shader_constructor_out} %mystructfield{0}
local	closure color	___698_shader_constructor_out.edf	%read{764,764} %write{754,758} %mystruct{___698_shader_constructor_out} %mystructfield{1}
local	float	___698_shader_constructor_out.opacity	%read{762,765} %write{755,762} %mystruct{___698_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{250,251} %write{0,0}
local	color	color_srgb_texture_value_cm_out.rgb	%read{184,240} %write{1,164} %mystruct{color_srgb_texture_value_cm_out} %mystructfield{0}
local	float	color_srgb_texture_value_cm_out.a	%read{194,242} %write{2,165} %mystruct{color_srgb_texture_value_cm_out} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{315,712} %write{167,167}
local	vector	geomprop_Tworld_out1	%read{377,627} %write{172,172}
local	color	color_srgb_texture_color3_out	%read{278,297} %write{173,249}
local	closure color	color_srgb_texture_standard_surface6_out.bsdf	%read{769,769} %write{250,763} %mystruct{color_srgb_texture_standard_surface6_out} %mystructfield{0}
local	closure color	color_srgb_texture_standard_surface6_out.edf	%read{769,769} %write{251,764} %mystruct{color_srgb_texture_standard_surface6_out} %mystructfield{1}
local	float	color_srgb_texture_standard_surface6_out.opacity	%read{767,767} %write{252,765} %mystruct{color_srgb_texture_standard_surface6_out} %mystructfield{2}
local	float	___699_opacity_weight	%read{770,772} %write{768,768}
const	int	$const1	0		%read{0,580} %write{2147483647,-1}
const	color	$const2	0 0 0		%read{1,746} %write{2147483647,-1}
const	float	$const3	0		%read{2,768} %write{2147483647,-1}
const	string	$const4	"NG_srgb_texture_to_lin_rec709_color4"		%read{3,3} %write{2147483647,-1}
const	string	$const5	"NG_convert_color4_color3"		%read{5,174} %write{2147483647,-1}
const	string	$const6	"NG_separate4_color4"		%read{10,179} %write{2147483647,-1}
const	string	$const7	"mx_extract"		%read{12,581} %write{2147483647,-1}
temp	int	$tmp1	%read{14,14} %write{13,13}
const	int	$const8	1		%read{17,563} %write{2147483647,-1}
temp	int	$tmp2	%read{18,18} %write{17,17}
const	int	$const9	2		%read{21,566} %write{2147483647,-1}
temp	int	$tmp3	%read{22,22} %write{21,21}
temp	int	$tmp4	%read{30,30} %write{29,29}
temp	int	$tmp5	%read{34,34} %write{33,33}
temp	int	$tmp6	%read{38,38} %write{37,37}
temp	int	$tmp7	%read{46,46} %write{45,45}
temp	int	$tmp8	%read{50,50} %write{49,49}
temp	int	$tmp9	%read{54,54} %write{53,53}
const	int	$const10	3		%read{59,569} %write{2147483647,-1}
temp	int	$tmp10	%read{62,62} %write{61,61}
temp	int	$tmp11	%read{66,66} %write{65,65}
temp	int	$tmp12	%read{70,70} %write{69,69}
temp	int	$tmp13	%read{84,84} %write{83,83}
temp	int	$tmp14	%read{88,88} %write{87,87}
temp	int	$tmp15	%read{92,92} %write{91,91}
const	string	$const11	"NG_srgb_texture_to_lin_rec709_color3"		%read{98,98} %write{2147483647,-1}
const	float	$const12	0.055		%read{99,99} %write{2147483647,-1}
const	float	$const13	12.92		%read{101,101} %write{2147483647,-1}
const	string	$const14	"NG_separate3_color3"		%read{106,106} %write{2147483647,-1}
temp	color	$tmp16	%read{121,121} %write{120,120}
const	float	$const15	0.04045		%read{122,142} %write{2147483647,-1}
const	float	$const16	1		%read{123,772} %write{2147483647,-1}
temp	int	$tmp17	%read{127,127} %write{125,125}
const	string	$const17	"mx_ternary"		%read{126,623} %write{2147483647,-1}
temp	int	$tmp18	%read{137,137} %write{135,135}
temp	int	$tmp19	%read{147,147} %write{145,145}
const	float	$const18	1.055		%read{152,152} %write{2147483647,-1}
const	float	$const19	2.4		%read{155,155} %write{2147483647,-1}
temp	float	$tmp20	%read{162,162} %write{159,159}
temp	float	$tmp21	%read{162,162} %write{160,160}
temp	float	$tmp22	%read{162,162} %write{161,161}
const	string	$const20	"transform"		%read{166,527} %write{2147483647,-1}
const	string	$const21	"common"		%read{167,167} %write{2147483647,-1}
temp	vector	$tmp23	%read{172,172} %write{171,171}
temp	float	$tmp24	%read{171,171} %write{168,168}
temp	float	$tmp25	%read{170,170} %write{169,169}
temp	float	$tmp26	%read{171,171} %write{170,170}
temp	int	$tmp27	%read{183,183} %write{182,182}
temp	int	$tmp28	%read{187,187} %write{186,186}
temp	int	$tmp29	%read{191,191} %write{190,190}
temp	int	$tmp30	%read{199,199} %write{198,198}
temp	int	$tmp31	%read{203,203} %write{202,202}
temp	int	$tmp32	%read{207,207} %write{206,206}
temp	int	$tmp33	%read{215,215} %write{214,214}
temp	int	$tmp34	%read{219,219} %write{218,218}
temp	int	$tmp35	%read{223,223} %write{222,222}
temp	int	$tmp36	%read{231,231} %write{230,230}
temp	int	$tmp37	%read{235,235} %write{234,234}
temp	int	$tmp38	%read{239,239} %write{238,238}
const	string	$const22	"NG_standard_surface_surfaceshader_100"		%read{253,253} %write{2147483647,-1}
const	string	$const23	"mx_roughness_anisotropy"		%read{257,631} %write{2147483647,-1}
temp	float	$tmp39	%read{260,260} %write{258,258}
const	float	$const24	1e-08		%read{261,635} %write{2147483647,-1}
const	string	$const25	"clamp"		%read{259,766} %write{2147483647,-1}
temp	float	$tmp40	%read{261,261} %write{260,260}
temp	int	$tmp41	%read{263,263} %write{262,262}
temp	float	$tmp42	%read{267,267} %write{266,266}
const	float	$const26	0.98		%read{265,639} %write{2147483647,-1}
temp	float	$tmp43	%read{266,266} %write{265,265}
temp	float	$tmp44	%read{268,268} %write{267,267}
temp	float	$tmp45	%read{270,270} %write{269,269}
const	float	$const27	360		%read{276,281} %write{2147483647,-1}
temp	color	$tmp46	%read{286,286} %write{285,285}
temp	float	$tmp47	%read{291,291} %write{290,290}
temp	float	$tmp48	%read{294,294} %write{293,293}
temp	color	$tmp49	%read{297,297} %write{296,296}
const	color	$const28	1 1 1		%read{298,667} %write{2147483647,-1}
const	color	$const29	0.272229 0.674082 0.053689		%read{307,307} %write{2147483647,-1}
const	string	$const30	"mx_luminance_color3"		%read{306,306} %write{2147483647,-1}
temp	float	$tmp51	%read{308,308} %write{307,307}
const	vector	$const31	0 0 0		%read{309,455} %write{2147483647,-1}
const	string	$const32	"mx_rotate_vector3"		%read{310,456} %write{2147483647,-1}
const	string	$const33	"radians"		%read{311,457} %write{2147483647,-1}
const	float	$const34	3.1415927		%read{312,458} %write{2147483647,-1}
const	float	$const35	180		%read{312,458} %write{2147483647,-1}
temp	float	$tmp52	%read{313,313} %write{312,312}
const	string	$const36	"rotationMatrix"		%read{314,460} %write{2147483647,-1}
temp	float	$tmp53	%read{320,320} %write{319,319}
temp	float	$tmp54	%read{322,322} %write{320,320}
temp	float	$tmp55	%read{322,322} %write{321,321}
temp	float	$tmp56	%read{323,323} %write{322,322}
temp	float	$tmp57	%read{376,376} %write{323,323}
temp	float	$tmp58	%read{325,325} %write{324,324}
temp	float	$tmp59	%read{327,327} %write{325,325}
temp	float	$tmp60	%read{327,327} %write{326,326}
temp	float	$tmp61	%read{330,330} %write{327,327}
temp	float	$tmp62	%read{329,329} %write{328,328}
temp	float	$tmp63	%read{330,330} %write{329,329}
temp	float	$tmp64	%read{376,376} %write{330,330}
temp	float	$tmp65	%read{332,332} %write{331,331}
temp	float	$tmp66	%read{334,334} %write{332,332}
temp	float	$tmp67	%read{334,334} %write{333,333}
temp	float	$tmp68	%read{337,337} %write{334,334}
temp	float	$tmp69	%read{336,336} %write{335,335}
temp	float	$tmp70	%read{337,337} %write{336,336}
temp	float	$tmp71	%read{376,376} %write{337,337}
temp	float	$tmp72	%read{339,339} %write{338,338}
temp	float	$tmp73	%read{341,341} %write{339,339}
temp	float	$tmp74	%read{341,341} %write{340,340}
temp	float	$tmp75	%read{344,344} %write{341,341}
temp	float	$tmp76	%read{343,343} %write{342,342}
temp	float	$tmp77	%read{344,344} %write{343,343}
temp	float	$tmp78	%read{376,376} %write{344,344}
temp	float	$tmp79	%read{346,346} %write{345,345}
temp	float	$tmp80	%read{348,348} %write{346,346}
temp	float	$tmp81	%read{348,348} %write{347,347}
temp	float	$tmp82	%read{349,349} %write{348,348}
temp	float	$tmp83	%read{376,376} %write{349,349}
temp	float	$tmp84	%read{351,351} %write{350,350}
temp	float	$tmp85	%read{353,353} %write{351,351}
temp	float	$tmp86	%read{353,353} %write{352,352}
temp	float	$tmp87	%read{356,356} %write{353,353}
temp	float	$tmp88	%read{355,355} %write{354,354}
temp	float	$tmp89	%read{356,356} %write{355,355}
temp	float	$tmp90	%read{376,376} %write{356,356}
temp	float	$tmp91	%read{358,358} %write{357,357}
temp	float	$tmp92	%read{360,360} %write{358,358}
temp	float	$tmp93	%read{360,360} %write{359,359}
temp	float	$tmp94	%read{363,363} %write{360,360}
temp	float	$tmp95	%read{362,362} %write{361,361}
temp	float	$tmp96	%read{363,363} %write{362,362}
temp	float	$tmp97	%read{376,376} %write{363,363}
temp	float	$tmp98	%read{365,365} %write{364,364}
temp	float	$tmp99	%read{367,367} %write{365,365}
temp	float	$tmp100	%read{367,367} %write{366,366}
temp	float	$tmp101	%read{370,370} %write{367,367}
temp	float	$tmp102	%read{369,369} %write{368,368}
temp	float	$tmp103	%read{370,370} %write{369,369}
temp	float	$tmp104	%read{376,376} %write{370,370}
temp	float	$tmp105	%read{372,372} %write{371,371}
temp	float	$tmp106	%read{374,374} %write{372,372}
temp	float	$tmp107	%read{374,374} %write{373,373}
temp	float	$tmp108	%read{375,375} %write{374,374}
temp	float	$tmp109	%read{376,376} %write{375,375}
temp	float	$tmp110.x	%read{383,416} %write{377,377}
temp	float	$tmp110.y	%read{385,418} %write{378,378}
temp	float	$tmp110.z	%read{388,421} %write{379,379}
temp	float	$tmp110.w	%read{391,424} %write{380,380}
temp	float	$tmp111	%read{383,383} %write{382,382}
temp	float	$tmp112	%read{386,386} %write{383,383}
temp	float	$tmp113	%read{385,385} %write{384,384}
temp	float	$tmp114	%read{386,386} %write{385,385}
temp	float	$tmp115	%read{389,389} %write{386,386}
temp	float	$tmp116	%read{388,388} %write{387,387}
temp	float	$tmp117	%read{389,389} %write{388,388}
temp	float	$tmp118	%read{392,392} %write{389,389}
temp	float	$tmp119	%read{391,391} %write{390,390}
temp	float	$tmp120	%read{392,392} %write{391,391}
temp	float	$tmp121	%read{394,394} %write{393,393}
temp	float	$tmp122	%read{397,397} %write{394,394}
temp	float	$tmp123	%read{396,396} %write{395,395}
temp	float	$tmp124	%read{397,397} %write{396,396}
temp	float	$tmp125	%read{400,400} %write{397,397}
temp	float	$tmp126	%read{399,399} %write{398,398}
temp	float	$tmp127	%read{400,400} %write{399,399}
temp	float	$tmp128	%read{403,403} %write{400,400}
temp	float	$tmp129	%read{402,402} %write{401,401}
temp	float	$tmp130	%read{403,403} %write{402,402}
temp	float	$tmp131	%read{405,405} %write{404,404}
temp	float	$tmp132	%read{408,408} %write{405,405}
temp	float	$tmp133	%read{407,407} %write{406,406}
temp	float	$tmp134	%read{408,408} %write{407,407}
temp	float	$tmp135	%read{411,411} %write{408,408}
temp	float	$tmp136	%read{410,410} %write{409,409}
temp	float	$tmp137	%read{411,411} %write{410,410}
temp	float	$tmp138	%read{414,414} %write{411,411}
temp	float	$tmp139	%read{413,413} %write{412,412}
temp	float	$tmp140	%read{414,414} %write{413,413}
temp	float	$tmp141	%read{416,416} %write{415,415}
temp	float	$tmp142	%read{419,419} %write{416,416}
temp	float	$tmp143	%read{418,418} %write{417,417}
temp	float	$tmp144	%read{419,419} %write{418,418}
temp	float	$tmp145	%read{422,422} %write{419,419}
temp	float	$tmp146	%read{421,421} %write{420,420}
temp	float	$tmp147	%read{422,422} %write{421,421}
temp	float	$tmp148	%read{425,425} %write{422,422}
temp	float	$tmp149	%read{424,424} %write{423,423}
temp	float	$tmp150	%read{425,425} %write{424,424}
const	string	$const37	"mx_artistic_ior"		%read{429,429} %write{2147483647,-1}
temp	color	$tmp151	%read{434,434} %write{430,430}
const	float	$const38	0.99		%read{431,431} %write{2147483647,-1}
temp	color	$tmp152	%read{433,433} %write{431,431}
temp	color	$tmp153	%read{434,434} %write{433,433}
temp	color	$tmp154	%read{438,438} %write{436,436}
temp	color	$tmp155	%read{438,438} %write{437,437}
temp	color	$tmp156	%read{441,441} %write{439,439}
temp	color	$tmp157	%read{441,441} %write{440,440}
temp	color	$tmp158	%read{446,446} %write{445,445}
temp	color	$tmp159	%read{448,448} %write{446,446}
temp	color	$tmp160	%read{448,448} %write{447,447}
temp	color	$tmp161	%read{450,450} %write{448,448}
temp	color	$tmp162	%read{450,450} %write{449,449}
temp	color	$tmp163	%read{452,452} %write{451,451}
temp	float	$tmp164	%read{459,459} %write{458,458}
temp	float	$tmp165	%read{466,466} %write{465,465}
temp	float	$tmp166	%read{468,468} %write{466,466}
temp	float	$tmp167	%read{468,468} %write{467,467}
temp	float	$tmp168	%read{469,469} %write{468,468}
temp	float	$tmp169	%read{522,522} %write{469,469}
temp	float	$tmp170	%read{471,471} %write{470,470}
temp	float	$tmp171	%read{473,473} %write{471,471}
temp	float	$tmp172	%read{473,473} %write{472,472}
temp	float	$tmp173	%read{476,476} %write{473,473}
temp	float	$tmp174	%read{475,475} %write{474,474}
temp	float	$tmp175	%read{476,476} %write{475,475}
temp	float	$tmp176	%read{522,522} %write{476,476}
temp	float	$tmp177	%read{478,478} %write{477,477}
temp	float	$tmp178	%read{480,480} %write{478,478}
temp	float	$tmp179	%read{480,480} %write{479,479}
temp	float	$tmp180	%read{483,483} %write{480,480}
temp	float	$tmp181	%read{482,482} %write{481,481}
temp	float	$tmp182	%read{483,483} %write{482,482}
temp	float	$tmp183	%read{522,522} %write{483,483}
temp	float	$tmp184	%read{485,485} %write{484,484}
temp	float	$tmp185	%read{487,487} %write{485,485}
temp	float	$tmp186	%read{487,487} %write{486,486}
temp	float	$tmp187	%read{490,490} %write{487,487}
temp	float	$tmp188	%read{489,489} %write{488,488}
temp	float	$tmp189	%read{490,490} %write{489,489}
temp	float	$tmp190	%read{522,522} %write{490,490}
temp	float	$tmp191	%read{492,492} %write{491,491}
temp	float	$tmp192	%read{494,494} %write{492,492}
temp	float	$tmp193	%read{494,494} %write{493,493}
temp	float	$tmp194	%read{495,495} %write{494,494}
temp	float	$tmp195	%read{522,522} %write{495,495}
temp	float	$tmp196	%read{497,497} %write{496,496}
temp	float	$tmp197	%read{499,499} %write{497,497}
temp	float	$tmp198	%read{499,499} %write{498,498}
temp	float	$tmp199	%read{502,502} %write{499,499}
temp	float	$tmp200	%read{501,501} %write{500,500}
temp	float	$tmp201	%read{502,502} %write{501,501}
temp	float	$tmp202	%read{522,522} %write{502,502}
temp	float	$tmp203	%read{504,504} %write{503,503}
temp	float	$tmp204	%read{506,506} %write{504,504}
temp	float	$tmp205	%read{506,506} %write{505,505}
temp	float	$tmp206	%read{509,509} %write{506,506}
temp	float	$tmp207	%read{508,508} %write{507,507}
temp	float	$tmp208	%read{509,509} %write{508,508}
temp	float	$tmp209	%read{522,522} %write{509,509}
temp	float	$tmp210	%read{511,511} %write{510,510}
temp	float	$tmp211	%read{513,513} %write{511,511}
temp	float	$tmp212	%read{513,513} %write{512,512}
temp	float	$tmp213	%read{516,516} %write{513,513}
temp	float	$tmp214	%read{515,515} %write{514,514}
temp	float	$tmp215	%read{516,516} %write{515,515}
temp	float	$tmp216	%read{522,522} %write{516,516}
temp	float	$tmp217	%read{518,518} %write{517,517}
temp	float	$tmp218	%read{520,520} %write{518,518}
temp	float	$tmp219	%read{520,520} %write{519,519}
temp	float	$tmp220	%read{521,521} %write{520,520}
temp	float	$tmp221	%read{522,522} %write{521,521}
temp	float	$tmp222.x	%read{529,562} %write{523,523}
temp	float	$tmp222.y	%read{531,564} %write{524,524}
temp	float	$tmp222.z	%read{534,567} %write{525,525}
temp	float	$tmp222.w	%read{537,570} %write{526,526}
temp	float	$tmp223	%read{529,529} %write{528,528}
temp	float	$tmp224	%read{532,532} %write{529,529}
temp	float	$tmp225	%read{531,531} %write{530,530}
temp	float	$tmp226	%read{532,532} %write{531,531}
temp	float	$tmp227	%read{535,535} %write{532,532}
temp	float	$tmp228	%read{534,534} %write{533,533}
temp	float	$tmp229	%read{535,535} %write{534,534}
temp	float	$tmp230	%read{538,538} %write{535,535}
temp	float	$tmp231	%read{537,537} %write{536,536}
temp	float	$tmp232	%read{538,538} %write{537,537}
temp	float	$tmp233	%read{540,540} %write{539,539}
temp	float	$tmp234	%read{543,543} %write{540,540}
temp	float	$tmp235	%read{542,542} %write{541,541}
temp	float	$tmp236	%read{543,543} %write{542,542}
temp	float	$tmp237	%read{546,546} %write{543,543}
temp	float	$tmp238	%read{545,545} %write{544,544}
temp	float	$tmp239	%read{546,546} %write{545,545}
temp	float	$tmp240	%read{549,549} %write{546,546}
temp	float	$tmp241	%read{548,548} %write{547,547}
temp	float	$tmp242	%read{549,549} %write{548,548}
temp	float	$tmp243	%read{551,551} %write{550,550}
temp	float	$tmp244	%read{554,554} %write{551,551}
temp	float	$tmp245	%read{553,553} %write{552,552}
temp	float	$tmp246	%read{554,554} %write{553,553}
temp	float	$tmp247	%read{557,557} %write{554,554}
temp	float	$tmp248	%read{556,556} %write{555,555}
temp	float	$tmp249	%read{557,557} %write{556,556}
temp	float	$tmp250	%read{560,560} %write{557,557}
temp	float	$tmp251	%read{559,559} %write{558,558}
temp	float	$tmp252	%read{560,560} %write{559,559}
temp	float	$tmp253	%read{562,562} %write{561,561}
temp	float	$tmp254	%read{565,565} %write{562,562}
temp	float	$tmp255	%read{564,564} %write{563,563}
temp	float	$tmp256	%read{565,565} %write{564,564}
temp	float	$tmp257	%read{568,568} %write{565,565}
temp	float	$tmp258	%read{567,567} %write{566,566}
temp	float	$tmp259	%read{568,568} %write{567,567}
temp	float	$tmp260	%read{571,571} %write{568,568}
temp	float	$tmp261	%read{570,570} %write{569,569}
temp	float	$tmp262	%read{571,571} %write{570,570}
temp	float	$tmp263	%read{577,577} %write{576,576}
temp	int	$tmp264	%read{595,595} %write{593,593}
temp	float	$tmp265	%read{605,605} %write{603,603}
temp	float	$tmp266	%read{606,606} %write{605,605}
temp	int	$tmp267	%read{608,608} %write{607,607}
temp	float	$tmp268	%read{612,612} %write{611,611}
temp	float	$tmp269	%read{611,611} %write{610,610}
temp	float	$tmp270	%read{613,613} %write{612,612}
temp	float	$tmp271	%read{615,615} %write{614,614}
temp	int	$tmp272	%read{624,624} %write{622,622}
temp	float	$tmp273	%read{634,634} %write{632,632}
temp	float	$tmp274	%read{635,635} %write{634,634}
temp	int	$tmp275	%read{637,637} %write{636,636}
temp	float	$tmp276	%read{641,641} %write{640,640}
temp	float	$tmp277	%read{640,640} %write{639,639}
temp	float	$tmp278	%read{642,642} %write{641,641}
temp	float	$tmp279	%read{644,644} %write{643,643}
const	string	$const39	"NG_convert_float_color3"		%read{655,655} %write{2147483647,-1}
const	float	$const40	1.5		%read{668,696} %write{2147483647,-1}
const	string	$const41	"ggx"		%read{668,696} %write{2147483647,-1}
const	string	$const42	"R"		%read{660,692} %write{2147483647,-1}
const	string	$const43	"mx_dielectric_bsdf"		%read{659,687} %write{2147483647,-1}
const	string	$const44	"T"		%read{660,692} %write{2147483647,-1}
temp	int	$tmp281	%read{661,661} %write{660,660}
temp	int	$tmp282	%read{665,665} %write{664,664}
temp	closure color	$tmp283	%read{669,669} %write{668,668}
const	string	$const45	"thinfilm_thickness"		%read{668,696} %write{2147483647,-1}
const	string	$const46	"thinfilm_ior"		%read{668,696} %write{2147483647,-1}
const	string	$const47	"dielectric_bsdf"		%read{668,696} %write{2147483647,-1}
temp	closure color	$tmp284	%read{673,673} %write{672,672}
const	string	$const48	"conductor_bsdf"		%read{672,672} %write{2147483647,-1}
temp	int	$tmp285	%read{677,677} %write{676,676}
temp	int	$tmp286	%read{681,681} %write{680,680}
temp	closure color	$tmp287	%read{685,685} %write{684,684}
temp	int	$tmp288	%read{689,689} %write{688,688}
temp	int	$tmp289	%read{693,693} %write{692,692}
temp	closure color	$tmp290	%read{697,697} %write{696,696}
temp	closure color	$tmp291	%read{699,699} %write{698,698}
const	string	$const49	"sheen_bsdf"		%read{698,698} %write{2147483647,-1}
temp	closure color	$tmp292	%read{702,702} %write{701,701}
const	string	$const50	"translucent_bsdf"		%read{701,701} %write{2147483647,-1}
const	string	$const51	"mx_subsurface_bsdf"		%read{704,704} %write{2147483647,-1}
temp	color	$tmp293	%read{706,706} %write{705,705}
const	string	$const52	"subsurface_bssrdf"		%read{706,706} %write{2147483647,-1}
const	string	$const53	"mix"		%read{707,748} %write{2147483647,-1}
temp	float	$tmp294	%read{709,709} %write{708,708}
temp	closure color	$tmp295	%read{711,711} %write{709,709}
temp	closure color	$tmp296	%read{711,711} %write{710,710}
temp	closure color	$tmp297	%read{713,713} %write{712,712}
const	string	$const54	"oren_nayar_diffuse_bsdf"		%read{712,712} %write{2147483647,-1}
temp	float	$tmp298	%read{716,716} %write{715,715}
temp	closure color	$tmp299	%read{718,718} %write{716,716}
temp	closure color	$tmp300	%read{718,718} %write{717,717}
const	string	$const55	"layer"		%read{719,732} %write{2147483647,-1}
temp	float	$tmp301	%read{722,722} %write{721,721}
temp	closure color	$tmp302	%read{724,724} %write{722,722}
temp	closure color	$tmp303	%read{724,724} %write{723,723}
temp	float	$tmp304	%read{728,728} %write{727,727}
temp	closure color	$tmp305	%read{730,730} %write{728,728}
temp	closure color	$tmp306	%read{730,730} %write{729,729}
const	string	$const56	"uniform_edf"		%read{733,733} %write{2147483647,-1}
const	float	$const57	5		%read{745,745} %write{2147483647,-1}
const	string	$const58	"mx_generalized_schlick_edf"		%read{736,736} %write{2147483647,-1}
temp	float	$tmp308	%read{739,739} %write{738,738}
temp	vector	$tmp309	%read{738,738} %write{737,737}
const	string	$const59	"mx_fresnel_schlick"		%read{740,740} %write{2147483647,-1}
temp	float	$tmp310	%read{743,743} %write{741,741}
temp	float	$tmp311	%read{744,744} %write{743,743}
temp	float	$tmp312	%read{746,746} %write{745,745}
temp	float	$tmp313	%read{750,750} %write{749,749}
temp	closure color	$tmp314	%read{752,752} %write{750,750}
temp	closure color	$tmp315	%read{752,752} %write{751,751}
const	string	$const60	"mx_surface"		%read{756,756} %write{2147483647,-1}
temp	float	$tmp316	%read{761,761} %write{760,760}
temp	float	$tmp317	%read{768,768} %write{767,767}
temp	closure color	$tmp318	%read{770,770} %write{769,769}
temp	closure color	$tmp319	%read{774,774} %write{770,770}
temp	closure color	$tmp320	%read{773,773} %write{771,771}
const	string	$const61	"transparent"		%read{771,771} %write{2147483647,-1}
temp	float	$tmp321	%read{773,773} %write{772,772}
temp	closure color	$tmp322	%read{774,774} %write{773,773}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:756
#     color4 color_srgb_texture_value_cm_out = color4(color(0.0), 0.0);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{756} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:757
#     NG_srgb_texture_to_lin_rec709_color4(color_srgb_texture_value_cm_in, color_srgb_texture_value_cm_out);
	assign		color_srgb_texture_value_cm_out.rgb $const2 	%line{757} %argrw{"wr"}
	assign		color_srgb_texture_value_cm_out.a $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:758
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	functioncall	$const4 166 	%line{758} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:93
#     NG_convert_color4_color3(in, asColor3_out);
	assign		___673_asColor3_out $const2 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:94
#     int alpha_index_tmp = 3;
	functioncall	$const5 81 	%line{94} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 79 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 27 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp1 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp1 17 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp2 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp2 21 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp3 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp3 25 27 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_srgb_texture_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 43 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp4 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp4 33 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp5 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp5 37 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp6 41 43 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_srgb_texture_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 59 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp7 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp7 49 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp8 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp8 53 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp9 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp9 57 59 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_srgb_texture_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 75 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp10 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp10 65 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp11 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp11 69 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp12 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp12 73 75 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_srgb_texture_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:42
# }
	assign		___673_asColor3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:95
#     float alpha_out = mx_extract(in, alpha_index_tmp);
	assign		___673_alpha_index_tmp $const10 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:96
#     color transform_out = color(0.0);
	functioncall	$const7 97 	%line{96} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp13 ___673_alpha_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp13 87 97 	%argrw{"r"}
	compref		___673_alpha_out color_srgb_texture_value_cm_in.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp14 ___673_alpha_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp14 91 97 	%argrw{"r"}
	compref		___673_alpha_out color_srgb_texture_value_cm_in.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp15 ___673_alpha_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp15 95 97 	%argrw{"r"}
	compref		___673_alpha_out color_srgb_texture_value_cm_in.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___673_alpha_out color_srgb_texture_value_cm_in.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:97
#     NG_srgb_texture_to_lin_rec709_color3(asColor3_out, transform_out);
	assign		___673_transform_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{97} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:98
#     color4 asColor4_out = { color(transform_out[0],transform_out[1],transform_out[2]),alpha_out };
	functioncall	$const11 159 	%line{98} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:60
#     color bias_out = in + bias_in2_tmp;
	assign		___672_bias_in2_tmp $const12 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:61
#     float linSeg_in2_tmp = 12.920000;
	add		___672_bias_out ___673_asColor3_out ___672_bias_in2_tmp 	%line{61} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:62
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___672_linSeg_in2_tmp $const13 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:63
#     float colorSeparate_outr = 0.0;
	div		___672_linSeg_out ___673_asColor3_out ___672_linSeg_in2_tmp 	%line{63} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:64
#     float colorSeparate_outg = 0.0;
	assign		___672_colorSeparate_outr $const3 	%line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:65
#     float colorSeparate_outb = 0.0;
	assign		___672_colorSeparate_outg $const3 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:66
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___672_colorSeparate_outb $const3 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:67
#     float max_in2_tmp = 0.000000;
	functioncall	$const14 119 	%line{67} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:47
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___671_N_extract_0_index_tmp $const1 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:48
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 110 	%line{48} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_0_out ___673_asColor3_out ___671_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:49
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___671_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:50
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 113 	%line{50} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_1_out ___673_asColor3_out ___671_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:51
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___671_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:52
#     outr = N_extract_0_out;
	functioncall	$const7 116 	%line{52} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___671_N_extract_2_out ___673_asColor3_out ___671_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:53
#     outg = N_extract_1_out;
	assign		___672_colorSeparate_outr ___671_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{53} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:54
#     outb = N_extract_2_out;
	assign		___672_colorSeparate_outg ___671_N_extract_1_out 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:55
# }
	assign		___672_colorSeparate_outb ___671_N_extract_2_out 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:68
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___672_max_in2_tmp $const3 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:69
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp16 ___672_max_in2_tmp 	%line{69} %argrw{"wr"}
	max		___672_max_out ___672_bias_out $tmp16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:70
#     float isAboveR_in1_tmp = 1.000000;
	assign		___672_isAboveR_value2_tmp $const15 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:71
#     float isAboveR_in2_tmp = 0.000000;
	assign		___672_isAboveR_in1_tmp $const16 	%line{71} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:72
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___672_isAboveR_in2_tmp $const3 	%line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:73
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp17 ___672_colorSeparate_outr ___672_isAboveR_value2_tmp 	%line{73} %argrw{"wrr"}
	functioncall	$const17 132 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp17 130 132 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveR_out ___672_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveR_out ___672_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:74
#     float isAboveG_in1_tmp = 1.000000;
	assign		___672_isAboveG_value2_tmp $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:75
#     float isAboveG_in2_tmp = 0.000000;
	assign		___672_isAboveG_in1_tmp $const16 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:76
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___672_isAboveG_in2_tmp $const3 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:77
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp18 ___672_colorSeparate_outg ___672_isAboveG_value2_tmp 	%line{77} %argrw{"wrr"}
	functioncall	$const17 142 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp18 140 142 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveG_out ___672_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveG_out ___672_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:78
#     float isAboveB_in1_tmp = 1.000000;
	assign		___672_isAboveB_value2_tmp $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:79
#     float isAboveB_in2_tmp = 0.000000;
	assign		___672_isAboveB_in1_tmp $const16 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:80
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___672_isAboveB_in2_tmp $const3 	%line{80} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:81
#     float scale_in2_tmp = 1.055000;
	gt		$tmp19 ___672_colorSeparate_outb ___672_isAboveB_value2_tmp 	%line{81} %argrw{"wrr"}
	functioncall	$const17 152 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp19 150 152 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___672_isAboveB_out ___672_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___672_isAboveB_out ___672_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:82
#     color scale_out = max_out / scale_in2_tmp;
	assign		___672_scale_in2_tmp $const18 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:83
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___672_scale_out ___672_max_out ___672_scale_in2_tmp 	%line{83} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:84
#     float powSeg_in2_tmp = 2.400000;
	color		___672_isAbove_out ___672_isAboveR_out ___672_isAboveG_out ___672_isAboveB_out 	%line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:85
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___672_powSeg_in2_tmp $const19 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:86
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___672_powSeg_out ___672_scale_out ___672_powSeg_in2_tmp 	%line{86} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:87
#     out = mix_out;
	mix		___672_mix_out ___672_linSeg_out ___672_powSeg_out ___672_isAbove_out 	%line{87} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:88
# }
	assign		___673_transform_out ___672_mix_out 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:99
#     out = asColor4_out;
	compref		$tmp20 ___673_transform_out $const1 	%line{99} %argrw{"wrr"}
	compref		$tmp21 ___673_transform_out $const8 	%argrw{"wrr"}
	compref		$tmp22 ___673_transform_out $const9 	%argrw{"wrr"}
	color		___673_asColor4_out.rgb $tmp20 $tmp21 $tmp22 	%argrw{"wrrr"}
	assign		___673_asColor4_out.a ___673_alpha_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:100
# }
	assign		color_srgb_texture_value_cm_out.rgb ___673_asColor4_out.rgb 	%line{100} %argrw{"wr"}
	assign		color_srgb_texture_value_cm_out.a ___673_asColor4_out.a 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:759
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const20 168 	%line{759} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const21 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:760
#     color color_srgb_texture_color3_out = color(0.0);
	compref		$tmp24 N $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{760} %argrw{"wrr"}
	compref		$tmp25 N $const1 	%argrw{"wrr"}
	neg		$tmp26 $tmp25 	%argrw{"wr"}
	vector		$tmp23 $tmp24 $const3 $tmp26 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp23 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:761
#     NG_convert_color4_color3(color_srgb_texture_value_cm_out, color_srgb_texture_color3_out);
	assign		color_srgb_texture_color3_out $const2 	%line{761} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:762
#     surfaceshader color_srgb_texture_standard_surface6_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const5 250 	%line{762} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:36
#     float separate_outg = 0.0;
	assign		___670_separate_outr $const3 	%line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:37
#     float separate_outb = 0.0;
	assign		___670_separate_outg $const3 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:38
#     float separate_outa = 0.0;
	assign		___670_separate_outb $const3 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:39
#     NG_separate4_color4(in, separate_outr, separate_outg, separate_outb, separate_outa);
	assign		___670_separate_outa $const3 	%line{39} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:40
#     color combine_out = color( separate_outr,separate_outg,separate_outb );
	functioncall	$const6 248 	%line{40} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const7 196 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp27 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp27 186 196 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp28 ___669_N_extract_0_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp28 190 196 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp29 ___669_N_extract_0_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp29 194 196 	%argrw{"r"}
	compref		___669_N_extract_0_out color_srgb_texture_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_0_out color_srgb_texture_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const8 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:23
#     int N_extract_2_index_tmp = 2;
	functioncall	$const7 212 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp30 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp30 202 212 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp31 ___669_N_extract_1_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp31 206 212 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp32 ___669_N_extract_1_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp32 210 212 	%argrw{"r"}
	compref		___669_N_extract_1_out color_srgb_texture_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_1_out color_srgb_texture_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:24
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___669_N_extract_2_index_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:25
#     int N_extract_3_index_tmp = 3;
	functioncall	$const7 228 	%line{25} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp33 ___669_N_extract_2_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp33 218 228 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp34 ___669_N_extract_2_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp34 222 228 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp35 ___669_N_extract_2_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp35 226 228 	%argrw{"r"}
	compref		___669_N_extract_2_out color_srgb_texture_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_2_out color_srgb_texture_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:26
#     float N_extract_3_out = mx_extract(in, N_extract_3_index_tmp);
	assign		___669_N_extract_3_index_tmp $const10 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:27
#     outr = N_extract_0_out;
	functioncall	$const7 244 	%line{27} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:110
#     if (index == 0) return in.rgb.r;
	eq		$tmp36 ___669_N_extract_3_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{110} %argrw{"wrr"}
	if		$tmp36 234 244 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_out.rgb $const1 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:111
#     else if (index == 1) return in.rgb.g;
	eq		$tmp37 ___669_N_extract_3_index_tmp $const8 	%line{111} %argrw{"wrr"}
	if		$tmp37 238 244 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_out.rgb $const8 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:112
#     else if (index == 2) return in.rgb.b;
	eq		$tmp38 ___669_N_extract_3_index_tmp $const9 	%line{112} %argrw{"wrr"}
	if		$tmp38 242 244 	%argrw{"r"}
	compref		___669_N_extract_3_out color_srgb_texture_value_cm_out.rgb $const9 	%argrw{"wrr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:113
#     else return in.a;
	assign		___669_N_extract_3_out color_srgb_texture_value_cm_out.a 	%line{113} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:28
#     outg = N_extract_1_out;
	assign		___670_separate_outr ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{28} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:29
#     outb = N_extract_2_out;
	assign		___670_separate_outg ___669_N_extract_1_out 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:30
#     outa = N_extract_3_out;
	assign		___670_separate_outb ___669_N_extract_2_out 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:31
# }
	assign		___670_separate_outa ___669_N_extract_3_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:41
#     out = combine_out;
	color		___670_combine_out ___670_separate_outr ___670_separate_outg ___670_separate_outb 	%line{41} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:42
# }
	assign		color_srgb_texture_color3_out ___670_combine_out 	%line{42} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:763
#     NG_standard_surface_surfaceshader_100(color_srgb_texture_standard_surface6_base, color_srgb_texture_color3_out, color_srgb_texture_standard_surface6_diffuse_roughness, color_srgb_texture_standard_surface6_metalness, color_srgb_texture_standard_surface6_specular, color_srgb_texture_standard_surface6_specular_color, color_srgb_texture_standard_surface6_specular_roughness, color_srgb_texture_standard_surface6_specular_IOR, color_srgb_texture_standard_surface6_specular_anisotropy, color_srgb_texture_standard_surface6_specular_rotation, color_srgb_texture_standard_surface6_transmission, color_srgb_texture_standard_surface6_transmission_color, color_srgb_texture_standard_surface6_transmission_depth, color_srgb_texture_standard_surface6_transmission_scatter, color_srgb_texture_standard_surface6_transmission_scatter_anisotropy, color_srgb_texture_standard_surface6_transmission_dispersion, color_srgb_texture_standard_surface6_transmission_extra_roughness, color_srgb_texture_standard_surface6_subsurface, color_srgb_texture_standard_surface6_subsurface_color, color_srgb_texture_standard_surface6_subsurface_radius, color_srgb_texture_standard_surface6_subsurface_scale, color_srgb_texture_standard_surface6_subsurface_anisotropy, color_srgb_texture_standard_surface6_sheen, color_srgb_texture_standard_surface6_sheen_color, color_srgb_texture_standard_surface6_sheen_roughness, color_srgb_texture_standard_surface6_coat, color_srgb_texture_standard_surface6_coat_color, color_srgb_texture_standard_surface6_coat_roughness, color_srgb_texture_standard_surface6_coat_anisotropy, color_srgb_texture_standard_surface6_coat_rotation, color_srgb_texture_standard_surface6_coat_IOR, geomprop_Nworld_out1, color_srgb_texture_standard_surface6_coat_affect_color, color_srgb_texture_standard_surface6_coat_affect_roughness, color_srgb_texture_standard_surface6_thin_film_thickness, color_srgb_texture_standard_surface6_thin_film_IOR, color_srgb_texture_standard_surface6_emission, color_srgb_texture_standard_surface6_emission_color, color_srgb_texture_standard_surface6_opacity, color_srgb_texture_standard_surface6_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, color_srgb_texture_standard_surface6_out);
	assign		color_srgb_texture_standard_surface6_out.bsdf null_closure 	%line{763} %argrw{"wr"}
	assign		color_srgb_texture_standard_surface6_out.edf null_closure 	%argrw{"wr"}
	assign		color_srgb_texture_standard_surface6_out.opacity $const16 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:764
#     {
	functioncall	$const22 766 	%line{764} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:280
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___698_null_closure $const1 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:281
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___698_coat_roughness_vector_out.x $const3 	%line{281} %argrw{"wr"}
	assign		___698_coat_roughness_vector_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:282
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const23 276 	%line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:105
#     if (anisotropy > 0.0)
	mul		$tmp39 color_srgb_texture_standard_surface6_coat_roughness color_srgb_texture_standard_surface6_coat_roughness 	%line{105} %argrw{"wrr"}
	functioncall	$const25 262 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 $tmp39 $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp40 $const24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:106
#     {
	gt		$tmp41 color_srgb_texture_standard_surface6_coat_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{106} %argrw{"wrr"}
	if		$tmp41 274 276 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const25 267 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp43 color_srgb_texture_standard_surface6_coat_anisotropy $const26 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp42 $tmp43 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp44 $const16 $tmp42 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{108} %argrw{"wrr"}
	sqrt		___675_aspect $tmp44 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:109
#         result.y = roughness_sqr * aspect;
	div		$tmp45 ___674_roughness_sqr ___675_aspect 	%line{109} %argrw{"wrr"}
	min		___698_coat_roughness_vector_out.x $tmp45 $const16 	%argrw{"wrr"}
	assign		___698_coat_roughness_vector_out.x ___698_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:110
#     }
	mul		___698_coat_roughness_vector_out.y ___674_roughness_sqr ___675_aspect 	%line{110} %argrw{"wrr"}
	assign		___698_coat_roughness_vector_out.y ___698_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:114
#         result.y = roughness_sqr;
	assign		___698_coat_roughness_vector_out.x ___674_roughness_sqr 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:115
#     }
	assign		___698_coat_roughness_vector_out.y ___674_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:283
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___698_coat_tangent_rotate_degree_in2_tmp $const27 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:284
#     color metal_reflectivity_out = base_color * base;
	mul		___698_coat_tangent_rotate_degree_out color_srgb_texture_standard_surface6_coat_rotation ___698_coat_tangent_rotate_degree_in2_tmp 	%line{284} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:285
#     color metal_edgecolor_out = specular_color * specular;
	mul		___698_metal_reflectivity_out color_srgb_texture_color3_out color_srgb_texture_standard_surface6_base 	%line{285} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:286
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___698_metal_edgecolor_out color_srgb_texture_standard_surface6_specular_color color_srgb_texture_standard_surface6_specular 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:287
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___698_coat_affect_roughness_multiply1_out color_srgb_texture_standard_surface6_coat_affect_roughness color_srgb_texture_standard_surface6_coat 	%line{287} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:288
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___698_tangent_rotate_degree_in2_tmp $const27 	%line{288} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:289
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___698_tangent_rotate_degree_out color_srgb_texture_standard_surface6_specular_rotation ___698_tangent_rotate_degree_in2_tmp 	%line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:290
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___698_transmission_roughness_add_out color_srgb_texture_standard_surface6_specular_roughness color_srgb_texture_standard_surface6_transmission_extra_roughness 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:291
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___698_subsurface_color_nonnegative_in2_tmp $const3 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:292
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp46 ___698_subsurface_color_nonnegative_in2_tmp 	%line{292} %argrw{"wr"}
	max		___698_subsurface_color_nonnegative_out color_srgb_texture_standard_surface6_subsurface_color $tmp46 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:293
#     float coat_clamped_high_tmp = 1.000000;
	assign		___698_coat_clamped_low_tmp $const3 	%line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:294
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___698_coat_clamped_high_tmp $const16 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:295
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const25 292 	%line{295} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp47 color_srgb_texture_standard_surface6_coat ___698_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_coat_clamped_out $tmp47 ___698_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:296
#     float subsurface_selector_out = float(thin_walled);
	mul		___698_subsurface_radius_scaled_out color_srgb_texture_standard_surface6_subsurface_radius color_srgb_texture_standard_surface6_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{296} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:297
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp48 color_srgb_texture_standard_surface6_thin_walled 	%line{297} %argrw{"wr"}
	assign		___698_subsurface_selector_out $tmp48 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:298
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___698_base_color_nonnegative_in2_tmp $const3 	%line{298} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:299
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp49 ___698_base_color_nonnegative_in2_tmp 	%line{299} %argrw{"wr"}
	max		___698_base_color_nonnegative_out color_srgb_texture_color3_out $tmp49 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:300
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___698_coat_attenuation_bg_tmp $const28 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:301
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___698_coat_attenuation_out ___698_coat_attenuation_bg_tmp color_srgb_texture_standard_surface6_coat_color color_srgb_texture_standard_surface6_coat 	%line{301} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:302
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___698_one_minus_coat_ior_in1_tmp $const16 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:303
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___698_one_minus_coat_ior_out ___698_one_minus_coat_ior_in1_tmp color_srgb_texture_standard_surface6_coat_IOR 	%line{303} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:304
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___698_one_plus_coat_ior_in1_tmp $const16 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:305
#     color emission_weight_out = emission_color * emission1;
	add		___698_one_plus_coat_ior_out ___698_one_plus_coat_ior_in1_tmp color_srgb_texture_standard_surface6_coat_IOR 	%line{305} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:306
#     color opacity_luminance_out = color(0.0);
	mul		___698_emission_weight_out color_srgb_texture_standard_surface6_emission_color color_srgb_texture_standard_surface6_emission 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:307
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___698_opacity_luminance_out $const2 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:308
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const30 309 	%line{308} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:121
# }
	dot		$tmp51 color_srgb_texture_standard_surface6_opacity $const29 	%line{121} %argrw{"wrr"}
	assign		___698_opacity_luminance_out $tmp51 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:309
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___698_coat_tangent_rotate_out $const31 	%line{309} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:310
#     color artistic_ior_ior = color(0.0);
	functioncall	$const32 427 	%line{310} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:139
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const33 314 	%line{139} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp52 $const34 $const35 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___698_coat_tangent_rotate_degree_out $tmp52 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:140
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const36 377 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{140} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:126
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:127
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:128
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:129
# 
	sub		___678_oc $const16 ___678_c 	%line{129} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:131
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp53 ___678_nAxis $const1 	%line{131} %argrw{"wrr"}
	mul		$tmp54 ___678_oc $tmp53 	%argrw{"wrr"}
	compref		$tmp55 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
	add		$tmp57 $tmp56 ___678_c 	%argrw{"wrr"}
	compref		$tmp58 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp59 ___678_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp63 $tmp62 ___678_s 	%argrw{"wrr"}
	sub		$tmp64 $tmp61 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp66 ___678_oc $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp70 $tmp69 ___678_s 	%argrw{"wrr"}
	add		$tmp71 $tmp68 $tmp70 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:132
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp72 ___678_nAxis $const1 	%line{132} %argrw{"wrr"}
	mul		$tmp73 ___678_oc $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	compref		$tmp76 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp77 $tmp76 ___678_s 	%argrw{"wrr"}
	add		$tmp78 $tmp75 $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp80 ___678_oc $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp82 $tmp80 $tmp81 	%argrw{"wrr"}
	add		$tmp83 $tmp82 ___678_c 	%argrw{"wrr"}
	compref		$tmp84 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp85 ___678_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	compref		$tmp88 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp89 $tmp88 ___678_s 	%argrw{"wrr"}
	sub		$tmp90 $tmp87 $tmp89 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:133
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp91 ___678_nAxis $const9 	%line{133} %argrw{"wrr"}
	mul		$tmp92 ___678_oc $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp94 $tmp92 $tmp93 	%argrw{"wrr"}
	compref		$tmp95 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp96 $tmp95 ___678_s 	%argrw{"wrr"}
	sub		$tmp97 $tmp94 $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp99 ___678_oc $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp101 $tmp99 $tmp100 	%argrw{"wrr"}
	compref		$tmp102 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp103 $tmp102 ___678_s 	%argrw{"wrr"}
	add		$tmp104 $tmp101 $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp106 ___678_oc $tmp105 	%argrw{"wrr"}
	compref		$tmp107 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp108 $tmp106 $tmp107 	%argrw{"wrr"}
	add		$tmp109 $tmp108 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:131
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp57 $tmp64 $tmp71 $const3 $tmp78 $tmp83 $tmp90 $const3 $tmp97 $tmp104 $tmp109 $const3 $const3 $const3 $const3 $const16 	%line{131} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:141
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp110.x geomprop_Tworld_out1 $const1 	%line{141} %argrw{"wrr"}
	compref		$tmp110.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp110.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp110.w $const16 	%argrw{"wr"}
	functioncall	$const20 426 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp111 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp113 ___679_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp110.y 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	mxcompref	$tmp116 ___679_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp110.z 	%argrw{"wrr"}
	add		$tmp118 $tmp115 $tmp117 	%argrw{"wrr"}
	mxcompref	$tmp119 ___679_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp110.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp118 $tmp120 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp121 ___679_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp123 ___679_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp124 $tmp123 $tmp110.y 	%argrw{"wrr"}
	add		$tmp125 $tmp122 $tmp124 	%argrw{"wrr"}
	mxcompref	$tmp126 ___679_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp110.z 	%argrw{"wrr"}
	add		$tmp128 $tmp125 $tmp127 	%argrw{"wrr"}
	mxcompref	$tmp129 ___679_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp110.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp128 $tmp130 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp131 ___679_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp133 ___679_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp134 $tmp133 $tmp110.y 	%argrw{"wrr"}
	add		$tmp135 $tmp132 $tmp134 	%argrw{"wrr"}
	mxcompref	$tmp136 ___679_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp110.z 	%argrw{"wrr"}
	add		$tmp138 $tmp135 $tmp137 	%argrw{"wrr"}
	mxcompref	$tmp139 ___679_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp110.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp138 $tmp140 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp141 ___679_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp110.x 	%argrw{"wrr"}
	mxcompref	$tmp143 ___679_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp144 $tmp143 $tmp110.y 	%argrw{"wrr"}
	add		$tmp145 $tmp142 $tmp144 	%argrw{"wrr"}
	mxcompref	$tmp146 ___679_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp110.z 	%argrw{"wrr"}
	add		$tmp148 $tmp145 $tmp147 	%argrw{"wrr"}
	mxcompref	$tmp149 ___679_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp110.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp148 $tmp150 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:142
# }
	vector		___698_coat_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{142} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:311
#     color artistic_ior_extinction = color(0.0);
	assign		___698_artistic_ior_ior $const2 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:312
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___698_artistic_ior_extinction $const2 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:313
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const37 454 	%line{313} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:150
#     color r_sqrt = sqrt(r);
	assign		$tmp151 $const3 	%line{150} %argrw{"wr"}
	assign		$tmp152 $const38 	%argrw{"wr"}
	functioncall	$const25 435 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp153 ___698_metal_reflectivity_out $tmp152 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___680_r $tmp153 $tmp151 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:151
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___680_r_sqrt ___680_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{151} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:152
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp154 $const16 ___680_r 	%line{152} %argrw{"wrr"}
	add		$tmp155 $const16 ___680_r 	%argrw{"wrr"}
	div		___680_n_min $tmp154 $tmp155 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:153
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp156 $const16 ___680_r_sqrt 	%line{153} %argrw{"wrr"}
	sub		$tmp157 $const16 ___680_r_sqrt 	%argrw{"wrr"}
	div		___680_n_max $tmp156 $tmp157 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:154
# 
	mix		___698_artistic_ior_ior ___680_n_max ___680_n_min ___698_metal_edgecolor_out 	%line{154} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:156
#     color nm1 = ior - 1.0;
	add		___680_np1 ___698_artistic_ior_ior $const16 	%line{156} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:157
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___680_nm1 ___698_artistic_ior_ior $const16 	%line{157} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:158
#     k2 = max(k2, 0.0);
	mul		$tmp158 ___680_np1 ___680_np1 	%line{158} %argrw{"wrr"}
	mul		$tmp159 $tmp158 ___680_r 	%argrw{"wrr"}
	mul		$tmp160 ___680_nm1 ___680_nm1 	%argrw{"wrr"}
	sub		$tmp161 $tmp159 $tmp160 	%argrw{"wrr"}
	sub		$tmp162 $const16 ___680_r 	%argrw{"wrr"}
	div		___680_k2 $tmp161 $tmp162 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:159
#     extinction = sqrt(k2);
	assign		$tmp163 $const3 	%line{159} %argrw{"wr"}
	max		___680_k2 ___680_k2 $tmp163 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:160
# }
	sqrt		___698_artistic_ior_extinction ___680_k2 	%line{160} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:314
#     vector tangent_rotate_out = vector(0.0);
	mul		___698_coat_affect_roughness_multiply2_out ___698_coat_affect_roughness_multiply1_out color_srgb_texture_standard_surface6_coat_roughness 	%line{314} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:315
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___698_tangent_rotate_out $const31 	%line{315} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:316
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const32 573 	%line{316} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:139
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const33 460 	%line{139} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp164 $const34 $const35 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___698_tangent_rotate_degree_out $tmp164 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:140
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const36 523 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{140} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:126
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:127
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:128
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:129
# 
	sub		___678_oc $const16 ___678_c 	%line{129} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:131
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp165 ___678_nAxis $const1 	%line{131} %argrw{"wrr"}
	mul		$tmp166 ___678_oc $tmp165 	%argrw{"wrr"}
	compref		$tmp167 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp168 $tmp166 $tmp167 	%argrw{"wrr"}
	add		$tmp169 $tmp168 ___678_c 	%argrw{"wrr"}
	compref		$tmp170 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp171 ___678_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp175 $tmp174 ___678_s 	%argrw{"wrr"}
	sub		$tmp176 $tmp173 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp178 ___678_oc $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp180 $tmp178 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp182 $tmp181 ___678_s 	%argrw{"wrr"}
	add		$tmp183 $tmp180 $tmp182 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:132
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp184 ___678_nAxis $const1 	%line{132} %argrw{"wrr"}
	mul		$tmp185 ___678_oc $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	compref		$tmp188 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp189 $tmp188 ___678_s 	%argrw{"wrr"}
	add		$tmp190 $tmp187 $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp192 ___678_oc $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp194 $tmp192 $tmp193 	%argrw{"wrr"}
	add		$tmp195 $tmp194 ___678_c 	%argrw{"wrr"}
	compref		$tmp196 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp197 ___678_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	compref		$tmp200 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp201 $tmp200 ___678_s 	%argrw{"wrr"}
	sub		$tmp202 $tmp199 $tmp201 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:133
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp203 ___678_nAxis $const9 	%line{133} %argrw{"wrr"}
	mul		$tmp204 ___678_oc $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
	compref		$tmp207 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp208 $tmp207 ___678_s 	%argrw{"wrr"}
	sub		$tmp209 $tmp206 $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___678_nAxis $const8 	%argrw{"wrr"}
	mul		$tmp211 ___678_oc $tmp210 	%argrw{"wrr"}
	compref		$tmp212 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp213 $tmp211 $tmp212 	%argrw{"wrr"}
	compref		$tmp214 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp215 $tmp214 ___678_s 	%argrw{"wrr"}
	add		$tmp216 $tmp213 $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp218 ___678_oc $tmp217 	%argrw{"wrr"}
	compref		$tmp219 ___678_nAxis $const9 	%argrw{"wrr"}
	mul		$tmp220 $tmp218 $tmp219 	%argrw{"wrr"}
	add		$tmp221 $tmp220 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:131
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp169 $tmp176 $tmp183 $const3 $tmp190 $tmp195 $tmp202 $const3 $tmp209 $tmp216 $tmp221 $const3 $const3 $const3 $const3 $const16 	%line{131} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:141
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp222.x geomprop_Tworld_out1 $const1 	%line{141} %argrw{"wrr"}
	compref		$tmp222.y geomprop_Tworld_out1 $const8 	%argrw{"wrr"}
	compref		$tmp222.z geomprop_Tworld_out1 $const9 	%argrw{"wrr"}
	assign		$tmp222.w $const16 	%argrw{"wr"}
	functioncall	$const20 572 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp223 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp225 ___679_m $const8 $const1 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp222.y 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	mxcompref	$tmp228 ___679_m $const9 $const1 	%argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp222.z 	%argrw{"wrr"}
	add		$tmp230 $tmp227 $tmp229 	%argrw{"wrr"}
	mxcompref	$tmp231 ___679_m $const10 $const1 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp222.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp230 $tmp232 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp233 ___679_m $const1 $const8 	%line{416} %argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp235 ___679_m $const8 $const8 	%argrw{"wrrr"}
	mul		$tmp236 $tmp235 $tmp222.y 	%argrw{"wrr"}
	add		$tmp237 $tmp234 $tmp236 	%argrw{"wrr"}
	mxcompref	$tmp238 ___679_m $const9 $const8 	%argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp222.z 	%argrw{"wrr"}
	add		$tmp240 $tmp237 $tmp239 	%argrw{"wrr"}
	mxcompref	$tmp241 ___679_m $const10 $const8 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp222.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp240 $tmp242 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp243 ___679_m $const1 $const9 	%line{417} %argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp245 ___679_m $const8 $const9 	%argrw{"wrrr"}
	mul		$tmp246 $tmp245 $tmp222.y 	%argrw{"wrr"}
	add		$tmp247 $tmp244 $tmp246 	%argrw{"wrr"}
	mxcompref	$tmp248 ___679_m $const9 $const9 	%argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp222.z 	%argrw{"wrr"}
	add		$tmp250 $tmp247 $tmp249 	%argrw{"wrr"}
	mxcompref	$tmp251 ___679_m $const10 $const9 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp222.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp250 $tmp252 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp253 ___679_m $const1 $const10 	%line{418} %argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp222.x 	%argrw{"wrr"}
	mxcompref	$tmp255 ___679_m $const8 $const10 	%argrw{"wrrr"}
	mul		$tmp256 $tmp255 $tmp222.y 	%argrw{"wrr"}
	add		$tmp257 $tmp254 $tmp256 	%argrw{"wrr"}
	mxcompref	$tmp258 ___679_m $const9 $const10 	%argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp222.z 	%argrw{"wrr"}
	add		$tmp260 $tmp257 $tmp259 	%argrw{"wrr"}
	mxcompref	$tmp261 ___679_m $const10 $const10 	%argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp222.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp260 $tmp262 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:142
# }
	vector		___698_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{142} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:317
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___698_transmission_roughness_clamped_low_tmp $const3 	%line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:318
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___698_transmission_roughness_clamped_high_tmp $const16 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:319
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const25 578 	%line{319} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp263 ___698_transmission_roughness_add_out ___698_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_transmission_roughness_clamped_out $tmp263 ___698_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:320
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___698_coat_gamma_multiply_out ___698_coat_clamped_out color_srgb_texture_standard_surface6_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{320} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:321
#     int opacity_luminance_float_index_tmp = 0;
	div		___698_coat_ior_to_F0_sqrt_out ___698_one_minus_coat_ior_out ___698_one_plus_coat_ior_out 	%line{321} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:322
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___698_opacity_luminance_float_index_tmp $const1 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:323
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const7 583 	%line{323} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___698_opacity_luminance_float_out ___698_opacity_luminance_out ___698_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:324
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___698_coat_tangent_rotate_normalize_out ___698_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{324} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:325
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___698_coat_affected_roughness_fg_tmp $const16 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:326
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___698_coat_affected_roughness_out color_srgb_texture_standard_surface6_specular_roughness ___698_coat_affected_roughness_fg_tmp ___698_coat_affect_roughness_multiply2_out 	%line{326} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:327
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___698_tangent_rotate_normalize_out ___698_tangent_rotate_out 	%line{327} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:328
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___698_coat_affected_transmission_roughness_fg_tmp $const16 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:329
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___698_coat_affected_transmission_roughness_out ___698_transmission_roughness_clamped_out ___698_coat_affected_transmission_roughness_fg_tmp ___698_coat_affect_roughness_multiply2_out 	%line{329} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:330
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___698_coat_gamma_in2_tmp $const16 	%line{330} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:331
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___698_coat_gamma_out ___698_coat_gamma_multiply_out ___698_coat_gamma_in2_tmp 	%line{331} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:332
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___698_coat_ior_to_F0_out ___698_coat_ior_to_F0_sqrt_out ___698_coat_ior_to_F0_sqrt_out 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:333
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___698_coat_tangent_value2_tmp $const3 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:334
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp264 color_srgb_texture_standard_surface6_coat_anisotropy ___698_coat_tangent_value2_tmp 	%line{334} %argrw{"wrr"}
	functioncall	$const17 600 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp264 598 600 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___698_coat_tangent_out ___698_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___698_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:335
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___698_main_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{335} %argrw{"wr"}
	assign		___698_main_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:336
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const23 621 	%line{336} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:105
#     if (anisotropy > 0.0)
	mul		$tmp265 ___698_coat_affected_roughness_out ___698_coat_affected_roughness_out 	%line{105} %argrw{"wrr"}
	functioncall	$const25 607 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp266 $tmp265 $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp266 $const24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:106
#     {
	gt		$tmp267 color_srgb_texture_standard_surface6_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{106} %argrw{"wrr"}
	if		$tmp267 619 621 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const25 612 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp269 color_srgb_texture_standard_surface6_specular_anisotropy $const26 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp268 $tmp269 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp270 $const16 $tmp268 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{108} %argrw{"wrr"}
	sqrt		___675_aspect $tmp270 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:109
#         result.y = roughness_sqr * aspect;
	div		$tmp271 ___674_roughness_sqr ___675_aspect 	%line{109} %argrw{"wrr"}
	min		___698_main_roughness_out.x $tmp271 $const16 	%argrw{"wrr"}
	assign		___698_main_roughness_out.x ___698_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:110
#     }
	mul		___698_main_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{110} %argrw{"wrr"}
	assign		___698_main_roughness_out.y ___698_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:114
#         result.y = roughness_sqr;
	assign		___698_main_roughness_out.x ___674_roughness_sqr 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:115
#     }
	assign		___698_main_roughness_out.y ___674_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:337
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___698_main_tangent_value2_tmp $const3 	%line{337} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:338
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp272 color_srgb_texture_standard_surface6_specular_anisotropy ___698_main_tangent_value2_tmp 	%line{338} %argrw{"wrr"}
	functioncall	$const17 629 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp272 627 629 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___698_main_tangent_out ___698_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___698_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:339
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___698_transmission_roughness_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{339} %argrw{"wr"}
	assign		___698_transmission_roughness_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:340
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const23 650 	%line{340} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:105
#     if (anisotropy > 0.0)
	mul		$tmp273 ___698_coat_affected_transmission_roughness_out ___698_coat_affected_transmission_roughness_out 	%line{105} %argrw{"wrr"}
	functioncall	$const25 636 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 $tmp273 $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp274 $const24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:106
#     {
	gt		$tmp275 color_srgb_texture_standard_surface6_specular_anisotropy $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{106} %argrw{"wrr"}
	if		$tmp275 648 650 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const25 641 	%line{108} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp277 color_srgb_texture_standard_surface6_specular_anisotropy $const26 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp276 $tmp277 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:108
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp278 $const16 $tmp276 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{108} %argrw{"wrr"}
	sqrt		___675_aspect $tmp278 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:109
#         result.y = roughness_sqr * aspect;
	div		$tmp279 ___674_roughness_sqr ___675_aspect 	%line{109} %argrw{"wrr"}
	min		___698_transmission_roughness_out.x $tmp279 $const16 	%argrw{"wrr"}
	assign		___698_transmission_roughness_out.x ___698_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:110
#     }
	mul		___698_transmission_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{110} %argrw{"wrr"}
	assign		___698_transmission_roughness_out.y ___698_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:114
#         result.y = roughness_sqr;
	assign		___698_transmission_roughness_out.x ___674_roughness_sqr 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:115
#     }
	assign		___698_transmission_roughness_out.y ___674_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:341
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___698_coat_affected_subsurface_color_out ___698_subsurface_color_nonnegative_out ___698_coat_gamma_out 	%line{341} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:342
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___698_coat_affected_diffuse_color_out ___698_base_color_nonnegative_out ___698_coat_gamma_out 	%line{342} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:343
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___698_one_minus_coat_ior_to_F0_in1_tmp $const16 	%line{343} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:344
#     color emission_color0_out = color(0.0);
	sub		___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_in1_tmp ___698_coat_ior_to_F0_out 	%line{344} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:345
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___698_emission_color0_out $const2 	%line{345} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:346
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const39 658 	%line{346} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:181
#     out = combine_out;
	color		___683_combine_out ___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_out 	%line{181} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:182
# }
	assign		___698_emission_color0_out ___683_combine_out 	%line{182} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:347
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___698_coat_bsdf_out ___698_null_closure 	%line{347} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:348
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const43 670 	%line{348} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:165
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp281 $const42 $const44 	%line{165} %argrw{"wrr"}
	if		$tmp281 663 664 	%argrw{"r"}
	assign		___681_reflection_tint $const2 	%argrw{"wr"}
	assign		___681_reflection_tint $const28 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:166
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp282 $const42 $const42 	%line{166} %argrw{"wrr"}
	if		$tmp282 667 668 	%argrw{"r"}
	assign		___681_transmission_tint $const2 	%argrw{"wr"}
	assign		___681_transmission_tint $const28 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:167
# }
	closure		$tmp283 $const47 geomprop_Nworld_out1 ___698_coat_tangent_out ___681_reflection_tint ___681_transmission_tint ___698_coat_roughness_vector_out.x ___698_coat_roughness_vector_out.y color_srgb_texture_standard_surface6_coat_IOR $const41 $const45 $const3 $const46 $const40 	%line{167} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_coat_bsdf_out $tmp283 color_srgb_texture_standard_surface6_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:349
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___698_metal_bsdf_weight_tmp $const16 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:350
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___698_metal_bsdf_distribution_tmp $const41 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:351
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp284 $const48 geomprop_Nworld_out1 ___698_main_tangent_out ___698_main_roughness_out.x ___698_main_roughness_out.y ___698_artistic_ior_ior ___698_artistic_ior_extinction ___698_metal_bsdf_distribution_tmp $const45 color_srgb_texture_standard_surface6_thin_film_thickness $const46 color_srgb_texture_standard_surface6_thin_film_IOR 	%line{351} %argrw{"wrrrrrrrrrrrr"}
	mul		___698_metal_bsdf_out $tmp284 ___698_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:352
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___698_specular_bsdf_out ___698_null_closure 	%line{352} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:353
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const43 686 	%line{353} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:165
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp285 $const42 $const44 	%line{165} %argrw{"wrr"}
	if		$tmp285 679 680 	%argrw{"r"}
	assign		___681_reflection_tint $const2 	%argrw{"wr"}
	assign		___681_reflection_tint color_srgb_texture_standard_surface6_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:166
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp286 $const42 $const42 	%line{166} %argrw{"wrr"}
	if		$tmp286 683 684 	%argrw{"r"}
	assign		___681_transmission_tint $const2 	%argrw{"wr"}
	assign		___681_transmission_tint color_srgb_texture_standard_surface6_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:167
# }
	closure		$tmp287 $const47 geomprop_Nworld_out1 ___698_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___698_main_roughness_out.x ___698_main_roughness_out.y color_srgb_texture_standard_surface6_specular_IOR $const41 $const45 color_srgb_texture_standard_surface6_thin_film_thickness $const46 color_srgb_texture_standard_surface6_thin_film_IOR 	%line{167} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_specular_bsdf_out $tmp287 color_srgb_texture_standard_surface6_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:354
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___698_transmission_bsdf_out ___698_null_closure 	%line{354} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:355
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const43 698 	%line{355} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:165
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp288 $const44 $const44 	%line{165} %argrw{"wrr"}
	if		$tmp288 691 692 	%argrw{"r"}
	assign		___681_reflection_tint $const2 	%argrw{"wr"}
	assign		___681_reflection_tint color_srgb_texture_standard_surface6_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:166
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp289 $const44 $const42 	%line{166} %argrw{"wrr"}
	if		$tmp289 695 696 	%argrw{"r"}
	assign		___681_transmission_tint $const2 	%argrw{"wr"}
	assign		___681_transmission_tint color_srgb_texture_standard_surface6_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:167
# }
	closure		$tmp290 $const47 geomprop_Nworld_out1 ___698_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___698_transmission_roughness_out.x ___698_transmission_roughness_out.y color_srgb_texture_standard_surface6_specular_IOR $const41 $const45 $const3 $const46 $const40 	%line{167} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_transmission_bsdf_out $tmp290 $const16 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:356
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp291 $const49 geomprop_Nworld_out1 color_srgb_texture_standard_surface6_sheen_color color_srgb_texture_standard_surface6_sheen_roughness 	%line{356} %argrw{"wrrrr"}
	mul		___698_sheen_bsdf_out $tmp291 color_srgb_texture_standard_surface6_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:357
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___698_translucent_bsdf_weight_tmp $const16 	%line{357} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:358
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp292 $const50 geomprop_Nworld_out1 ___698_coat_affected_subsurface_color_out 	%line{358} %argrw{"wrrr"}
	mul		___698_translucent_bsdf_out $tmp292 ___698_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:359
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___698_subsurface_bsdf_out ___698_null_closure 	%line{359} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:360
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const51 707 	%line{360} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:175
# #endif
	mul		$tmp293 $const16 ___698_coat_affected_subsurface_color_out 	%line{175} %argrw{"wrr"}
	closure		___698_subsurface_bsdf_out $const52 geomprop_Nworld_out1 $tmp293 $const16 ___698_subsurface_radius_scaled_out color_srgb_texture_standard_surface6_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:361
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const53 712 	%line{361} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp294 $const16 ___698_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp295 ___698_subsurface_bsdf_out $tmp294 	%argrw{"wrr"}
	mul		$tmp296 ___698_translucent_bsdf_out ___698_subsurface_selector_out 	%argrw{"wrr"}
	add		___698_selected_subsurface_bsdf_out $tmp295 $tmp296 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:362
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp297 $const54 geomprop_Nworld_out1 ___698_coat_affected_diffuse_color_out color_srgb_texture_standard_surface6_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{362} %argrw{"wrrrr"}
	mul		___698_diffuse_bsdf_out $tmp297 color_srgb_texture_standard_surface6_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:363
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const53 719 	%line{363} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp298 $const16 color_srgb_texture_standard_surface6_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp299 ___698_diffuse_bsdf_out $tmp298 	%argrw{"wrr"}
	mul		$tmp300 ___698_selected_subsurface_bsdf_out color_srgb_texture_standard_surface6_subsurface 	%argrw{"wrr"}
	add		___698_subsurface_mix_out $tmp299 $tmp300 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:364
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___698_sheen_layer_out $const55 ___698_sheen_bsdf_out ___698_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{364} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:365
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const53 725 	%line{365} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp301 $const16 color_srgb_texture_standard_surface6_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp302 ___698_sheen_layer_out $tmp301 	%argrw{"wrr"}
	mul		$tmp303 ___698_transmission_bsdf_out color_srgb_texture_standard_surface6_transmission 	%argrw{"wrr"}
	add		___698_transmission_mix_out $tmp302 $tmp303 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:366
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___698_specular_layer_out $const55 ___698_specular_bsdf_out ___698_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{366} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:367
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const53 731 	%line{367} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp304 $const16 color_srgb_texture_standard_surface6_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp305 ___698_specular_layer_out $tmp304 	%argrw{"wrr"}
	mul		$tmp306 ___698_metal_bsdf_out color_srgb_texture_standard_surface6_metalness 	%argrw{"wrr"}
	add		___698_metalness_mix_out $tmp305 $tmp306 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:368
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___698_thin_film_layer_attenuated_out ___698_metalness_mix_out ___698_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{368} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:369
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___698_coat_layer_out $const55 ___698_coat_bsdf_out ___698_thin_film_layer_attenuated_out 	%line{369} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:370
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___698_emission_edf_out $const56 ___698_emission_weight_out 	%line{370} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:371
#     EDF coat_emission_edf_out = null_closure;
	mul		___698_coat_tinted_emission_edf_out ___698_emission_edf_out color_srgb_texture_standard_surface6_coat_color 	%line{371} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:372
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___698_coat_emission_edf_out ___698_null_closure 	%line{372} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:373
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const58 748 	%line{373} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:266
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp309 I 	%line{266} %argrw{"wr"}
	dot		$tmp308 N $tmp309 	%argrw{"wrr"}
	fabs		___696_NdotV $tmp308 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:267
#     result = base * f;
	functioncall	$const59 747 	%line{267} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:260
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp310 $const16 ___696_NdotV 	%line{260} %argrw{"wrr"}
	functioncall	$const25 745 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp311 $tmp310 $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_x $tmp311 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:261
# }
	pow		$tmp312 ___695_x $const57 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{261} %argrw{"wrr"}
	mix		___696_f ___698_emission_color0_out $const2 $tmp312 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:268
# }
	mul		___698_coat_emission_edf_out ___698_coat_tinted_emission_edf_out ___696_f 	%line{268} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:374
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const53 753 	%line{374} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp313 $const16 color_srgb_texture_standard_surface6_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp314 ___698_emission_edf_out $tmp313 	%argrw{"wrr"}
	mul		$tmp315 ___698_coat_emission_edf_out color_srgb_texture_standard_surface6_coat 	%argrw{"wrr"}
	add		___698_blended_coat_emission_edf_out $tmp314 $tmp315 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:375
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___698_shader_constructor_out.bsdf ___698_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{375} %argrw{"wr"}
	assign		___698_shader_constructor_out.edf ___698_null_closure 	%argrw{"wr"}
	assign		___698_shader_constructor_out.opacity $const16 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:376
#     out = shader_constructor_out;
	functioncall	$const60 763 	%line{376} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:273
#     result.edf     = edf;
	assign		___698_shader_constructor_out.bsdf ___698_coat_layer_out 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:274
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___698_shader_constructor_out.edf ___698_blended_coat_emission_edf_out 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:275
# }
	functioncall	$const25 762 	%line{275} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp316 ___698_opacity_luminance_float_out $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_shader_constructor_out.opacity $tmp316 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:275
# }
	assign		___698_shader_constructor_out.opacity ___698_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:377
# }
	assign		color_srgb_texture_standard_surface6_out.bsdf ___698_shader_constructor_out.bsdf 	%line{377} %argrw{"wr"}
	assign		color_srgb_texture_standard_surface6_out.edf ___698_shader_constructor_out.edf 	%argrw{"wr"}
	assign		color_srgb_texture_standard_surface6_out.opacity ___698_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:766
#         color_srgb_texture_out = (color_srgb_texture_standard_surface6_out.bsdf + color_srgb_texture_standard_surface6_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const25 769 	%line{766} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp317 color_srgb_texture_standard_surface6_out.opacity $const16 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_opacity_weight $tmp317 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl:767
#     }
	add		$tmp318 color_srgb_texture_standard_surface6_out.bsdf color_srgb_texture_standard_surface6_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_color_srgb_texture_out.osl"} %line{767} %argrw{"wrr"}
	mul		$tmp319 $tmp318 ___699_opacity_weight 	%argrw{"wrr"}
	closure		$tmp320 $const61 	%argrw{"wr"}
	sub		$tmp321 $const16 ___699_opacity_weight 	%argrw{"wrr"}
	mul		$tmp322 $tmp320 $tmp321 	%argrw{"wrr"}
	add		color_srgb_texture_out $tmp319 $tmp322 	%argrw{"wrr"}
	end
