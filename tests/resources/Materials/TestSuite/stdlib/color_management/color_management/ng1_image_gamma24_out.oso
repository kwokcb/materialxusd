OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_image_gamma24_out.oso
surface ng1_image_gamma24_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"image_gamma24_out"} 
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_gamma24_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,label,"Filename"} %meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	image_gamma24_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	image_gamma24_layer	""		%meta{string,label,"Layer"}  %read{52,52} %write{2147483647,-1}
param	color	image_gamma24_default	0 0 0		%meta{string,label,"Default Color"}  %read{46,48} %write{2147483647,-1}
param	string	image_gamma24_uaddressmode	"periodic"		%meta{string,label,"Address Mode U"}  %read{17,52} %write{2147483647,-1}
param	string	image_gamma24_vaddressmode	"periodic"		%meta{string,label,"Address Mode V"}  %read{32,52} %write{2147483647,-1}
param	string	image_gamma24_filtertype	"linear"		%meta{string,label,"Filter Type"}  %read{52,52} %write{2147483647,-1}
param	string	image_gamma24_framerange	""		%meta{string,label,"Frame Range"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	image_gamma24_frameoffset	0		%meta{string,label,"Frame Offset"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_gamma24_frameendaction	"constant"		%meta{string,label,"Frame End Action"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{89,524} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{523,523} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{538,540} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{90,496} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{90,494} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{94,396} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{495,507} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{418,450} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{93,93} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{532,534} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{502,506} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{94,94} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{526,528} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{97,97} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{103,103} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{103,103} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{517,517} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{510,510} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{509,509} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{509,509} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{91,562} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{110,545} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{69,265} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{73,404} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{88,88} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{112,479} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{389,389} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{91,91} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{483,495} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{483,495} %write{2147483647,-1}
param	float	image_gamma24_standard_surface4_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{115,115} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{115,115} %write{2147483647,-1}
param	color	image_gamma24_standard_surface4_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{118,118} %write{2147483647,-1}
param	int	image_gamma24_standard_surface4_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{104,104} %write{2147483647,-1}
oparam	closure color	image_gamma24_out			%read{2147483647,-1} %write{585,585}
global	vector	I	%read{548,548} %write{2147483647,-1}
global	normal	N	%read{4,549} %write{2147483647,-1}
global	float	u	%read{10,10} %write{2147483647,-1} %derivs
global	float	v	%read{11,11} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{52,52} %write{48,48}
local	float	___670_st.x	%read{52,52} %write{50,50} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{52,52} %write{51,51} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_max_in2_tmp	%read{56,56} %write{55,55}
local	color	___672_max_out	%read{59,59} %write{57,57}
local	float	___672_gamma_in2_tmp	%read{59,59} %write{58,58}
local	color	___672_gamma_out	%read{60,60} %write{59,59}
local	float	___673_roughness_sqr	%read{80,460} %write{72,446}
local	float	___674_aspect	%read{80,457} %write{79,453}
local	vector	___677_nAxis	%read{130,330} %write{126,272}
local	float	___677_s	%read{140,326} %write{127,273}
local	float	___677_c	%read{129,332} %write{128,274}
local	float	___677_oc	%read{131,329} %write{129,275}
local	float	___678_rotationRadians	%read{127,274} %write{124,270}
local	matrix	___678_m	%read{193,380} %write{187,333}
local	float	___678_trans.x	%read{237,383} %write{203,349} %mystruct{___678_trans} %mystructfield{0}
local	float	___678_trans.y	%read{237,383} %write{214,360} %mystruct{___678_trans} %mystructfield{1}
local	float	___678_trans.z	%read{237,383} %write{225,371} %mystruct{___678_trans} %mystructfield{2}
local	float	___678_trans.w	%read{2147483647,-1} %write{236,382} %mystruct{___678_trans} %mystructfield{3}
local	color	___679_r	%read{246,260} %write{245,245}
local	color	___679_r_sqrt	%read{250,251} %write{246,246}
local	color	___679_n_min	%read{253,253} %write{249,249}
local	color	___679_n_max	%read{253,253} %write{252,252}
local	color	___679_np1	%read{256,256} %write{254,254}
local	color	___679_nm1	%read{258,258} %write{255,255}
local	color	___679_k2	%read{263,264} %write{261,263}
local	color	___680_reflection_tint	%read{479,507} %write{473,502}
local	color	___680_transmission_tint	%read{479,507} %write{477,506}
local	color	___682_combine_out	%read{468,468} %write{467,467}
local	float	___694_x	%read{556,556} %write{555,555}
local	float	___695_NdotV	%read{552,552} %write{550,550}
local	color	___695_f	%read{558,558} %write{557,557}
local	closure color	___697_null_closure	%read{469,565} %write{65,65}
local	float	___697_coat_roughness_vector_out.x	%read{82,479} %write{66,85} %mystruct{___697_coat_roughness_vector_out} %mystructfield{0}
local	float	___697_coat_roughness_vector_out.y	%read{84,479} %write{67,86} %mystruct{___697_coat_roughness_vector_out} %mystructfield{1}
local	float	___697_coat_tangent_rotate_degree_in2_tmp	%read{88,88} %write{87,87}
local	float	___697_coat_tangent_rotate_degree_out	%read{124,124} %write{88,88}
local	color	___697_metal_reflectivity_out	%read{244,244} %write{89,89}
local	color	___697_metal_edgecolor_out	%read{253,253} %write{90,90}
local	float	___697_coat_affect_roughness_multiply1_out	%read{265,265} %write{91,91}
local	float	___697_tangent_rotate_degree_in2_tmp	%read{93,93} %write{92,92}
local	float	___697_tangent_rotate_degree_out	%read{270,270} %write{93,93}
local	float	___697_transmission_roughness_add_out	%read{387,387} %write{94,94}
local	float	___697_subsurface_color_nonnegative_in2_tmp	%read{96,96} %write{95,95}
local	color	___697_subsurface_color_nonnegative_out	%read{461,461} %write{97,97}
local	float	___697_coat_clamped_low_tmp	%read{102,102} %write{98,98}
local	float	___697_coat_clamped_high_tmp	%read{101,101} %write{99,99}
local	float	___697_coat_clamped_out	%read{389,389} %write{102,102}
local	color	___697_subsurface_radius_scaled_out	%read{517,517} %write{103,103}
local	float	___697_subsurface_selector_out	%read{519,521} %write{105,105}
local	float	___697_base_color_nonnegative_in2_tmp	%read{107,107} %write{106,106}
local	color	___697_base_color_nonnegative_out	%read{462,462} %write{108,108}
local	color	___697_coat_attenuation_bg_tmp	%read{110,110} %write{109,109}
local	color	___697_coat_attenuation_out	%read{542,542} %write{110,110}
local	float	___697_one_minus_coat_ior_in1_tmp	%read{112,112} %write{111,111}
local	float	___697_one_minus_coat_ior_out	%read{390,390} %write{112,112}
local	float	___697_one_plus_coat_ior_in1_tmp	%read{114,114} %write{113,113}
local	float	___697_one_plus_coat_ior_out	%read{390,390} %write{114,114}
local	color	___697_emission_weight_out	%read{544,544} %write{115,115}
local	color	___697_opacity_luminance_out	%read{393,393} %write{116,119}
local	vector	___697_coat_tangent_rotate_out	%read{394,394} %write{120,237}
local	color	___697_artistic_ior_ior	%read{254,483} %write{238,253}
local	color	___697_artistic_ior_extinction	%read{483,483} %write{239,264}
local	float	___697_coat_affect_roughness_multiply2_out	%read{396,399} %write{265,265}
local	vector	___697_tangent_rotate_out	%read{397,397} %write{266,383}
local	float	___697_transmission_roughness_clamped_low_tmp	%read{388,388} %write{384,384}
local	float	___697_transmission_roughness_clamped_high_tmp	%read{387,387} %write{385,385}
local	float	___697_transmission_roughness_clamped_out	%read{399,399} %write{388,388}
local	float	___697_coat_gamma_multiply_out	%read{401,401} %write{389,389}
local	float	___697_coat_ior_to_F0_sqrt_out	%read{402,402} %write{390,390}
local	int	___697_opacity_luminance_float_index_tmp	%read{393,393} %write{391,391}
local	float	___697_opacity_luminance_float_out	%read{571,571} %write{393,393}
local	vector	___697_coat_tangent_rotate_normalize_out	%read{407,407} %write{394,394}
local	float	___697_coat_affected_roughness_fg_tmp	%read{396,396} %write{395,395}
local	float	___697_coat_affected_roughness_out	%read{414,414} %write{396,396}
local	vector	___697_tangent_rotate_normalize_out	%read{436,436} %write{397,397}
local	float	___697_coat_affected_transmission_roughness_fg_tmp	%read{399,399} %write{398,398}
local	float	___697_coat_affected_transmission_roughness_out	%read{443,443} %write{399,399}
local	float	___697_coat_gamma_in2_tmp	%read{401,401} %write{400,400}
local	float	___697_coat_gamma_out	%read{461,462} %write{401,401}
local	float	___697_coat_ior_to_F0_out	%read{464,464} %write{402,402}
local	float	___697_coat_tangent_value2_tmp	%read{404,404} %write{403,403}
local	vector	___697_coat_tangent_out	%read{479,479} %write{407,409}
local	float	___697_main_roughness_out.x	%read{427,495} %write{411,430} %mystruct{___697_main_roughness_out} %mystructfield{0}
local	float	___697_main_roughness_out.y	%read{429,495} %write{412,431} %mystruct{___697_main_roughness_out} %mystructfield{1}
local	float	___697_main_tangent_value2_tmp	%read{433,433} %write{432,432}
local	vector	___697_main_tangent_out	%read{483,507} %write{436,438}
local	float	___697_transmission_roughness_out.x	%read{456,507} %write{440,459} %mystruct{___697_transmission_roughness_out} %mystructfield{0}
local	float	___697_transmission_roughness_out.y	%read{458,507} %write{441,460} %mystruct{___697_transmission_roughness_out} %mystructfield{1}
local	color	___697_coat_affected_subsurface_color_out	%read{512,516} %write{461,461}
local	color	___697_coat_affected_diffuse_color_out	%read{523,523} %write{462,462}
local	float	___697_one_minus_coat_ior_to_F0_in1_tmp	%read{464,464} %write{463,463}
local	float	___697_one_minus_coat_ior_to_F0_out	%read{467,467} %write{464,464}
local	color	___697_emission_color0_out	%read{557,557} %write{465,468}
local	closure color	___697_coat_bsdf_out	%read{543,543} %write{469,480}
local	float	___697_metal_bsdf_weight_tmp	%read{484,484} %write{481,481}
local	string	___697_metal_bsdf_distribution_tmp	%read{483,483} %write{482,482}
local	closure color	___697_metal_bsdf_out	%read{540,540} %write{484,484}
local	closure color	___697_specular_bsdf_out	%read{536,536} %write{485,496}
local	closure color	___697_transmission_bsdf_out	%read{534,534} %write{497,508}
local	closure color	___697_sheen_bsdf_out	%read{530,530} %write{510,510}
local	float	___697_translucent_bsdf_weight_tmp	%read{513,513} %write{511,511}
local	closure color	___697_translucent_bsdf_out	%read{521,521} %write{513,513}
local	closure color	___697_subsurface_bsdf_out	%read{520,520} %write{514,517}
local	closure color	___697_selected_subsurface_bsdf_out	%read{528,528} %write{522,522}
local	closure color	___697_diffuse_bsdf_out	%read{527,527} %write{524,524}
local	closure color	___697_subsurface_mix_out	%read{530,530} %write{529,529}
local	closure color	___697_sheen_layer_out	%read{533,533} %write{530,530}
local	closure color	___697_transmission_mix_out	%read{536,536} %write{535,535}
local	closure color	___697_specular_layer_out	%read{539,539} %write{536,536}
local	closure color	___697_metalness_mix_out	%read{542,542} %write{541,541}
local	closure color	___697_thin_film_layer_attenuated_out	%read{543,543} %write{542,542}
local	closure color	___697_coat_layer_out	%read{568,568} %write{543,543}
local	closure color	___697_emission_edf_out	%read{545,561} %write{544,544}
local	closure color	___697_coat_tinted_emission_edf_out	%read{558,558} %write{545,545}
local	closure color	___697_coat_emission_edf_out	%read{562,562} %write{546,558}
local	closure color	___697_blended_coat_emission_edf_out	%read{569,569} %write{563,563}
local	closure color	___697_shader_constructor_out.bsdf	%read{574,574} %write{564,568} %mystruct{___697_shader_constructor_out} %mystructfield{0}
local	closure color	___697_shader_constructor_out.edf	%read{575,575} %write{565,569} %mystruct{___697_shader_constructor_out} %mystructfield{1}
local	float	___697_shader_constructor_out.opacity	%read{573,576} %write{566,573} %mystruct{___697_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{61,62} %write{0,0}
local	string	image_gamma24_file_.filename	%read{14,52} %write{1,1} %mystruct{image_gamma24_file_} %mystructfield{0}
local	string	image_gamma24_file_.colorspace	%read{52,52} %write{2,2} %mystruct{image_gamma24_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{126,523} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{188,438} %write{9,9}
local	float	geomprop_UV0_out1.x	%read{20,50} %write{10,10} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{35,51} %write{11,11} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	image_gamma24_out1	%read{57,57} %write{12,52}
local	color	image_gamma24_out_cm_out	%read{89,108} %write{53,60}
local	closure color	image_gamma24_standard_surface4_out.bsdf	%read{580,580} %write{61,574} %mystruct{image_gamma24_standard_surface4_out} %mystructfield{0}
local	closure color	image_gamma24_standard_surface4_out.edf	%read{580,580} %write{62,575} %mystruct{image_gamma24_standard_surface4_out} %mystructfield{1}
local	float	image_gamma24_standard_surface4_out.opacity	%read{578,578} %write{63,576} %mystruct{image_gamma24_standard_surface4_out} %mystructfield{2}
local	float	___698_opacity_weight	%read{581,583} %write{579,579}
const	int	$const1	0		%read{0,391} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,338} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,377} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,579} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
const	color	$const6	0 0 0		%read{12,557} %write{2147483647,-1}
const	string	$const7	"mx_image_color3"		%read{13,13} %write{2147483647,-1}
const	string	$const8	""		%read{14,14} %write{2147483647,-1}
temp	int	$tmp5	%read{15,15} %write{14,14}
temp	int	$tmp6	%read{16,30} %write{15,29}
const	string	$const9	"constant"		%read{17,32} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
temp	int	$tmp8	%read{19,28} %write{18,27}
temp	int	$tmp9	%read{21,21} %write{20,20}
temp	int	$tmp10	%read{22,26} %write{21,25}
const	float	$const10	1		%read{23,583} %write{2147483647,-1}
temp	int	$tmp11	%read{24,24} %write{23,23}
temp	int	$tmp12	%read{25,25} %write{24,24}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	int	$tmp15	%read{31,45} %write{30,44}
temp	int	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,43} %write{33,42}
temp	int	$tmp18	%read{36,36} %write{35,35}
temp	int	$tmp19	%read{37,41} %write{36,40}
temp	int	$tmp20	%read{39,39} %write{38,38}
temp	int	$tmp21	%read{40,40} %write{39,39}
temp	int	$tmp22	%read{42,42} %write{41,41}
temp	int	$tmp23	%read{44,44} %write{43,43}
const	string	$const11	"mx_transform_uv"		%read{49,49} %write{2147483647,-1}
const	string	$const12	"subimage"		%read{52,52} %write{2147483647,-1}
const	string	$const13	"interp"		%read{52,52} %write{2147483647,-1}
const	string	$const14	"missingcolor"		%read{52,52} %write{2147483647,-1}
const	string	$const15	"swrap"		%read{52,52} %write{2147483647,-1}
const	string	$const16	"twrap"		%read{52,52} %write{2147483647,-1}
const	string	$const17	"colorspace"		%read{52,52} %write{2147483647,-1}
const	string	$const18	"NG_rec709_display_to_lin_rec709_color3"		%read{54,54} %write{2147483647,-1}
temp	color	$tmp24	%read{57,57} %write{56,56}
const	float	$const19	2.4		%read{58,58} %write{2147483647,-1}
const	string	$const20	"NG_standard_surface_surfaceshader_100"		%read{64,64} %write{2147483647,-1}
const	string	$const21	"mx_roughness_anisotropy"		%read{68,442} %write{2147483647,-1}
temp	float	$tmp25	%read{71,71} %write{69,69}
const	float	$const22	1e-08		%read{72,446} %write{2147483647,-1}
const	string	$const23	"clamp"		%read{70,577} %write{2147483647,-1}
temp	float	$tmp26	%read{72,72} %write{71,71}
temp	int	$tmp27	%read{74,74} %write{73,73}
temp	float	$tmp28	%read{78,78} %write{77,77}
const	float	$const24	0.98		%read{76,450} %write{2147483647,-1}
temp	float	$tmp29	%read{77,77} %write{76,76}
temp	float	$tmp30	%read{79,79} %write{78,78}
temp	float	$tmp31	%read{81,81} %write{80,80}
const	float	$const25	360		%read{87,92} %write{2147483647,-1}
temp	color	$tmp32	%read{97,97} %write{96,96}
temp	float	$tmp33	%read{102,102} %write{101,101}
temp	float	$tmp34	%read{105,105} %write{104,104}
temp	color	$tmp35	%read{108,108} %write{107,107}
const	color	$const26	1 1 1		%read{109,478} %write{2147483647,-1}
const	color	$const27	0.272229 0.674082 0.053689		%read{118,118} %write{2147483647,-1}
const	string	$const28	"mx_luminance_color3"		%read{117,117} %write{2147483647,-1}
temp	float	$tmp37	%read{119,119} %write{118,118}
const	vector	$const29	0 0 0		%read{120,266} %write{2147483647,-1}
const	string	$const30	"mx_rotate_vector3"		%read{121,267} %write{2147483647,-1}
const	string	$const31	"radians"		%read{122,268} %write{2147483647,-1}
const	float	$const32	3.1415927		%read{123,269} %write{2147483647,-1}
const	float	$const33	180		%read{123,269} %write{2147483647,-1}
temp	float	$tmp38	%read{124,124} %write{123,123}
const	string	$const34	"rotationMatrix"		%read{125,271} %write{2147483647,-1}
temp	float	$tmp39	%read{131,131} %write{130,130}
temp	float	$tmp40	%read{133,133} %write{131,131}
temp	float	$tmp41	%read{133,133} %write{132,132}
temp	float	$tmp42	%read{134,134} %write{133,133}
temp	float	$tmp43	%read{187,187} %write{134,134}
temp	float	$tmp44	%read{136,136} %write{135,135}
temp	float	$tmp45	%read{138,138} %write{136,136}
const	int	$const35	1		%read{137,374} %write{2147483647,-1}
temp	float	$tmp46	%read{138,138} %write{137,137}
temp	float	$tmp47	%read{141,141} %write{138,138}
temp	float	$tmp48	%read{140,140} %write{139,139}
temp	float	$tmp49	%read{141,141} %write{140,140}
temp	float	$tmp50	%read{187,187} %write{141,141}
temp	float	$tmp51	%read{143,143} %write{142,142}
temp	float	$tmp52	%read{145,145} %write{143,143}
temp	float	$tmp53	%read{145,145} %write{144,144}
temp	float	$tmp54	%read{148,148} %write{145,145}
temp	float	$tmp55	%read{147,147} %write{146,146}
temp	float	$tmp56	%read{148,148} %write{147,147}
temp	float	$tmp57	%read{187,187} %write{148,148}
temp	float	$tmp58	%read{150,150} %write{149,149}
temp	float	$tmp59	%read{152,152} %write{150,150}
temp	float	$tmp60	%read{152,152} %write{151,151}
temp	float	$tmp61	%read{155,155} %write{152,152}
temp	float	$tmp62	%read{154,154} %write{153,153}
temp	float	$tmp63	%read{155,155} %write{154,154}
temp	float	$tmp64	%read{187,187} %write{155,155}
temp	float	$tmp65	%read{157,157} %write{156,156}
temp	float	$tmp66	%read{159,159} %write{157,157}
temp	float	$tmp67	%read{159,159} %write{158,158}
temp	float	$tmp68	%read{160,160} %write{159,159}
temp	float	$tmp69	%read{187,187} %write{160,160}
temp	float	$tmp70	%read{162,162} %write{161,161}
temp	float	$tmp71	%read{164,164} %write{162,162}
temp	float	$tmp72	%read{164,164} %write{163,163}
temp	float	$tmp73	%read{167,167} %write{164,164}
temp	float	$tmp74	%read{166,166} %write{165,165}
temp	float	$tmp75	%read{167,167} %write{166,166}
temp	float	$tmp76	%read{187,187} %write{167,167}
temp	float	$tmp77	%read{169,169} %write{168,168}
temp	float	$tmp78	%read{171,171} %write{169,169}
temp	float	$tmp79	%read{171,171} %write{170,170}
temp	float	$tmp80	%read{174,174} %write{171,171}
temp	float	$tmp81	%read{173,173} %write{172,172}
temp	float	$tmp82	%read{174,174} %write{173,173}
temp	float	$tmp83	%read{187,187} %write{174,174}
temp	float	$tmp84	%read{176,176} %write{175,175}
temp	float	$tmp85	%read{178,178} %write{176,176}
temp	float	$tmp86	%read{178,178} %write{177,177}
temp	float	$tmp87	%read{181,181} %write{178,178}
temp	float	$tmp88	%read{180,180} %write{179,179}
temp	float	$tmp89	%read{181,181} %write{180,180}
temp	float	$tmp90	%read{187,187} %write{181,181}
temp	float	$tmp91	%read{183,183} %write{182,182}
temp	float	$tmp92	%read{185,185} %write{183,183}
temp	float	$tmp93	%read{185,185} %write{184,184}
temp	float	$tmp94	%read{186,186} %write{185,185}
temp	float	$tmp95	%read{187,187} %write{186,186}
temp	float	$tmp96.x	%read{194,227} %write{188,188}
temp	float	$tmp96.y	%read{196,229} %write{189,189}
temp	float	$tmp96.z	%read{199,232} %write{190,190}
temp	float	$tmp96.w	%read{202,235} %write{191,191}
temp	float	$tmp97	%read{194,194} %write{193,193}
temp	float	$tmp98	%read{197,197} %write{194,194}
temp	float	$tmp99	%read{196,196} %write{195,195}
temp	float	$tmp100	%read{197,197} %write{196,196}
temp	float	$tmp101	%read{200,200} %write{197,197}
temp	float	$tmp102	%read{199,199} %write{198,198}
temp	float	$tmp103	%read{200,200} %write{199,199}
temp	float	$tmp104	%read{203,203} %write{200,200}
const	int	$const36	3		%read{201,380} %write{2147483647,-1}
temp	float	$tmp105	%read{202,202} %write{201,201}
temp	float	$tmp106	%read{203,203} %write{202,202}
temp	float	$tmp107	%read{205,205} %write{204,204}
temp	float	$tmp108	%read{208,208} %write{205,205}
temp	float	$tmp109	%read{207,207} %write{206,206}
temp	float	$tmp110	%read{208,208} %write{207,207}
temp	float	$tmp111	%read{211,211} %write{208,208}
temp	float	$tmp112	%read{210,210} %write{209,209}
temp	float	$tmp113	%read{211,211} %write{210,210}
temp	float	$tmp114	%read{214,214} %write{211,211}
temp	float	$tmp115	%read{213,213} %write{212,212}
temp	float	$tmp116	%read{214,214} %write{213,213}
temp	float	$tmp117	%read{216,216} %write{215,215}
temp	float	$tmp118	%read{219,219} %write{216,216}
temp	float	$tmp119	%read{218,218} %write{217,217}
temp	float	$tmp120	%read{219,219} %write{218,218}
temp	float	$tmp121	%read{222,222} %write{219,219}
temp	float	$tmp122	%read{221,221} %write{220,220}
temp	float	$tmp123	%read{222,222} %write{221,221}
temp	float	$tmp124	%read{225,225} %write{222,222}
temp	float	$tmp125	%read{224,224} %write{223,223}
temp	float	$tmp126	%read{225,225} %write{224,224}
temp	float	$tmp127	%read{227,227} %write{226,226}
temp	float	$tmp128	%read{230,230} %write{227,227}
temp	float	$tmp129	%read{229,229} %write{228,228}
temp	float	$tmp130	%read{230,230} %write{229,229}
temp	float	$tmp131	%read{233,233} %write{230,230}
temp	float	$tmp132	%read{232,232} %write{231,231}
temp	float	$tmp133	%read{233,233} %write{232,232}
temp	float	$tmp134	%read{236,236} %write{233,233}
temp	float	$tmp135	%read{235,235} %write{234,234}
temp	float	$tmp136	%read{236,236} %write{235,235}
const	string	$const37	"mx_artistic_ior"		%read{240,240} %write{2147483647,-1}
temp	color	$tmp137	%read{245,245} %write{241,241}
const	float	$const38	0.99		%read{242,242} %write{2147483647,-1}
temp	color	$tmp138	%read{244,244} %write{242,242}
temp	color	$tmp139	%read{245,245} %write{244,244}
temp	color	$tmp140	%read{249,249} %write{247,247}
temp	color	$tmp141	%read{249,249} %write{248,248}
temp	color	$tmp142	%read{252,252} %write{250,250}
temp	color	$tmp143	%read{252,252} %write{251,251}
temp	color	$tmp144	%read{257,257} %write{256,256}
temp	color	$tmp145	%read{259,259} %write{257,257}
temp	color	$tmp146	%read{259,259} %write{258,258}
temp	color	$tmp147	%read{261,261} %write{259,259}
temp	color	$tmp148	%read{261,261} %write{260,260}
temp	color	$tmp149	%read{263,263} %write{262,262}
temp	float	$tmp150	%read{270,270} %write{269,269}
temp	float	$tmp151	%read{277,277} %write{276,276}
temp	float	$tmp152	%read{279,279} %write{277,277}
temp	float	$tmp153	%read{279,279} %write{278,278}
temp	float	$tmp154	%read{280,280} %write{279,279}
temp	float	$tmp155	%read{333,333} %write{280,280}
temp	float	$tmp156	%read{282,282} %write{281,281}
temp	float	$tmp157	%read{284,284} %write{282,282}
temp	float	$tmp158	%read{284,284} %write{283,283}
temp	float	$tmp159	%read{287,287} %write{284,284}
temp	float	$tmp160	%read{286,286} %write{285,285}
temp	float	$tmp161	%read{287,287} %write{286,286}
temp	float	$tmp162	%read{333,333} %write{287,287}
temp	float	$tmp163	%read{289,289} %write{288,288}
temp	float	$tmp164	%read{291,291} %write{289,289}
temp	float	$tmp165	%read{291,291} %write{290,290}
temp	float	$tmp166	%read{294,294} %write{291,291}
temp	float	$tmp167	%read{293,293} %write{292,292}
temp	float	$tmp168	%read{294,294} %write{293,293}
temp	float	$tmp169	%read{333,333} %write{294,294}
temp	float	$tmp170	%read{296,296} %write{295,295}
temp	float	$tmp171	%read{298,298} %write{296,296}
temp	float	$tmp172	%read{298,298} %write{297,297}
temp	float	$tmp173	%read{301,301} %write{298,298}
temp	float	$tmp174	%read{300,300} %write{299,299}
temp	float	$tmp175	%read{301,301} %write{300,300}
temp	float	$tmp176	%read{333,333} %write{301,301}
temp	float	$tmp177	%read{303,303} %write{302,302}
temp	float	$tmp178	%read{305,305} %write{303,303}
temp	float	$tmp179	%read{305,305} %write{304,304}
temp	float	$tmp180	%read{306,306} %write{305,305}
temp	float	$tmp181	%read{333,333} %write{306,306}
temp	float	$tmp182	%read{308,308} %write{307,307}
temp	float	$tmp183	%read{310,310} %write{308,308}
temp	float	$tmp184	%read{310,310} %write{309,309}
temp	float	$tmp185	%read{313,313} %write{310,310}
temp	float	$tmp186	%read{312,312} %write{311,311}
temp	float	$tmp187	%read{313,313} %write{312,312}
temp	float	$tmp188	%read{333,333} %write{313,313}
temp	float	$tmp189	%read{315,315} %write{314,314}
temp	float	$tmp190	%read{317,317} %write{315,315}
temp	float	$tmp191	%read{317,317} %write{316,316}
temp	float	$tmp192	%read{320,320} %write{317,317}
temp	float	$tmp193	%read{319,319} %write{318,318}
temp	float	$tmp194	%read{320,320} %write{319,319}
temp	float	$tmp195	%read{333,333} %write{320,320}
temp	float	$tmp196	%read{322,322} %write{321,321}
temp	float	$tmp197	%read{324,324} %write{322,322}
temp	float	$tmp198	%read{324,324} %write{323,323}
temp	float	$tmp199	%read{327,327} %write{324,324}
temp	float	$tmp200	%read{326,326} %write{325,325}
temp	float	$tmp201	%read{327,327} %write{326,326}
temp	float	$tmp202	%read{333,333} %write{327,327}
temp	float	$tmp203	%read{329,329} %write{328,328}
temp	float	$tmp204	%read{331,331} %write{329,329}
temp	float	$tmp205	%read{331,331} %write{330,330}
temp	float	$tmp206	%read{332,332} %write{331,331}
temp	float	$tmp207	%read{333,333} %write{332,332}
temp	float	$tmp208.x	%read{340,373} %write{334,334}
temp	float	$tmp208.y	%read{342,375} %write{335,335}
temp	float	$tmp208.z	%read{345,378} %write{336,336}
temp	float	$tmp208.w	%read{348,381} %write{337,337}
temp	float	$tmp209	%read{340,340} %write{339,339}
temp	float	$tmp210	%read{343,343} %write{340,340}
temp	float	$tmp211	%read{342,342} %write{341,341}
temp	float	$tmp212	%read{343,343} %write{342,342}
temp	float	$tmp213	%read{346,346} %write{343,343}
temp	float	$tmp214	%read{345,345} %write{344,344}
temp	float	$tmp215	%read{346,346} %write{345,345}
temp	float	$tmp216	%read{349,349} %write{346,346}
temp	float	$tmp217	%read{348,348} %write{347,347}
temp	float	$tmp218	%read{349,349} %write{348,348}
temp	float	$tmp219	%read{351,351} %write{350,350}
temp	float	$tmp220	%read{354,354} %write{351,351}
temp	float	$tmp221	%read{353,353} %write{352,352}
temp	float	$tmp222	%read{354,354} %write{353,353}
temp	float	$tmp223	%read{357,357} %write{354,354}
temp	float	$tmp224	%read{356,356} %write{355,355}
temp	float	$tmp225	%read{357,357} %write{356,356}
temp	float	$tmp226	%read{360,360} %write{357,357}
temp	float	$tmp227	%read{359,359} %write{358,358}
temp	float	$tmp228	%read{360,360} %write{359,359}
temp	float	$tmp229	%read{362,362} %write{361,361}
temp	float	$tmp230	%read{365,365} %write{362,362}
temp	float	$tmp231	%read{364,364} %write{363,363}
temp	float	$tmp232	%read{365,365} %write{364,364}
temp	float	$tmp233	%read{368,368} %write{365,365}
temp	float	$tmp234	%read{367,367} %write{366,366}
temp	float	$tmp235	%read{368,368} %write{367,367}
temp	float	$tmp236	%read{371,371} %write{368,368}
temp	float	$tmp237	%read{370,370} %write{369,369}
temp	float	$tmp238	%read{371,371} %write{370,370}
temp	float	$tmp239	%read{373,373} %write{372,372}
temp	float	$tmp240	%read{376,376} %write{373,373}
temp	float	$tmp241	%read{375,375} %write{374,374}
temp	float	$tmp242	%read{376,376} %write{375,375}
temp	float	$tmp243	%read{379,379} %write{376,376}
temp	float	$tmp244	%read{378,378} %write{377,377}
temp	float	$tmp245	%read{379,379} %write{378,378}
temp	float	$tmp246	%read{382,382} %write{379,379}
temp	float	$tmp247	%read{381,381} %write{380,380}
temp	float	$tmp248	%read{382,382} %write{381,381}
temp	float	$tmp249	%read{388,388} %write{387,387}
const	string	$const39	"mx_extract"		%read{392,392} %write{2147483647,-1}
temp	int	$tmp250	%read{406,406} %write{404,404}
const	string	$const40	"mx_ternary"		%read{405,434} %write{2147483647,-1}
temp	float	$tmp251	%read{416,416} %write{414,414}
temp	float	$tmp252	%read{417,417} %write{416,416}
temp	int	$tmp253	%read{419,419} %write{418,418}
temp	float	$tmp254	%read{423,423} %write{422,422}
temp	float	$tmp255	%read{422,422} %write{421,421}
temp	float	$tmp256	%read{424,424} %write{423,423}
temp	float	$tmp257	%read{426,426} %write{425,425}
temp	int	$tmp258	%read{435,435} %write{433,433}
temp	float	$tmp259	%read{445,445} %write{443,443}
temp	float	$tmp260	%read{446,446} %write{445,445}
temp	int	$tmp261	%read{448,448} %write{447,447}
temp	float	$tmp262	%read{452,452} %write{451,451}
temp	float	$tmp263	%read{451,451} %write{450,450}
temp	float	$tmp264	%read{453,453} %write{452,452}
temp	float	$tmp265	%read{455,455} %write{454,454}
const	string	$const41	"NG_convert_float_color3"		%read{466,466} %write{2147483647,-1}
const	float	$const42	1.5		%read{479,507} %write{2147483647,-1}
const	string	$const43	"ggx"		%read{479,507} %write{2147483647,-1}
const	string	$const44	"R"		%read{471,503} %write{2147483647,-1}
const	string	$const45	"mx_dielectric_bsdf"		%read{470,498} %write{2147483647,-1}
const	string	$const46	"T"		%read{471,503} %write{2147483647,-1}
temp	int	$tmp267	%read{472,472} %write{471,471}
temp	int	$tmp268	%read{476,476} %write{475,475}
temp	closure color	$tmp269	%read{480,480} %write{479,479}
const	string	$const47	"thinfilm_thickness"		%read{479,507} %write{2147483647,-1}
const	string	$const48	"thinfilm_ior"		%read{479,507} %write{2147483647,-1}
const	string	$const49	"dielectric_bsdf"		%read{479,507} %write{2147483647,-1}
temp	closure color	$tmp270	%read{484,484} %write{483,483}
const	string	$const50	"conductor_bsdf"		%read{483,483} %write{2147483647,-1}
temp	int	$tmp271	%read{488,488} %write{487,487}
temp	int	$tmp272	%read{492,492} %write{491,491}
temp	closure color	$tmp273	%read{496,496} %write{495,495}
temp	int	$tmp274	%read{500,500} %write{499,499}
temp	int	$tmp275	%read{504,504} %write{503,503}
temp	closure color	$tmp276	%read{508,508} %write{507,507}
temp	closure color	$tmp277	%read{510,510} %write{509,509}
const	string	$const51	"sheen_bsdf"		%read{509,509} %write{2147483647,-1}
temp	closure color	$tmp278	%read{513,513} %write{512,512}
const	string	$const52	"translucent_bsdf"		%read{512,512} %write{2147483647,-1}
const	string	$const53	"mx_subsurface_bsdf"		%read{515,515} %write{2147483647,-1}
temp	color	$tmp279	%read{517,517} %write{516,516}
const	string	$const54	"subsurface_bssrdf"		%read{517,517} %write{2147483647,-1}
const	string	$const55	"mix"		%read{518,559} %write{2147483647,-1}
temp	float	$tmp280	%read{520,520} %write{519,519}
temp	closure color	$tmp281	%read{522,522} %write{520,520}
temp	closure color	$tmp282	%read{522,522} %write{521,521}
temp	closure color	$tmp283	%read{524,524} %write{523,523}
const	string	$const56	"oren_nayar_diffuse_bsdf"		%read{523,523} %write{2147483647,-1}
temp	float	$tmp284	%read{527,527} %write{526,526}
temp	closure color	$tmp285	%read{529,529} %write{527,527}
temp	closure color	$tmp286	%read{529,529} %write{528,528}
const	string	$const57	"layer"		%read{530,543} %write{2147483647,-1}
temp	float	$tmp287	%read{533,533} %write{532,532}
temp	closure color	$tmp288	%read{535,535} %write{533,533}
temp	closure color	$tmp289	%read{535,535} %write{534,534}
temp	float	$tmp290	%read{539,539} %write{538,538}
temp	closure color	$tmp291	%read{541,541} %write{539,539}
temp	closure color	$tmp292	%read{541,541} %write{540,540}
const	string	$const58	"uniform_edf"		%read{544,544} %write{2147483647,-1}
const	float	$const59	5		%read{556,556} %write{2147483647,-1}
const	string	$const60	"mx_generalized_schlick_edf"		%read{547,547} %write{2147483647,-1}
temp	float	$tmp294	%read{550,550} %write{549,549}
temp	vector	$tmp295	%read{549,549} %write{548,548}
const	string	$const61	"mx_fresnel_schlick"		%read{551,551} %write{2147483647,-1}
temp	float	$tmp296	%read{554,554} %write{552,552}
temp	float	$tmp297	%read{555,555} %write{554,554}
temp	float	$tmp298	%read{557,557} %write{556,556}
temp	float	$tmp299	%read{561,561} %write{560,560}
temp	closure color	$tmp300	%read{563,563} %write{561,561}
temp	closure color	$tmp301	%read{563,563} %write{562,562}
const	string	$const62	"mx_surface"		%read{567,567} %write{2147483647,-1}
temp	float	$tmp302	%read{572,572} %write{571,571}
temp	float	$tmp303	%read{579,579} %write{578,578}
temp	closure color	$tmp304	%read{581,581} %write{580,580}
temp	closure color	$tmp305	%read{585,585} %write{581,581}
temp	closure color	$tmp306	%read{584,584} %write{582,582}
const	string	$const63	"transparent"		%read{582,582} %write{2147483647,-1}
temp	float	$tmp307	%read{584,584} %write{583,583}
temp	closure color	$tmp308	%read{585,585} %write{584,584}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:749
#     textureresource image_gamma24_file_ = {image_gamma24_file, image_gamma24_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{749} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:750
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		image_gamma24_file_.filename image_gamma24_file 	%line{750} %argrw{"wr"}
	assign		image_gamma24_file_.colorspace image_gamma24_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:751
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{751} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:752
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{752} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:753
#     color image_gamma24_out1 = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{753} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:754
#     mx_image_color3(image_gamma24_file_, image_gamma24_layer, image_gamma24_default, geomprop_UV0_out1, image_gamma24_uaddressmode, image_gamma24_vaddressmode, image_gamma24_filtertype, image_gamma24_framerange, image_gamma24_frameoffset, image_gamma24_frameendaction, image_gamma24_out1);
	assign		image_gamma24_out1 $const6 	%line{754} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:755
#     color image_gamma24_out_cm_out = color(0.0);
	functioncall	$const7 53 	%line{755} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp5 image_gamma24_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 17 30 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp7 image_gamma24_uaddressmode $const9 	%line{26} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	if		$tmp8 28 28 	%argrw{"r"}
	lt		$tmp9 geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const1 	%argrw{"wrr"}
	if		$tmp10 23 26 	%argrw{"r"}
	gt		$tmp11 geomprop_UV0_out1.x $const10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp10 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp13 	%argrw{"wr"}
	neq		$tmp14 $tmp8 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp6 $tmp14 	%line{25} %argrw{"wr"}
	neq		$tmp15 $tmp6 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp15 32 45 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:27
#     {
	eq		$tmp16 image_gamma24_vaddressmode $const9 	%line{27} %argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 43 43 	%argrw{"r"}
	lt		$tmp18 geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	if		$tmp19 38 41 	%argrw{"r"}
	gt		$tmp20 geomprop_UV0_out1.y $const10 	%argrw{"wrr"}
	neq		$tmp21 $tmp20 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp21 	%argrw{"wr"}
	neq		$tmp22 $tmp19 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp17 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp15 $tmp23 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp15 48 48 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:29
#         return;
	assign		image_gamma24_out1 image_gamma24_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor image_gamma24_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const11 52 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:20
# }
	assign		___670_st.x geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		image_gamma24_out1 image_gamma24_file_.filename ___670_st.x ___670_st.y $const12 image_gamma24_layer $const13 image_gamma24_filtertype $const14 ___670_missingColor $const15 image_gamma24_uaddressmode $const16 image_gamma24_vaddressmode $const17 image_gamma24_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:756
#     NG_rec709_display_to_lin_rec709_color3(image_gamma24_out1, image_gamma24_out_cm_out);
	assign		image_gamma24_out_cm_out $const6 	%line{756} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:757
#     surfaceshader image_gamma24_standard_surface4_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const18 61 	%line{757} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:44
#     color max_out = max(in, max_in2_tmp);
	assign		___672_max_in2_tmp $const5 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:45
#     float gamma_in2_tmp = 2.400000;
	assign		$tmp24 ___672_max_in2_tmp 	%line{45} %argrw{"wr"}
	max		___672_max_out image_gamma24_out1 $tmp24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:46
#     color gamma_out = pow(max_out, gamma_in2_tmp);
	assign		___672_gamma_in2_tmp $const19 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:47
#     out = gamma_out;
	pow		___672_gamma_out ___672_max_out ___672_gamma_in2_tmp 	%line{47} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:48
# }
	assign		image_gamma24_out_cm_out ___672_gamma_out 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:758
#     NG_standard_surface_surfaceshader_100(image_gamma24_standard_surface4_base, image_gamma24_out_cm_out, image_gamma24_standard_surface4_diffuse_roughness, image_gamma24_standard_surface4_metalness, image_gamma24_standard_surface4_specular, image_gamma24_standard_surface4_specular_color, image_gamma24_standard_surface4_specular_roughness, image_gamma24_standard_surface4_specular_IOR, image_gamma24_standard_surface4_specular_anisotropy, image_gamma24_standard_surface4_specular_rotation, image_gamma24_standard_surface4_transmission, image_gamma24_standard_surface4_transmission_color, image_gamma24_standard_surface4_transmission_depth, image_gamma24_standard_surface4_transmission_scatter, image_gamma24_standard_surface4_transmission_scatter_anisotropy, image_gamma24_standard_surface4_transmission_dispersion, image_gamma24_standard_surface4_transmission_extra_roughness, image_gamma24_standard_surface4_subsurface, image_gamma24_standard_surface4_subsurface_color, image_gamma24_standard_surface4_subsurface_radius, image_gamma24_standard_surface4_subsurface_scale, image_gamma24_standard_surface4_subsurface_anisotropy, image_gamma24_standard_surface4_sheen, image_gamma24_standard_surface4_sheen_color, image_gamma24_standard_surface4_sheen_roughness, image_gamma24_standard_surface4_coat, image_gamma24_standard_surface4_coat_color, image_gamma24_standard_surface4_coat_roughness, image_gamma24_standard_surface4_coat_anisotropy, image_gamma24_standard_surface4_coat_rotation, image_gamma24_standard_surface4_coat_IOR, geomprop_Nworld_out1, image_gamma24_standard_surface4_coat_affect_color, image_gamma24_standard_surface4_coat_affect_roughness, image_gamma24_standard_surface4_thin_film_thickness, image_gamma24_standard_surface4_thin_film_IOR, image_gamma24_standard_surface4_emission, image_gamma24_standard_surface4_emission_color, image_gamma24_standard_surface4_opacity, image_gamma24_standard_surface4_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, image_gamma24_standard_surface4_out);
	assign		image_gamma24_standard_surface4_out.bsdf null_closure 	%line{758} %argrw{"wr"}
	assign		image_gamma24_standard_surface4_out.edf null_closure 	%argrw{"wr"}
	assign		image_gamma24_standard_surface4_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:759
#     {
	functioncall	$const20 577 	%line{759} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:228
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___697_null_closure $const1 	%line{228} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:229
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___697_coat_roughness_vector_out.x $const5 	%line{229} %argrw{"wr"}
	assign		___697_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:230
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const21 87 	%line{230} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:53
#     if (anisotropy > 0.0)
	mul		$tmp25 image_gamma24_standard_surface4_coat_roughness image_gamma24_standard_surface4_coat_roughness 	%line{53} %argrw{"wrr"}
	functioncall	$const23 73 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp26 $tmp25 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp26 $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:54
#     {
	gt		$tmp27 image_gamma24_standard_surface4_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{54} %argrw{"wrr"}
	if		$tmp27 85 87 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 78 	%line{56} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp29 image_gamma24_standard_surface4_coat_anisotropy $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp28 $tmp29 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp30 $const10 $tmp28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{56} %argrw{"wrr"}
	sqrt		___674_aspect $tmp30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:57
#         result.y = roughness_sqr * aspect;
	div		$tmp31 ___673_roughness_sqr ___674_aspect 	%line{57} %argrw{"wrr"}
	min		___697_coat_roughness_vector_out.x $tmp31 $const10 	%argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:58
#     }
	mul		___697_coat_roughness_vector_out.y ___673_roughness_sqr ___674_aspect 	%line{58} %argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.y ___697_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:62
#         result.y = roughness_sqr;
	assign		___697_coat_roughness_vector_out.x ___673_roughness_sqr 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:63
#     }
	assign		___697_coat_roughness_vector_out.y ___673_roughness_sqr 	%line{63} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:231
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___697_coat_tangent_rotate_degree_in2_tmp $const25 	%line{231} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:232
#     color metal_reflectivity_out = base_color * base;
	mul		___697_coat_tangent_rotate_degree_out image_gamma24_standard_surface4_coat_rotation ___697_coat_tangent_rotate_degree_in2_tmp 	%line{232} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:233
#     color metal_edgecolor_out = specular_color * specular;
	mul		___697_metal_reflectivity_out image_gamma24_out_cm_out image_gamma24_standard_surface4_base 	%line{233} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:234
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___697_metal_edgecolor_out image_gamma24_standard_surface4_specular_color image_gamma24_standard_surface4_specular 	%line{234} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:235
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___697_coat_affect_roughness_multiply1_out image_gamma24_standard_surface4_coat_affect_roughness image_gamma24_standard_surface4_coat 	%line{235} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:236
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___697_tangent_rotate_degree_in2_tmp $const25 	%line{236} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:237
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___697_tangent_rotate_degree_out image_gamma24_standard_surface4_specular_rotation ___697_tangent_rotate_degree_in2_tmp 	%line{237} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:238
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___697_transmission_roughness_add_out image_gamma24_standard_surface4_specular_roughness image_gamma24_standard_surface4_transmission_extra_roughness 	%line{238} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:239
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___697_subsurface_color_nonnegative_in2_tmp $const5 	%line{239} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:240
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp32 ___697_subsurface_color_nonnegative_in2_tmp 	%line{240} %argrw{"wr"}
	max		___697_subsurface_color_nonnegative_out image_gamma24_standard_surface4_subsurface_color $tmp32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:241
#     float coat_clamped_high_tmp = 1.000000;
	assign		___697_coat_clamped_low_tmp $const5 	%line{241} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:242
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___697_coat_clamped_high_tmp $const10 	%line{242} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:243
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const23 103 	%line{243} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp33 image_gamma24_standard_surface4_coat ___697_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_coat_clamped_out $tmp33 ___697_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:244
#     float subsurface_selector_out = float(thin_walled);
	mul		___697_subsurface_radius_scaled_out image_gamma24_standard_surface4_subsurface_radius image_gamma24_standard_surface4_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{244} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:245
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp34 image_gamma24_standard_surface4_thin_walled 	%line{245} %argrw{"wr"}
	assign		___697_subsurface_selector_out $tmp34 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:246
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___697_base_color_nonnegative_in2_tmp $const5 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:247
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp35 ___697_base_color_nonnegative_in2_tmp 	%line{247} %argrw{"wr"}
	max		___697_base_color_nonnegative_out image_gamma24_out_cm_out $tmp35 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:248
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___697_coat_attenuation_bg_tmp $const26 	%line{248} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:249
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___697_coat_attenuation_out ___697_coat_attenuation_bg_tmp image_gamma24_standard_surface4_coat_color image_gamma24_standard_surface4_coat 	%line{249} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:250
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___697_one_minus_coat_ior_in1_tmp $const10 	%line{250} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:251
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___697_one_minus_coat_ior_out ___697_one_minus_coat_ior_in1_tmp image_gamma24_standard_surface4_coat_IOR 	%line{251} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:252
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___697_one_plus_coat_ior_in1_tmp $const10 	%line{252} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:253
#     color emission_weight_out = emission_color * emission1;
	add		___697_one_plus_coat_ior_out ___697_one_plus_coat_ior_in1_tmp image_gamma24_standard_surface4_coat_IOR 	%line{253} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:254
#     color opacity_luminance_out = color(0.0);
	mul		___697_emission_weight_out image_gamma24_standard_surface4_emission_color image_gamma24_standard_surface4_emission 	%line{254} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:255
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___697_opacity_luminance_out $const6 	%line{255} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:256
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const28 120 	%line{256} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:69
# }
	dot		$tmp37 image_gamma24_standard_surface4_opacity $const27 	%line{69} %argrw{"wrr"}
	assign		___697_opacity_luminance_out $tmp37 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:257
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___697_coat_tangent_rotate_out $const29 	%line{257} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:258
#     color artistic_ior_ior = color(0.0);
	functioncall	$const30 238 	%line{258} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:87
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const31 125 	%line{87} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp38 $const32 $const33 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___678_rotationRadians ___697_coat_tangent_rotate_degree_out $tmp38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:88
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const34 188 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{88} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:74
#     float s = sin(angle);
	normalize	___677_nAxis geomprop_Nworld_out1 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:75
#     float c = cos(angle);
	sin		___677_s ___678_rotationRadians 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:76
#     float oc = 1.0 - c;
	cos		___677_c ___678_rotationRadians 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:77
# 
	sub		___677_oc $const10 ___677_c 	%line{77} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:79
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp39 ___677_nAxis $const1 	%line{79} %argrw{"wrr"}
	mul		$tmp40 ___677_oc $tmp39 	%argrw{"wrr"}
	compref		$tmp41 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
	add		$tmp43 $tmp42 ___677_c 	%argrw{"wrr"}
	compref		$tmp44 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp45 ___677_oc $tmp44 	%argrw{"wrr"}
	compref		$tmp46 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp47 $tmp45 $tmp46 	%argrw{"wrr"}
	compref		$tmp48 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp49 $tmp48 ___677_s 	%argrw{"wrr"}
	sub		$tmp50 $tmp47 $tmp49 	%argrw{"wrr"}
	compref		$tmp51 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp52 ___677_oc $tmp51 	%argrw{"wrr"}
	compref		$tmp53 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp54 $tmp52 $tmp53 	%argrw{"wrr"}
	compref		$tmp55 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp56 $tmp55 ___677_s 	%argrw{"wrr"}
	add		$tmp57 $tmp54 $tmp56 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:80
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp58 ___677_nAxis $const1 	%line{80} %argrw{"wrr"}
	mul		$tmp59 ___677_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp63 $tmp62 ___677_s 	%argrw{"wrr"}
	add		$tmp64 $tmp61 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp66 ___677_oc $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	add		$tmp69 $tmp68 ___677_c 	%argrw{"wrr"}
	compref		$tmp70 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp71 ___677_oc $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp73 $tmp71 $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp75 $tmp74 ___677_s 	%argrw{"wrr"}
	sub		$tmp76 $tmp73 $tmp75 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:81
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp77 ___677_nAxis $const4 	%line{81} %argrw{"wrr"}
	mul		$tmp78 ___677_oc $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp82 $tmp81 ___677_s 	%argrw{"wrr"}
	sub		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp85 ___677_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	compref		$tmp88 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp89 $tmp88 ___677_s 	%argrw{"wrr"}
	add		$tmp90 $tmp87 $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp92 ___677_oc $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp94 $tmp92 $tmp93 	%argrw{"wrr"}
	add		$tmp95 $tmp94 ___677_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:79
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___678_m $tmp43 $tmp50 $tmp57 $const5 $tmp64 $tmp69 $tmp76 $const5 $tmp83 $tmp90 $tmp95 $const5 $const5 $const5 $const5 $const10 	%line{79} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:89
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp96.x geomprop_Tworld_out1 $const1 	%line{89} %argrw{"wrr"}
	compref		$tmp96.y geomprop_Tworld_out1 $const35 	%argrw{"wrr"}
	compref		$tmp96.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp96.w $const10 	%argrw{"wr"}
	functioncall	$const2 237 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp97 ___678_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp98 $tmp97 $tmp96.x 	%argrw{"wrr"}
	mxcompref	$tmp99 ___678_m $const35 $const1 	%argrw{"wrrr"}
	mul		$tmp100 $tmp99 $tmp96.y 	%argrw{"wrr"}
	add		$tmp101 $tmp98 $tmp100 	%argrw{"wrr"}
	mxcompref	$tmp102 ___678_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp103 $tmp102 $tmp96.z 	%argrw{"wrr"}
	add		$tmp104 $tmp101 $tmp103 	%argrw{"wrr"}
	mxcompref	$tmp105 ___678_m $const36 $const1 	%argrw{"wrrr"}
	mul		$tmp106 $tmp105 $tmp96.w 	%argrw{"wrr"}
	add		___678_trans.x $tmp104 $tmp106 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp107 ___678_m $const1 $const35 	%line{416} %argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp96.x 	%argrw{"wrr"}
	mxcompref	$tmp109 ___678_m $const35 $const35 	%argrw{"wrrr"}
	mul		$tmp110 $tmp109 $tmp96.y 	%argrw{"wrr"}
	add		$tmp111 $tmp108 $tmp110 	%argrw{"wrr"}
	mxcompref	$tmp112 ___678_m $const4 $const35 	%argrw{"wrrr"}
	mul		$tmp113 $tmp112 $tmp96.z 	%argrw{"wrr"}
	add		$tmp114 $tmp111 $tmp113 	%argrw{"wrr"}
	mxcompref	$tmp115 ___678_m $const36 $const35 	%argrw{"wrrr"}
	mul		$tmp116 $tmp115 $tmp96.w 	%argrw{"wrr"}
	add		___678_trans.y $tmp114 $tmp116 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp117 ___678_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp118 $tmp117 $tmp96.x 	%argrw{"wrr"}
	mxcompref	$tmp119 ___678_m $const35 $const4 	%argrw{"wrrr"}
	mul		$tmp120 $tmp119 $tmp96.y 	%argrw{"wrr"}
	add		$tmp121 $tmp118 $tmp120 	%argrw{"wrr"}
	mxcompref	$tmp122 ___678_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp123 $tmp122 $tmp96.z 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	mxcompref	$tmp125 ___678_m $const36 $const4 	%argrw{"wrrr"}
	mul		$tmp126 $tmp125 $tmp96.w 	%argrw{"wrr"}
	add		___678_trans.z $tmp124 $tmp126 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp127 ___678_m $const1 $const36 	%line{418} %argrw{"wrrr"}
	mul		$tmp128 $tmp127 $tmp96.x 	%argrw{"wrr"}
	mxcompref	$tmp129 ___678_m $const35 $const36 	%argrw{"wrrr"}
	mul		$tmp130 $tmp129 $tmp96.y 	%argrw{"wrr"}
	add		$tmp131 $tmp128 $tmp130 	%argrw{"wrr"}
	mxcompref	$tmp132 ___678_m $const4 $const36 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp96.z 	%argrw{"wrr"}
	add		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	mxcompref	$tmp135 ___678_m $const36 $const36 	%argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp96.w 	%argrw{"wrr"}
	add		___678_trans.w $tmp134 $tmp136 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:90
# }
	vector		___697_coat_tangent_rotate_out ___678_trans.x ___678_trans.y ___678_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{90} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:259
#     color artistic_ior_extinction = color(0.0);
	assign		___697_artistic_ior_ior $const6 	%line{259} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:260
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___697_artistic_ior_extinction $const6 	%line{260} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:261
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const37 265 	%line{261} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:98
#     color r_sqrt = sqrt(r);
	assign		$tmp137 $const5 	%line{98} %argrw{"wr"}
	assign		$tmp138 $const38 	%argrw{"wr"}
	functioncall	$const23 246 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp139 ___697_metal_reflectivity_out $tmp138 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___679_r $tmp139 $tmp137 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:99
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___679_r_sqrt ___679_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:100
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp140 $const10 ___679_r 	%line{100} %argrw{"wrr"}
	add		$tmp141 $const10 ___679_r 	%argrw{"wrr"}
	div		___679_n_min $tmp140 $tmp141 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:101
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp142 $const10 ___679_r_sqrt 	%line{101} %argrw{"wrr"}
	sub		$tmp143 $const10 ___679_r_sqrt 	%argrw{"wrr"}
	div		___679_n_max $tmp142 $tmp143 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:102
# 
	mix		___697_artistic_ior_ior ___679_n_max ___679_n_min ___697_metal_edgecolor_out 	%line{102} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:104
#     color nm1 = ior - 1.0;
	add		___679_np1 ___697_artistic_ior_ior $const10 	%line{104} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:105
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___679_nm1 ___697_artistic_ior_ior $const10 	%line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:106
#     k2 = max(k2, 0.0);
	mul		$tmp144 ___679_np1 ___679_np1 	%line{106} %argrw{"wrr"}
	mul		$tmp145 $tmp144 ___679_r 	%argrw{"wrr"}
	mul		$tmp146 ___679_nm1 ___679_nm1 	%argrw{"wrr"}
	sub		$tmp147 $tmp145 $tmp146 	%argrw{"wrr"}
	sub		$tmp148 $const10 ___679_r 	%argrw{"wrr"}
	div		___679_k2 $tmp147 $tmp148 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:107
#     extinction = sqrt(k2);
	assign		$tmp149 $const5 	%line{107} %argrw{"wr"}
	max		___679_k2 ___679_k2 $tmp149 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:108
# }
	sqrt		___697_artistic_ior_extinction ___679_k2 	%line{108} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:262
#     vector tangent_rotate_out = vector(0.0);
	mul		___697_coat_affect_roughness_multiply2_out ___697_coat_affect_roughness_multiply1_out image_gamma24_standard_surface4_coat_roughness 	%line{262} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:263
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___697_tangent_rotate_out $const29 	%line{263} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:264
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const30 384 	%line{264} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:87
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const31 271 	%line{87} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp150 $const32 $const33 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___678_rotationRadians ___697_tangent_rotate_degree_out $tmp150 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:88
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const34 334 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{88} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:74
#     float s = sin(angle);
	normalize	___677_nAxis geomprop_Nworld_out1 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:75
#     float c = cos(angle);
	sin		___677_s ___678_rotationRadians 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:76
#     float oc = 1.0 - c;
	cos		___677_c ___678_rotationRadians 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:77
# 
	sub		___677_oc $const10 ___677_c 	%line{77} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:79
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp151 ___677_nAxis $const1 	%line{79} %argrw{"wrr"}
	mul		$tmp152 ___677_oc $tmp151 	%argrw{"wrr"}
	compref		$tmp153 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp154 $tmp152 $tmp153 	%argrw{"wrr"}
	add		$tmp155 $tmp154 ___677_c 	%argrw{"wrr"}
	compref		$tmp156 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp157 ___677_oc $tmp156 	%argrw{"wrr"}
	compref		$tmp158 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp159 $tmp157 $tmp158 	%argrw{"wrr"}
	compref		$tmp160 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp161 $tmp160 ___677_s 	%argrw{"wrr"}
	sub		$tmp162 $tmp159 $tmp161 	%argrw{"wrr"}
	compref		$tmp163 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp164 ___677_oc $tmp163 	%argrw{"wrr"}
	compref		$tmp165 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp166 $tmp164 $tmp165 	%argrw{"wrr"}
	compref		$tmp167 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp168 $tmp167 ___677_s 	%argrw{"wrr"}
	add		$tmp169 $tmp166 $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:80
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp170 ___677_nAxis $const1 	%line{80} %argrw{"wrr"}
	mul		$tmp171 ___677_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp175 $tmp174 ___677_s 	%argrw{"wrr"}
	add		$tmp176 $tmp173 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp178 ___677_oc $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp180 $tmp178 $tmp179 	%argrw{"wrr"}
	add		$tmp181 $tmp180 ___677_c 	%argrw{"wrr"}
	compref		$tmp182 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp183 ___677_oc $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp185 $tmp183 $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp187 $tmp186 ___677_s 	%argrw{"wrr"}
	sub		$tmp188 $tmp185 $tmp187 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:81
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp189 ___677_nAxis $const4 	%line{81} %argrw{"wrr"}
	mul		$tmp190 ___677_oc $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp192 $tmp190 $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___677_s 	%argrw{"wrr"}
	sub		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___677_nAxis $const35 	%argrw{"wrr"}
	mul		$tmp197 ___677_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	compref		$tmp200 ___677_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp201 $tmp200 ___677_s 	%argrw{"wrr"}
	add		$tmp202 $tmp199 $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp204 ___677_oc $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___677_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
	add		$tmp207 $tmp206 ___677_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:79
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___678_m $tmp155 $tmp162 $tmp169 $const5 $tmp176 $tmp181 $tmp188 $const5 $tmp195 $tmp202 $tmp207 $const5 $const5 $const5 $const5 $const10 	%line{79} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:89
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp208.x geomprop_Tworld_out1 $const1 	%line{89} %argrw{"wrr"}
	compref		$tmp208.y geomprop_Tworld_out1 $const35 	%argrw{"wrr"}
	compref		$tmp208.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp208.w $const10 	%argrw{"wr"}
	functioncall	$const2 383 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp209 ___678_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp210 $tmp209 $tmp208.x 	%argrw{"wrr"}
	mxcompref	$tmp211 ___678_m $const35 $const1 	%argrw{"wrrr"}
	mul		$tmp212 $tmp211 $tmp208.y 	%argrw{"wrr"}
	add		$tmp213 $tmp210 $tmp212 	%argrw{"wrr"}
	mxcompref	$tmp214 ___678_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp215 $tmp214 $tmp208.z 	%argrw{"wrr"}
	add		$tmp216 $tmp213 $tmp215 	%argrw{"wrr"}
	mxcompref	$tmp217 ___678_m $const36 $const1 	%argrw{"wrrr"}
	mul		$tmp218 $tmp217 $tmp208.w 	%argrw{"wrr"}
	add		___678_trans.x $tmp216 $tmp218 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp219 ___678_m $const1 $const35 	%line{416} %argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp208.x 	%argrw{"wrr"}
	mxcompref	$tmp221 ___678_m $const35 $const35 	%argrw{"wrrr"}
	mul		$tmp222 $tmp221 $tmp208.y 	%argrw{"wrr"}
	add		$tmp223 $tmp220 $tmp222 	%argrw{"wrr"}
	mxcompref	$tmp224 ___678_m $const4 $const35 	%argrw{"wrrr"}
	mul		$tmp225 $tmp224 $tmp208.z 	%argrw{"wrr"}
	add		$tmp226 $tmp223 $tmp225 	%argrw{"wrr"}
	mxcompref	$tmp227 ___678_m $const36 $const35 	%argrw{"wrrr"}
	mul		$tmp228 $tmp227 $tmp208.w 	%argrw{"wrr"}
	add		___678_trans.y $tmp226 $tmp228 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp229 ___678_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp230 $tmp229 $tmp208.x 	%argrw{"wrr"}
	mxcompref	$tmp231 ___678_m $const35 $const4 	%argrw{"wrrr"}
	mul		$tmp232 $tmp231 $tmp208.y 	%argrw{"wrr"}
	add		$tmp233 $tmp230 $tmp232 	%argrw{"wrr"}
	mxcompref	$tmp234 ___678_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp235 $tmp234 $tmp208.z 	%argrw{"wrr"}
	add		$tmp236 $tmp233 $tmp235 	%argrw{"wrr"}
	mxcompref	$tmp237 ___678_m $const36 $const4 	%argrw{"wrrr"}
	mul		$tmp238 $tmp237 $tmp208.w 	%argrw{"wrr"}
	add		___678_trans.z $tmp236 $tmp238 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp239 ___678_m $const1 $const36 	%line{418} %argrw{"wrrr"}
	mul		$tmp240 $tmp239 $tmp208.x 	%argrw{"wrr"}
	mxcompref	$tmp241 ___678_m $const35 $const36 	%argrw{"wrrr"}
	mul		$tmp242 $tmp241 $tmp208.y 	%argrw{"wrr"}
	add		$tmp243 $tmp240 $tmp242 	%argrw{"wrr"}
	mxcompref	$tmp244 ___678_m $const4 $const36 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp208.z 	%argrw{"wrr"}
	add		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	mxcompref	$tmp247 ___678_m $const36 $const36 	%argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp208.w 	%argrw{"wrr"}
	add		___678_trans.w $tmp246 $tmp248 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:90
# }
	vector		___697_tangent_rotate_out ___678_trans.x ___678_trans.y ___678_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{90} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:265
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___697_transmission_roughness_clamped_low_tmp $const5 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:266
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___697_transmission_roughness_clamped_high_tmp $const10 	%line{266} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:267
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const23 389 	%line{267} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp249 ___697_transmission_roughness_add_out ___697_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_transmission_roughness_clamped_out $tmp249 ___697_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:268
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___697_coat_gamma_multiply_out ___697_coat_clamped_out image_gamma24_standard_surface4_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{268} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:269
#     int opacity_luminance_float_index_tmp = 0;
	div		___697_coat_ior_to_F0_sqrt_out ___697_one_minus_coat_ior_out ___697_one_plus_coat_ior_out 	%line{269} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:270
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___697_opacity_luminance_float_index_tmp $const1 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:271
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const39 394 	%line{271} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___697_opacity_luminance_float_out ___697_opacity_luminance_out ___697_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:272
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___697_coat_tangent_rotate_normalize_out ___697_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:273
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_roughness_fg_tmp $const10 	%line{273} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:274
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___697_coat_affected_roughness_out image_gamma24_standard_surface4_specular_roughness ___697_coat_affected_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{274} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:275
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___697_tangent_rotate_normalize_out ___697_tangent_rotate_out 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:276
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_transmission_roughness_fg_tmp $const10 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:277
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___697_coat_affected_transmission_roughness_out ___697_transmission_roughness_clamped_out ___697_coat_affected_transmission_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{277} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:278
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___697_coat_gamma_in2_tmp $const10 	%line{278} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:279
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___697_coat_gamma_out ___697_coat_gamma_multiply_out ___697_coat_gamma_in2_tmp 	%line{279} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:280
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___697_coat_ior_to_F0_out ___697_coat_ior_to_F0_sqrt_out ___697_coat_ior_to_F0_sqrt_out 	%line{280} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:281
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___697_coat_tangent_value2_tmp $const5 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:282
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp250 image_gamma24_standard_surface4_coat_anisotropy ___697_coat_tangent_value2_tmp 	%line{282} %argrw{"wrr"}
	functioncall	$const40 411 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp250 409 411 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_coat_tangent_out ___697_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:283
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___697_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{283} %argrw{"wr"}
	assign		___697_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:284
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const21 432 	%line{284} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:53
#     if (anisotropy > 0.0)
	mul		$tmp251 ___697_coat_affected_roughness_out ___697_coat_affected_roughness_out 	%line{53} %argrw{"wrr"}
	functioncall	$const23 418 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp252 $tmp251 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp252 $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:54
#     {
	gt		$tmp253 image_gamma24_standard_surface4_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{54} %argrw{"wrr"}
	if		$tmp253 430 432 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 423 	%line{56} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp255 image_gamma24_standard_surface4_specular_anisotropy $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp254 $tmp255 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp256 $const10 $tmp254 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{56} %argrw{"wrr"}
	sqrt		___674_aspect $tmp256 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:57
#         result.y = roughness_sqr * aspect;
	div		$tmp257 ___673_roughness_sqr ___674_aspect 	%line{57} %argrw{"wrr"}
	min		___697_main_roughness_out.x $tmp257 $const10 	%argrw{"wrr"}
	assign		___697_main_roughness_out.x ___697_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:58
#     }
	mul		___697_main_roughness_out.y ___673_roughness_sqr ___674_aspect 	%line{58} %argrw{"wrr"}
	assign		___697_main_roughness_out.y ___697_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:62
#         result.y = roughness_sqr;
	assign		___697_main_roughness_out.x ___673_roughness_sqr 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:63
#     }
	assign		___697_main_roughness_out.y ___673_roughness_sqr 	%line{63} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:285
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___697_main_tangent_value2_tmp $const5 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:286
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp258 image_gamma24_standard_surface4_specular_anisotropy ___697_main_tangent_value2_tmp 	%line{286} %argrw{"wrr"}
	functioncall	$const40 440 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp258 438 440 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_main_tangent_out ___697_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:287
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___697_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{287} %argrw{"wr"}
	assign		___697_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:288
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const21 461 	%line{288} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:53
#     if (anisotropy > 0.0)
	mul		$tmp259 ___697_coat_affected_transmission_roughness_out ___697_coat_affected_transmission_roughness_out 	%line{53} %argrw{"wrr"}
	functioncall	$const23 447 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp260 $tmp259 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_roughness_sqr $tmp260 $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:54
#     {
	gt		$tmp261 image_gamma24_standard_surface4_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{54} %argrw{"wrr"}
	if		$tmp261 459 461 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 452 	%line{56} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp263 image_gamma24_standard_surface4_specular_anisotropy $const24 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp262 $tmp263 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:56
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp264 $const10 $tmp262 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{56} %argrw{"wrr"}
	sqrt		___674_aspect $tmp264 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:57
#         result.y = roughness_sqr * aspect;
	div		$tmp265 ___673_roughness_sqr ___674_aspect 	%line{57} %argrw{"wrr"}
	min		___697_transmission_roughness_out.x $tmp265 $const10 	%argrw{"wrr"}
	assign		___697_transmission_roughness_out.x ___697_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:58
#     }
	mul		___697_transmission_roughness_out.y ___673_roughness_sqr ___674_aspect 	%line{58} %argrw{"wrr"}
	assign		___697_transmission_roughness_out.y ___697_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:62
#         result.y = roughness_sqr;
	assign		___697_transmission_roughness_out.x ___673_roughness_sqr 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:63
#     }
	assign		___697_transmission_roughness_out.y ___673_roughness_sqr 	%line{63} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:289
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___697_coat_affected_subsurface_color_out ___697_subsurface_color_nonnegative_out ___697_coat_gamma_out 	%line{289} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:290
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___697_coat_affected_diffuse_color_out ___697_base_color_nonnegative_out ___697_coat_gamma_out 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:291
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___697_one_minus_coat_ior_to_F0_in1_tmp $const10 	%line{291} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:292
#     color emission_color0_out = color(0.0);
	sub		___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_in1_tmp ___697_coat_ior_to_F0_out 	%line{292} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:293
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___697_emission_color0_out $const6 	%line{293} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:294
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const41 469 	%line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:129
#     out = combine_out;
	color		___682_combine_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out 	%line{129} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:130
# }
	assign		___697_emission_color0_out ___682_combine_out 	%line{130} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:295
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___697_coat_bsdf_out ___697_null_closure 	%line{295} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:296
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const45 481 	%line{296} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:113
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp267 $const44 $const46 	%line{113} %argrw{"wrr"}
	if		$tmp267 474 475 	%argrw{"r"}
	assign		___680_reflection_tint $const6 	%argrw{"wr"}
	assign		___680_reflection_tint $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:114
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp268 $const44 $const44 	%line{114} %argrw{"wrr"}
	if		$tmp268 478 479 	%argrw{"r"}
	assign		___680_transmission_tint $const6 	%argrw{"wr"}
	assign		___680_transmission_tint $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:115
# }
	closure		$tmp269 $const49 geomprop_Nworld_out1 ___697_coat_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.y image_gamma24_standard_surface4_coat_IOR $const43 $const47 $const5 $const48 $const42 	%line{115} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_coat_bsdf_out $tmp269 image_gamma24_standard_surface4_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:297
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___697_metal_bsdf_weight_tmp $const10 	%line{297} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:298
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___697_metal_bsdf_distribution_tmp $const43 	%line{298} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:299
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp270 $const50 geomprop_Nworld_out1 ___697_main_tangent_out ___697_main_roughness_out.x ___697_main_roughness_out.y ___697_artistic_ior_ior ___697_artistic_ior_extinction ___697_metal_bsdf_distribution_tmp $const47 image_gamma24_standard_surface4_thin_film_thickness $const48 image_gamma24_standard_surface4_thin_film_IOR 	%line{299} %argrw{"wrrrrrrrrrrrr"}
	mul		___697_metal_bsdf_out $tmp270 ___697_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:300
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___697_specular_bsdf_out ___697_null_closure 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:301
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const45 497 	%line{301} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:113
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp271 $const44 $const46 	%line{113} %argrw{"wrr"}
	if		$tmp271 490 491 	%argrw{"r"}
	assign		___680_reflection_tint $const6 	%argrw{"wr"}
	assign		___680_reflection_tint image_gamma24_standard_surface4_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:114
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp272 $const44 $const44 	%line{114} %argrw{"wrr"}
	if		$tmp272 494 495 	%argrw{"r"}
	assign		___680_transmission_tint $const6 	%argrw{"wr"}
	assign		___680_transmission_tint image_gamma24_standard_surface4_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:115
# }
	closure		$tmp273 $const49 geomprop_Nworld_out1 ___697_main_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_main_roughness_out.x ___697_main_roughness_out.y image_gamma24_standard_surface4_specular_IOR $const43 $const47 image_gamma24_standard_surface4_thin_film_thickness $const48 image_gamma24_standard_surface4_thin_film_IOR 	%line{115} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_specular_bsdf_out $tmp273 image_gamma24_standard_surface4_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:302
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___697_transmission_bsdf_out ___697_null_closure 	%line{302} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:303
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const45 509 	%line{303} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:113
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp274 $const46 $const46 	%line{113} %argrw{"wrr"}
	if		$tmp274 502 503 	%argrw{"r"}
	assign		___680_reflection_tint $const6 	%argrw{"wr"}
	assign		___680_reflection_tint image_gamma24_standard_surface4_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:114
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp275 $const46 $const44 	%line{114} %argrw{"wrr"}
	if		$tmp275 506 507 	%argrw{"r"}
	assign		___680_transmission_tint $const6 	%argrw{"wr"}
	assign		___680_transmission_tint image_gamma24_standard_surface4_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:115
# }
	closure		$tmp276 $const49 geomprop_Nworld_out1 ___697_main_tangent_out ___680_reflection_tint ___680_transmission_tint ___697_transmission_roughness_out.x ___697_transmission_roughness_out.y image_gamma24_standard_surface4_specular_IOR $const43 $const47 $const5 $const48 $const42 	%line{115} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_transmission_bsdf_out $tmp276 $const10 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:304
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp277 $const51 geomprop_Nworld_out1 image_gamma24_standard_surface4_sheen_color image_gamma24_standard_surface4_sheen_roughness 	%line{304} %argrw{"wrrrr"}
	mul		___697_sheen_bsdf_out $tmp277 image_gamma24_standard_surface4_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:305
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___697_translucent_bsdf_weight_tmp $const10 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:306
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp278 $const52 geomprop_Nworld_out1 ___697_coat_affected_subsurface_color_out 	%line{306} %argrw{"wrrr"}
	mul		___697_translucent_bsdf_out $tmp278 ___697_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:307
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___697_subsurface_bsdf_out ___697_null_closure 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:308
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const53 518 	%line{308} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:123
# #endif
	mul		$tmp279 $const10 ___697_coat_affected_subsurface_color_out 	%line{123} %argrw{"wrr"}
	closure		___697_subsurface_bsdf_out $const54 geomprop_Nworld_out1 $tmp279 $const10 ___697_subsurface_radius_scaled_out image_gamma24_standard_surface4_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:309
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const55 523 	%line{309} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp280 $const10 ___697_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp281 ___697_subsurface_bsdf_out $tmp280 	%argrw{"wrr"}
	mul		$tmp282 ___697_translucent_bsdf_out ___697_subsurface_selector_out 	%argrw{"wrr"}
	add		___697_selected_subsurface_bsdf_out $tmp281 $tmp282 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:310
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp283 $const56 geomprop_Nworld_out1 ___697_coat_affected_diffuse_color_out image_gamma24_standard_surface4_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{310} %argrw{"wrrrr"}
	mul		___697_diffuse_bsdf_out $tmp283 image_gamma24_standard_surface4_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:311
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const55 530 	%line{311} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp284 $const10 image_gamma24_standard_surface4_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp285 ___697_diffuse_bsdf_out $tmp284 	%argrw{"wrr"}
	mul		$tmp286 ___697_selected_subsurface_bsdf_out image_gamma24_standard_surface4_subsurface 	%argrw{"wrr"}
	add		___697_subsurface_mix_out $tmp285 $tmp286 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:312
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___697_sheen_layer_out $const57 ___697_sheen_bsdf_out ___697_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{312} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:313
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const55 536 	%line{313} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp287 $const10 image_gamma24_standard_surface4_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp288 ___697_sheen_layer_out $tmp287 	%argrw{"wrr"}
	mul		$tmp289 ___697_transmission_bsdf_out image_gamma24_standard_surface4_transmission 	%argrw{"wrr"}
	add		___697_transmission_mix_out $tmp288 $tmp289 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:314
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___697_specular_layer_out $const57 ___697_specular_bsdf_out ___697_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{314} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:315
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const55 542 	%line{315} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp290 $const10 image_gamma24_standard_surface4_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp291 ___697_specular_layer_out $tmp290 	%argrw{"wrr"}
	mul		$tmp292 ___697_metal_bsdf_out image_gamma24_standard_surface4_metalness 	%argrw{"wrr"}
	add		___697_metalness_mix_out $tmp291 $tmp292 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:316
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___697_thin_film_layer_attenuated_out ___697_metalness_mix_out ___697_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:317
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___697_coat_layer_out $const57 ___697_coat_bsdf_out ___697_thin_film_layer_attenuated_out 	%line{317} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:318
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___697_emission_edf_out $const58 ___697_emission_weight_out 	%line{318} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:319
#     EDF coat_emission_edf_out = null_closure;
	mul		___697_coat_tinted_emission_edf_out ___697_emission_edf_out image_gamma24_standard_surface4_coat_color 	%line{319} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:320
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___697_coat_emission_edf_out ___697_null_closure 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:321
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const60 559 	%line{321} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:214
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp295 I 	%line{214} %argrw{"wr"}
	dot		$tmp294 N $tmp295 	%argrw{"wrr"}
	fabs		___695_NdotV $tmp294 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:215
#     result = base * f;
	functioncall	$const61 558 	%line{215} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:208
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp296 $const10 ___695_NdotV 	%line{208} %argrw{"wrr"}
	functioncall	$const23 556 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp297 $tmp296 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_x $tmp297 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:209
# }
	pow		$tmp298 ___694_x $const59 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{209} %argrw{"wrr"}
	mix		___695_f ___697_emission_color0_out $const6 $tmp298 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:216
# }
	mul		___697_coat_emission_edf_out ___697_coat_tinted_emission_edf_out ___695_f 	%line{216} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:322
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const55 564 	%line{322} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp299 $const10 image_gamma24_standard_surface4_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp300 ___697_emission_edf_out $tmp299 	%argrw{"wrr"}
	mul		$tmp301 ___697_coat_emission_edf_out image_gamma24_standard_surface4_coat 	%argrw{"wrr"}
	add		___697_blended_coat_emission_edf_out $tmp300 $tmp301 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:323
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___697_shader_constructor_out.bsdf ___697_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{323} %argrw{"wr"}
	assign		___697_shader_constructor_out.edf ___697_null_closure 	%argrw{"wr"}
	assign		___697_shader_constructor_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:324
#     out = shader_constructor_out;
	functioncall	$const62 574 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:221
#     result.edf     = edf;
	assign		___697_shader_constructor_out.bsdf ___697_coat_layer_out 	%line{221} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:222
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___697_shader_constructor_out.edf ___697_blended_coat_emission_edf_out 	%line{222} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:223
# }
	functioncall	$const23 573 	%line{223} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp302 ___697_opacity_luminance_float_out $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_shader_constructor_out.opacity $tmp302 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:223
# }
	assign		___697_shader_constructor_out.opacity ___697_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{223} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:325
# }
	assign		image_gamma24_standard_surface4_out.bsdf ___697_shader_constructor_out.bsdf 	%line{325} %argrw{"wr"}
	assign		image_gamma24_standard_surface4_out.edf ___697_shader_constructor_out.edf 	%argrw{"wr"}
	assign		image_gamma24_standard_surface4_out.opacity ___697_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:761
#         image_gamma24_out = (image_gamma24_standard_surface4_out.bsdf + image_gamma24_standard_surface4_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const23 580 	%line{761} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp303 image_gamma24_standard_surface4_out.opacity $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_opacity_weight $tmp303 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl:762
#     }
	add		$tmp304 image_gamma24_standard_surface4_out.bsdf image_gamma24_standard_surface4_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_gamma24_out.osl"} %line{762} %argrw{"wrr"}
	mul		$tmp305 $tmp304 ___698_opacity_weight 	%argrw{"wrr"}
	closure		$tmp306 $const63 	%argrw{"wr"}
	sub		$tmp307 $const10 ___698_opacity_weight 	%argrw{"wrr"}
	mul		$tmp308 $tmp306 $tmp307 	%argrw{"wrr"}
	add		image_gamma24_out $tmp305 $tmp308 	%argrw{"wrr"}
	end
