OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_image_lin_adobergb_out.oso
surface ng1_image_lin_adobergb_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"image_lin_adobergb_out"} 
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_lin_adobergb_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,label,"Filename"} %meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	image_lin_adobergb_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	image_lin_adobergb_layer	""		%meta{string,label,"Layer"}  %read{52,52} %write{2147483647,-1}
param	color	image_lin_adobergb_default	0 0 0		%meta{string,label,"Default Color"}  %read{46,48} %write{2147483647,-1}
param	string	image_lin_adobergb_uaddressmode	"periodic"		%meta{string,label,"Address Mode U"}  %read{17,52} %write{2147483647,-1}
param	string	image_lin_adobergb_vaddressmode	"periodic"		%meta{string,label,"Address Mode V"}  %read{32,52} %write{2147483647,-1}
param	string	image_lin_adobergb_filtertype	"linear"		%meta{string,label,"Filter Type"}  %read{52,52} %write{2147483647,-1}
param	string	image_lin_adobergb_framerange	""		%meta{string,label,"Frame Range"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	image_lin_adobergb_frameoffset	0		%meta{string,label,"Frame Offset"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_lin_adobergb_frameendaction	"constant"		%meta{string,label,"Frame End Action"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{126,561} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{560,560} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{575,577} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{127,533} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{127,531} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{131,433} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{532,544} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{455,487} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{130,130} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{569,571} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{539,543} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{131,131} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{563,565} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{134,134} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{140,140} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{140,140} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{554,554} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{547,547} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{546,546} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{546,546} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{128,599} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{147,582} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{106,302} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{110,441} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{125,125} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{149,516} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{426,426} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{128,128} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{520,532} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{520,532} %write{2147483647,-1}
param	float	image_lin_adobergb_standard_surface8_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{152,152} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{152,152} %write{2147483647,-1}
param	color	image_lin_adobergb_standard_surface8_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{155,155} %write{2147483647,-1}
param	int	image_lin_adobergb_standard_surface8_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{141,141} %write{2147483647,-1}
oparam	closure color	image_lin_adobergb_out			%read{2147483647,-1} %write{622,622}
global	vector	I	%read{585,585} %write{2147483647,-1}
global	normal	N	%read{4,586} %write{2147483647,-1}
global	float	u	%read{10,10} %write{2147483647,-1} %derivs
global	float	v	%read{11,11} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{52,52} %write{48,48}
local	float	___670_st.x	%read{52,52} %write{50,50} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{52,52} %write{51,51} %mystruct{___670_st} %mystructfield{1} %derivs
local	int	___672_N_extract_0_index_tmp	%read{63,63} %write{61,61}
local	float	___672_N_extract_0_out	%read{70,70} %write{63,63}
local	int	___672_N_extract_1_index_tmp	%read{66,66} %write{64,64}
local	float	___672_N_extract_1_out	%read{71,71} %write{66,66}
local	int	___672_N_extract_2_index_tmp	%read{69,69} %write{67,67}
local	float	___672_N_extract_2_out	%read{72,72} %write{69,69}
local	float	___673_separate_outr	%read{73,73} %write{57,70}
local	float	___673_separate_outg	%read{73,73} %write{58,71}
local	float	___673_separate_outb	%read{73,73} %write{59,72}
local	vector	___673_combine_out	%read{74,74} %write{73,73}
local	int	___674_N_extract_0_index_tmp	%read{85,85} %write{83,83}
local	float	___674_N_extract_0_out	%read{92,92} %write{85,85}
local	int	___674_N_extract_1_index_tmp	%read{88,88} %write{86,86}
local	float	___674_N_extract_1_out	%read{93,93} %write{88,88}
local	int	___674_N_extract_2_index_tmp	%read{91,91} %write{89,89}
local	float	___674_N_extract_2_out	%read{94,94} %write{91,91}
local	float	___675_separate_outx	%read{95,95} %write{79,92}
local	float	___675_separate_outy	%read{95,95} %write{80,93}
local	float	___675_separate_outz	%read{95,95} %write{81,94}
local	color	___675_combine_out	%read{96,96} %write{95,95}
local	vector	___676_asVec_out	%read{76,76} %write{55,74}
local	matrix	___676_transform_mat_tmp	%read{76,76} %write{75,75}
local	vector	___676_transform_out	%read{85,91} %write{76,76}
local	color	___676_asColor_out	%read{97,97} %write{77,96}
local	float	___677_roughness_sqr	%read{117,497} %write{109,483}
local	float	___678_aspect	%read{117,494} %write{116,490}
local	vector	___681_nAxis	%read{167,367} %write{163,309}
local	float	___681_s	%read{177,363} %write{164,310}
local	float	___681_c	%read{166,369} %write{165,311}
local	float	___681_oc	%read{168,366} %write{166,312}
local	float	___682_rotationRadians	%read{164,311} %write{161,307}
local	matrix	___682_m	%read{230,417} %write{224,370}
local	float	___682_trans.x	%read{274,420} %write{240,386} %mystruct{___682_trans} %mystructfield{0}
local	float	___682_trans.y	%read{274,420} %write{251,397} %mystruct{___682_trans} %mystructfield{1}
local	float	___682_trans.z	%read{274,420} %write{262,408} %mystruct{___682_trans} %mystructfield{2}
local	float	___682_trans.w	%read{2147483647,-1} %write{273,419} %mystruct{___682_trans} %mystructfield{3}
local	color	___683_r	%read{283,297} %write{282,282}
local	color	___683_r_sqrt	%read{287,288} %write{283,283}
local	color	___683_n_min	%read{290,290} %write{286,286}
local	color	___683_n_max	%read{290,290} %write{289,289}
local	color	___683_np1	%read{293,293} %write{291,291}
local	color	___683_nm1	%read{295,295} %write{292,292}
local	color	___683_k2	%read{300,301} %write{298,300}
local	color	___684_reflection_tint	%read{516,544} %write{510,539}
local	color	___684_transmission_tint	%read{516,544} %write{514,543}
local	color	___686_combine_out	%read{505,505} %write{504,504}
local	float	___698_x	%read{593,593} %write{592,592}
local	float	___699_NdotV	%read{589,589} %write{587,587}
local	color	___699_f	%read{595,595} %write{594,594}
local	closure color	___701_null_closure	%read{506,602} %write{102,102}
local	float	___701_coat_roughness_vector_out.x	%read{119,516} %write{103,122} %mystruct{___701_coat_roughness_vector_out} %mystructfield{0}
local	float	___701_coat_roughness_vector_out.y	%read{121,516} %write{104,123} %mystruct{___701_coat_roughness_vector_out} %mystructfield{1}
local	float	___701_coat_tangent_rotate_degree_in2_tmp	%read{125,125} %write{124,124}
local	float	___701_coat_tangent_rotate_degree_out	%read{161,161} %write{125,125}
local	color	___701_metal_reflectivity_out	%read{281,281} %write{126,126}
local	color	___701_metal_edgecolor_out	%read{290,290} %write{127,127}
local	float	___701_coat_affect_roughness_multiply1_out	%read{302,302} %write{128,128}
local	float	___701_tangent_rotate_degree_in2_tmp	%read{130,130} %write{129,129}
local	float	___701_tangent_rotate_degree_out	%read{307,307} %write{130,130}
local	float	___701_transmission_roughness_add_out	%read{424,424} %write{131,131}
local	float	___701_subsurface_color_nonnegative_in2_tmp	%read{133,133} %write{132,132}
local	color	___701_subsurface_color_nonnegative_out	%read{498,498} %write{134,134}
local	float	___701_coat_clamped_low_tmp	%read{139,139} %write{135,135}
local	float	___701_coat_clamped_high_tmp	%read{138,138} %write{136,136}
local	float	___701_coat_clamped_out	%read{426,426} %write{139,139}
local	color	___701_subsurface_radius_scaled_out	%read{554,554} %write{140,140}
local	float	___701_subsurface_selector_out	%read{556,558} %write{142,142}
local	float	___701_base_color_nonnegative_in2_tmp	%read{144,144} %write{143,143}
local	color	___701_base_color_nonnegative_out	%read{499,499} %write{145,145}
local	color	___701_coat_attenuation_bg_tmp	%read{147,147} %write{146,146}
local	color	___701_coat_attenuation_out	%read{579,579} %write{147,147}
local	float	___701_one_minus_coat_ior_in1_tmp	%read{149,149} %write{148,148}
local	float	___701_one_minus_coat_ior_out	%read{427,427} %write{149,149}
local	float	___701_one_plus_coat_ior_in1_tmp	%read{151,151} %write{150,150}
local	float	___701_one_plus_coat_ior_out	%read{427,427} %write{151,151}
local	color	___701_emission_weight_out	%read{581,581} %write{152,152}
local	color	___701_opacity_luminance_out	%read{430,430} %write{153,156}
local	vector	___701_coat_tangent_rotate_out	%read{431,431} %write{157,274}
local	color	___701_artistic_ior_ior	%read{291,520} %write{275,290}
local	color	___701_artistic_ior_extinction	%read{520,520} %write{276,301}
local	float	___701_coat_affect_roughness_multiply2_out	%read{433,436} %write{302,302}
local	vector	___701_tangent_rotate_out	%read{434,434} %write{303,420}
local	float	___701_transmission_roughness_clamped_low_tmp	%read{425,425} %write{421,421}
local	float	___701_transmission_roughness_clamped_high_tmp	%read{424,424} %write{422,422}
local	float	___701_transmission_roughness_clamped_out	%read{436,436} %write{425,425}
local	float	___701_coat_gamma_multiply_out	%read{438,438} %write{426,426}
local	float	___701_coat_ior_to_F0_sqrt_out	%read{439,439} %write{427,427}
local	int	___701_opacity_luminance_float_index_tmp	%read{430,430} %write{428,428}
local	float	___701_opacity_luminance_float_out	%read{608,608} %write{430,430}
local	vector	___701_coat_tangent_rotate_normalize_out	%read{444,444} %write{431,431}
local	float	___701_coat_affected_roughness_fg_tmp	%read{433,433} %write{432,432}
local	float	___701_coat_affected_roughness_out	%read{451,451} %write{433,433}
local	vector	___701_tangent_rotate_normalize_out	%read{473,473} %write{434,434}
local	float	___701_coat_affected_transmission_roughness_fg_tmp	%read{436,436} %write{435,435}
local	float	___701_coat_affected_transmission_roughness_out	%read{480,480} %write{436,436}
local	float	___701_coat_gamma_in2_tmp	%read{438,438} %write{437,437}
local	float	___701_coat_gamma_out	%read{498,499} %write{438,438}
local	float	___701_coat_ior_to_F0_out	%read{501,501} %write{439,439}
local	float	___701_coat_tangent_value2_tmp	%read{441,441} %write{440,440}
local	vector	___701_coat_tangent_out	%read{516,516} %write{444,446}
local	float	___701_main_roughness_out.x	%read{464,532} %write{448,467} %mystruct{___701_main_roughness_out} %mystructfield{0}
local	float	___701_main_roughness_out.y	%read{466,532} %write{449,468} %mystruct{___701_main_roughness_out} %mystructfield{1}
local	float	___701_main_tangent_value2_tmp	%read{470,470} %write{469,469}
local	vector	___701_main_tangent_out	%read{520,544} %write{473,475}
local	float	___701_transmission_roughness_out.x	%read{493,544} %write{477,496} %mystruct{___701_transmission_roughness_out} %mystructfield{0}
local	float	___701_transmission_roughness_out.y	%read{495,544} %write{478,497} %mystruct{___701_transmission_roughness_out} %mystructfield{1}
local	color	___701_coat_affected_subsurface_color_out	%read{549,553} %write{498,498}
local	color	___701_coat_affected_diffuse_color_out	%read{560,560} %write{499,499}
local	float	___701_one_minus_coat_ior_to_F0_in1_tmp	%read{501,501} %write{500,500}
local	float	___701_one_minus_coat_ior_to_F0_out	%read{504,504} %write{501,501}
local	color	___701_emission_color0_out	%read{594,594} %write{502,505}
local	closure color	___701_coat_bsdf_out	%read{580,580} %write{506,517}
local	float	___701_metal_bsdf_weight_tmp	%read{521,521} %write{518,518}
local	string	___701_metal_bsdf_distribution_tmp	%read{520,520} %write{519,519}
local	closure color	___701_metal_bsdf_out	%read{577,577} %write{521,521}
local	closure color	___701_specular_bsdf_out	%read{573,573} %write{522,533}
local	closure color	___701_transmission_bsdf_out	%read{571,571} %write{534,545}
local	closure color	___701_sheen_bsdf_out	%read{567,567} %write{547,547}
local	float	___701_translucent_bsdf_weight_tmp	%read{550,550} %write{548,548}
local	closure color	___701_translucent_bsdf_out	%read{558,558} %write{550,550}
local	closure color	___701_subsurface_bsdf_out	%read{557,557} %write{551,554}
local	closure color	___701_selected_subsurface_bsdf_out	%read{565,565} %write{559,559}
local	closure color	___701_diffuse_bsdf_out	%read{564,564} %write{561,561}
local	closure color	___701_subsurface_mix_out	%read{567,567} %write{566,566}
local	closure color	___701_sheen_layer_out	%read{570,570} %write{567,567}
local	closure color	___701_transmission_mix_out	%read{573,573} %write{572,572}
local	closure color	___701_specular_layer_out	%read{576,576} %write{573,573}
local	closure color	___701_metalness_mix_out	%read{579,579} %write{578,578}
local	closure color	___701_thin_film_layer_attenuated_out	%read{580,580} %write{579,579}
local	closure color	___701_coat_layer_out	%read{605,605} %write{580,580}
local	closure color	___701_emission_edf_out	%read{582,598} %write{581,581}
local	closure color	___701_coat_tinted_emission_edf_out	%read{595,595} %write{582,582}
local	closure color	___701_coat_emission_edf_out	%read{599,599} %write{583,595}
local	closure color	___701_blended_coat_emission_edf_out	%read{606,606} %write{600,600}
local	closure color	___701_shader_constructor_out.bsdf	%read{611,611} %write{601,605} %mystruct{___701_shader_constructor_out} %mystructfield{0}
local	closure color	___701_shader_constructor_out.edf	%read{612,612} %write{602,606} %mystruct{___701_shader_constructor_out} %mystructfield{1}
local	float	___701_shader_constructor_out.opacity	%read{610,613} %write{603,610} %mystruct{___701_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{98,99} %write{0,0}
local	string	image_lin_adobergb_file_.filename	%read{14,52} %write{1,1} %mystruct{image_lin_adobergb_file_} %mystructfield{0}
local	string	image_lin_adobergb_file_.colorspace	%read{52,52} %write{2,2} %mystruct{image_lin_adobergb_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{163,560} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{225,475} %write{9,9}
local	float	geomprop_UV0_out1.x	%read{20,50} %write{10,10} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{35,51} %write{11,11} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	image_lin_adobergb_out1	%read{63,69} %write{12,52}
local	color	image_lin_adobergb_out_cm_out	%read{126,145} %write{53,97}
local	closure color	image_lin_adobergb_standard_surface8_out.bsdf	%read{617,617} %write{98,611} %mystruct{image_lin_adobergb_standard_surface8_out} %mystructfield{0}
local	closure color	image_lin_adobergb_standard_surface8_out.edf	%read{617,617} %write{99,612} %mystruct{image_lin_adobergb_standard_surface8_out} %mystructfield{1}
local	float	image_lin_adobergb_standard_surface8_out.opacity	%read{615,615} %write{100,613} %mystruct{image_lin_adobergb_standard_surface8_out} %mystructfield{2}
local	float	___702_opacity_weight	%read{618,620} %write{616,616}
const	int	$const1	0		%read{0,428} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,375} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,414} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,616} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
const	color	$const6	0 0 0		%read{12,594} %write{2147483647,-1}
const	string	$const7	"mx_image_color3"		%read{13,13} %write{2147483647,-1}
const	string	$const8	""		%read{14,14} %write{2147483647,-1}
temp	int	$tmp5	%read{15,15} %write{14,14}
temp	int	$tmp6	%read{16,30} %write{15,29}
const	string	$const9	"constant"		%read{17,32} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
temp	int	$tmp8	%read{19,28} %write{18,27}
temp	int	$tmp9	%read{21,21} %write{20,20}
temp	int	$tmp10	%read{22,26} %write{21,25}
const	float	$const10	1		%read{23,620} %write{2147483647,-1}
temp	int	$tmp11	%read{24,24} %write{23,23}
temp	int	$tmp12	%read{25,25} %write{24,24}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	int	$tmp15	%read{31,45} %write{30,44}
temp	int	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,43} %write{33,42}
temp	int	$tmp18	%read{36,36} %write{35,35}
temp	int	$tmp19	%read{37,41} %write{36,40}
temp	int	$tmp20	%read{39,39} %write{38,38}
temp	int	$tmp21	%read{40,40} %write{39,39}
temp	int	$tmp22	%read{42,42} %write{41,41}
temp	int	$tmp23	%read{44,44} %write{43,43}
const	string	$const11	"mx_transform_uv"		%read{49,49} %write{2147483647,-1}
const	string	$const12	"subimage"		%read{52,52} %write{2147483647,-1}
const	string	$const13	"interp"		%read{52,52} %write{2147483647,-1}
const	string	$const14	"missingcolor"		%read{52,52} %write{2147483647,-1}
const	string	$const15	"swrap"		%read{52,52} %write{2147483647,-1}
const	string	$const16	"twrap"		%read{52,52} %write{2147483647,-1}
const	string	$const17	"colorspace"		%read{52,52} %write{2147483647,-1}
const	string	$const18	"NG_lin_adobergb_to_lin_rec709_color3"		%read{54,54} %write{2147483647,-1}
const	vector	$const19	0 0 0		%read{55,303} %write{2147483647,-1}
const	string	$const20	"NG_convert_color3_vector3"		%read{56,56} %write{2147483647,-1}
const	string	$const21	"NG_separate3_color3"		%read{60,60} %write{2147483647,-1}
const	string	$const22	"mx_extract"		%read{62,429} %write{2147483647,-1}
const	int	$const23	1		%read{64,411} %write{2147483647,-1}
const	float	$const24	1.398356		%read{75,75} %write{2147483647,-1}
const	float	$const25	-0.398356		%read{75,75} %write{2147483647,-1}
const	float	$const26	-0.042929		%read{75,75} %write{2147483647,-1}
const	float	$const27	1.042929		%read{75,75} %write{2147483647,-1}
const	string	$const28	"NG_convert_vector3_color3"		%read{78,78} %write{2147483647,-1}
const	string	$const29	"NG_separate3_vector3"		%read{82,82} %write{2147483647,-1}
const	string	$const30	"NG_standard_surface_surfaceshader_100"		%read{101,101} %write{2147483647,-1}
const	string	$const31	"mx_roughness_anisotropy"		%read{105,479} %write{2147483647,-1}
temp	float	$tmp24	%read{108,108} %write{106,106}
const	float	$const32	1e-08		%read{109,483} %write{2147483647,-1}
const	string	$const33	"clamp"		%read{107,614} %write{2147483647,-1}
temp	float	$tmp25	%read{109,109} %write{108,108}
temp	int	$tmp26	%read{111,111} %write{110,110}
temp	float	$tmp27	%read{115,115} %write{114,114}
const	float	$const34	0.98		%read{113,487} %write{2147483647,-1}
temp	float	$tmp28	%read{114,114} %write{113,113}
temp	float	$tmp29	%read{116,116} %write{115,115}
temp	float	$tmp30	%read{118,118} %write{117,117}
const	float	$const35	360		%read{124,129} %write{2147483647,-1}
temp	color	$tmp31	%read{134,134} %write{133,133}
temp	float	$tmp32	%read{139,139} %write{138,138}
temp	float	$tmp33	%read{142,142} %write{141,141}
temp	color	$tmp34	%read{145,145} %write{144,144}
const	color	$const36	1 1 1		%read{146,515} %write{2147483647,-1}
const	color	$const37	0.272229 0.674082 0.053689		%read{155,155} %write{2147483647,-1}
const	string	$const38	"mx_luminance_color3"		%read{154,154} %write{2147483647,-1}
temp	float	$tmp36	%read{156,156} %write{155,155}
const	string	$const39	"mx_rotate_vector3"		%read{158,304} %write{2147483647,-1}
const	string	$const40	"radians"		%read{159,305} %write{2147483647,-1}
const	float	$const41	3.1415927		%read{160,306} %write{2147483647,-1}
const	float	$const42	180		%read{160,306} %write{2147483647,-1}
temp	float	$tmp37	%read{161,161} %write{160,160}
const	string	$const43	"rotationMatrix"		%read{162,308} %write{2147483647,-1}
temp	float	$tmp38	%read{168,168} %write{167,167}
temp	float	$tmp39	%read{170,170} %write{168,168}
temp	float	$tmp40	%read{170,170} %write{169,169}
temp	float	$tmp41	%read{171,171} %write{170,170}
temp	float	$tmp42	%read{224,224} %write{171,171}
temp	float	$tmp43	%read{173,173} %write{172,172}
temp	float	$tmp44	%read{175,175} %write{173,173}
temp	float	$tmp45	%read{175,175} %write{174,174}
temp	float	$tmp46	%read{178,178} %write{175,175}
temp	float	$tmp47	%read{177,177} %write{176,176}
temp	float	$tmp48	%read{178,178} %write{177,177}
temp	float	$tmp49	%read{224,224} %write{178,178}
temp	float	$tmp50	%read{180,180} %write{179,179}
temp	float	$tmp51	%read{182,182} %write{180,180}
temp	float	$tmp52	%read{182,182} %write{181,181}
temp	float	$tmp53	%read{185,185} %write{182,182}
temp	float	$tmp54	%read{184,184} %write{183,183}
temp	float	$tmp55	%read{185,185} %write{184,184}
temp	float	$tmp56	%read{224,224} %write{185,185}
temp	float	$tmp57	%read{187,187} %write{186,186}
temp	float	$tmp58	%read{189,189} %write{187,187}
temp	float	$tmp59	%read{189,189} %write{188,188}
temp	float	$tmp60	%read{192,192} %write{189,189}
temp	float	$tmp61	%read{191,191} %write{190,190}
temp	float	$tmp62	%read{192,192} %write{191,191}
temp	float	$tmp63	%read{224,224} %write{192,192}
temp	float	$tmp64	%read{194,194} %write{193,193}
temp	float	$tmp65	%read{196,196} %write{194,194}
temp	float	$tmp66	%read{196,196} %write{195,195}
temp	float	$tmp67	%read{197,197} %write{196,196}
temp	float	$tmp68	%read{224,224} %write{197,197}
temp	float	$tmp69	%read{199,199} %write{198,198}
temp	float	$tmp70	%read{201,201} %write{199,199}
temp	float	$tmp71	%read{201,201} %write{200,200}
temp	float	$tmp72	%read{204,204} %write{201,201}
temp	float	$tmp73	%read{203,203} %write{202,202}
temp	float	$tmp74	%read{204,204} %write{203,203}
temp	float	$tmp75	%read{224,224} %write{204,204}
temp	float	$tmp76	%read{206,206} %write{205,205}
temp	float	$tmp77	%read{208,208} %write{206,206}
temp	float	$tmp78	%read{208,208} %write{207,207}
temp	float	$tmp79	%read{211,211} %write{208,208}
temp	float	$tmp80	%read{210,210} %write{209,209}
temp	float	$tmp81	%read{211,211} %write{210,210}
temp	float	$tmp82	%read{224,224} %write{211,211}
temp	float	$tmp83	%read{213,213} %write{212,212}
temp	float	$tmp84	%read{215,215} %write{213,213}
temp	float	$tmp85	%read{215,215} %write{214,214}
temp	float	$tmp86	%read{218,218} %write{215,215}
temp	float	$tmp87	%read{217,217} %write{216,216}
temp	float	$tmp88	%read{218,218} %write{217,217}
temp	float	$tmp89	%read{224,224} %write{218,218}
temp	float	$tmp90	%read{220,220} %write{219,219}
temp	float	$tmp91	%read{222,222} %write{220,220}
temp	float	$tmp92	%read{222,222} %write{221,221}
temp	float	$tmp93	%read{223,223} %write{222,222}
temp	float	$tmp94	%read{224,224} %write{223,223}
temp	float	$tmp95.x	%read{231,264} %write{225,225}
temp	float	$tmp95.y	%read{233,266} %write{226,226}
temp	float	$tmp95.z	%read{236,269} %write{227,227}
temp	float	$tmp95.w	%read{239,272} %write{228,228}
temp	float	$tmp96	%read{231,231} %write{230,230}
temp	float	$tmp97	%read{234,234} %write{231,231}
temp	float	$tmp98	%read{233,233} %write{232,232}
temp	float	$tmp99	%read{234,234} %write{233,233}
temp	float	$tmp100	%read{237,237} %write{234,234}
temp	float	$tmp101	%read{236,236} %write{235,235}
temp	float	$tmp102	%read{237,237} %write{236,236}
temp	float	$tmp103	%read{240,240} %write{237,237}
const	int	$const44	3		%read{238,417} %write{2147483647,-1}
temp	float	$tmp104	%read{239,239} %write{238,238}
temp	float	$tmp105	%read{240,240} %write{239,239}
temp	float	$tmp106	%read{242,242} %write{241,241}
temp	float	$tmp107	%read{245,245} %write{242,242}
temp	float	$tmp108	%read{244,244} %write{243,243}
temp	float	$tmp109	%read{245,245} %write{244,244}
temp	float	$tmp110	%read{248,248} %write{245,245}
temp	float	$tmp111	%read{247,247} %write{246,246}
temp	float	$tmp112	%read{248,248} %write{247,247}
temp	float	$tmp113	%read{251,251} %write{248,248}
temp	float	$tmp114	%read{250,250} %write{249,249}
temp	float	$tmp115	%read{251,251} %write{250,250}
temp	float	$tmp116	%read{253,253} %write{252,252}
temp	float	$tmp117	%read{256,256} %write{253,253}
temp	float	$tmp118	%read{255,255} %write{254,254}
temp	float	$tmp119	%read{256,256} %write{255,255}
temp	float	$tmp120	%read{259,259} %write{256,256}
temp	float	$tmp121	%read{258,258} %write{257,257}
temp	float	$tmp122	%read{259,259} %write{258,258}
temp	float	$tmp123	%read{262,262} %write{259,259}
temp	float	$tmp124	%read{261,261} %write{260,260}
temp	float	$tmp125	%read{262,262} %write{261,261}
temp	float	$tmp126	%read{264,264} %write{263,263}
temp	float	$tmp127	%read{267,267} %write{264,264}
temp	float	$tmp128	%read{266,266} %write{265,265}
temp	float	$tmp129	%read{267,267} %write{266,266}
temp	float	$tmp130	%read{270,270} %write{267,267}
temp	float	$tmp131	%read{269,269} %write{268,268}
temp	float	$tmp132	%read{270,270} %write{269,269}
temp	float	$tmp133	%read{273,273} %write{270,270}
temp	float	$tmp134	%read{272,272} %write{271,271}
temp	float	$tmp135	%read{273,273} %write{272,272}
const	string	$const45	"mx_artistic_ior"		%read{277,277} %write{2147483647,-1}
temp	color	$tmp136	%read{282,282} %write{278,278}
const	float	$const46	0.99		%read{279,279} %write{2147483647,-1}
temp	color	$tmp137	%read{281,281} %write{279,279}
temp	color	$tmp138	%read{282,282} %write{281,281}
temp	color	$tmp139	%read{286,286} %write{284,284}
temp	color	$tmp140	%read{286,286} %write{285,285}
temp	color	$tmp141	%read{289,289} %write{287,287}
temp	color	$tmp142	%read{289,289} %write{288,288}
temp	color	$tmp143	%read{294,294} %write{293,293}
temp	color	$tmp144	%read{296,296} %write{294,294}
temp	color	$tmp145	%read{296,296} %write{295,295}
temp	color	$tmp146	%read{298,298} %write{296,296}
temp	color	$tmp147	%read{298,298} %write{297,297}
temp	color	$tmp148	%read{300,300} %write{299,299}
temp	float	$tmp149	%read{307,307} %write{306,306}
temp	float	$tmp150	%read{314,314} %write{313,313}
temp	float	$tmp151	%read{316,316} %write{314,314}
temp	float	$tmp152	%read{316,316} %write{315,315}
temp	float	$tmp153	%read{317,317} %write{316,316}
temp	float	$tmp154	%read{370,370} %write{317,317}
temp	float	$tmp155	%read{319,319} %write{318,318}
temp	float	$tmp156	%read{321,321} %write{319,319}
temp	float	$tmp157	%read{321,321} %write{320,320}
temp	float	$tmp158	%read{324,324} %write{321,321}
temp	float	$tmp159	%read{323,323} %write{322,322}
temp	float	$tmp160	%read{324,324} %write{323,323}
temp	float	$tmp161	%read{370,370} %write{324,324}
temp	float	$tmp162	%read{326,326} %write{325,325}
temp	float	$tmp163	%read{328,328} %write{326,326}
temp	float	$tmp164	%read{328,328} %write{327,327}
temp	float	$tmp165	%read{331,331} %write{328,328}
temp	float	$tmp166	%read{330,330} %write{329,329}
temp	float	$tmp167	%read{331,331} %write{330,330}
temp	float	$tmp168	%read{370,370} %write{331,331}
temp	float	$tmp169	%read{333,333} %write{332,332}
temp	float	$tmp170	%read{335,335} %write{333,333}
temp	float	$tmp171	%read{335,335} %write{334,334}
temp	float	$tmp172	%read{338,338} %write{335,335}
temp	float	$tmp173	%read{337,337} %write{336,336}
temp	float	$tmp174	%read{338,338} %write{337,337}
temp	float	$tmp175	%read{370,370} %write{338,338}
temp	float	$tmp176	%read{340,340} %write{339,339}
temp	float	$tmp177	%read{342,342} %write{340,340}
temp	float	$tmp178	%read{342,342} %write{341,341}
temp	float	$tmp179	%read{343,343} %write{342,342}
temp	float	$tmp180	%read{370,370} %write{343,343}
temp	float	$tmp181	%read{345,345} %write{344,344}
temp	float	$tmp182	%read{347,347} %write{345,345}
temp	float	$tmp183	%read{347,347} %write{346,346}
temp	float	$tmp184	%read{350,350} %write{347,347}
temp	float	$tmp185	%read{349,349} %write{348,348}
temp	float	$tmp186	%read{350,350} %write{349,349}
temp	float	$tmp187	%read{370,370} %write{350,350}
temp	float	$tmp188	%read{352,352} %write{351,351}
temp	float	$tmp189	%read{354,354} %write{352,352}
temp	float	$tmp190	%read{354,354} %write{353,353}
temp	float	$tmp191	%read{357,357} %write{354,354}
temp	float	$tmp192	%read{356,356} %write{355,355}
temp	float	$tmp193	%read{357,357} %write{356,356}
temp	float	$tmp194	%read{370,370} %write{357,357}
temp	float	$tmp195	%read{359,359} %write{358,358}
temp	float	$tmp196	%read{361,361} %write{359,359}
temp	float	$tmp197	%read{361,361} %write{360,360}
temp	float	$tmp198	%read{364,364} %write{361,361}
temp	float	$tmp199	%read{363,363} %write{362,362}
temp	float	$tmp200	%read{364,364} %write{363,363}
temp	float	$tmp201	%read{370,370} %write{364,364}
temp	float	$tmp202	%read{366,366} %write{365,365}
temp	float	$tmp203	%read{368,368} %write{366,366}
temp	float	$tmp204	%read{368,368} %write{367,367}
temp	float	$tmp205	%read{369,369} %write{368,368}
temp	float	$tmp206	%read{370,370} %write{369,369}
temp	float	$tmp207.x	%read{377,410} %write{371,371}
temp	float	$tmp207.y	%read{379,412} %write{372,372}
temp	float	$tmp207.z	%read{382,415} %write{373,373}
temp	float	$tmp207.w	%read{385,418} %write{374,374}
temp	float	$tmp208	%read{377,377} %write{376,376}
temp	float	$tmp209	%read{380,380} %write{377,377}
temp	float	$tmp210	%read{379,379} %write{378,378}
temp	float	$tmp211	%read{380,380} %write{379,379}
temp	float	$tmp212	%read{383,383} %write{380,380}
temp	float	$tmp213	%read{382,382} %write{381,381}
temp	float	$tmp214	%read{383,383} %write{382,382}
temp	float	$tmp215	%read{386,386} %write{383,383}
temp	float	$tmp216	%read{385,385} %write{384,384}
temp	float	$tmp217	%read{386,386} %write{385,385}
temp	float	$tmp218	%read{388,388} %write{387,387}
temp	float	$tmp219	%read{391,391} %write{388,388}
temp	float	$tmp220	%read{390,390} %write{389,389}
temp	float	$tmp221	%read{391,391} %write{390,390}
temp	float	$tmp222	%read{394,394} %write{391,391}
temp	float	$tmp223	%read{393,393} %write{392,392}
temp	float	$tmp224	%read{394,394} %write{393,393}
temp	float	$tmp225	%read{397,397} %write{394,394}
temp	float	$tmp226	%read{396,396} %write{395,395}
temp	float	$tmp227	%read{397,397} %write{396,396}
temp	float	$tmp228	%read{399,399} %write{398,398}
temp	float	$tmp229	%read{402,402} %write{399,399}
temp	float	$tmp230	%read{401,401} %write{400,400}
temp	float	$tmp231	%read{402,402} %write{401,401}
temp	float	$tmp232	%read{405,405} %write{402,402}
temp	float	$tmp233	%read{404,404} %write{403,403}
temp	float	$tmp234	%read{405,405} %write{404,404}
temp	float	$tmp235	%read{408,408} %write{405,405}
temp	float	$tmp236	%read{407,407} %write{406,406}
temp	float	$tmp237	%read{408,408} %write{407,407}
temp	float	$tmp238	%read{410,410} %write{409,409}
temp	float	$tmp239	%read{413,413} %write{410,410}
temp	float	$tmp240	%read{412,412} %write{411,411}
temp	float	$tmp241	%read{413,413} %write{412,412}
temp	float	$tmp242	%read{416,416} %write{413,413}
temp	float	$tmp243	%read{415,415} %write{414,414}
temp	float	$tmp244	%read{416,416} %write{415,415}
temp	float	$tmp245	%read{419,419} %write{416,416}
temp	float	$tmp246	%read{418,418} %write{417,417}
temp	float	$tmp247	%read{419,419} %write{418,418}
temp	float	$tmp248	%read{425,425} %write{424,424}
temp	int	$tmp249	%read{443,443} %write{441,441}
const	string	$const47	"mx_ternary"		%read{442,471} %write{2147483647,-1}
temp	float	$tmp250	%read{453,453} %write{451,451}
temp	float	$tmp251	%read{454,454} %write{453,453}
temp	int	$tmp252	%read{456,456} %write{455,455}
temp	float	$tmp253	%read{460,460} %write{459,459}
temp	float	$tmp254	%read{459,459} %write{458,458}
temp	float	$tmp255	%read{461,461} %write{460,460}
temp	float	$tmp256	%read{463,463} %write{462,462}
temp	int	$tmp257	%read{472,472} %write{470,470}
temp	float	$tmp258	%read{482,482} %write{480,480}
temp	float	$tmp259	%read{483,483} %write{482,482}
temp	int	$tmp260	%read{485,485} %write{484,484}
temp	float	$tmp261	%read{489,489} %write{488,488}
temp	float	$tmp262	%read{488,488} %write{487,487}
temp	float	$tmp263	%read{490,490} %write{489,489}
temp	float	$tmp264	%read{492,492} %write{491,491}
const	string	$const48	"NG_convert_float_color3"		%read{503,503} %write{2147483647,-1}
const	float	$const49	1.5		%read{516,544} %write{2147483647,-1}
const	string	$const50	"ggx"		%read{516,544} %write{2147483647,-1}
const	string	$const51	"R"		%read{508,540} %write{2147483647,-1}
const	string	$const52	"mx_dielectric_bsdf"		%read{507,535} %write{2147483647,-1}
const	string	$const53	"T"		%read{508,540} %write{2147483647,-1}
temp	int	$tmp266	%read{509,509} %write{508,508}
temp	int	$tmp267	%read{513,513} %write{512,512}
temp	closure color	$tmp268	%read{517,517} %write{516,516}
const	string	$const54	"thinfilm_thickness"		%read{516,544} %write{2147483647,-1}
const	string	$const55	"thinfilm_ior"		%read{516,544} %write{2147483647,-1}
const	string	$const56	"dielectric_bsdf"		%read{516,544} %write{2147483647,-1}
temp	closure color	$tmp269	%read{521,521} %write{520,520}
const	string	$const57	"conductor_bsdf"		%read{520,520} %write{2147483647,-1}
temp	int	$tmp270	%read{525,525} %write{524,524}
temp	int	$tmp271	%read{529,529} %write{528,528}
temp	closure color	$tmp272	%read{533,533} %write{532,532}
temp	int	$tmp273	%read{537,537} %write{536,536}
temp	int	$tmp274	%read{541,541} %write{540,540}
temp	closure color	$tmp275	%read{545,545} %write{544,544}
temp	closure color	$tmp276	%read{547,547} %write{546,546}
const	string	$const58	"sheen_bsdf"		%read{546,546} %write{2147483647,-1}
temp	closure color	$tmp277	%read{550,550} %write{549,549}
const	string	$const59	"translucent_bsdf"		%read{549,549} %write{2147483647,-1}
const	string	$const60	"mx_subsurface_bsdf"		%read{552,552} %write{2147483647,-1}
temp	color	$tmp278	%read{554,554} %write{553,553}
const	string	$const61	"subsurface_bssrdf"		%read{554,554} %write{2147483647,-1}
const	string	$const62	"mix"		%read{555,596} %write{2147483647,-1}
temp	float	$tmp279	%read{557,557} %write{556,556}
temp	closure color	$tmp280	%read{559,559} %write{557,557}
temp	closure color	$tmp281	%read{559,559} %write{558,558}
temp	closure color	$tmp282	%read{561,561} %write{560,560}
const	string	$const63	"oren_nayar_diffuse_bsdf"		%read{560,560} %write{2147483647,-1}
temp	float	$tmp283	%read{564,564} %write{563,563}
temp	closure color	$tmp284	%read{566,566} %write{564,564}
temp	closure color	$tmp285	%read{566,566} %write{565,565}
const	string	$const64	"layer"		%read{567,580} %write{2147483647,-1}
temp	float	$tmp286	%read{570,570} %write{569,569}
temp	closure color	$tmp287	%read{572,572} %write{570,570}
temp	closure color	$tmp288	%read{572,572} %write{571,571}
temp	float	$tmp289	%read{576,576} %write{575,575}
temp	closure color	$tmp290	%read{578,578} %write{576,576}
temp	closure color	$tmp291	%read{578,578} %write{577,577}
const	string	$const65	"uniform_edf"		%read{581,581} %write{2147483647,-1}
const	float	$const66	5		%read{593,593} %write{2147483647,-1}
const	string	$const67	"mx_generalized_schlick_edf"		%read{584,584} %write{2147483647,-1}
temp	float	$tmp293	%read{587,587} %write{586,586}
temp	vector	$tmp294	%read{586,586} %write{585,585}
const	string	$const68	"mx_fresnel_schlick"		%read{588,588} %write{2147483647,-1}
temp	float	$tmp295	%read{591,591} %write{589,589}
temp	float	$tmp296	%read{592,592} %write{591,591}
temp	float	$tmp297	%read{594,594} %write{593,593}
temp	float	$tmp298	%read{598,598} %write{597,597}
temp	closure color	$tmp299	%read{600,600} %write{598,598}
temp	closure color	$tmp300	%read{600,600} %write{599,599}
const	string	$const69	"mx_surface"		%read{604,604} %write{2147483647,-1}
temp	float	$tmp301	%read{609,609} %write{608,608}
temp	float	$tmp302	%read{616,616} %write{615,615}
temp	closure color	$tmp303	%read{618,618} %write{617,617}
temp	closure color	$tmp304	%read{622,622} %write{618,618}
temp	closure color	$tmp305	%read{621,621} %write{619,619}
const	string	$const70	"transparent"		%read{619,619} %write{2147483647,-1}
temp	float	$tmp306	%read{621,621} %write{620,620}
temp	closure color	$tmp307	%read{622,622} %write{621,621}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:797
#     textureresource image_lin_adobergb_file_ = {image_lin_adobergb_file, image_lin_adobergb_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{797} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:798
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		image_lin_adobergb_file_.filename image_lin_adobergb_file 	%line{798} %argrw{"wr"}
	assign		image_lin_adobergb_file_.colorspace image_lin_adobergb_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:799
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{799} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:800
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{800} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:801
#     color image_lin_adobergb_out1 = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{801} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:802
#     mx_image_color3(image_lin_adobergb_file_, image_lin_adobergb_layer, image_lin_adobergb_default, geomprop_UV0_out1, image_lin_adobergb_uaddressmode, image_lin_adobergb_vaddressmode, image_lin_adobergb_filtertype, image_lin_adobergb_framerange, image_lin_adobergb_frameoffset, image_lin_adobergb_frameendaction, image_lin_adobergb_out1);
	assign		image_lin_adobergb_out1 $const6 	%line{802} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:803
#     color image_lin_adobergb_out_cm_out = color(0.0);
	functioncall	$const7 53 	%line{803} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp5 image_lin_adobergb_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 17 30 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp7 image_lin_adobergb_uaddressmode $const9 	%line{26} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	if		$tmp8 28 28 	%argrw{"r"}
	lt		$tmp9 geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const1 	%argrw{"wrr"}
	if		$tmp10 23 26 	%argrw{"r"}
	gt		$tmp11 geomprop_UV0_out1.x $const10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp10 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp13 	%argrw{"wr"}
	neq		$tmp14 $tmp8 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp6 $tmp14 	%line{25} %argrw{"wr"}
	neq		$tmp15 $tmp6 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp15 32 45 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:27
#     {
	eq		$tmp16 image_lin_adobergb_vaddressmode $const9 	%line{27} %argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 43 43 	%argrw{"r"}
	lt		$tmp18 geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	if		$tmp19 38 41 	%argrw{"r"}
	gt		$tmp20 geomprop_UV0_out1.y $const10 	%argrw{"wrr"}
	neq		$tmp21 $tmp20 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp21 	%argrw{"wr"}
	neq		$tmp22 $tmp19 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp17 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp15 $tmp23 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp15 48 48 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:29
#         return;
	assign		image_lin_adobergb_out1 image_lin_adobergb_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor image_lin_adobergb_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const11 52 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:20
# }
	assign		___670_st.x geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		image_lin_adobergb_out1 image_lin_adobergb_file_.filename ___670_st.x ___670_st.y $const12 image_lin_adobergb_layer $const13 image_lin_adobergb_filtertype $const14 ___670_missingColor $const15 image_lin_adobergb_uaddressmode $const16 image_lin_adobergb_vaddressmode $const17 image_lin_adobergb_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:804
#     NG_lin_adobergb_to_lin_rec709_color3(image_lin_adobergb_out1, image_lin_adobergb_out_cm_out);
	assign		image_lin_adobergb_out_cm_out $const6 	%line{804} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:805
#     surfaceshader image_lin_adobergb_standard_surface8_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const18 98 	%line{805} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:90
#     NG_convert_color3_vector3(in, asVec_out);
	assign		___676_asVec_out $const19 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:91
#     matrix transform_mat_tmp = matrix(1.398356,  -0.000000,  0.000000, 0.000,  -0.398356,  1.000000,  -0.042929, 0.000,  0.000000,  0.000000,  1.042929, 0.000, 0.000, 0.000, 0.000, 1.000);
	functioncall	$const20 75 	%line{91} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:57
#     float separate_outg = 0.0;
	assign		___673_separate_outr $const5 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:58
#     float separate_outb = 0.0;
	assign		___673_separate_outg $const5 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:59
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___673_separate_outb $const5 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:60
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const21 73 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:44
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:45
#     int N_extract_1_index_tmp = 1;
	functioncall	$const22 64 	%line{45} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_0_out image_lin_adobergb_out1 ___672_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:46
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:47
#     int N_extract_2_index_tmp = 2;
	functioncall	$const22 67 	%line{47} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_1_out image_lin_adobergb_out1 ___672_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:48
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:49
#     outr = N_extract_0_out;
	functioncall	$const22 70 	%line{49} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_2_out image_lin_adobergb_out1 ___672_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:50
#     outg = N_extract_1_out;
	assign		___673_separate_outr ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:51
#     outb = N_extract_2_out;
	assign		___673_separate_outg ___672_N_extract_1_out 	%line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:52
# }
	assign		___673_separate_outb ___672_N_extract_2_out 	%line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:61
#     out = combine_out;
	vector		___673_combine_out ___673_separate_outr ___673_separate_outg ___673_separate_outb 	%line{61} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:62
# }
	assign		___676_asVec_out ___673_combine_out 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:92
#     vector transform_out = transform(transform_mat_tmp, asVec_out);
	matrix		___676_transform_mat_tmp $const24 $const5 $const5 $const5 $const25 $const10 $const26 $const5 $const5 $const5 $const27 $const5 $const5 $const5 $const5 $const10 	%line{92} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:93
#     color asColor_out = color(0.0);
	transformv	___676_transform_out ___676_transform_mat_tmp ___676_asVec_out 	%line{93} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:94
#     NG_convert_vector3_color3(transform_out, asColor_out);
	assign		___676_asColor_out $const6 	%line{94} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:95
#     out = asColor_out;
	functioncall	$const28 97 	%line{95} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:80
#     float separate_outy = 0.0;
	assign		___675_separate_outx $const5 	%line{80} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:81
#     float separate_outz = 0.0;
	assign		___675_separate_outy $const5 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:82
#     NG_separate3_vector3(in, separate_outx, separate_outy, separate_outz);
	assign		___675_separate_outz $const5 	%line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:83
#     color combine_out = color( separate_outx,separate_outy,separate_outz );
	functioncall	$const29 95 	%line{83} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:67
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___674_N_extract_0_index_tmp $const1 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:68
#     int N_extract_1_index_tmp = 1;
	functioncall	$const22 86 	%line{68} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_0_out ___676_transform_out ___674_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:69
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___674_N_extract_1_index_tmp $const23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{69} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:70
#     int N_extract_2_index_tmp = 2;
	functioncall	$const22 89 	%line{70} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_1_out ___676_transform_out ___674_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:71
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___674_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{71} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:72
#     outx = N_extract_0_out;
	functioncall	$const22 92 	%line{72} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___674_N_extract_2_out ___676_transform_out ___674_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:73
#     outy = N_extract_1_out;
	assign		___675_separate_outx ___674_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:74
#     outz = N_extract_2_out;
	assign		___675_separate_outy ___674_N_extract_1_out 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:75
# }
	assign		___675_separate_outz ___674_N_extract_2_out 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:84
#     out = combine_out;
	color		___675_combine_out ___675_separate_outx ___675_separate_outy ___675_separate_outz 	%line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:85
# }
	assign		___676_asColor_out ___675_combine_out 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:96
# }
	assign		image_lin_adobergb_out_cm_out ___676_asColor_out 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:806
#     NG_standard_surface_surfaceshader_100(image_lin_adobergb_standard_surface8_base, image_lin_adobergb_out_cm_out, image_lin_adobergb_standard_surface8_diffuse_roughness, image_lin_adobergb_standard_surface8_metalness, image_lin_adobergb_standard_surface8_specular, image_lin_adobergb_standard_surface8_specular_color, image_lin_adobergb_standard_surface8_specular_roughness, image_lin_adobergb_standard_surface8_specular_IOR, image_lin_adobergb_standard_surface8_specular_anisotropy, image_lin_adobergb_standard_surface8_specular_rotation, image_lin_adobergb_standard_surface8_transmission, image_lin_adobergb_standard_surface8_transmission_color, image_lin_adobergb_standard_surface8_transmission_depth, image_lin_adobergb_standard_surface8_transmission_scatter, image_lin_adobergb_standard_surface8_transmission_scatter_anisotropy, image_lin_adobergb_standard_surface8_transmission_dispersion, image_lin_adobergb_standard_surface8_transmission_extra_roughness, image_lin_adobergb_standard_surface8_subsurface, image_lin_adobergb_standard_surface8_subsurface_color, image_lin_adobergb_standard_surface8_subsurface_radius, image_lin_adobergb_standard_surface8_subsurface_scale, image_lin_adobergb_standard_surface8_subsurface_anisotropy, image_lin_adobergb_standard_surface8_sheen, image_lin_adobergb_standard_surface8_sheen_color, image_lin_adobergb_standard_surface8_sheen_roughness, image_lin_adobergb_standard_surface8_coat, image_lin_adobergb_standard_surface8_coat_color, image_lin_adobergb_standard_surface8_coat_roughness, image_lin_adobergb_standard_surface8_coat_anisotropy, image_lin_adobergb_standard_surface8_coat_rotation, image_lin_adobergb_standard_surface8_coat_IOR, geomprop_Nworld_out1, image_lin_adobergb_standard_surface8_coat_affect_color, image_lin_adobergb_standard_surface8_coat_affect_roughness, image_lin_adobergb_standard_surface8_thin_film_thickness, image_lin_adobergb_standard_surface8_thin_film_IOR, image_lin_adobergb_standard_surface8_emission, image_lin_adobergb_standard_surface8_emission_color, image_lin_adobergb_standard_surface8_opacity, image_lin_adobergb_standard_surface8_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, image_lin_adobergb_standard_surface8_out);
	assign		image_lin_adobergb_standard_surface8_out.bsdf null_closure 	%line{806} %argrw{"wr"}
	assign		image_lin_adobergb_standard_surface8_out.edf null_closure 	%argrw{"wr"}
	assign		image_lin_adobergb_standard_surface8_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:807
#     {
	functioncall	$const30 614 	%line{807} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:276
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___701_null_closure $const1 	%line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:277
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___701_coat_roughness_vector_out.x $const5 	%line{277} %argrw{"wr"}
	assign		___701_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:278
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const31 124 	%line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp24 image_lin_adobergb_standard_surface8_coat_roughness image_lin_adobergb_standard_surface8_coat_roughness 	%line{101} %argrw{"wrr"}
	functioncall	$const33 110 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp25 $tmp24 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp25 $const32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:102
#     {
	gt		$tmp26 image_lin_adobergb_standard_surface8_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{102} %argrw{"wrr"}
	if		$tmp26 122 124 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const33 115 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp28 image_lin_adobergb_standard_surface8_coat_anisotropy $const34 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp27 $tmp28 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp29 $const10 $tmp27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{104} %argrw{"wrr"}
	sqrt		___678_aspect $tmp29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp30 ___677_roughness_sqr ___678_aspect 	%line{105} %argrw{"wrr"}
	min		___701_coat_roughness_vector_out.x $tmp30 $const10 	%argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:106
#     }
	mul		___701_coat_roughness_vector_out.y ___677_roughness_sqr ___678_aspect 	%line{106} %argrw{"wrr"}
	assign		___701_coat_roughness_vector_out.y ___701_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:110
#         result.y = roughness_sqr;
	assign		___701_coat_roughness_vector_out.x ___677_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:111
#     }
	assign		___701_coat_roughness_vector_out.y ___677_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:279
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___701_coat_tangent_rotate_degree_in2_tmp $const35 	%line{279} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:280
#     color metal_reflectivity_out = base_color * base;
	mul		___701_coat_tangent_rotate_degree_out image_lin_adobergb_standard_surface8_coat_rotation ___701_coat_tangent_rotate_degree_in2_tmp 	%line{280} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:281
#     color metal_edgecolor_out = specular_color * specular;
	mul		___701_metal_reflectivity_out image_lin_adobergb_out_cm_out image_lin_adobergb_standard_surface8_base 	%line{281} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:282
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___701_metal_edgecolor_out image_lin_adobergb_standard_surface8_specular_color image_lin_adobergb_standard_surface8_specular 	%line{282} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:283
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___701_coat_affect_roughness_multiply1_out image_lin_adobergb_standard_surface8_coat_affect_roughness image_lin_adobergb_standard_surface8_coat 	%line{283} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:284
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___701_tangent_rotate_degree_in2_tmp $const35 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:285
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___701_tangent_rotate_degree_out image_lin_adobergb_standard_surface8_specular_rotation ___701_tangent_rotate_degree_in2_tmp 	%line{285} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:286
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___701_transmission_roughness_add_out image_lin_adobergb_standard_surface8_specular_roughness image_lin_adobergb_standard_surface8_transmission_extra_roughness 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:287
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___701_subsurface_color_nonnegative_in2_tmp $const5 	%line{287} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:288
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp31 ___701_subsurface_color_nonnegative_in2_tmp 	%line{288} %argrw{"wr"}
	max		___701_subsurface_color_nonnegative_out image_lin_adobergb_standard_surface8_subsurface_color $tmp31 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:289
#     float coat_clamped_high_tmp = 1.000000;
	assign		___701_coat_clamped_low_tmp $const5 	%line{289} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:290
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___701_coat_clamped_high_tmp $const10 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:291
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const33 140 	%line{291} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp32 image_lin_adobergb_standard_surface8_coat ___701_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_coat_clamped_out $tmp32 ___701_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:292
#     float subsurface_selector_out = float(thin_walled);
	mul		___701_subsurface_radius_scaled_out image_lin_adobergb_standard_surface8_subsurface_radius image_lin_adobergb_standard_surface8_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{292} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:293
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp33 image_lin_adobergb_standard_surface8_thin_walled 	%line{293} %argrw{"wr"}
	assign		___701_subsurface_selector_out $tmp33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:294
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___701_base_color_nonnegative_in2_tmp $const5 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:295
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp34 ___701_base_color_nonnegative_in2_tmp 	%line{295} %argrw{"wr"}
	max		___701_base_color_nonnegative_out image_lin_adobergb_out_cm_out $tmp34 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:296
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___701_coat_attenuation_bg_tmp $const36 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:297
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___701_coat_attenuation_out ___701_coat_attenuation_bg_tmp image_lin_adobergb_standard_surface8_coat_color image_lin_adobergb_standard_surface8_coat 	%line{297} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:298
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___701_one_minus_coat_ior_in1_tmp $const10 	%line{298} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:299
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___701_one_minus_coat_ior_out ___701_one_minus_coat_ior_in1_tmp image_lin_adobergb_standard_surface8_coat_IOR 	%line{299} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:300
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___701_one_plus_coat_ior_in1_tmp $const10 	%line{300} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:301
#     color emission_weight_out = emission_color * emission1;
	add		___701_one_plus_coat_ior_out ___701_one_plus_coat_ior_in1_tmp image_lin_adobergb_standard_surface8_coat_IOR 	%line{301} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:302
#     color opacity_luminance_out = color(0.0);
	mul		___701_emission_weight_out image_lin_adobergb_standard_surface8_emission_color image_lin_adobergb_standard_surface8_emission 	%line{302} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:303
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___701_opacity_luminance_out $const6 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:304
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const38 157 	%line{304} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:117
# }
	dot		$tmp36 image_lin_adobergb_standard_surface8_opacity $const37 	%line{117} %argrw{"wrr"}
	assign		___701_opacity_luminance_out $tmp36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:305
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___701_coat_tangent_rotate_out $const19 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:306
#     color artistic_ior_ior = color(0.0);
	functioncall	$const39 275 	%line{306} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:135
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const40 162 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp37 $const41 $const42 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_coat_tangent_rotate_degree_out $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:136
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const43 225 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{136} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:122
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:123
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:124
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:125
# 
	sub		___681_oc $const10 ___681_c 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp38 ___681_nAxis $const1 	%line{127} %argrw{"wrr"}
	mul		$tmp39 ___681_oc $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp41 $tmp39 $tmp40 	%argrw{"wrr"}
	add		$tmp42 $tmp41 ___681_c 	%argrw{"wrr"}
	compref		$tmp43 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp44 ___681_oc $tmp43 	%argrw{"wrr"}
	compref		$tmp45 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
	compref		$tmp47 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp48 $tmp47 ___681_s 	%argrw{"wrr"}
	sub		$tmp49 $tmp46 $tmp48 	%argrw{"wrr"}
	compref		$tmp50 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp51 ___681_oc $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	compref		$tmp54 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp55 $tmp54 ___681_s 	%argrw{"wrr"}
	add		$tmp56 $tmp53 $tmp55 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:128
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp57 ___681_nAxis $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp58 ___681_oc $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
	compref		$tmp61 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp62 $tmp61 ___681_s 	%argrw{"wrr"}
	add		$tmp63 $tmp60 $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp65 ___681_oc $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp67 $tmp65 $tmp66 	%argrw{"wrr"}
	add		$tmp68 $tmp67 ___681_c 	%argrw{"wrr"}
	compref		$tmp69 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp70 ___681_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp74 $tmp73 ___681_s 	%argrw{"wrr"}
	sub		$tmp75 $tmp72 $tmp74 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:129
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp76 ___681_nAxis $const4 	%line{129} %argrw{"wrr"}
	mul		$tmp77 ___681_oc $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp81 $tmp80 ___681_s 	%argrw{"wrr"}
	sub		$tmp82 $tmp79 $tmp81 	%argrw{"wrr"}
	compref		$tmp83 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp84 ___681_oc $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
	compref		$tmp87 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp88 $tmp87 ___681_s 	%argrw{"wrr"}
	add		$tmp89 $tmp86 $tmp88 	%argrw{"wrr"}
	compref		$tmp90 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp91 ___681_oc $tmp90 	%argrw{"wrr"}
	compref		$tmp92 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp93 $tmp91 $tmp92 	%argrw{"wrr"}
	add		$tmp94 $tmp93 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp42 $tmp49 $tmp56 $const5 $tmp63 $tmp68 $tmp75 $const5 $tmp82 $tmp89 $tmp94 $const5 $const5 $const5 $const5 $const10 	%line{127} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:137
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp95.x geomprop_Tworld_out1 $const1 	%line{137} %argrw{"wrr"}
	compref		$tmp95.y geomprop_Tworld_out1 $const23 	%argrw{"wrr"}
	compref		$tmp95.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp95.w $const10 	%argrw{"wr"}
	functioncall	$const2 274 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp96 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp97 $tmp96 $tmp95.x 	%argrw{"wrr"}
	mxcompref	$tmp98 ___682_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp99 $tmp98 $tmp95.y 	%argrw{"wrr"}
	add		$tmp100 $tmp97 $tmp99 	%argrw{"wrr"}
	mxcompref	$tmp101 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp102 $tmp101 $tmp95.z 	%argrw{"wrr"}
	add		$tmp103 $tmp100 $tmp102 	%argrw{"wrr"}
	mxcompref	$tmp104 ___682_m $const44 $const1 	%argrw{"wrrr"}
	mul		$tmp105 $tmp104 $tmp95.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp103 $tmp105 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp106 ___682_m $const1 $const23 	%line{416} %argrw{"wrrr"}
	mul		$tmp107 $tmp106 $tmp95.x 	%argrw{"wrr"}
	mxcompref	$tmp108 ___682_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp109 $tmp108 $tmp95.y 	%argrw{"wrr"}
	add		$tmp110 $tmp107 $tmp109 	%argrw{"wrr"}
	mxcompref	$tmp111 ___682_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp112 $tmp111 $tmp95.z 	%argrw{"wrr"}
	add		$tmp113 $tmp110 $tmp112 	%argrw{"wrr"}
	mxcompref	$tmp114 ___682_m $const44 $const23 	%argrw{"wrrr"}
	mul		$tmp115 $tmp114 $tmp95.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp113 $tmp115 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp116 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp95.x 	%argrw{"wrr"}
	mxcompref	$tmp118 ___682_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp119 $tmp118 $tmp95.y 	%argrw{"wrr"}
	add		$tmp120 $tmp117 $tmp119 	%argrw{"wrr"}
	mxcompref	$tmp121 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp95.z 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	mxcompref	$tmp124 ___682_m $const44 $const4 	%argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp95.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp123 $tmp125 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp126 ___682_m $const1 $const44 	%line{418} %argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp95.x 	%argrw{"wrr"}
	mxcompref	$tmp128 ___682_m $const23 $const44 	%argrw{"wrrr"}
	mul		$tmp129 $tmp128 $tmp95.y 	%argrw{"wrr"}
	add		$tmp130 $tmp127 $tmp129 	%argrw{"wrr"}
	mxcompref	$tmp131 ___682_m $const4 $const44 	%argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp95.z 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	mxcompref	$tmp134 ___682_m $const44 $const44 	%argrw{"wrrr"}
	mul		$tmp135 $tmp134 $tmp95.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp133 $tmp135 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:138
# }
	vector		___701_coat_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{138} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:307
#     color artistic_ior_extinction = color(0.0);
	assign		___701_artistic_ior_ior $const6 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:308
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___701_artistic_ior_extinction $const6 	%line{308} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:309
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const45 302 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:146
#     color r_sqrt = sqrt(r);
	assign		$tmp136 $const5 	%line{146} %argrw{"wr"}
	assign		$tmp137 $const46 	%argrw{"wr"}
	functioncall	$const33 283 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp138 ___701_metal_reflectivity_out $tmp137 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___683_r $tmp138 $tmp136 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:147
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___683_r_sqrt ___683_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{147} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:148
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp139 $const10 ___683_r 	%line{148} %argrw{"wrr"}
	add		$tmp140 $const10 ___683_r 	%argrw{"wrr"}
	div		___683_n_min $tmp139 $tmp140 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:149
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp141 $const10 ___683_r_sqrt 	%line{149} %argrw{"wrr"}
	sub		$tmp142 $const10 ___683_r_sqrt 	%argrw{"wrr"}
	div		___683_n_max $tmp141 $tmp142 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:150
# 
	mix		___701_artistic_ior_ior ___683_n_max ___683_n_min ___701_metal_edgecolor_out 	%line{150} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:152
#     color nm1 = ior - 1.0;
	add		___683_np1 ___701_artistic_ior_ior $const10 	%line{152} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:153
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___683_nm1 ___701_artistic_ior_ior $const10 	%line{153} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:154
#     k2 = max(k2, 0.0);
	mul		$tmp143 ___683_np1 ___683_np1 	%line{154} %argrw{"wrr"}
	mul		$tmp144 $tmp143 ___683_r 	%argrw{"wrr"}
	mul		$tmp145 ___683_nm1 ___683_nm1 	%argrw{"wrr"}
	sub		$tmp146 $tmp144 $tmp145 	%argrw{"wrr"}
	sub		$tmp147 $const10 ___683_r 	%argrw{"wrr"}
	div		___683_k2 $tmp146 $tmp147 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:155
#     extinction = sqrt(k2);
	assign		$tmp148 $const5 	%line{155} %argrw{"wr"}
	max		___683_k2 ___683_k2 $tmp148 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:156
# }
	sqrt		___701_artistic_ior_extinction ___683_k2 	%line{156} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:310
#     vector tangent_rotate_out = vector(0.0);
	mul		___701_coat_affect_roughness_multiply2_out ___701_coat_affect_roughness_multiply1_out image_lin_adobergb_standard_surface8_coat_roughness 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:311
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___701_tangent_rotate_out $const19 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:312
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const39 421 	%line{312} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:135
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const40 308 	%line{135} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp149 $const41 $const42 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___682_rotationRadians ___701_tangent_rotate_degree_out $tmp149 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:136
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const43 371 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{136} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:122
#     float s = sin(angle);
	normalize	___681_nAxis geomprop_Nworld_out1 	%line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:123
#     float c = cos(angle);
	sin		___681_s ___682_rotationRadians 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:124
#     float oc = 1.0 - c;
	cos		___681_c ___682_rotationRadians 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:125
# 
	sub		___681_oc $const10 ___681_c 	%line{125} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp150 ___681_nAxis $const1 	%line{127} %argrw{"wrr"}
	mul		$tmp151 ___681_oc $tmp150 	%argrw{"wrr"}
	compref		$tmp152 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp153 $tmp151 $tmp152 	%argrw{"wrr"}
	add		$tmp154 $tmp153 ___681_c 	%argrw{"wrr"}
	compref		$tmp155 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp156 ___681_oc $tmp155 	%argrw{"wrr"}
	compref		$tmp157 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp158 $tmp156 $tmp157 	%argrw{"wrr"}
	compref		$tmp159 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp160 $tmp159 ___681_s 	%argrw{"wrr"}
	sub		$tmp161 $tmp158 $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp163 ___681_oc $tmp162 	%argrw{"wrr"}
	compref		$tmp164 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	compref		$tmp166 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp167 $tmp166 ___681_s 	%argrw{"wrr"}
	add		$tmp168 $tmp165 $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:128
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp169 ___681_nAxis $const1 	%line{128} %argrw{"wrr"}
	mul		$tmp170 ___681_oc $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp172 $tmp170 $tmp171 	%argrw{"wrr"}
	compref		$tmp173 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp174 $tmp173 ___681_s 	%argrw{"wrr"}
	add		$tmp175 $tmp172 $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp177 ___681_oc $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp179 $tmp177 $tmp178 	%argrw{"wrr"}
	add		$tmp180 $tmp179 ___681_c 	%argrw{"wrr"}
	compref		$tmp181 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp182 ___681_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compref		$tmp185 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___681_s 	%argrw{"wrr"}
	sub		$tmp187 $tmp184 $tmp186 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:129
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp188 ___681_nAxis $const4 	%line{129} %argrw{"wrr"}
	mul		$tmp189 ___681_oc $tmp188 	%argrw{"wrr"}
	compref		$tmp190 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp191 $tmp189 $tmp190 	%argrw{"wrr"}
	compref		$tmp192 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp193 $tmp192 ___681_s 	%argrw{"wrr"}
	sub		$tmp194 $tmp191 $tmp193 	%argrw{"wrr"}
	compref		$tmp195 ___681_nAxis $const23 	%argrw{"wrr"}
	mul		$tmp196 ___681_oc $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp198 $tmp196 $tmp197 	%argrw{"wrr"}
	compref		$tmp199 ___681_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp200 $tmp199 ___681_s 	%argrw{"wrr"}
	add		$tmp201 $tmp198 $tmp200 	%argrw{"wrr"}
	compref		$tmp202 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp203 ___681_oc $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___681_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp205 $tmp203 $tmp204 	%argrw{"wrr"}
	add		$tmp206 $tmp205 ___681_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:127
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___682_m $tmp154 $tmp161 $tmp168 $const5 $tmp175 $tmp180 $tmp187 $const5 $tmp194 $tmp201 $tmp206 $const5 $const5 $const5 $const5 $const10 	%line{127} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:137
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp207.x geomprop_Tworld_out1 $const1 	%line{137} %argrw{"wrr"}
	compref		$tmp207.y geomprop_Tworld_out1 $const23 	%argrw{"wrr"}
	compref		$tmp207.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp207.w $const10 	%argrw{"wr"}
	functioncall	$const2 420 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp208 ___682_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp209 $tmp208 $tmp207.x 	%argrw{"wrr"}
	mxcompref	$tmp210 ___682_m $const23 $const1 	%argrw{"wrrr"}
	mul		$tmp211 $tmp210 $tmp207.y 	%argrw{"wrr"}
	add		$tmp212 $tmp209 $tmp211 	%argrw{"wrr"}
	mxcompref	$tmp213 ___682_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp214 $tmp213 $tmp207.z 	%argrw{"wrr"}
	add		$tmp215 $tmp212 $tmp214 	%argrw{"wrr"}
	mxcompref	$tmp216 ___682_m $const44 $const1 	%argrw{"wrrr"}
	mul		$tmp217 $tmp216 $tmp207.w 	%argrw{"wrr"}
	add		___682_trans.x $tmp215 $tmp217 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp218 ___682_m $const1 $const23 	%line{416} %argrw{"wrrr"}
	mul		$tmp219 $tmp218 $tmp207.x 	%argrw{"wrr"}
	mxcompref	$tmp220 ___682_m $const23 $const23 	%argrw{"wrrr"}
	mul		$tmp221 $tmp220 $tmp207.y 	%argrw{"wrr"}
	add		$tmp222 $tmp219 $tmp221 	%argrw{"wrr"}
	mxcompref	$tmp223 ___682_m $const4 $const23 	%argrw{"wrrr"}
	mul		$tmp224 $tmp223 $tmp207.z 	%argrw{"wrr"}
	add		$tmp225 $tmp222 $tmp224 	%argrw{"wrr"}
	mxcompref	$tmp226 ___682_m $const44 $const23 	%argrw{"wrrr"}
	mul		$tmp227 $tmp226 $tmp207.w 	%argrw{"wrr"}
	add		___682_trans.y $tmp225 $tmp227 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp228 ___682_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp207.x 	%argrw{"wrr"}
	mxcompref	$tmp230 ___682_m $const23 $const4 	%argrw{"wrrr"}
	mul		$tmp231 $tmp230 $tmp207.y 	%argrw{"wrr"}
	add		$tmp232 $tmp229 $tmp231 	%argrw{"wrr"}
	mxcompref	$tmp233 ___682_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp207.z 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___682_m $const44 $const4 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp207.w 	%argrw{"wrr"}
	add		___682_trans.z $tmp235 $tmp237 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp238 ___682_m $const1 $const44 	%line{418} %argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp207.x 	%argrw{"wrr"}
	mxcompref	$tmp240 ___682_m $const23 $const44 	%argrw{"wrrr"}
	mul		$tmp241 $tmp240 $tmp207.y 	%argrw{"wrr"}
	add		$tmp242 $tmp239 $tmp241 	%argrw{"wrr"}
	mxcompref	$tmp243 ___682_m $const4 $const44 	%argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp207.z 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	mxcompref	$tmp246 ___682_m $const44 $const44 	%argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp207.w 	%argrw{"wrr"}
	add		___682_trans.w $tmp245 $tmp247 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:138
# }
	vector		___701_tangent_rotate_out ___682_trans.x ___682_trans.y ___682_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{138} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:313
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___701_transmission_roughness_clamped_low_tmp $const5 	%line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:314
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___701_transmission_roughness_clamped_high_tmp $const10 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:315
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const33 426 	%line{315} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp248 ___701_transmission_roughness_add_out ___701_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_transmission_roughness_clamped_out $tmp248 ___701_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:316
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___701_coat_gamma_multiply_out ___701_coat_clamped_out image_lin_adobergb_standard_surface8_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:317
#     int opacity_luminance_float_index_tmp = 0;
	div		___701_coat_ior_to_F0_sqrt_out ___701_one_minus_coat_ior_out ___701_one_plus_coat_ior_out 	%line{317} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:318
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___701_opacity_luminance_float_index_tmp $const1 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:319
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const22 431 	%line{319} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___701_opacity_luminance_float_out ___701_opacity_luminance_out ___701_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:320
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___701_coat_tangent_rotate_normalize_out ___701_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:321
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_roughness_fg_tmp $const10 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:322
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___701_coat_affected_roughness_out image_lin_adobergb_standard_surface8_specular_roughness ___701_coat_affected_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{322} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:323
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___701_tangent_rotate_normalize_out ___701_tangent_rotate_out 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:324
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___701_coat_affected_transmission_roughness_fg_tmp $const10 	%line{324} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:325
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___701_coat_affected_transmission_roughness_out ___701_transmission_roughness_clamped_out ___701_coat_affected_transmission_roughness_fg_tmp ___701_coat_affect_roughness_multiply2_out 	%line{325} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:326
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___701_coat_gamma_in2_tmp $const10 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:327
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___701_coat_gamma_out ___701_coat_gamma_multiply_out ___701_coat_gamma_in2_tmp 	%line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:328
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___701_coat_ior_to_F0_out ___701_coat_ior_to_F0_sqrt_out ___701_coat_ior_to_F0_sqrt_out 	%line{328} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:329
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___701_coat_tangent_value2_tmp $const5 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:330
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp249 image_lin_adobergb_standard_surface8_coat_anisotropy ___701_coat_tangent_value2_tmp 	%line{330} %argrw{"wrr"}
	functioncall	$const47 448 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp249 446 448 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_coat_tangent_out ___701_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:331
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___701_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{331} %argrw{"wr"}
	assign		___701_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:332
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const31 469 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp250 ___701_coat_affected_roughness_out ___701_coat_affected_roughness_out 	%line{101} %argrw{"wrr"}
	functioncall	$const33 455 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp251 $tmp250 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp251 $const32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:102
#     {
	gt		$tmp252 image_lin_adobergb_standard_surface8_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{102} %argrw{"wrr"}
	if		$tmp252 467 469 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const33 460 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp254 image_lin_adobergb_standard_surface8_specular_anisotropy $const34 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp253 $tmp254 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp255 $const10 $tmp253 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{104} %argrw{"wrr"}
	sqrt		___678_aspect $tmp255 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp256 ___677_roughness_sqr ___678_aspect 	%line{105} %argrw{"wrr"}
	min		___701_main_roughness_out.x $tmp256 $const10 	%argrw{"wrr"}
	assign		___701_main_roughness_out.x ___701_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:106
#     }
	mul		___701_main_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{106} %argrw{"wrr"}
	assign		___701_main_roughness_out.y ___701_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:110
#         result.y = roughness_sqr;
	assign		___701_main_roughness_out.x ___677_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:111
#     }
	assign		___701_main_roughness_out.y ___677_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:333
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___701_main_tangent_value2_tmp $const5 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:334
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp257 image_lin_adobergb_standard_surface8_specular_anisotropy ___701_main_tangent_value2_tmp 	%line{334} %argrw{"wrr"}
	functioncall	$const47 477 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp257 475 477 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___701_main_tangent_out ___701_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___701_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:335
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___701_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{335} %argrw{"wr"}
	assign		___701_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:336
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const31 498 	%line{336} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:101
#     if (anisotropy > 0.0)
	mul		$tmp258 ___701_coat_affected_transmission_roughness_out ___701_coat_affected_transmission_roughness_out 	%line{101} %argrw{"wrr"}
	functioncall	$const33 484 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp259 $tmp258 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___677_roughness_sqr $tmp259 $const32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:102
#     {
	gt		$tmp260 image_lin_adobergb_standard_surface8_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{102} %argrw{"wrr"}
	if		$tmp260 496 498 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const33 489 	%line{104} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp262 image_lin_adobergb_standard_surface8_specular_anisotropy $const34 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp261 $tmp262 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:104
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp263 $const10 $tmp261 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{104} %argrw{"wrr"}
	sqrt		___678_aspect $tmp263 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:105
#         result.y = roughness_sqr * aspect;
	div		$tmp264 ___677_roughness_sqr ___678_aspect 	%line{105} %argrw{"wrr"}
	min		___701_transmission_roughness_out.x $tmp264 $const10 	%argrw{"wrr"}
	assign		___701_transmission_roughness_out.x ___701_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:106
#     }
	mul		___701_transmission_roughness_out.y ___677_roughness_sqr ___678_aspect 	%line{106} %argrw{"wrr"}
	assign		___701_transmission_roughness_out.y ___701_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:110
#         result.y = roughness_sqr;
	assign		___701_transmission_roughness_out.x ___677_roughness_sqr 	%line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:111
#     }
	assign		___701_transmission_roughness_out.y ___677_roughness_sqr 	%line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:337
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___701_coat_affected_subsurface_color_out ___701_subsurface_color_nonnegative_out ___701_coat_gamma_out 	%line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:338
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___701_coat_affected_diffuse_color_out ___701_base_color_nonnegative_out ___701_coat_gamma_out 	%line{338} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:339
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___701_one_minus_coat_ior_to_F0_in1_tmp $const10 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:340
#     color emission_color0_out = color(0.0);
	sub		___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_in1_tmp ___701_coat_ior_to_F0_out 	%line{340} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:341
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___701_emission_color0_out $const6 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:342
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const48 506 	%line{342} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:177
#     out = combine_out;
	color		___686_combine_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out ___701_one_minus_coat_ior_to_F0_out 	%line{177} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:178
# }
	assign		___701_emission_color0_out ___686_combine_out 	%line{178} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:343
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___701_coat_bsdf_out ___701_null_closure 	%line{343} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:344
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const52 518 	%line{344} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp266 $const51 $const53 	%line{161} %argrw{"wrr"}
	if		$tmp266 511 512 	%argrw{"r"}
	assign		___684_reflection_tint $const6 	%argrw{"wr"}
	assign		___684_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp267 $const51 $const51 	%line{162} %argrw{"wrr"}
	if		$tmp267 515 516 	%argrw{"r"}
	assign		___684_transmission_tint $const6 	%argrw{"wr"}
	assign		___684_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:163
# }
	closure		$tmp268 $const56 geomprop_Nworld_out1 ___701_coat_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_coat_roughness_vector_out.x ___701_coat_roughness_vector_out.y image_lin_adobergb_standard_surface8_coat_IOR $const50 $const54 $const5 $const55 $const49 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_coat_bsdf_out $tmp268 image_lin_adobergb_standard_surface8_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:345
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___701_metal_bsdf_weight_tmp $const10 	%line{345} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:346
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___701_metal_bsdf_distribution_tmp $const50 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:347
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp269 $const57 geomprop_Nworld_out1 ___701_main_tangent_out ___701_main_roughness_out.x ___701_main_roughness_out.y ___701_artistic_ior_ior ___701_artistic_ior_extinction ___701_metal_bsdf_distribution_tmp $const54 image_lin_adobergb_standard_surface8_thin_film_thickness $const55 image_lin_adobergb_standard_surface8_thin_film_IOR 	%line{347} %argrw{"wrrrrrrrrrrrr"}
	mul		___701_metal_bsdf_out $tmp269 ___701_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:348
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___701_specular_bsdf_out ___701_null_closure 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:349
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const52 534 	%line{349} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp270 $const51 $const53 	%line{161} %argrw{"wrr"}
	if		$tmp270 527 528 	%argrw{"r"}
	assign		___684_reflection_tint $const6 	%argrw{"wr"}
	assign		___684_reflection_tint image_lin_adobergb_standard_surface8_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp271 $const51 $const51 	%line{162} %argrw{"wrr"}
	if		$tmp271 531 532 	%argrw{"r"}
	assign		___684_transmission_tint $const6 	%argrw{"wr"}
	assign		___684_transmission_tint image_lin_adobergb_standard_surface8_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:163
# }
	closure		$tmp272 $const56 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_main_roughness_out.x ___701_main_roughness_out.y image_lin_adobergb_standard_surface8_specular_IOR $const50 $const54 image_lin_adobergb_standard_surface8_thin_film_thickness $const55 image_lin_adobergb_standard_surface8_thin_film_IOR 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_specular_bsdf_out $tmp272 image_lin_adobergb_standard_surface8_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:350
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___701_transmission_bsdf_out ___701_null_closure 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:351
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const52 546 	%line{351} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:161
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp273 $const53 $const53 	%line{161} %argrw{"wrr"}
	if		$tmp273 539 540 	%argrw{"r"}
	assign		___684_reflection_tint $const6 	%argrw{"wr"}
	assign		___684_reflection_tint image_lin_adobergb_standard_surface8_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:162
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp274 $const53 $const51 	%line{162} %argrw{"wrr"}
	if		$tmp274 543 544 	%argrw{"r"}
	assign		___684_transmission_tint $const6 	%argrw{"wr"}
	assign		___684_transmission_tint image_lin_adobergb_standard_surface8_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:163
# }
	closure		$tmp275 $const56 geomprop_Nworld_out1 ___701_main_tangent_out ___684_reflection_tint ___684_transmission_tint ___701_transmission_roughness_out.x ___701_transmission_roughness_out.y image_lin_adobergb_standard_surface8_specular_IOR $const50 $const54 $const5 $const55 $const49 	%line{163} %argrw{"wrrrrrrrrrrrrr"}
	mul		___701_transmission_bsdf_out $tmp275 $const10 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:352
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp276 $const58 geomprop_Nworld_out1 image_lin_adobergb_standard_surface8_sheen_color image_lin_adobergb_standard_surface8_sheen_roughness 	%line{352} %argrw{"wrrrr"}
	mul		___701_sheen_bsdf_out $tmp276 image_lin_adobergb_standard_surface8_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:353
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___701_translucent_bsdf_weight_tmp $const10 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:354
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp277 $const59 geomprop_Nworld_out1 ___701_coat_affected_subsurface_color_out 	%line{354} %argrw{"wrrr"}
	mul		___701_translucent_bsdf_out $tmp277 ___701_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:355
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___701_subsurface_bsdf_out ___701_null_closure 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:356
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const60 555 	%line{356} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:171
# #endif
	mul		$tmp278 $const10 ___701_coat_affected_subsurface_color_out 	%line{171} %argrw{"wrr"}
	closure		___701_subsurface_bsdf_out $const61 geomprop_Nworld_out1 $tmp278 $const10 ___701_subsurface_radius_scaled_out image_lin_adobergb_standard_surface8_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:357
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const62 560 	%line{357} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp279 $const10 ___701_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp280 ___701_subsurface_bsdf_out $tmp279 	%argrw{"wrr"}
	mul		$tmp281 ___701_translucent_bsdf_out ___701_subsurface_selector_out 	%argrw{"wrr"}
	add		___701_selected_subsurface_bsdf_out $tmp280 $tmp281 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:358
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp282 $const63 geomprop_Nworld_out1 ___701_coat_affected_diffuse_color_out image_lin_adobergb_standard_surface8_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{358} %argrw{"wrrrr"}
	mul		___701_diffuse_bsdf_out $tmp282 image_lin_adobergb_standard_surface8_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:359
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const62 567 	%line{359} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp283 $const10 image_lin_adobergb_standard_surface8_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp284 ___701_diffuse_bsdf_out $tmp283 	%argrw{"wrr"}
	mul		$tmp285 ___701_selected_subsurface_bsdf_out image_lin_adobergb_standard_surface8_subsurface 	%argrw{"wrr"}
	add		___701_subsurface_mix_out $tmp284 $tmp285 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:360
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___701_sheen_layer_out $const64 ___701_sheen_bsdf_out ___701_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{360} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:361
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const62 573 	%line{361} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp286 $const10 image_lin_adobergb_standard_surface8_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp287 ___701_sheen_layer_out $tmp286 	%argrw{"wrr"}
	mul		$tmp288 ___701_transmission_bsdf_out image_lin_adobergb_standard_surface8_transmission 	%argrw{"wrr"}
	add		___701_transmission_mix_out $tmp287 $tmp288 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:362
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___701_specular_layer_out $const64 ___701_specular_bsdf_out ___701_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{362} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:363
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const62 579 	%line{363} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp289 $const10 image_lin_adobergb_standard_surface8_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp290 ___701_specular_layer_out $tmp289 	%argrw{"wrr"}
	mul		$tmp291 ___701_metal_bsdf_out image_lin_adobergb_standard_surface8_metalness 	%argrw{"wrr"}
	add		___701_metalness_mix_out $tmp290 $tmp291 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:364
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___701_thin_film_layer_attenuated_out ___701_metalness_mix_out ___701_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{364} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:365
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___701_coat_layer_out $const64 ___701_coat_bsdf_out ___701_thin_film_layer_attenuated_out 	%line{365} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:366
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___701_emission_edf_out $const65 ___701_emission_weight_out 	%line{366} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:367
#     EDF coat_emission_edf_out = null_closure;
	mul		___701_coat_tinted_emission_edf_out ___701_emission_edf_out image_lin_adobergb_standard_surface8_coat_color 	%line{367} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:368
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___701_coat_emission_edf_out ___701_null_closure 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:369
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const67 596 	%line{369} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:262
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp294 I 	%line{262} %argrw{"wr"}
	dot		$tmp293 N $tmp294 	%argrw{"wrr"}
	fabs		___699_NdotV $tmp293 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:263
#     result = base * f;
	functioncall	$const68 595 	%line{263} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:256
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp295 $const10 ___699_NdotV 	%line{256} %argrw{"wrr"}
	functioncall	$const33 593 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp296 $tmp295 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_x $tmp296 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:257
# }
	pow		$tmp297 ___698_x $const66 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{257} %argrw{"wrr"}
	mix		___699_f ___701_emission_color0_out $const6 $tmp297 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:264
# }
	mul		___701_coat_emission_edf_out ___701_coat_tinted_emission_edf_out ___699_f 	%line{264} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:370
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const62 601 	%line{370} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp298 $const10 image_lin_adobergb_standard_surface8_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp299 ___701_emission_edf_out $tmp298 	%argrw{"wrr"}
	mul		$tmp300 ___701_coat_emission_edf_out image_lin_adobergb_standard_surface8_coat 	%argrw{"wrr"}
	add		___701_blended_coat_emission_edf_out $tmp299 $tmp300 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:371
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___701_shader_constructor_out.bsdf ___701_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{371} %argrw{"wr"}
	assign		___701_shader_constructor_out.edf ___701_null_closure 	%argrw{"wr"}
	assign		___701_shader_constructor_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:372
#     out = shader_constructor_out;
	functioncall	$const69 611 	%line{372} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:269
#     result.edf     = edf;
	assign		___701_shader_constructor_out.bsdf ___701_coat_layer_out 	%line{269} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:270
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___701_shader_constructor_out.edf ___701_blended_coat_emission_edf_out 	%line{270} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:271
# }
	functioncall	$const33 610 	%line{271} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp301 ___701_opacity_luminance_float_out $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_shader_constructor_out.opacity $tmp301 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:271
# }
	assign		___701_shader_constructor_out.opacity ___701_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{271} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:373
# }
	assign		image_lin_adobergb_standard_surface8_out.bsdf ___701_shader_constructor_out.bsdf 	%line{373} %argrw{"wr"}
	assign		image_lin_adobergb_standard_surface8_out.edf ___701_shader_constructor_out.edf 	%argrw{"wr"}
	assign		image_lin_adobergb_standard_surface8_out.opacity ___701_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:809
#         image_lin_adobergb_out = (image_lin_adobergb_standard_surface8_out.bsdf + image_lin_adobergb_standard_surface8_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const33 617 	%line{809} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp302 image_lin_adobergb_standard_surface8_out.opacity $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_opacity_weight $tmp302 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl:810
#     }
	add		$tmp303 image_lin_adobergb_standard_surface8_out.bsdf image_lin_adobergb_standard_surface8_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_lin_adobergb_out.osl"} %line{810} %argrw{"wrr"}
	mul		$tmp304 $tmp303 ___702_opacity_weight 	%argrw{"wrr"}
	closure		$tmp305 $const70 	%argrw{"wr"}
	sub		$tmp306 $const10 ___702_opacity_weight 	%argrw{"wrr"}
	mul		$tmp307 $tmp305 $tmp306 	%argrw{"wrr"}
	add		image_lin_adobergb_out $tmp304 $tmp307 	%argrw{"wrr"}
	end
