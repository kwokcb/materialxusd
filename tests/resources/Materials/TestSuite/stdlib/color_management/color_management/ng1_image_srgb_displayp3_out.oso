OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\color_management\ng1_image_srgb_displayp3_out.oso
surface ng1_image_srgb_displayp3_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"image_srgb_displayp3_out"} 
param	string	geomprop_Nworld_space	"world"		%read{4,4} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_srgb_displayp3_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,label,"Filename"} %meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	image_srgb_displayp3_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	image_srgb_displayp3_layer	""		%meta{string,label,"Layer"}  %read{52,52} %write{2147483647,-1}
param	color	image_srgb_displayp3_default	0 0 0		%meta{string,label,"Default Color"}  %read{46,48} %write{2147483647,-1}
param	string	image_srgb_displayp3_uaddressmode	"periodic"		%meta{string,label,"Address Mode U"}  %read{17,52} %write{2147483647,-1}
param	string	image_srgb_displayp3_vaddressmode	"periodic"		%meta{string,label,"Address Mode V"}  %read{32,52} %write{2147483647,-1}
param	string	image_srgb_displayp3_filtertype	"linear"		%meta{string,label,"Filter Type"}  %read{52,52} %write{2147483647,-1}
param	string	image_srgb_displayp3_framerange	""		%meta{string,label,"Frame Range"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	image_srgb_displayp3_frameoffset	0		%meta{string,label,"Frame Offset"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	image_srgb_displayp3_frameendaction	"constant"		%meta{string,label,"Frame End Action"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{188,623} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{622,622} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{637,639} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{189,595} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{189,593} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{193,495} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{594,606} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{517,549} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{192,192} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{631,633} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{601,605} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{193,193} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{625,627} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{196,196} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{202,202} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{202,202} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{616,616} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{609,609} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{608,608} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{608,608} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{190,661} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{209,644} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{168,364} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{172,503} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{187,187} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{211,578} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{488,488} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{190,190} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{582,594} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{582,594} %write{2147483647,-1}
param	float	image_srgb_displayp3_standard_surface9_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{214,214} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{214,214} %write{2147483647,-1}
param	color	image_srgb_displayp3_standard_surface9_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{217,217} %write{2147483647,-1}
param	int	image_srgb_displayp3_standard_surface9_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{203,203} %write{2147483647,-1}
oparam	closure color	image_srgb_displayp3_out			%read{2147483647,-1} %write{684,684}
global	vector	I	%read{647,647} %write{2147483647,-1}
global	normal	N	%read{4,648} %write{2147483647,-1}
global	float	u	%read{10,10} %write{2147483647,-1} %derivs
global	float	v	%read{11,11} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{52,52} %write{48,48}
local	float	___670_st.x	%read{52,52} %write{50,50} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{52,52} %write{51,51} %mystruct{___670_st} %mystructfield{1} %derivs
local	int	___672_N_extract_0_index_tmp	%read{67,125} %write{65,123}
local	float	___672_N_extract_0_out	%read{74,132} %write{67,125}
local	int	___672_N_extract_1_index_tmp	%read{70,128} %write{68,126}
local	float	___672_N_extract_1_out	%read{75,133} %write{70,128}
local	int	___672_N_extract_2_index_tmp	%read{73,131} %write{71,129}
local	float	___672_N_extract_2_out	%read{76,134} %write{73,131}
local	float	___673_bias_in2_tmp	%read{58,58} %write{57,57}
local	color	___673_bias_out	%read{79,79} %write{58,58}
local	float	___673_linSeg_in2_tmp	%read{60,60} %write{59,59}
local	color	___673_linSeg_out	%read{115,115} %write{60,60}
local	float	___673_colorSeparate_outr	%read{83,83} %write{61,74}
local	float	___673_colorSeparate_outg	%read{93,93} %write{62,75}
local	float	___673_colorSeparate_outb	%read{103,103} %write{63,76}
local	float	___673_max_in2_tmp	%read{78,78} %write{77,77}
local	color	___673_max_out	%read{111,111} %write{79,79}
local	float	___673_isAboveR_value2_tmp	%read{83,83} %write{80,80}
local	float	___673_isAboveR_in1_tmp	%read{86,86} %write{81,81}
local	float	___673_isAboveR_in2_tmp	%read{88,88} %write{82,82}
local	float	___673_isAboveR_out	%read{112,112} %write{86,88}
local	float	___673_isAboveG_value2_tmp	%read{93,93} %write{90,90}
local	float	___673_isAboveG_in1_tmp	%read{96,96} %write{91,91}
local	float	___673_isAboveG_in2_tmp	%read{98,98} %write{92,92}
local	float	___673_isAboveG_out	%read{112,112} %write{96,98}
local	float	___673_isAboveB_value2_tmp	%read{103,103} %write{100,100}
local	float	___673_isAboveB_in1_tmp	%read{106,106} %write{101,101}
local	float	___673_isAboveB_in2_tmp	%read{108,108} %write{102,102}
local	float	___673_isAboveB_out	%read{112,112} %write{106,108}
local	float	___673_scale_in2_tmp	%read{111,111} %write{110,110}
local	color	___673_scale_out	%read{114,114} %write{111,111}
local	color	___673_isAbove_out	%read{115,115} %write{112,112}
local	float	___673_powSeg_in2_tmp	%read{114,114} %write{113,113}
local	color	___673_powSeg_out	%read{115,115} %write{114,114}
local	color	___673_mix_out	%read{116,116} %write{115,115}
local	float	___674_separate_outr	%read{135,135} %write{119,132}
local	float	___674_separate_outg	%read{135,135} %write{120,133}
local	float	___674_separate_outb	%read{135,135} %write{121,134}
local	vector	___674_combine_out	%read{136,136} %write{135,135}
local	int	___675_N_extract_0_index_tmp	%read{147,147} %write{145,145}
local	float	___675_N_extract_0_out	%read{154,154} %write{147,147}
local	int	___675_N_extract_1_index_tmp	%read{150,150} %write{148,148}
local	float	___675_N_extract_1_out	%read{155,155} %write{150,150}
local	int	___675_N_extract_2_index_tmp	%read{153,153} %write{151,151}
local	float	___675_N_extract_2_out	%read{156,156} %write{153,153}
local	float	___676_separate_outx	%read{157,157} %write{141,154}
local	float	___676_separate_outy	%read{157,157} %write{142,155}
local	float	___676_separate_outz	%read{157,157} %write{143,156}
local	color	___676_combine_out	%read{158,158} %write{157,157}
local	color	___677_srgb_transform_out	%read{125,131} %write{55,116}
local	vector	___677_asVec_out	%read{138,138} %write{117,136}
local	matrix	___677_transform_mat_tmp	%read{138,138} %write{137,137}
local	vector	___677_transform_out	%read{147,153} %write{138,138}
local	color	___677_asColor_out	%read{159,159} %write{139,158}
local	float	___678_roughness_sqr	%read{179,559} %write{171,545}
local	float	___679_aspect	%read{179,556} %write{178,552}
local	vector	___682_nAxis	%read{229,429} %write{225,371}
local	float	___682_s	%read{239,425} %write{226,372}
local	float	___682_c	%read{228,431} %write{227,373}
local	float	___682_oc	%read{230,428} %write{228,374}
local	float	___683_rotationRadians	%read{226,373} %write{223,369}
local	matrix	___683_m	%read{292,479} %write{286,432}
local	float	___683_trans.x	%read{336,482} %write{302,448} %mystruct{___683_trans} %mystructfield{0}
local	float	___683_trans.y	%read{336,482} %write{313,459} %mystruct{___683_trans} %mystructfield{1}
local	float	___683_trans.z	%read{336,482} %write{324,470} %mystruct{___683_trans} %mystructfield{2}
local	float	___683_trans.w	%read{2147483647,-1} %write{335,481} %mystruct{___683_trans} %mystructfield{3}
local	color	___684_r	%read{345,359} %write{344,344}
local	color	___684_r_sqrt	%read{349,350} %write{345,345}
local	color	___684_n_min	%read{352,352} %write{348,348}
local	color	___684_n_max	%read{352,352} %write{351,351}
local	color	___684_np1	%read{355,355} %write{353,353}
local	color	___684_nm1	%read{357,357} %write{354,354}
local	color	___684_k2	%read{362,363} %write{360,362}
local	color	___685_reflection_tint	%read{578,606} %write{572,601}
local	color	___685_transmission_tint	%read{578,606} %write{576,605}
local	color	___687_combine_out	%read{567,567} %write{566,566}
local	float	___699_x	%read{655,655} %write{654,654}
local	float	___700_NdotV	%read{651,651} %write{649,649}
local	color	___700_f	%read{657,657} %write{656,656}
local	closure color	___702_null_closure	%read{568,664} %write{164,164}
local	float	___702_coat_roughness_vector_out.x	%read{181,578} %write{165,184} %mystruct{___702_coat_roughness_vector_out} %mystructfield{0}
local	float	___702_coat_roughness_vector_out.y	%read{183,578} %write{166,185} %mystruct{___702_coat_roughness_vector_out} %mystructfield{1}
local	float	___702_coat_tangent_rotate_degree_in2_tmp	%read{187,187} %write{186,186}
local	float	___702_coat_tangent_rotate_degree_out	%read{223,223} %write{187,187}
local	color	___702_metal_reflectivity_out	%read{343,343} %write{188,188}
local	color	___702_metal_edgecolor_out	%read{352,352} %write{189,189}
local	float	___702_coat_affect_roughness_multiply1_out	%read{364,364} %write{190,190}
local	float	___702_tangent_rotate_degree_in2_tmp	%read{192,192} %write{191,191}
local	float	___702_tangent_rotate_degree_out	%read{369,369} %write{192,192}
local	float	___702_transmission_roughness_add_out	%read{486,486} %write{193,193}
local	float	___702_subsurface_color_nonnegative_in2_tmp	%read{195,195} %write{194,194}
local	color	___702_subsurface_color_nonnegative_out	%read{560,560} %write{196,196}
local	float	___702_coat_clamped_low_tmp	%read{201,201} %write{197,197}
local	float	___702_coat_clamped_high_tmp	%read{200,200} %write{198,198}
local	float	___702_coat_clamped_out	%read{488,488} %write{201,201}
local	color	___702_subsurface_radius_scaled_out	%read{616,616} %write{202,202}
local	float	___702_subsurface_selector_out	%read{618,620} %write{204,204}
local	float	___702_base_color_nonnegative_in2_tmp	%read{206,206} %write{205,205}
local	color	___702_base_color_nonnegative_out	%read{561,561} %write{207,207}
local	color	___702_coat_attenuation_bg_tmp	%read{209,209} %write{208,208}
local	color	___702_coat_attenuation_out	%read{641,641} %write{209,209}
local	float	___702_one_minus_coat_ior_in1_tmp	%read{211,211} %write{210,210}
local	float	___702_one_minus_coat_ior_out	%read{489,489} %write{211,211}
local	float	___702_one_plus_coat_ior_in1_tmp	%read{213,213} %write{212,212}
local	float	___702_one_plus_coat_ior_out	%read{489,489} %write{213,213}
local	color	___702_emission_weight_out	%read{643,643} %write{214,214}
local	color	___702_opacity_luminance_out	%read{492,492} %write{215,218}
local	vector	___702_coat_tangent_rotate_out	%read{493,493} %write{219,336}
local	color	___702_artistic_ior_ior	%read{353,582} %write{337,352}
local	color	___702_artistic_ior_extinction	%read{582,582} %write{338,363}
local	float	___702_coat_affect_roughness_multiply2_out	%read{495,498} %write{364,364}
local	vector	___702_tangent_rotate_out	%read{496,496} %write{365,482}
local	float	___702_transmission_roughness_clamped_low_tmp	%read{487,487} %write{483,483}
local	float	___702_transmission_roughness_clamped_high_tmp	%read{486,486} %write{484,484}
local	float	___702_transmission_roughness_clamped_out	%read{498,498} %write{487,487}
local	float	___702_coat_gamma_multiply_out	%read{500,500} %write{488,488}
local	float	___702_coat_ior_to_F0_sqrt_out	%read{501,501} %write{489,489}
local	int	___702_opacity_luminance_float_index_tmp	%read{492,492} %write{490,490}
local	float	___702_opacity_luminance_float_out	%read{670,670} %write{492,492}
local	vector	___702_coat_tangent_rotate_normalize_out	%read{506,506} %write{493,493}
local	float	___702_coat_affected_roughness_fg_tmp	%read{495,495} %write{494,494}
local	float	___702_coat_affected_roughness_out	%read{513,513} %write{495,495}
local	vector	___702_tangent_rotate_normalize_out	%read{535,535} %write{496,496}
local	float	___702_coat_affected_transmission_roughness_fg_tmp	%read{498,498} %write{497,497}
local	float	___702_coat_affected_transmission_roughness_out	%read{542,542} %write{498,498}
local	float	___702_coat_gamma_in2_tmp	%read{500,500} %write{499,499}
local	float	___702_coat_gamma_out	%read{560,561} %write{500,500}
local	float	___702_coat_ior_to_F0_out	%read{563,563} %write{501,501}
local	float	___702_coat_tangent_value2_tmp	%read{503,503} %write{502,502}
local	vector	___702_coat_tangent_out	%read{578,578} %write{506,508}
local	float	___702_main_roughness_out.x	%read{526,594} %write{510,529} %mystruct{___702_main_roughness_out} %mystructfield{0}
local	float	___702_main_roughness_out.y	%read{528,594} %write{511,530} %mystruct{___702_main_roughness_out} %mystructfield{1}
local	float	___702_main_tangent_value2_tmp	%read{532,532} %write{531,531}
local	vector	___702_main_tangent_out	%read{582,606} %write{535,537}
local	float	___702_transmission_roughness_out.x	%read{555,606} %write{539,558} %mystruct{___702_transmission_roughness_out} %mystructfield{0}
local	float	___702_transmission_roughness_out.y	%read{557,606} %write{540,559} %mystruct{___702_transmission_roughness_out} %mystructfield{1}
local	color	___702_coat_affected_subsurface_color_out	%read{611,615} %write{560,560}
local	color	___702_coat_affected_diffuse_color_out	%read{622,622} %write{561,561}
local	float	___702_one_minus_coat_ior_to_F0_in1_tmp	%read{563,563} %write{562,562}
local	float	___702_one_minus_coat_ior_to_F0_out	%read{566,566} %write{563,563}
local	color	___702_emission_color0_out	%read{656,656} %write{564,567}
local	closure color	___702_coat_bsdf_out	%read{642,642} %write{568,579}
local	float	___702_metal_bsdf_weight_tmp	%read{583,583} %write{580,580}
local	string	___702_metal_bsdf_distribution_tmp	%read{582,582} %write{581,581}
local	closure color	___702_metal_bsdf_out	%read{639,639} %write{583,583}
local	closure color	___702_specular_bsdf_out	%read{635,635} %write{584,595}
local	closure color	___702_transmission_bsdf_out	%read{633,633} %write{596,607}
local	closure color	___702_sheen_bsdf_out	%read{629,629} %write{609,609}
local	float	___702_translucent_bsdf_weight_tmp	%read{612,612} %write{610,610}
local	closure color	___702_translucent_bsdf_out	%read{620,620} %write{612,612}
local	closure color	___702_subsurface_bsdf_out	%read{619,619} %write{613,616}
local	closure color	___702_selected_subsurface_bsdf_out	%read{627,627} %write{621,621}
local	closure color	___702_diffuse_bsdf_out	%read{626,626} %write{623,623}
local	closure color	___702_subsurface_mix_out	%read{629,629} %write{628,628}
local	closure color	___702_sheen_layer_out	%read{632,632} %write{629,629}
local	closure color	___702_transmission_mix_out	%read{635,635} %write{634,634}
local	closure color	___702_specular_layer_out	%read{638,638} %write{635,635}
local	closure color	___702_metalness_mix_out	%read{641,641} %write{640,640}
local	closure color	___702_thin_film_layer_attenuated_out	%read{642,642} %write{641,641}
local	closure color	___702_coat_layer_out	%read{667,667} %write{642,642}
local	closure color	___702_emission_edf_out	%read{644,660} %write{643,643}
local	closure color	___702_coat_tinted_emission_edf_out	%read{657,657} %write{644,644}
local	closure color	___702_coat_emission_edf_out	%read{661,661} %write{645,657}
local	closure color	___702_blended_coat_emission_edf_out	%read{668,668} %write{662,662}
local	closure color	___702_shader_constructor_out.bsdf	%read{673,673} %write{663,667} %mystruct{___702_shader_constructor_out} %mystructfield{0}
local	closure color	___702_shader_constructor_out.edf	%read{674,674} %write{664,668} %mystruct{___702_shader_constructor_out} %mystructfield{1}
local	float	___702_shader_constructor_out.opacity	%read{672,675} %write{665,672} %mystruct{___702_shader_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{160,161} %write{0,0}
local	string	image_srgb_displayp3_file_.filename	%read{14,52} %write{1,1} %mystruct{image_srgb_displayp3_file_} %mystructfield{0}
local	string	image_srgb_displayp3_file_.colorspace	%read{52,52} %write{2,2} %mystruct{image_srgb_displayp3_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{225,622} %write{4,4}
local	vector	geomprop_Tworld_out1	%read{287,537} %write{9,9}
local	float	geomprop_UV0_out1.x	%read{20,50} %write{10,10} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{35,51} %write{11,11} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	image_srgb_displayp3_out1	%read{58,73} %write{12,52}
local	color	image_srgb_displayp3_out_cm_out	%read{188,207} %write{53,159}
local	closure color	image_srgb_displayp3_standard_surface9_out.bsdf	%read{679,679} %write{160,673} %mystruct{image_srgb_displayp3_standard_surface9_out} %mystructfield{0}
local	closure color	image_srgb_displayp3_standard_surface9_out.edf	%read{679,679} %write{161,674} %mystruct{image_srgb_displayp3_standard_surface9_out} %mystructfield{1}
local	float	image_srgb_displayp3_standard_surface9_out.opacity	%read{677,677} %write{162,675} %mystruct{image_srgb_displayp3_standard_surface9_out} %mystructfield{2}
local	float	___703_opacity_weight	%read{680,682} %write{678,678}
const	int	$const1	0		%read{0,490} %write{2147483647,-1}
const	string	$const2	"transform"		%read{3,437} %write{2147483647,-1}
const	string	$const3	"common"		%read{4,4} %write{2147483647,-1}
temp	vector	$tmp1	%read{9,9} %write{8,8}
const	int	$const4	2		%read{5,476} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{5,5}
const	float	$const5	0		%read{8,678} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{8,8} %write{7,7}
const	color	$const6	0 0 0		%read{12,656} %write{2147483647,-1}
const	string	$const7	"mx_image_color3"		%read{13,13} %write{2147483647,-1}
const	string	$const8	""		%read{14,14} %write{2147483647,-1}
temp	int	$tmp5	%read{15,15} %write{14,14}
temp	int	$tmp6	%read{16,30} %write{15,29}
const	string	$const9	"constant"		%read{17,32} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
temp	int	$tmp8	%read{19,28} %write{18,27}
temp	int	$tmp9	%read{21,21} %write{20,20}
temp	int	$tmp10	%read{22,26} %write{21,25}
const	float	$const10	1		%read{23,682} %write{2147483647,-1}
temp	int	$tmp11	%read{24,24} %write{23,23}
temp	int	$tmp12	%read{25,25} %write{24,24}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	int	$tmp15	%read{31,45} %write{30,44}
temp	int	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,43} %write{33,42}
temp	int	$tmp18	%read{36,36} %write{35,35}
temp	int	$tmp19	%read{37,41} %write{36,40}
temp	int	$tmp20	%read{39,39} %write{38,38}
temp	int	$tmp21	%read{40,40} %write{39,39}
temp	int	$tmp22	%read{42,42} %write{41,41}
temp	int	$tmp23	%read{44,44} %write{43,43}
const	string	$const11	"mx_transform_uv"		%read{49,49} %write{2147483647,-1}
const	string	$const12	"subimage"		%read{52,52} %write{2147483647,-1}
const	string	$const13	"interp"		%read{52,52} %write{2147483647,-1}
const	string	$const14	"missingcolor"		%read{52,52} %write{2147483647,-1}
const	string	$const15	"swrap"		%read{52,52} %write{2147483647,-1}
const	string	$const16	"twrap"		%read{52,52} %write{2147483647,-1}
const	string	$const17	"colorspace"		%read{52,52} %write{2147483647,-1}
const	string	$const18	"NG_srgb_displayp3_to_lin_rec709_color3"		%read{54,54} %write{2147483647,-1}
const	string	$const19	"NG_srgb_texture_to_lin_rec709_color3"		%read{56,56} %write{2147483647,-1}
const	float	$const20	0.055		%read{57,57} %write{2147483647,-1}
const	float	$const21	12.92		%read{59,59} %write{2147483647,-1}
const	string	$const22	"NG_separate3_color3"		%read{64,122} %write{2147483647,-1}
const	string	$const23	"mx_extract"		%read{66,491} %write{2147483647,-1}
const	int	$const24	1		%read{68,473} %write{2147483647,-1}
temp	color	$tmp24	%read{79,79} %write{78,78}
const	float	$const25	0.04045		%read{80,100} %write{2147483647,-1}
temp	int	$tmp25	%read{85,85} %write{83,83}
const	string	$const26	"mx_ternary"		%read{84,533} %write{2147483647,-1}
temp	int	$tmp26	%read{95,95} %write{93,93}
temp	int	$tmp27	%read{105,105} %write{103,103}
const	float	$const27	1.055		%read{110,110} %write{2147483647,-1}
const	float	$const28	2.4		%read{113,113} %write{2147483647,-1}
const	vector	$const29	0 0 0		%read{117,365} %write{2147483647,-1}
const	string	$const30	"NG_convert_color3_vector3"		%read{118,118} %write{2147483647,-1}
const	float	$const31	1.22493		%read{137,137} %write{2147483647,-1}
const	float	$const32	-0.042059		%read{137,137} %write{2147483647,-1}
const	float	$const33	-0.019641		%read{137,137} %write{2147483647,-1}
const	float	$const34	-0.22493		%read{137,137} %write{2147483647,-1}
const	float	$const35	1.042059		%read{137,137} %write{2147483647,-1}
const	float	$const36	-0.078648		%read{137,137} %write{2147483647,-1}
const	float	$const37	1.098289		%read{137,137} %write{2147483647,-1}
const	string	$const38	"NG_convert_vector3_color3"		%read{140,140} %write{2147483647,-1}
const	string	$const39	"NG_separate3_vector3"		%read{144,144} %write{2147483647,-1}
const	string	$const40	"NG_standard_surface_surfaceshader_100"		%read{163,163} %write{2147483647,-1}
const	string	$const41	"mx_roughness_anisotropy"		%read{167,541} %write{2147483647,-1}
temp	float	$tmp28	%read{170,170} %write{168,168}
const	float	$const42	1e-08		%read{171,545} %write{2147483647,-1}
const	string	$const43	"clamp"		%read{169,676} %write{2147483647,-1}
temp	float	$tmp29	%read{171,171} %write{170,170}
temp	int	$tmp30	%read{173,173} %write{172,172}
temp	float	$tmp31	%read{177,177} %write{176,176}
const	float	$const44	0.98		%read{175,549} %write{2147483647,-1}
temp	float	$tmp32	%read{176,176} %write{175,175}
temp	float	$tmp33	%read{178,178} %write{177,177}
temp	float	$tmp34	%read{180,180} %write{179,179}
const	float	$const45	360		%read{186,191} %write{2147483647,-1}
temp	color	$tmp35	%read{196,196} %write{195,195}
temp	float	$tmp36	%read{201,201} %write{200,200}
temp	float	$tmp37	%read{204,204} %write{203,203}
temp	color	$tmp38	%read{207,207} %write{206,206}
const	color	$const46	1 1 1		%read{208,577} %write{2147483647,-1}
const	color	$const47	0.272229 0.674082 0.053689		%read{217,217} %write{2147483647,-1}
const	string	$const48	"mx_luminance_color3"		%read{216,216} %write{2147483647,-1}
temp	float	$tmp40	%read{218,218} %write{217,217}
const	string	$const49	"mx_rotate_vector3"		%read{220,366} %write{2147483647,-1}
const	string	$const50	"radians"		%read{221,367} %write{2147483647,-1}
const	float	$const51	3.1415927		%read{222,368} %write{2147483647,-1}
const	float	$const52	180		%read{222,368} %write{2147483647,-1}
temp	float	$tmp41	%read{223,223} %write{222,222}
const	string	$const53	"rotationMatrix"		%read{224,370} %write{2147483647,-1}
temp	float	$tmp42	%read{230,230} %write{229,229}
temp	float	$tmp43	%read{232,232} %write{230,230}
temp	float	$tmp44	%read{232,232} %write{231,231}
temp	float	$tmp45	%read{233,233} %write{232,232}
temp	float	$tmp46	%read{286,286} %write{233,233}
temp	float	$tmp47	%read{235,235} %write{234,234}
temp	float	$tmp48	%read{237,237} %write{235,235}
temp	float	$tmp49	%read{237,237} %write{236,236}
temp	float	$tmp50	%read{240,240} %write{237,237}
temp	float	$tmp51	%read{239,239} %write{238,238}
temp	float	$tmp52	%read{240,240} %write{239,239}
temp	float	$tmp53	%read{286,286} %write{240,240}
temp	float	$tmp54	%read{242,242} %write{241,241}
temp	float	$tmp55	%read{244,244} %write{242,242}
temp	float	$tmp56	%read{244,244} %write{243,243}
temp	float	$tmp57	%read{247,247} %write{244,244}
temp	float	$tmp58	%read{246,246} %write{245,245}
temp	float	$tmp59	%read{247,247} %write{246,246}
temp	float	$tmp60	%read{286,286} %write{247,247}
temp	float	$tmp61	%read{249,249} %write{248,248}
temp	float	$tmp62	%read{251,251} %write{249,249}
temp	float	$tmp63	%read{251,251} %write{250,250}
temp	float	$tmp64	%read{254,254} %write{251,251}
temp	float	$tmp65	%read{253,253} %write{252,252}
temp	float	$tmp66	%read{254,254} %write{253,253}
temp	float	$tmp67	%read{286,286} %write{254,254}
temp	float	$tmp68	%read{256,256} %write{255,255}
temp	float	$tmp69	%read{258,258} %write{256,256}
temp	float	$tmp70	%read{258,258} %write{257,257}
temp	float	$tmp71	%read{259,259} %write{258,258}
temp	float	$tmp72	%read{286,286} %write{259,259}
temp	float	$tmp73	%read{261,261} %write{260,260}
temp	float	$tmp74	%read{263,263} %write{261,261}
temp	float	$tmp75	%read{263,263} %write{262,262}
temp	float	$tmp76	%read{266,266} %write{263,263}
temp	float	$tmp77	%read{265,265} %write{264,264}
temp	float	$tmp78	%read{266,266} %write{265,265}
temp	float	$tmp79	%read{286,286} %write{266,266}
temp	float	$tmp80	%read{268,268} %write{267,267}
temp	float	$tmp81	%read{270,270} %write{268,268}
temp	float	$tmp82	%read{270,270} %write{269,269}
temp	float	$tmp83	%read{273,273} %write{270,270}
temp	float	$tmp84	%read{272,272} %write{271,271}
temp	float	$tmp85	%read{273,273} %write{272,272}
temp	float	$tmp86	%read{286,286} %write{273,273}
temp	float	$tmp87	%read{275,275} %write{274,274}
temp	float	$tmp88	%read{277,277} %write{275,275}
temp	float	$tmp89	%read{277,277} %write{276,276}
temp	float	$tmp90	%read{280,280} %write{277,277}
temp	float	$tmp91	%read{279,279} %write{278,278}
temp	float	$tmp92	%read{280,280} %write{279,279}
temp	float	$tmp93	%read{286,286} %write{280,280}
temp	float	$tmp94	%read{282,282} %write{281,281}
temp	float	$tmp95	%read{284,284} %write{282,282}
temp	float	$tmp96	%read{284,284} %write{283,283}
temp	float	$tmp97	%read{285,285} %write{284,284}
temp	float	$tmp98	%read{286,286} %write{285,285}
temp	float	$tmp99.x	%read{293,326} %write{287,287}
temp	float	$tmp99.y	%read{295,328} %write{288,288}
temp	float	$tmp99.z	%read{298,331} %write{289,289}
temp	float	$tmp99.w	%read{301,334} %write{290,290}
temp	float	$tmp100	%read{293,293} %write{292,292}
temp	float	$tmp101	%read{296,296} %write{293,293}
temp	float	$tmp102	%read{295,295} %write{294,294}
temp	float	$tmp103	%read{296,296} %write{295,295}
temp	float	$tmp104	%read{299,299} %write{296,296}
temp	float	$tmp105	%read{298,298} %write{297,297}
temp	float	$tmp106	%read{299,299} %write{298,298}
temp	float	$tmp107	%read{302,302} %write{299,299}
const	int	$const54	3		%read{300,479} %write{2147483647,-1}
temp	float	$tmp108	%read{301,301} %write{300,300}
temp	float	$tmp109	%read{302,302} %write{301,301}
temp	float	$tmp110	%read{304,304} %write{303,303}
temp	float	$tmp111	%read{307,307} %write{304,304}
temp	float	$tmp112	%read{306,306} %write{305,305}
temp	float	$tmp113	%read{307,307} %write{306,306}
temp	float	$tmp114	%read{310,310} %write{307,307}
temp	float	$tmp115	%read{309,309} %write{308,308}
temp	float	$tmp116	%read{310,310} %write{309,309}
temp	float	$tmp117	%read{313,313} %write{310,310}
temp	float	$tmp118	%read{312,312} %write{311,311}
temp	float	$tmp119	%read{313,313} %write{312,312}
temp	float	$tmp120	%read{315,315} %write{314,314}
temp	float	$tmp121	%read{318,318} %write{315,315}
temp	float	$tmp122	%read{317,317} %write{316,316}
temp	float	$tmp123	%read{318,318} %write{317,317}
temp	float	$tmp124	%read{321,321} %write{318,318}
temp	float	$tmp125	%read{320,320} %write{319,319}
temp	float	$tmp126	%read{321,321} %write{320,320}
temp	float	$tmp127	%read{324,324} %write{321,321}
temp	float	$tmp128	%read{323,323} %write{322,322}
temp	float	$tmp129	%read{324,324} %write{323,323}
temp	float	$tmp130	%read{326,326} %write{325,325}
temp	float	$tmp131	%read{329,329} %write{326,326}
temp	float	$tmp132	%read{328,328} %write{327,327}
temp	float	$tmp133	%read{329,329} %write{328,328}
temp	float	$tmp134	%read{332,332} %write{329,329}
temp	float	$tmp135	%read{331,331} %write{330,330}
temp	float	$tmp136	%read{332,332} %write{331,331}
temp	float	$tmp137	%read{335,335} %write{332,332}
temp	float	$tmp138	%read{334,334} %write{333,333}
temp	float	$tmp139	%read{335,335} %write{334,334}
const	string	$const55	"mx_artistic_ior"		%read{339,339} %write{2147483647,-1}
temp	color	$tmp140	%read{344,344} %write{340,340}
const	float	$const56	0.99		%read{341,341} %write{2147483647,-1}
temp	color	$tmp141	%read{343,343} %write{341,341}
temp	color	$tmp142	%read{344,344} %write{343,343}
temp	color	$tmp143	%read{348,348} %write{346,346}
temp	color	$tmp144	%read{348,348} %write{347,347}
temp	color	$tmp145	%read{351,351} %write{349,349}
temp	color	$tmp146	%read{351,351} %write{350,350}
temp	color	$tmp147	%read{356,356} %write{355,355}
temp	color	$tmp148	%read{358,358} %write{356,356}
temp	color	$tmp149	%read{358,358} %write{357,357}
temp	color	$tmp150	%read{360,360} %write{358,358}
temp	color	$tmp151	%read{360,360} %write{359,359}
temp	color	$tmp152	%read{362,362} %write{361,361}
temp	float	$tmp153	%read{369,369} %write{368,368}
temp	float	$tmp154	%read{376,376} %write{375,375}
temp	float	$tmp155	%read{378,378} %write{376,376}
temp	float	$tmp156	%read{378,378} %write{377,377}
temp	float	$tmp157	%read{379,379} %write{378,378}
temp	float	$tmp158	%read{432,432} %write{379,379}
temp	float	$tmp159	%read{381,381} %write{380,380}
temp	float	$tmp160	%read{383,383} %write{381,381}
temp	float	$tmp161	%read{383,383} %write{382,382}
temp	float	$tmp162	%read{386,386} %write{383,383}
temp	float	$tmp163	%read{385,385} %write{384,384}
temp	float	$tmp164	%read{386,386} %write{385,385}
temp	float	$tmp165	%read{432,432} %write{386,386}
temp	float	$tmp166	%read{388,388} %write{387,387}
temp	float	$tmp167	%read{390,390} %write{388,388}
temp	float	$tmp168	%read{390,390} %write{389,389}
temp	float	$tmp169	%read{393,393} %write{390,390}
temp	float	$tmp170	%read{392,392} %write{391,391}
temp	float	$tmp171	%read{393,393} %write{392,392}
temp	float	$tmp172	%read{432,432} %write{393,393}
temp	float	$tmp173	%read{395,395} %write{394,394}
temp	float	$tmp174	%read{397,397} %write{395,395}
temp	float	$tmp175	%read{397,397} %write{396,396}
temp	float	$tmp176	%read{400,400} %write{397,397}
temp	float	$tmp177	%read{399,399} %write{398,398}
temp	float	$tmp178	%read{400,400} %write{399,399}
temp	float	$tmp179	%read{432,432} %write{400,400}
temp	float	$tmp180	%read{402,402} %write{401,401}
temp	float	$tmp181	%read{404,404} %write{402,402}
temp	float	$tmp182	%read{404,404} %write{403,403}
temp	float	$tmp183	%read{405,405} %write{404,404}
temp	float	$tmp184	%read{432,432} %write{405,405}
temp	float	$tmp185	%read{407,407} %write{406,406}
temp	float	$tmp186	%read{409,409} %write{407,407}
temp	float	$tmp187	%read{409,409} %write{408,408}
temp	float	$tmp188	%read{412,412} %write{409,409}
temp	float	$tmp189	%read{411,411} %write{410,410}
temp	float	$tmp190	%read{412,412} %write{411,411}
temp	float	$tmp191	%read{432,432} %write{412,412}
temp	float	$tmp192	%read{414,414} %write{413,413}
temp	float	$tmp193	%read{416,416} %write{414,414}
temp	float	$tmp194	%read{416,416} %write{415,415}
temp	float	$tmp195	%read{419,419} %write{416,416}
temp	float	$tmp196	%read{418,418} %write{417,417}
temp	float	$tmp197	%read{419,419} %write{418,418}
temp	float	$tmp198	%read{432,432} %write{419,419}
temp	float	$tmp199	%read{421,421} %write{420,420}
temp	float	$tmp200	%read{423,423} %write{421,421}
temp	float	$tmp201	%read{423,423} %write{422,422}
temp	float	$tmp202	%read{426,426} %write{423,423}
temp	float	$tmp203	%read{425,425} %write{424,424}
temp	float	$tmp204	%read{426,426} %write{425,425}
temp	float	$tmp205	%read{432,432} %write{426,426}
temp	float	$tmp206	%read{428,428} %write{427,427}
temp	float	$tmp207	%read{430,430} %write{428,428}
temp	float	$tmp208	%read{430,430} %write{429,429}
temp	float	$tmp209	%read{431,431} %write{430,430}
temp	float	$tmp210	%read{432,432} %write{431,431}
temp	float	$tmp211.x	%read{439,472} %write{433,433}
temp	float	$tmp211.y	%read{441,474} %write{434,434}
temp	float	$tmp211.z	%read{444,477} %write{435,435}
temp	float	$tmp211.w	%read{447,480} %write{436,436}
temp	float	$tmp212	%read{439,439} %write{438,438}
temp	float	$tmp213	%read{442,442} %write{439,439}
temp	float	$tmp214	%read{441,441} %write{440,440}
temp	float	$tmp215	%read{442,442} %write{441,441}
temp	float	$tmp216	%read{445,445} %write{442,442}
temp	float	$tmp217	%read{444,444} %write{443,443}
temp	float	$tmp218	%read{445,445} %write{444,444}
temp	float	$tmp219	%read{448,448} %write{445,445}
temp	float	$tmp220	%read{447,447} %write{446,446}
temp	float	$tmp221	%read{448,448} %write{447,447}
temp	float	$tmp222	%read{450,450} %write{449,449}
temp	float	$tmp223	%read{453,453} %write{450,450}
temp	float	$tmp224	%read{452,452} %write{451,451}
temp	float	$tmp225	%read{453,453} %write{452,452}
temp	float	$tmp226	%read{456,456} %write{453,453}
temp	float	$tmp227	%read{455,455} %write{454,454}
temp	float	$tmp228	%read{456,456} %write{455,455}
temp	float	$tmp229	%read{459,459} %write{456,456}
temp	float	$tmp230	%read{458,458} %write{457,457}
temp	float	$tmp231	%read{459,459} %write{458,458}
temp	float	$tmp232	%read{461,461} %write{460,460}
temp	float	$tmp233	%read{464,464} %write{461,461}
temp	float	$tmp234	%read{463,463} %write{462,462}
temp	float	$tmp235	%read{464,464} %write{463,463}
temp	float	$tmp236	%read{467,467} %write{464,464}
temp	float	$tmp237	%read{466,466} %write{465,465}
temp	float	$tmp238	%read{467,467} %write{466,466}
temp	float	$tmp239	%read{470,470} %write{467,467}
temp	float	$tmp240	%read{469,469} %write{468,468}
temp	float	$tmp241	%read{470,470} %write{469,469}
temp	float	$tmp242	%read{472,472} %write{471,471}
temp	float	$tmp243	%read{475,475} %write{472,472}
temp	float	$tmp244	%read{474,474} %write{473,473}
temp	float	$tmp245	%read{475,475} %write{474,474}
temp	float	$tmp246	%read{478,478} %write{475,475}
temp	float	$tmp247	%read{477,477} %write{476,476}
temp	float	$tmp248	%read{478,478} %write{477,477}
temp	float	$tmp249	%read{481,481} %write{478,478}
temp	float	$tmp250	%read{480,480} %write{479,479}
temp	float	$tmp251	%read{481,481} %write{480,480}
temp	float	$tmp252	%read{487,487} %write{486,486}
temp	int	$tmp253	%read{505,505} %write{503,503}
temp	float	$tmp254	%read{515,515} %write{513,513}
temp	float	$tmp255	%read{516,516} %write{515,515}
temp	int	$tmp256	%read{518,518} %write{517,517}
temp	float	$tmp257	%read{522,522} %write{521,521}
temp	float	$tmp258	%read{521,521} %write{520,520}
temp	float	$tmp259	%read{523,523} %write{522,522}
temp	float	$tmp260	%read{525,525} %write{524,524}
temp	int	$tmp261	%read{534,534} %write{532,532}
temp	float	$tmp262	%read{544,544} %write{542,542}
temp	float	$tmp263	%read{545,545} %write{544,544}
temp	int	$tmp264	%read{547,547} %write{546,546}
temp	float	$tmp265	%read{551,551} %write{550,550}
temp	float	$tmp266	%read{550,550} %write{549,549}
temp	float	$tmp267	%read{552,552} %write{551,551}
temp	float	$tmp268	%read{554,554} %write{553,553}
const	string	$const57	"NG_convert_float_color3"		%read{565,565} %write{2147483647,-1}
const	float	$const58	1.5		%read{578,606} %write{2147483647,-1}
const	string	$const59	"ggx"		%read{578,606} %write{2147483647,-1}
const	string	$const60	"R"		%read{570,602} %write{2147483647,-1}
const	string	$const61	"mx_dielectric_bsdf"		%read{569,597} %write{2147483647,-1}
const	string	$const62	"T"		%read{570,602} %write{2147483647,-1}
temp	int	$tmp270	%read{571,571} %write{570,570}
temp	int	$tmp271	%read{575,575} %write{574,574}
temp	closure color	$tmp272	%read{579,579} %write{578,578}
const	string	$const63	"thinfilm_thickness"		%read{578,606} %write{2147483647,-1}
const	string	$const64	"thinfilm_ior"		%read{578,606} %write{2147483647,-1}
const	string	$const65	"dielectric_bsdf"		%read{578,606} %write{2147483647,-1}
temp	closure color	$tmp273	%read{583,583} %write{582,582}
const	string	$const66	"conductor_bsdf"		%read{582,582} %write{2147483647,-1}
temp	int	$tmp274	%read{587,587} %write{586,586}
temp	int	$tmp275	%read{591,591} %write{590,590}
temp	closure color	$tmp276	%read{595,595} %write{594,594}
temp	int	$tmp277	%read{599,599} %write{598,598}
temp	int	$tmp278	%read{603,603} %write{602,602}
temp	closure color	$tmp279	%read{607,607} %write{606,606}
temp	closure color	$tmp280	%read{609,609} %write{608,608}
const	string	$const67	"sheen_bsdf"		%read{608,608} %write{2147483647,-1}
temp	closure color	$tmp281	%read{612,612} %write{611,611}
const	string	$const68	"translucent_bsdf"		%read{611,611} %write{2147483647,-1}
const	string	$const69	"mx_subsurface_bsdf"		%read{614,614} %write{2147483647,-1}
temp	color	$tmp282	%read{616,616} %write{615,615}
const	string	$const70	"subsurface_bssrdf"		%read{616,616} %write{2147483647,-1}
const	string	$const71	"mix"		%read{617,658} %write{2147483647,-1}
temp	float	$tmp283	%read{619,619} %write{618,618}
temp	closure color	$tmp284	%read{621,621} %write{619,619}
temp	closure color	$tmp285	%read{621,621} %write{620,620}
temp	closure color	$tmp286	%read{623,623} %write{622,622}
const	string	$const72	"oren_nayar_diffuse_bsdf"		%read{622,622} %write{2147483647,-1}
temp	float	$tmp287	%read{626,626} %write{625,625}
temp	closure color	$tmp288	%read{628,628} %write{626,626}
temp	closure color	$tmp289	%read{628,628} %write{627,627}
const	string	$const73	"layer"		%read{629,642} %write{2147483647,-1}
temp	float	$tmp290	%read{632,632} %write{631,631}
temp	closure color	$tmp291	%read{634,634} %write{632,632}
temp	closure color	$tmp292	%read{634,634} %write{633,633}
temp	float	$tmp293	%read{638,638} %write{637,637}
temp	closure color	$tmp294	%read{640,640} %write{638,638}
temp	closure color	$tmp295	%read{640,640} %write{639,639}
const	string	$const74	"uniform_edf"		%read{643,643} %write{2147483647,-1}
const	float	$const75	5		%read{655,655} %write{2147483647,-1}
const	string	$const76	"mx_generalized_schlick_edf"		%read{646,646} %write{2147483647,-1}
temp	float	$tmp297	%read{649,649} %write{648,648}
temp	vector	$tmp298	%read{648,648} %write{647,647}
const	string	$const77	"mx_fresnel_schlick"		%read{650,650} %write{2147483647,-1}
temp	float	$tmp299	%read{653,653} %write{651,651}
temp	float	$tmp300	%read{654,654} %write{653,653}
temp	float	$tmp301	%read{656,656} %write{655,655}
temp	float	$tmp302	%read{660,660} %write{659,659}
temp	closure color	$tmp303	%read{662,662} %write{660,660}
temp	closure color	$tmp304	%read{662,662} %write{661,661}
const	string	$const78	"mx_surface"		%read{666,666} %write{2147483647,-1}
temp	float	$tmp305	%read{671,671} %write{670,670}
temp	float	$tmp306	%read{678,678} %write{677,677}
temp	closure color	$tmp307	%read{680,680} %write{679,679}
temp	closure color	$tmp308	%read{684,684} %write{680,680}
temp	closure color	$tmp309	%read{683,683} %write{681,681}
const	string	$const79	"transparent"		%read{681,681} %write{2147483647,-1}
temp	float	$tmp310	%read{683,683} %write{682,682}
temp	closure color	$tmp311	%read{684,684} %write{683,683}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:832
#     textureresource image_srgb_displayp3_file_ = {image_srgb_displayp3_file, image_srgb_displayp3_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{832} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:833
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		image_srgb_displayp3_file_.filename image_srgb_displayp3_file 	%line{833} %argrw{"wr"}
	assign		image_srgb_displayp3_file_.colorspace image_srgb_displayp3_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:834
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 5 	%line{834} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:835
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{835} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:836
#     color image_srgb_displayp3_out1 = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{836} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:837
#     mx_image_color3(image_srgb_displayp3_file_, image_srgb_displayp3_layer, image_srgb_displayp3_default, geomprop_UV0_out1, image_srgb_displayp3_uaddressmode, image_srgb_displayp3_vaddressmode, image_srgb_displayp3_filtertype, image_srgb_displayp3_framerange, image_srgb_displayp3_frameoffset, image_srgb_displayp3_frameendaction, image_srgb_displayp3_out1);
	assign		image_srgb_displayp3_out1 $const6 	%line{837} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:838
#     color image_srgb_displayp3_out_cm_out = color(0.0);
	functioncall	$const7 53 	%line{838} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp5 image_srgb_displayp3_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 17 30 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp7 image_srgb_displayp3_uaddressmode $const9 	%line{26} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	if		$tmp8 28 28 	%argrw{"r"}
	lt		$tmp9 geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const1 	%argrw{"wrr"}
	if		$tmp10 23 26 	%argrw{"r"}
	gt		$tmp11 geomprop_UV0_out1.x $const10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp10 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp13 	%argrw{"wr"}
	neq		$tmp14 $tmp8 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp6 $tmp14 	%line{25} %argrw{"wr"}
	neq		$tmp15 $tmp6 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp15 32 45 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:27
#     {
	eq		$tmp16 image_srgb_displayp3_vaddressmode $const9 	%line{27} %argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	if		$tmp17 43 43 	%argrw{"r"}
	lt		$tmp18 geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const1 	%argrw{"wrr"}
	if		$tmp19 38 41 	%argrw{"r"}
	gt		$tmp20 geomprop_UV0_out1.y $const10 	%argrw{"wrr"}
	neq		$tmp21 $tmp20 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp21 	%argrw{"wr"}
	neq		$tmp22 $tmp19 $const1 	%argrw{"wrr"}
	assign		$tmp17 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp17 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp15 $tmp23 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp15 48 48 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:29
#         return;
	assign		image_srgb_displayp3_out1 image_srgb_displayp3_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor image_srgb_displayp3_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const11 52 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:20
# }
	assign		___670_st.x geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		image_srgb_displayp3_out1 image_srgb_displayp3_file_.filename ___670_st.x ___670_st.y $const12 image_srgb_displayp3_layer $const13 image_srgb_displayp3_filtertype $const14 ___670_missingColor $const15 image_srgb_displayp3_uaddressmode $const16 image_srgb_displayp3_vaddressmode $const17 image_srgb_displayp3_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:839
#     NG_srgb_displayp3_to_lin_rec709_color3(image_srgb_displayp3_out1, image_srgb_displayp3_out_cm_out);
	assign		image_srgb_displayp3_out_cm_out $const6 	%line{839} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:840
#     surfaceshader image_srgb_displayp3_standard_surface9_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const18 160 	%line{840} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:123
#     NG_srgb_texture_to_lin_rec709_color3(in, srgb_transform_out);
	assign		___677_srgb_transform_out $const6 	%line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:124
#     vector asVec_out = vector(0.0);
	functioncall	$const19 117 	%line{124} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:57
#     color bias_out = in + bias_in2_tmp;
	assign		___673_bias_in2_tmp $const20 	%line{57} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:58
#     float linSeg_in2_tmp = 12.920000;
	add		___673_bias_out image_srgb_displayp3_out1 ___673_bias_in2_tmp 	%line{58} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:59
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___673_linSeg_in2_tmp $const21 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:60
#     float colorSeparate_outr = 0.0;
	div		___673_linSeg_out image_srgb_displayp3_out1 ___673_linSeg_in2_tmp 	%line{60} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:61
#     float colorSeparate_outg = 0.0;
	assign		___673_colorSeparate_outr $const5 	%line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:62
#     float colorSeparate_outb = 0.0;
	assign		___673_colorSeparate_outg $const5 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:63
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___673_colorSeparate_outb $const5 	%line{63} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:64
#     float max_in2_tmp = 0.000000;
	functioncall	$const22 77 	%line{64} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:44
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:45
#     int N_extract_1_index_tmp = 1;
	functioncall	$const23 68 	%line{45} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_0_out image_srgb_displayp3_out1 ___672_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:46
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:47
#     int N_extract_2_index_tmp = 2;
	functioncall	$const23 71 	%line{47} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_1_out image_srgb_displayp3_out1 ___672_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:48
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:49
#     outr = N_extract_0_out;
	functioncall	$const23 74 	%line{49} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_2_out image_srgb_displayp3_out1 ___672_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:50
#     outg = N_extract_1_out;
	assign		___673_colorSeparate_outr ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:51
#     outb = N_extract_2_out;
	assign		___673_colorSeparate_outg ___672_N_extract_1_out 	%line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:52
# }
	assign		___673_colorSeparate_outb ___672_N_extract_2_out 	%line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:65
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___673_max_in2_tmp $const5 	%line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:66
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp24 ___673_max_in2_tmp 	%line{66} %argrw{"wr"}
	max		___673_max_out ___673_bias_out $tmp24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:67
#     float isAboveR_in1_tmp = 1.000000;
	assign		___673_isAboveR_value2_tmp $const25 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:68
#     float isAboveR_in2_tmp = 0.000000;
	assign		___673_isAboveR_in1_tmp $const10 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:69
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___673_isAboveR_in2_tmp $const5 	%line{69} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:70
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp25 ___673_colorSeparate_outr ___673_isAboveR_value2_tmp 	%line{70} %argrw{"wrr"}
	functioncall	$const26 90 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp25 88 90 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_isAboveR_out ___673_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_isAboveR_out ___673_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:71
#     float isAboveG_in1_tmp = 1.000000;
	assign		___673_isAboveG_value2_tmp $const25 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{71} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:72
#     float isAboveG_in2_tmp = 0.000000;
	assign		___673_isAboveG_in1_tmp $const10 	%line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:73
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___673_isAboveG_in2_tmp $const5 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:74
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp26 ___673_colorSeparate_outg ___673_isAboveG_value2_tmp 	%line{74} %argrw{"wrr"}
	functioncall	$const26 100 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp26 98 100 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_isAboveG_out ___673_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_isAboveG_out ___673_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:75
#     float isAboveB_in1_tmp = 1.000000;
	assign		___673_isAboveB_value2_tmp $const25 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:76
#     float isAboveB_in2_tmp = 0.000000;
	assign		___673_isAboveB_in1_tmp $const10 	%line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:77
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___673_isAboveB_in2_tmp $const5 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:78
#     float scale_in2_tmp = 1.055000;
	gt		$tmp27 ___673_colorSeparate_outb ___673_isAboveB_value2_tmp 	%line{78} %argrw{"wrr"}
	functioncall	$const26 110 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp27 108 110 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_isAboveB_out ___673_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_isAboveB_out ___673_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:79
#     color scale_out = max_out / scale_in2_tmp;
	assign		___673_scale_in2_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:80
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___673_scale_out ___673_max_out ___673_scale_in2_tmp 	%line{80} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:81
#     float powSeg_in2_tmp = 2.400000;
	color		___673_isAbove_out ___673_isAboveR_out ___673_isAboveG_out ___673_isAboveB_out 	%line{81} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:82
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___673_powSeg_in2_tmp $const28 	%line{82} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:83
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___673_powSeg_out ___673_scale_out ___673_powSeg_in2_tmp 	%line{83} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:84
#     out = mix_out;
	mix		___673_mix_out ___673_linSeg_out ___673_powSeg_out ___673_isAbove_out 	%line{84} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:85
# }
	assign		___677_srgb_transform_out ___673_mix_out 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:125
#     NG_convert_color3_vector3(srgb_transform_out, asVec_out);
	assign		___677_asVec_out $const29 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:126
#     matrix transform_mat_tmp = matrix(1.224930,  -0.042059,  -0.019641, 0.000,  -0.224930,  1.042059,  -0.078648, 0.000,  0.000000,  -0.000000,  1.098289, 0.000, 0.000, 0.000, 0.000, 1.000);
	functioncall	$const30 137 	%line{126} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:90
#     float separate_outg = 0.0;
	assign		___674_separate_outr $const5 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:91
#     float separate_outb = 0.0;
	assign		___674_separate_outg $const5 	%line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:92
#     NG_separate3_color3(in, separate_outr, separate_outg, separate_outb);
	assign		___674_separate_outb $const5 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:93
#     vector combine_out = vector( separate_outr,separate_outg,separate_outb );
	functioncall	$const22 135 	%line{93} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:44
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___672_N_extract_0_index_tmp $const1 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:45
#     int N_extract_1_index_tmp = 1;
	functioncall	$const23 126 	%line{45} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_0_out ___677_srgb_transform_out ___672_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:46
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___672_N_extract_1_index_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:47
#     int N_extract_2_index_tmp = 2;
	functioncall	$const23 129 	%line{47} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_1_out ___677_srgb_transform_out ___672_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:48
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___672_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:49
#     outr = N_extract_0_out;
	functioncall	$const23 132 	%line{49} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___672_N_extract_2_out ___677_srgb_transform_out ___672_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:50
#     outg = N_extract_1_out;
	assign		___674_separate_outr ___672_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:51
#     outb = N_extract_2_out;
	assign		___674_separate_outg ___672_N_extract_1_out 	%line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:52
# }
	assign		___674_separate_outb ___672_N_extract_2_out 	%line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:94
#     out = combine_out;
	vector		___674_combine_out ___674_separate_outr ___674_separate_outg ___674_separate_outb 	%line{94} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:95
# }
	assign		___677_asVec_out ___674_combine_out 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:127
#     vector transform_out = transform(transform_mat_tmp, asVec_out);
	matrix		___677_transform_mat_tmp $const31 $const32 $const33 $const5 $const34 $const35 $const36 $const5 $const5 $const5 $const37 $const5 $const5 $const5 $const5 $const10 	%line{127} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:128
#     color asColor_out = color(0.0);
	transformv	___677_transform_out ___677_transform_mat_tmp ___677_asVec_out 	%line{128} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:129
#     NG_convert_vector3_color3(transform_out, asColor_out);
	assign		___677_asColor_out $const6 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:130
#     out = asColor_out;
	functioncall	$const38 159 	%line{130} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:113
#     float separate_outy = 0.0;
	assign		___676_separate_outx $const5 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:114
#     float separate_outz = 0.0;
	assign		___676_separate_outy $const5 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:115
#     NG_separate3_vector3(in, separate_outx, separate_outy, separate_outz);
	assign		___676_separate_outz $const5 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:116
#     color combine_out = color( separate_outx,separate_outy,separate_outz );
	functioncall	$const39 157 	%line{116} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:100
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___675_N_extract_0_index_tmp $const1 	%line{100} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:101
#     int N_extract_1_index_tmp = 1;
	functioncall	$const23 148 	%line{101} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___675_N_extract_0_out ___677_transform_out ___675_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:102
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___675_N_extract_1_index_tmp $const24 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:103
#     int N_extract_2_index_tmp = 2;
	functioncall	$const23 151 	%line{103} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___675_N_extract_1_out ___677_transform_out ___675_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:104
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___675_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:105
#     outx = N_extract_0_out;
	functioncall	$const23 154 	%line{105} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___675_N_extract_2_out ___677_transform_out ___675_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:106
#     outy = N_extract_1_out;
	assign		___676_separate_outx ___675_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:107
#     outz = N_extract_2_out;
	assign		___676_separate_outy ___675_N_extract_1_out 	%line{107} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:108
# }
	assign		___676_separate_outz ___675_N_extract_2_out 	%line{108} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:117
#     out = combine_out;
	color		___676_combine_out ___676_separate_outx ___676_separate_outy ___676_separate_outz 	%line{117} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:118
# }
	assign		___677_asColor_out ___676_combine_out 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:131
# }
	assign		image_srgb_displayp3_out_cm_out ___677_asColor_out 	%line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:841
#     NG_standard_surface_surfaceshader_100(image_srgb_displayp3_standard_surface9_base, image_srgb_displayp3_out_cm_out, image_srgb_displayp3_standard_surface9_diffuse_roughness, image_srgb_displayp3_standard_surface9_metalness, image_srgb_displayp3_standard_surface9_specular, image_srgb_displayp3_standard_surface9_specular_color, image_srgb_displayp3_standard_surface9_specular_roughness, image_srgb_displayp3_standard_surface9_specular_IOR, image_srgb_displayp3_standard_surface9_specular_anisotropy, image_srgb_displayp3_standard_surface9_specular_rotation, image_srgb_displayp3_standard_surface9_transmission, image_srgb_displayp3_standard_surface9_transmission_color, image_srgb_displayp3_standard_surface9_transmission_depth, image_srgb_displayp3_standard_surface9_transmission_scatter, image_srgb_displayp3_standard_surface9_transmission_scatter_anisotropy, image_srgb_displayp3_standard_surface9_transmission_dispersion, image_srgb_displayp3_standard_surface9_transmission_extra_roughness, image_srgb_displayp3_standard_surface9_subsurface, image_srgb_displayp3_standard_surface9_subsurface_color, image_srgb_displayp3_standard_surface9_subsurface_radius, image_srgb_displayp3_standard_surface9_subsurface_scale, image_srgb_displayp3_standard_surface9_subsurface_anisotropy, image_srgb_displayp3_standard_surface9_sheen, image_srgb_displayp3_standard_surface9_sheen_color, image_srgb_displayp3_standard_surface9_sheen_roughness, image_srgb_displayp3_standard_surface9_coat, image_srgb_displayp3_standard_surface9_coat_color, image_srgb_displayp3_standard_surface9_coat_roughness, image_srgb_displayp3_standard_surface9_coat_anisotropy, image_srgb_displayp3_standard_surface9_coat_rotation, image_srgb_displayp3_standard_surface9_coat_IOR, geomprop_Nworld_out1, image_srgb_displayp3_standard_surface9_coat_affect_color, image_srgb_displayp3_standard_surface9_coat_affect_roughness, image_srgb_displayp3_standard_surface9_thin_film_thickness, image_srgb_displayp3_standard_surface9_thin_film_IOR, image_srgb_displayp3_standard_surface9_emission, image_srgb_displayp3_standard_surface9_emission_color, image_srgb_displayp3_standard_surface9_opacity, image_srgb_displayp3_standard_surface9_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, image_srgb_displayp3_standard_surface9_out);
	assign		image_srgb_displayp3_standard_surface9_out.bsdf null_closure 	%line{841} %argrw{"wr"}
	assign		image_srgb_displayp3_standard_surface9_out.edf null_closure 	%argrw{"wr"}
	assign		image_srgb_displayp3_standard_surface9_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:842
#     {
	functioncall	$const40 676 	%line{842} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:311
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___702_null_closure $const1 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:312
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___702_coat_roughness_vector_out.x $const5 	%line{312} %argrw{"wr"}
	assign		___702_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:313
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const41 186 	%line{313} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:136
#     if (anisotropy > 0.0)
	mul		$tmp28 image_srgb_displayp3_standard_surface9_coat_roughness image_srgb_displayp3_standard_surface9_coat_roughness 	%line{136} %argrw{"wrr"}
	functioncall	$const43 172 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp29 $tmp28 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp29 $const42 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:137
#     {
	gt		$tmp30 image_srgb_displayp3_standard_surface9_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{137} %argrw{"wrr"}
	if		$tmp30 184 186 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const43 177 	%line{139} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp32 image_srgb_displayp3_standard_surface9_coat_anisotropy $const44 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp31 $tmp32 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp33 $const10 $tmp31 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{139} %argrw{"wrr"}
	sqrt		___679_aspect $tmp33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:140
#         result.y = roughness_sqr * aspect;
	div		$tmp34 ___678_roughness_sqr ___679_aspect 	%line{140} %argrw{"wrr"}
	min		___702_coat_roughness_vector_out.x $tmp34 $const10 	%argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:141
#     }
	mul		___702_coat_roughness_vector_out.y ___678_roughness_sqr ___679_aspect 	%line{141} %argrw{"wrr"}
	assign		___702_coat_roughness_vector_out.y ___702_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:145
#         result.y = roughness_sqr;
	assign		___702_coat_roughness_vector_out.x ___678_roughness_sqr 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:146
#     }
	assign		___702_coat_roughness_vector_out.y ___678_roughness_sqr 	%line{146} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:314
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___702_coat_tangent_rotate_degree_in2_tmp $const45 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:315
#     color metal_reflectivity_out = base_color * base;
	mul		___702_coat_tangent_rotate_degree_out image_srgb_displayp3_standard_surface9_coat_rotation ___702_coat_tangent_rotate_degree_in2_tmp 	%line{315} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:316
#     color metal_edgecolor_out = specular_color * specular;
	mul		___702_metal_reflectivity_out image_srgb_displayp3_out_cm_out image_srgb_displayp3_standard_surface9_base 	%line{316} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:317
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___702_metal_edgecolor_out image_srgb_displayp3_standard_surface9_specular_color image_srgb_displayp3_standard_surface9_specular 	%line{317} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:318
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___702_coat_affect_roughness_multiply1_out image_srgb_displayp3_standard_surface9_coat_affect_roughness image_srgb_displayp3_standard_surface9_coat 	%line{318} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:319
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___702_tangent_rotate_degree_in2_tmp $const45 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:320
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___702_tangent_rotate_degree_out image_srgb_displayp3_standard_surface9_specular_rotation ___702_tangent_rotate_degree_in2_tmp 	%line{320} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:321
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___702_transmission_roughness_add_out image_srgb_displayp3_standard_surface9_specular_roughness image_srgb_displayp3_standard_surface9_transmission_extra_roughness 	%line{321} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:322
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___702_subsurface_color_nonnegative_in2_tmp $const5 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:323
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp35 ___702_subsurface_color_nonnegative_in2_tmp 	%line{323} %argrw{"wr"}
	max		___702_subsurface_color_nonnegative_out image_srgb_displayp3_standard_surface9_subsurface_color $tmp35 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:324
#     float coat_clamped_high_tmp = 1.000000;
	assign		___702_coat_clamped_low_tmp $const5 	%line{324} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:325
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___702_coat_clamped_high_tmp $const10 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:326
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const43 202 	%line{326} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp36 image_srgb_displayp3_standard_surface9_coat ___702_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_coat_clamped_out $tmp36 ___702_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:327
#     float subsurface_selector_out = float(thin_walled);
	mul		___702_subsurface_radius_scaled_out image_srgb_displayp3_standard_surface9_subsurface_radius image_srgb_displayp3_standard_surface9_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:328
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp37 image_srgb_displayp3_standard_surface9_thin_walled 	%line{328} %argrw{"wr"}
	assign		___702_subsurface_selector_out $tmp37 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:329
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___702_base_color_nonnegative_in2_tmp $const5 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:330
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp38 ___702_base_color_nonnegative_in2_tmp 	%line{330} %argrw{"wr"}
	max		___702_base_color_nonnegative_out image_srgb_displayp3_out_cm_out $tmp38 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:331
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___702_coat_attenuation_bg_tmp $const46 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:332
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___702_coat_attenuation_out ___702_coat_attenuation_bg_tmp image_srgb_displayp3_standard_surface9_coat_color image_srgb_displayp3_standard_surface9_coat 	%line{332} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:333
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___702_one_minus_coat_ior_in1_tmp $const10 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:334
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___702_one_minus_coat_ior_out ___702_one_minus_coat_ior_in1_tmp image_srgb_displayp3_standard_surface9_coat_IOR 	%line{334} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:335
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___702_one_plus_coat_ior_in1_tmp $const10 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:336
#     color emission_weight_out = emission_color * emission1;
	add		___702_one_plus_coat_ior_out ___702_one_plus_coat_ior_in1_tmp image_srgb_displayp3_standard_surface9_coat_IOR 	%line{336} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:337
#     color opacity_luminance_out = color(0.0);
	mul		___702_emission_weight_out image_srgb_displayp3_standard_surface9_emission_color image_srgb_displayp3_standard_surface9_emission 	%line{337} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:338
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___702_opacity_luminance_out $const6 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:339
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const48 219 	%line{339} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:152
# }
	dot		$tmp40 image_srgb_displayp3_standard_surface9_opacity $const47 	%line{152} %argrw{"wrr"}
	assign		___702_opacity_luminance_out $tmp40 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:340
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___702_coat_tangent_rotate_out $const29 	%line{340} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:341
#     color artistic_ior_ior = color(0.0);
	functioncall	$const49 337 	%line{341} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:170
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const50 224 	%line{170} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp41 $const51 $const52 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_coat_tangent_rotate_degree_out $tmp41 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:171
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const53 287 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{171} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:157
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{157} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:158
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:159
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:160
# 
	sub		___682_oc $const10 ___682_c 	%line{160} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:162
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp42 ___682_nAxis $const1 	%line{162} %argrw{"wrr"}
	mul		$tmp43 ___682_oc $tmp42 	%argrw{"wrr"}
	compref		$tmp44 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp45 $tmp43 $tmp44 	%argrw{"wrr"}
	add		$tmp46 $tmp45 ___682_c 	%argrw{"wrr"}
	compref		$tmp47 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp48 ___682_oc $tmp47 	%argrw{"wrr"}
	compref		$tmp49 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp50 $tmp48 $tmp49 	%argrw{"wrr"}
	compref		$tmp51 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp52 $tmp51 ___682_s 	%argrw{"wrr"}
	sub		$tmp53 $tmp50 $tmp52 	%argrw{"wrr"}
	compref		$tmp54 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp55 ___682_oc $tmp54 	%argrw{"wrr"}
	compref		$tmp56 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	compref		$tmp58 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp59 $tmp58 ___682_s 	%argrw{"wrr"}
	add		$tmp60 $tmp57 $tmp59 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:163
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp61 ___682_nAxis $const1 	%line{163} %argrw{"wrr"}
	mul		$tmp62 ___682_oc $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp66 $tmp65 ___682_s 	%argrw{"wrr"}
	add		$tmp67 $tmp64 $tmp66 	%argrw{"wrr"}
	compref		$tmp68 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp69 ___682_oc $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	add		$tmp72 $tmp71 ___682_c 	%argrw{"wrr"}
	compref		$tmp73 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp74 ___682_oc $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	compref		$tmp77 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp78 $tmp77 ___682_s 	%argrw{"wrr"}
	sub		$tmp79 $tmp76 $tmp78 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:164
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp80 ___682_nAxis $const4 	%line{164} %argrw{"wrr"}
	mul		$tmp81 ___682_oc $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp83 $tmp81 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp85 $tmp84 ___682_s 	%argrw{"wrr"}
	sub		$tmp86 $tmp83 $tmp85 	%argrw{"wrr"}
	compref		$tmp87 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp88 ___682_oc $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp90 $tmp88 $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp92 $tmp91 ___682_s 	%argrw{"wrr"}
	add		$tmp93 $tmp90 $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp95 ___682_oc $tmp94 	%argrw{"wrr"}
	compref		$tmp96 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp97 $tmp95 $tmp96 	%argrw{"wrr"}
	add		$tmp98 $tmp97 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:162
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp46 $tmp53 $tmp60 $const5 $tmp67 $tmp72 $tmp79 $const5 $tmp86 $tmp93 $tmp98 $const5 $const5 $const5 $const5 $const10 	%line{162} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:172
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp99.x geomprop_Tworld_out1 $const1 	%line{172} %argrw{"wrr"}
	compref		$tmp99.y geomprop_Tworld_out1 $const24 	%argrw{"wrr"}
	compref		$tmp99.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp99.w $const10 	%argrw{"wr"}
	functioncall	$const2 336 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp100 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp101 $tmp100 $tmp99.x 	%argrw{"wrr"}
	mxcompref	$tmp102 ___683_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp103 $tmp102 $tmp99.y 	%argrw{"wrr"}
	add		$tmp104 $tmp101 $tmp103 	%argrw{"wrr"}
	mxcompref	$tmp105 ___683_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp106 $tmp105 $tmp99.z 	%argrw{"wrr"}
	add		$tmp107 $tmp104 $tmp106 	%argrw{"wrr"}
	mxcompref	$tmp108 ___683_m $const54 $const1 	%argrw{"wrrr"}
	mul		$tmp109 $tmp108 $tmp99.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp107 $tmp109 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp110 ___683_m $const1 $const24 	%line{416} %argrw{"wrrr"}
	mul		$tmp111 $tmp110 $tmp99.x 	%argrw{"wrr"}
	mxcompref	$tmp112 ___683_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp113 $tmp112 $tmp99.y 	%argrw{"wrr"}
	add		$tmp114 $tmp111 $tmp113 	%argrw{"wrr"}
	mxcompref	$tmp115 ___683_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp116 $tmp115 $tmp99.z 	%argrw{"wrr"}
	add		$tmp117 $tmp114 $tmp116 	%argrw{"wrr"}
	mxcompref	$tmp118 ___683_m $const54 $const24 	%argrw{"wrrr"}
	mul		$tmp119 $tmp118 $tmp99.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp117 $tmp119 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp120 ___683_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp121 $tmp120 $tmp99.x 	%argrw{"wrr"}
	mxcompref	$tmp122 ___683_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp123 $tmp122 $tmp99.y 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	mxcompref	$tmp125 ___683_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp126 $tmp125 $tmp99.z 	%argrw{"wrr"}
	add		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
	mxcompref	$tmp128 ___683_m $const54 $const4 	%argrw{"wrrr"}
	mul		$tmp129 $tmp128 $tmp99.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp127 $tmp129 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp130 ___683_m $const1 $const54 	%line{418} %argrw{"wrrr"}
	mul		$tmp131 $tmp130 $tmp99.x 	%argrw{"wrr"}
	mxcompref	$tmp132 ___683_m $const24 $const54 	%argrw{"wrrr"}
	mul		$tmp133 $tmp132 $tmp99.y 	%argrw{"wrr"}
	add		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	mxcompref	$tmp135 ___683_m $const4 $const54 	%argrw{"wrrr"}
	mul		$tmp136 $tmp135 $tmp99.z 	%argrw{"wrr"}
	add		$tmp137 $tmp134 $tmp136 	%argrw{"wrr"}
	mxcompref	$tmp138 ___683_m $const54 $const54 	%argrw{"wrrr"}
	mul		$tmp139 $tmp138 $tmp99.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp137 $tmp139 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:173
# }
	vector		___702_coat_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{173} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:342
#     color artistic_ior_extinction = color(0.0);
	assign		___702_artistic_ior_ior $const6 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:343
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___702_artistic_ior_extinction $const6 	%line{343} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:344
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const55 364 	%line{344} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:181
#     color r_sqrt = sqrt(r);
	assign		$tmp140 $const5 	%line{181} %argrw{"wr"}
	assign		$tmp141 $const56 	%argrw{"wr"}
	functioncall	$const43 345 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp142 ___702_metal_reflectivity_out $tmp141 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___684_r $tmp142 $tmp140 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:182
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___684_r_sqrt ___684_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{182} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:183
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp143 $const10 ___684_r 	%line{183} %argrw{"wrr"}
	add		$tmp144 $const10 ___684_r 	%argrw{"wrr"}
	div		___684_n_min $tmp143 $tmp144 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:184
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp145 $const10 ___684_r_sqrt 	%line{184} %argrw{"wrr"}
	sub		$tmp146 $const10 ___684_r_sqrt 	%argrw{"wrr"}
	div		___684_n_max $tmp145 $tmp146 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:185
# 
	mix		___702_artistic_ior_ior ___684_n_max ___684_n_min ___702_metal_edgecolor_out 	%line{185} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:187
#     color nm1 = ior - 1.0;
	add		___684_np1 ___702_artistic_ior_ior $const10 	%line{187} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:188
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___684_nm1 ___702_artistic_ior_ior $const10 	%line{188} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:189
#     k2 = max(k2, 0.0);
	mul		$tmp147 ___684_np1 ___684_np1 	%line{189} %argrw{"wrr"}
	mul		$tmp148 $tmp147 ___684_r 	%argrw{"wrr"}
	mul		$tmp149 ___684_nm1 ___684_nm1 	%argrw{"wrr"}
	sub		$tmp150 $tmp148 $tmp149 	%argrw{"wrr"}
	sub		$tmp151 $const10 ___684_r 	%argrw{"wrr"}
	div		___684_k2 $tmp150 $tmp151 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:190
#     extinction = sqrt(k2);
	assign		$tmp152 $const5 	%line{190} %argrw{"wr"}
	max		___684_k2 ___684_k2 $tmp152 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:191
# }
	sqrt		___702_artistic_ior_extinction ___684_k2 	%line{191} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:345
#     vector tangent_rotate_out = vector(0.0);
	mul		___702_coat_affect_roughness_multiply2_out ___702_coat_affect_roughness_multiply1_out image_srgb_displayp3_standard_surface9_coat_roughness 	%line{345} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:346
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___702_tangent_rotate_out $const29 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:347
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const49 483 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:170
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const50 370 	%line{170} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp153 $const51 $const52 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___683_rotationRadians ___702_tangent_rotate_degree_out $tmp153 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:171
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const53 433 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{171} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:157
#     float s = sin(angle);
	normalize	___682_nAxis geomprop_Nworld_out1 	%line{157} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:158
#     float c = cos(angle);
	sin		___682_s ___683_rotationRadians 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:159
#     float oc = 1.0 - c;
	cos		___682_c ___683_rotationRadians 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:160
# 
	sub		___682_oc $const10 ___682_c 	%line{160} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:162
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp154 ___682_nAxis $const1 	%line{162} %argrw{"wrr"}
	mul		$tmp155 ___682_oc $tmp154 	%argrw{"wrr"}
	compref		$tmp156 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp157 $tmp155 $tmp156 	%argrw{"wrr"}
	add		$tmp158 $tmp157 ___682_c 	%argrw{"wrr"}
	compref		$tmp159 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp160 ___682_oc $tmp159 	%argrw{"wrr"}
	compref		$tmp161 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp162 $tmp160 $tmp161 	%argrw{"wrr"}
	compref		$tmp163 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp164 $tmp163 ___682_s 	%argrw{"wrr"}
	sub		$tmp165 $tmp162 $tmp164 	%argrw{"wrr"}
	compref		$tmp166 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp167 ___682_oc $tmp166 	%argrw{"wrr"}
	compref		$tmp168 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp169 $tmp167 $tmp168 	%argrw{"wrr"}
	compref		$tmp170 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp171 $tmp170 ___682_s 	%argrw{"wrr"}
	add		$tmp172 $tmp169 $tmp171 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:163
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp173 ___682_nAxis $const1 	%line{163} %argrw{"wrr"}
	mul		$tmp174 ___682_oc $tmp173 	%argrw{"wrr"}
	compref		$tmp175 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp178 $tmp177 ___682_s 	%argrw{"wrr"}
	add		$tmp179 $tmp176 $tmp178 	%argrw{"wrr"}
	compref		$tmp180 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp181 ___682_oc $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp183 $tmp181 $tmp182 	%argrw{"wrr"}
	add		$tmp184 $tmp183 ___682_c 	%argrw{"wrr"}
	compref		$tmp185 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp186 ___682_oc $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp188 $tmp186 $tmp187 	%argrw{"wrr"}
	compref		$tmp189 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp190 $tmp189 ___682_s 	%argrw{"wrr"}
	sub		$tmp191 $tmp188 $tmp190 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:164
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp192 ___682_nAxis $const4 	%line{164} %argrw{"wrr"}
	mul		$tmp193 ___682_oc $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp195 $tmp193 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___682_s 	%argrw{"wrr"}
	sub		$tmp198 $tmp195 $tmp197 	%argrw{"wrr"}
	compref		$tmp199 ___682_nAxis $const24 	%argrw{"wrr"}
	mul		$tmp200 ___682_oc $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp202 $tmp200 $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___682_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp204 $tmp203 ___682_s 	%argrw{"wrr"}
	add		$tmp205 $tmp202 $tmp204 	%argrw{"wrr"}
	compref		$tmp206 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp207 ___682_oc $tmp206 	%argrw{"wrr"}
	compref		$tmp208 ___682_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	add		$tmp210 $tmp209 ___682_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:162
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___683_m $tmp158 $tmp165 $tmp172 $const5 $tmp179 $tmp184 $tmp191 $const5 $tmp198 $tmp205 $tmp210 $const5 $const5 $const5 $const5 $const10 	%line{162} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:172
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp211.x geomprop_Tworld_out1 $const1 	%line{172} %argrw{"wrr"}
	compref		$tmp211.y geomprop_Tworld_out1 $const24 	%argrw{"wrr"}
	compref		$tmp211.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp211.w $const10 	%argrw{"wr"}
	functioncall	$const2 482 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp212 ___683_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp213 $tmp212 $tmp211.x 	%argrw{"wrr"}
	mxcompref	$tmp214 ___683_m $const24 $const1 	%argrw{"wrrr"}
	mul		$tmp215 $tmp214 $tmp211.y 	%argrw{"wrr"}
	add		$tmp216 $tmp213 $tmp215 	%argrw{"wrr"}
	mxcompref	$tmp217 ___683_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp218 $tmp217 $tmp211.z 	%argrw{"wrr"}
	add		$tmp219 $tmp216 $tmp218 	%argrw{"wrr"}
	mxcompref	$tmp220 ___683_m $const54 $const1 	%argrw{"wrrr"}
	mul		$tmp221 $tmp220 $tmp211.w 	%argrw{"wrr"}
	add		___683_trans.x $tmp219 $tmp221 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp222 ___683_m $const1 $const24 	%line{416} %argrw{"wrrr"}
	mul		$tmp223 $tmp222 $tmp211.x 	%argrw{"wrr"}
	mxcompref	$tmp224 ___683_m $const24 $const24 	%argrw{"wrrr"}
	mul		$tmp225 $tmp224 $tmp211.y 	%argrw{"wrr"}
	add		$tmp226 $tmp223 $tmp225 	%argrw{"wrr"}
	mxcompref	$tmp227 ___683_m $const4 $const24 	%argrw{"wrrr"}
	mul		$tmp228 $tmp227 $tmp211.z 	%argrw{"wrr"}
	add		$tmp229 $tmp226 $tmp228 	%argrw{"wrr"}
	mxcompref	$tmp230 ___683_m $const54 $const24 	%argrw{"wrrr"}
	mul		$tmp231 $tmp230 $tmp211.w 	%argrw{"wrr"}
	add		___683_trans.y $tmp229 $tmp231 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp232 ___683_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp233 $tmp232 $tmp211.x 	%argrw{"wrr"}
	mxcompref	$tmp234 ___683_m $const24 $const4 	%argrw{"wrrr"}
	mul		$tmp235 $tmp234 $tmp211.y 	%argrw{"wrr"}
	add		$tmp236 $tmp233 $tmp235 	%argrw{"wrr"}
	mxcompref	$tmp237 ___683_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp238 $tmp237 $tmp211.z 	%argrw{"wrr"}
	add		$tmp239 $tmp236 $tmp238 	%argrw{"wrr"}
	mxcompref	$tmp240 ___683_m $const54 $const4 	%argrw{"wrrr"}
	mul		$tmp241 $tmp240 $tmp211.w 	%argrw{"wrr"}
	add		___683_trans.z $tmp239 $tmp241 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp242 ___683_m $const1 $const54 	%line{418} %argrw{"wrrr"}
	mul		$tmp243 $tmp242 $tmp211.x 	%argrw{"wrr"}
	mxcompref	$tmp244 ___683_m $const24 $const54 	%argrw{"wrrr"}
	mul		$tmp245 $tmp244 $tmp211.y 	%argrw{"wrr"}
	add		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	mxcompref	$tmp247 ___683_m $const4 $const54 	%argrw{"wrrr"}
	mul		$tmp248 $tmp247 $tmp211.z 	%argrw{"wrr"}
	add		$tmp249 $tmp246 $tmp248 	%argrw{"wrr"}
	mxcompref	$tmp250 ___683_m $const54 $const54 	%argrw{"wrrr"}
	mul		$tmp251 $tmp250 $tmp211.w 	%argrw{"wrr"}
	add		___683_trans.w $tmp249 $tmp251 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:173
# }
	vector		___702_tangent_rotate_out ___683_trans.x ___683_trans.y ___683_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{173} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:348
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___702_transmission_roughness_clamped_low_tmp $const5 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:349
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___702_transmission_roughness_clamped_high_tmp $const10 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:350
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const43 488 	%line{350} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp252 ___702_transmission_roughness_add_out ___702_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_transmission_roughness_clamped_out $tmp252 ___702_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:351
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___702_coat_gamma_multiply_out ___702_coat_clamped_out image_srgb_displayp3_standard_surface9_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{351} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:352
#     int opacity_luminance_float_index_tmp = 0;
	div		___702_coat_ior_to_F0_sqrt_out ___702_one_minus_coat_ior_out ___702_one_plus_coat_ior_out 	%line{352} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:353
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___702_opacity_luminance_float_index_tmp $const1 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:354
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const23 493 	%line{354} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___702_opacity_luminance_float_out ___702_opacity_luminance_out ___702_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:355
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___702_coat_tangent_rotate_normalize_out ___702_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:356
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_roughness_fg_tmp $const10 	%line{356} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:357
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___702_coat_affected_roughness_out image_srgb_displayp3_standard_surface9_specular_roughness ___702_coat_affected_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{357} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:358
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___702_tangent_rotate_normalize_out ___702_tangent_rotate_out 	%line{358} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:359
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___702_coat_affected_transmission_roughness_fg_tmp $const10 	%line{359} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:360
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___702_coat_affected_transmission_roughness_out ___702_transmission_roughness_clamped_out ___702_coat_affected_transmission_roughness_fg_tmp ___702_coat_affect_roughness_multiply2_out 	%line{360} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:361
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___702_coat_gamma_in2_tmp $const10 	%line{361} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:362
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___702_coat_gamma_out ___702_coat_gamma_multiply_out ___702_coat_gamma_in2_tmp 	%line{362} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:363
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___702_coat_ior_to_F0_out ___702_coat_ior_to_F0_sqrt_out ___702_coat_ior_to_F0_sqrt_out 	%line{363} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:364
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___702_coat_tangent_value2_tmp $const5 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:365
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp253 image_srgb_displayp3_standard_surface9_coat_anisotropy ___702_coat_tangent_value2_tmp 	%line{365} %argrw{"wrr"}
	functioncall	$const26 510 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp253 508 510 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_coat_tangent_out ___702_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:366
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___702_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{366} %argrw{"wr"}
	assign		___702_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:367
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const41 531 	%line{367} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:136
#     if (anisotropy > 0.0)
	mul		$tmp254 ___702_coat_affected_roughness_out ___702_coat_affected_roughness_out 	%line{136} %argrw{"wrr"}
	functioncall	$const43 517 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp255 $tmp254 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp255 $const42 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:137
#     {
	gt		$tmp256 image_srgb_displayp3_standard_surface9_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{137} %argrw{"wrr"}
	if		$tmp256 529 531 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const43 522 	%line{139} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp258 image_srgb_displayp3_standard_surface9_specular_anisotropy $const44 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp257 $tmp258 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp259 $const10 $tmp257 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{139} %argrw{"wrr"}
	sqrt		___679_aspect $tmp259 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:140
#         result.y = roughness_sqr * aspect;
	div		$tmp260 ___678_roughness_sqr ___679_aspect 	%line{140} %argrw{"wrr"}
	min		___702_main_roughness_out.x $tmp260 $const10 	%argrw{"wrr"}
	assign		___702_main_roughness_out.x ___702_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:141
#     }
	mul		___702_main_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{141} %argrw{"wrr"}
	assign		___702_main_roughness_out.y ___702_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:145
#         result.y = roughness_sqr;
	assign		___702_main_roughness_out.x ___678_roughness_sqr 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:146
#     }
	assign		___702_main_roughness_out.y ___678_roughness_sqr 	%line{146} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:368
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___702_main_tangent_value2_tmp $const5 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:369
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp261 image_srgb_displayp3_standard_surface9_specular_anisotropy ___702_main_tangent_value2_tmp 	%line{369} %argrw{"wrr"}
	functioncall	$const26 539 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp261 537 539 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___702_main_tangent_out ___702_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___702_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:370
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___702_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{370} %argrw{"wr"}
	assign		___702_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:371
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const41 560 	%line{371} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:136
#     if (anisotropy > 0.0)
	mul		$tmp262 ___702_coat_affected_transmission_roughness_out ___702_coat_affected_transmission_roughness_out 	%line{136} %argrw{"wrr"}
	functioncall	$const43 546 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp263 $tmp262 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___678_roughness_sqr $tmp263 $const42 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:137
#     {
	gt		$tmp264 image_srgb_displayp3_standard_surface9_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{137} %argrw{"wrr"}
	if		$tmp264 558 560 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const43 551 	%line{139} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp266 image_srgb_displayp3_standard_surface9_specular_anisotropy $const44 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp265 $tmp266 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:139
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp267 $const10 $tmp265 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{139} %argrw{"wrr"}
	sqrt		___679_aspect $tmp267 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:140
#         result.y = roughness_sqr * aspect;
	div		$tmp268 ___678_roughness_sqr ___679_aspect 	%line{140} %argrw{"wrr"}
	min		___702_transmission_roughness_out.x $tmp268 $const10 	%argrw{"wrr"}
	assign		___702_transmission_roughness_out.x ___702_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:141
#     }
	mul		___702_transmission_roughness_out.y ___678_roughness_sqr ___679_aspect 	%line{141} %argrw{"wrr"}
	assign		___702_transmission_roughness_out.y ___702_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:145
#         result.y = roughness_sqr;
	assign		___702_transmission_roughness_out.x ___678_roughness_sqr 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:146
#     }
	assign		___702_transmission_roughness_out.y ___678_roughness_sqr 	%line{146} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:372
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___702_coat_affected_subsurface_color_out ___702_subsurface_color_nonnegative_out ___702_coat_gamma_out 	%line{372} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:373
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___702_coat_affected_diffuse_color_out ___702_base_color_nonnegative_out ___702_coat_gamma_out 	%line{373} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:374
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___702_one_minus_coat_ior_to_F0_in1_tmp $const10 	%line{374} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:375
#     color emission_color0_out = color(0.0);
	sub		___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_in1_tmp ___702_coat_ior_to_F0_out 	%line{375} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:376
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___702_emission_color0_out $const6 	%line{376} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:377
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const57 568 	%line{377} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:212
#     out = combine_out;
	color		___687_combine_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out ___702_one_minus_coat_ior_to_F0_out 	%line{212} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:213
# }
	assign		___702_emission_color0_out ___687_combine_out 	%line{213} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:378
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___702_coat_bsdf_out ___702_null_closure 	%line{378} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:379
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const61 580 	%line{379} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:196
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp270 $const60 $const62 	%line{196} %argrw{"wrr"}
	if		$tmp270 573 574 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:197
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp271 $const60 $const60 	%line{197} %argrw{"wrr"}
	if		$tmp271 577 578 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint $const46 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:198
# }
	closure		$tmp272 $const65 geomprop_Nworld_out1 ___702_coat_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_coat_roughness_vector_out.x ___702_coat_roughness_vector_out.y image_srgb_displayp3_standard_surface9_coat_IOR $const59 $const63 $const5 $const64 $const58 	%line{198} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_coat_bsdf_out $tmp272 image_srgb_displayp3_standard_surface9_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:380
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___702_metal_bsdf_weight_tmp $const10 	%line{380} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:381
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___702_metal_bsdf_distribution_tmp $const59 	%line{381} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:382
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp273 $const66 geomprop_Nworld_out1 ___702_main_tangent_out ___702_main_roughness_out.x ___702_main_roughness_out.y ___702_artistic_ior_ior ___702_artistic_ior_extinction ___702_metal_bsdf_distribution_tmp $const63 image_srgb_displayp3_standard_surface9_thin_film_thickness $const64 image_srgb_displayp3_standard_surface9_thin_film_IOR 	%line{382} %argrw{"wrrrrrrrrrrrr"}
	mul		___702_metal_bsdf_out $tmp273 ___702_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:383
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___702_specular_bsdf_out ___702_null_closure 	%line{383} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:384
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const61 596 	%line{384} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:196
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp274 $const60 $const62 	%line{196} %argrw{"wrr"}
	if		$tmp274 589 590 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint image_srgb_displayp3_standard_surface9_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:197
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp275 $const60 $const60 	%line{197} %argrw{"wrr"}
	if		$tmp275 593 594 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint image_srgb_displayp3_standard_surface9_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:198
# }
	closure		$tmp276 $const65 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_main_roughness_out.x ___702_main_roughness_out.y image_srgb_displayp3_standard_surface9_specular_IOR $const59 $const63 image_srgb_displayp3_standard_surface9_thin_film_thickness $const64 image_srgb_displayp3_standard_surface9_thin_film_IOR 	%line{198} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_specular_bsdf_out $tmp276 image_srgb_displayp3_standard_surface9_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:385
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___702_transmission_bsdf_out ___702_null_closure 	%line{385} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:386
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const61 608 	%line{386} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:196
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp277 $const62 $const62 	%line{196} %argrw{"wrr"}
	if		$tmp277 601 602 	%argrw{"r"}
	assign		___685_reflection_tint $const6 	%argrw{"wr"}
	assign		___685_reflection_tint image_srgb_displayp3_standard_surface9_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:197
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp278 $const62 $const60 	%line{197} %argrw{"wrr"}
	if		$tmp278 605 606 	%argrw{"r"}
	assign		___685_transmission_tint $const6 	%argrw{"wr"}
	assign		___685_transmission_tint image_srgb_displayp3_standard_surface9_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:198
# }
	closure		$tmp279 $const65 geomprop_Nworld_out1 ___702_main_tangent_out ___685_reflection_tint ___685_transmission_tint ___702_transmission_roughness_out.x ___702_transmission_roughness_out.y image_srgb_displayp3_standard_surface9_specular_IOR $const59 $const63 $const5 $const64 $const58 	%line{198} %argrw{"wrrrrrrrrrrrrr"}
	mul		___702_transmission_bsdf_out $tmp279 $const10 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:387
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp280 $const67 geomprop_Nworld_out1 image_srgb_displayp3_standard_surface9_sheen_color image_srgb_displayp3_standard_surface9_sheen_roughness 	%line{387} %argrw{"wrrrr"}
	mul		___702_sheen_bsdf_out $tmp280 image_srgb_displayp3_standard_surface9_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:388
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___702_translucent_bsdf_weight_tmp $const10 	%line{388} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:389
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp281 $const68 geomprop_Nworld_out1 ___702_coat_affected_subsurface_color_out 	%line{389} %argrw{"wrrr"}
	mul		___702_translucent_bsdf_out $tmp281 ___702_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:390
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___702_subsurface_bsdf_out ___702_null_closure 	%line{390} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:391
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const69 617 	%line{391} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:206
# #endif
	mul		$tmp282 $const10 ___702_coat_affected_subsurface_color_out 	%line{206} %argrw{"wrr"}
	closure		___702_subsurface_bsdf_out $const70 geomprop_Nworld_out1 $tmp282 $const10 ___702_subsurface_radius_scaled_out image_srgb_displayp3_standard_surface9_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:392
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const71 622 	%line{392} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp283 $const10 ___702_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp284 ___702_subsurface_bsdf_out $tmp283 	%argrw{"wrr"}
	mul		$tmp285 ___702_translucent_bsdf_out ___702_subsurface_selector_out 	%argrw{"wrr"}
	add		___702_selected_subsurface_bsdf_out $tmp284 $tmp285 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:393
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp286 $const72 geomprop_Nworld_out1 ___702_coat_affected_diffuse_color_out image_srgb_displayp3_standard_surface9_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{393} %argrw{"wrrrr"}
	mul		___702_diffuse_bsdf_out $tmp286 image_srgb_displayp3_standard_surface9_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:394
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const71 629 	%line{394} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp287 $const10 image_srgb_displayp3_standard_surface9_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp288 ___702_diffuse_bsdf_out $tmp287 	%argrw{"wrr"}
	mul		$tmp289 ___702_selected_subsurface_bsdf_out image_srgb_displayp3_standard_surface9_subsurface 	%argrw{"wrr"}
	add		___702_subsurface_mix_out $tmp288 $tmp289 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:395
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___702_sheen_layer_out $const73 ___702_sheen_bsdf_out ___702_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{395} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:396
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const71 635 	%line{396} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp290 $const10 image_srgb_displayp3_standard_surface9_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp291 ___702_sheen_layer_out $tmp290 	%argrw{"wrr"}
	mul		$tmp292 ___702_transmission_bsdf_out image_srgb_displayp3_standard_surface9_transmission 	%argrw{"wrr"}
	add		___702_transmission_mix_out $tmp291 $tmp292 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:397
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___702_specular_layer_out $const73 ___702_specular_bsdf_out ___702_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{397} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:398
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const71 641 	%line{398} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp293 $const10 image_srgb_displayp3_standard_surface9_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp294 ___702_specular_layer_out $tmp293 	%argrw{"wrr"}
	mul		$tmp295 ___702_metal_bsdf_out image_srgb_displayp3_standard_surface9_metalness 	%argrw{"wrr"}
	add		___702_metalness_mix_out $tmp294 $tmp295 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:399
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___702_thin_film_layer_attenuated_out ___702_metalness_mix_out ___702_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{399} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:400
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___702_coat_layer_out $const73 ___702_coat_bsdf_out ___702_thin_film_layer_attenuated_out 	%line{400} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:401
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___702_emission_edf_out $const74 ___702_emission_weight_out 	%line{401} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:402
#     EDF coat_emission_edf_out = null_closure;
	mul		___702_coat_tinted_emission_edf_out ___702_emission_edf_out image_srgb_displayp3_standard_surface9_coat_color 	%line{402} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:403
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___702_coat_emission_edf_out ___702_null_closure 	%line{403} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:404
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const76 658 	%line{404} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:297
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp298 I 	%line{297} %argrw{"wr"}
	dot		$tmp297 N $tmp298 	%argrw{"wrr"}
	fabs		___700_NdotV $tmp297 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:298
#     result = base * f;
	functioncall	$const77 657 	%line{298} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:291
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp299 $const10 ___700_NdotV 	%line{291} %argrw{"wrr"}
	functioncall	$const43 655 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp300 $tmp299 $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_x $tmp300 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:292
# }
	pow		$tmp301 ___699_x $const75 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{292} %argrw{"wrr"}
	mix		___700_f ___702_emission_color0_out $const6 $tmp301 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:299
# }
	mul		___702_coat_emission_edf_out ___702_coat_tinted_emission_edf_out ___700_f 	%line{299} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:405
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const71 663 	%line{405} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp302 $const10 image_srgb_displayp3_standard_surface9_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp303 ___702_emission_edf_out $tmp302 	%argrw{"wrr"}
	mul		$tmp304 ___702_coat_emission_edf_out image_srgb_displayp3_standard_surface9_coat 	%argrw{"wrr"}
	add		___702_blended_coat_emission_edf_out $tmp303 $tmp304 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:406
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___702_shader_constructor_out.bsdf ___702_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{406} %argrw{"wr"}
	assign		___702_shader_constructor_out.edf ___702_null_closure 	%argrw{"wr"}
	assign		___702_shader_constructor_out.opacity $const10 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:407
#     out = shader_constructor_out;
	functioncall	$const78 673 	%line{407} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:304
#     result.edf     = edf;
	assign		___702_shader_constructor_out.bsdf ___702_coat_layer_out 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:305
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___702_shader_constructor_out.edf ___702_blended_coat_emission_edf_out 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:306
# }
	functioncall	$const43 672 	%line{306} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp305 ___702_opacity_luminance_float_out $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___702_shader_constructor_out.opacity $tmp305 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:306
# }
	assign		___702_shader_constructor_out.opacity ___702_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{306} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:408
# }
	assign		image_srgb_displayp3_standard_surface9_out.bsdf ___702_shader_constructor_out.bsdf 	%line{408} %argrw{"wr"}
	assign		image_srgb_displayp3_standard_surface9_out.edf ___702_shader_constructor_out.edf 	%argrw{"wr"}
	assign		image_srgb_displayp3_standard_surface9_out.opacity ___702_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:844
#         image_srgb_displayp3_out = (image_srgb_displayp3_standard_surface9_out.bsdf + image_srgb_displayp3_standard_surface9_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const43 679 	%line{844} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp306 image_srgb_displayp3_standard_surface9_out.opacity $const10 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___703_opacity_weight $tmp306 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl:845
#     }
	add		$tmp307 image_srgb_displayp3_standard_surface9_out.bsdf image_srgb_displayp3_standard_surface9_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\color_management\\ng1_image_srgb_displayp3_out.osl"} %line{845} %argrw{"wrr"}
	mul		$tmp308 $tmp307 ___703_opacity_weight 	%argrw{"wrr"}
	closure		$tmp309 $const79 	%argrw{"wr"}
	sub		$tmp310 $const10 ___703_opacity_weight 	%argrw{"wrr"}
	mul		$tmp311 $tmp309 $tmp310 	%argrw{"wrr"}
	add		image_srgb_displayp3_out $tmp308 $tmp311 	%argrw{"wrr"}
	end
