OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\color_management\filename_cm_test\Filename_CM_Test.oso
shader Filename_CM_Test	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"Filename_CM_Test"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{8,8} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	bl_texture_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1}
param	string	bl_texture_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	string	bl1_texture_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,widget,"filename"}  %read{3,3} %write{2147483647,-1}
param	string	bl1_texture_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{4,4} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tr1_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,label,"Filename"} %meta{string,widget,"filename"}  %read{5,5} %write{2147483647,-1}
param	string	tr1_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{6,6} %write{2147483647,-1}
param	string	tr1_layer	""		%meta{string,label,"Layer"}  %read{272,272} %write{2147483647,-1}
param	color	tr1_default	0 0 0		%meta{string,label,"Default Color"}  %read{266,268} %write{2147483647,-1}
param	string	tr1_uaddressmode	"periodic"		%meta{string,label,"Address Mode U"}  %read{237,272} %write{2147483647,-1}
param	string	tr1_vaddressmode	"periodic"		%meta{string,label,"Address Mode V"}  %read{252,272} %write{2147483647,-1}
param	string	tr1_filtertype	"linear"		%meta{string,label,"Filter Type"}  %read{272,272} %write{2147483647,-1}
param	string	tr1_framerange	""		%meta{string,label,"Frame Range"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	tr1_frameoffset	0		%meta{string,label,"Frame Offset"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tr1_frameendaction	"constant"		%meta{string,label,"Frame End Action"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	shaderref1_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{363,798} %write{2147483647,-1}
param	float	shaderref1_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{797,797} %write{2147483647,-1}
param	float	shaderref1_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{812,814} %write{2147483647,-1}
param	float	shaderref1_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{364,770} %write{2147483647,-1}
param	float	shaderref1_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{368,670} %write{2147483647,-1}
param	float	shaderref1_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{769,781} %write{2147483647,-1}
param	float	shaderref1_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{692,724} %write{2147483647,-1}
param	float	shaderref1_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{367,367} %write{2147483647,-1}
param	float	shaderref1_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{806,808} %write{2147483647,-1}
param	float	shaderref1_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	shaderref1_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	shaderref1_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	shaderref1_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	shaderref1_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{368,368} %write{2147483647,-1}
param	float	shaderref1_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{800,802} %write{2147483647,-1}
param	color	shaderref1_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{371,371} %write{2147483647,-1}
param	color	shaderref1_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{377,377} %write{2147483647,-1}
param	float	shaderref1_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{377,377} %write{2147483647,-1}
param	float	shaderref1_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{791,791} %write{2147483647,-1}
param	float	shaderref1_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{784,784} %write{2147483647,-1}
param	color	shaderref1_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{783,783} %write{2147483647,-1}
param	float	shaderref1_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{783,783} %write{2147483647,-1}
param	float	shaderref1_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{365,836} %write{2147483647,-1}
param	color	shaderref1_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{384,819} %write{2147483647,-1}
param	float	shaderref1_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{343,539} %write{2147483647,-1}
param	float	shaderref1_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{347,678} %write{2147483647,-1}
param	float	shaderref1_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{362,362} %write{2147483647,-1}
param	float	shaderref1_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{386,753} %write{2147483647,-1}
param	float	shaderref1_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{663,663} %write{2147483647,-1}
param	float	shaderref1_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{365,365} %write{2147483647,-1}
param	float	shaderref1_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{757,769} %write{2147483647,-1}
param	float	shaderref1_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{757,769} %write{2147483647,-1}
param	float	shaderref1_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{389,389} %write{2147483647,-1}
param	color	shaderref1_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{389,389} %write{2147483647,-1}
param	color	shaderref1_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{392,392} %write{2147483647,-1}
param	int	shaderref1_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{378,378} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{861,861}
global	vector	I	%read{822,822} %write{2147483647,-1}
global	normal	N	%read{8,823} %write{2147483647,-1}
global	float	u	%read{16,106} %write{2147483647,-1} %derivs
global	float	v	%read{17,107} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{58,272} %write{54,268}
local	float	___670_st.x	%read{58,272} %write{56,270} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{58,272} %write{57,271} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___672_geomprop_UV0_out1.x	%read{26,56} %write{16,16} %mystruct{___672_geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	___672_geomprop_UV0_out1.y	%read{41,57} %write{17,17} %mystruct{___672_geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	___672_b_image_out	%read{59,59} %write{18,58}
local	float	___673_geomprop_UV0_out1.x	%read{72,102} %write{62,62} %mystruct{___673_geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	___673_geomprop_UV0_out1.y	%read{87,103} %write{63,63} %mystruct{___673_geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	___673_b_image_out	%read{105,105} %write{64,104}
local	int	___674_N_extract_0_index_tmp	%read{120,285} %write{118,283}
local	float	___674_N_extract_0_out	%read{127,292} %write{120,285}
local	int	___674_N_extract_1_index_tmp	%read{123,288} %write{121,286}
local	float	___674_N_extract_1_out	%read{128,293} %write{123,288}
local	int	___674_N_extract_2_index_tmp	%read{126,291} %write{124,289}
local	float	___674_N_extract_2_out	%read{129,294} %write{126,291}
local	float	___675_bias_in2_tmp	%read{111,276} %write{110,275}
local	color	___675_bias_out	%read{132,297} %write{111,276}
local	float	___675_linSeg_in2_tmp	%read{113,278} %write{112,277}
local	color	___675_linSeg_out	%read{168,333} %write{113,278}
local	float	___675_colorSeparate_outr	%read{136,301} %write{114,292}
local	float	___675_colorSeparate_outg	%read{146,311} %write{115,293}
local	float	___675_colorSeparate_outb	%read{156,321} %write{116,294}
local	float	___675_max_in2_tmp	%read{131,296} %write{130,295}
local	color	___675_max_out	%read{164,329} %write{132,297}
local	float	___675_isAboveR_value2_tmp	%read{136,301} %write{133,298}
local	float	___675_isAboveR_in1_tmp	%read{139,304} %write{134,299}
local	float	___675_isAboveR_in2_tmp	%read{141,306} %write{135,300}
local	float	___675_isAboveR_out	%read{165,330} %write{139,306}
local	float	___675_isAboveG_value2_tmp	%read{146,311} %write{143,308}
local	float	___675_isAboveG_in1_tmp	%read{149,314} %write{144,309}
local	float	___675_isAboveG_in2_tmp	%read{151,316} %write{145,310}
local	float	___675_isAboveG_out	%read{165,330} %write{149,316}
local	float	___675_isAboveB_value2_tmp	%read{156,321} %write{153,318}
local	float	___675_isAboveB_in1_tmp	%read{159,324} %write{154,319}
local	float	___675_isAboveB_in2_tmp	%read{161,326} %write{155,320}
local	float	___675_isAboveB_out	%read{165,330} %write{159,326}
local	float	___675_scale_in2_tmp	%read{164,329} %write{163,328}
local	color	___675_scale_out	%read{167,332} %write{164,329}
local	color	___675_isAbove_out	%read{168,333} %write{165,330}
local	float	___675_powSeg_in2_tmp	%read{167,332} %write{166,331}
local	color	___675_powSeg_out	%read{168,333} %write{167,332}
local	color	___675_mix_out	%read{169,334} %write{168,333}
local	float	___676_roughness_sqr	%read{354,734} %write{346,720}
local	float	___677_aspect	%read{354,731} %write{353,727}
local	vector	___680_nAxis	%read{404,604} %write{400,546}
local	float	___680_s	%read{414,600} %write{401,547}
local	float	___680_c	%read{403,606} %write{402,548}
local	float	___680_oc	%read{405,603} %write{403,549}
local	float	___681_rotationRadians	%read{401,548} %write{398,544}
local	matrix	___681_m	%read{467,654} %write{461,607}
local	float	___681_trans.x	%read{511,657} %write{477,623} %mystruct{___681_trans} %mystructfield{0}
local	float	___681_trans.y	%read{511,657} %write{488,634} %mystruct{___681_trans} %mystructfield{1}
local	float	___681_trans.z	%read{511,657} %write{499,645} %mystruct{___681_trans} %mystructfield{2}
local	float	___681_trans.w	%read{2147483647,-1} %write{510,656} %mystruct{___681_trans} %mystructfield{3}
local	color	___682_r	%read{520,534} %write{519,519}
local	color	___682_r_sqrt	%read{524,525} %write{520,520}
local	color	___682_n_min	%read{527,527} %write{523,523}
local	color	___682_n_max	%read{527,527} %write{526,526}
local	color	___682_np1	%read{530,530} %write{528,528}
local	color	___682_nm1	%read{532,532} %write{529,529}
local	color	___682_k2	%read{537,538} %write{535,537}
local	color	___683_reflection_tint	%read{753,781} %write{747,776}
local	color	___683_transmission_tint	%read{753,781} %write{751,780}
local	color	___685_combine_out	%read{742,742} %write{741,741}
local	float	___697_x	%read{830,830} %write{829,829}
local	float	___698_NdotV	%read{826,826} %write{824,824}
local	color	___698_f	%read{832,832} %write{831,831}
local	closure color	___700_null_closure	%read{743,839} %write{339,339}
local	float	___700_coat_roughness_vector_out.x	%read{356,753} %write{340,359} %mystruct{___700_coat_roughness_vector_out} %mystructfield{0}
local	float	___700_coat_roughness_vector_out.y	%read{358,753} %write{341,360} %mystruct{___700_coat_roughness_vector_out} %mystructfield{1}
local	float	___700_coat_tangent_rotate_degree_in2_tmp	%read{362,362} %write{361,361}
local	float	___700_coat_tangent_rotate_degree_out	%read{398,398} %write{362,362}
local	color	___700_metal_reflectivity_out	%read{518,518} %write{363,363}
local	color	___700_metal_edgecolor_out	%read{527,527} %write{364,364}
local	float	___700_coat_affect_roughness_multiply1_out	%read{539,539} %write{365,365}
local	float	___700_tangent_rotate_degree_in2_tmp	%read{367,367} %write{366,366}
local	float	___700_tangent_rotate_degree_out	%read{544,544} %write{367,367}
local	float	___700_transmission_roughness_add_out	%read{661,661} %write{368,368}
local	float	___700_subsurface_color_nonnegative_in2_tmp	%read{370,370} %write{369,369}
local	color	___700_subsurface_color_nonnegative_out	%read{735,735} %write{371,371}
local	float	___700_coat_clamped_low_tmp	%read{376,376} %write{372,372}
local	float	___700_coat_clamped_high_tmp	%read{375,375} %write{373,373}
local	float	___700_coat_clamped_out	%read{663,663} %write{376,376}
local	color	___700_subsurface_radius_scaled_out	%read{791,791} %write{377,377}
local	float	___700_subsurface_selector_out	%read{793,795} %write{379,379}
local	float	___700_base_color_nonnegative_in2_tmp	%read{381,381} %write{380,380}
local	color	___700_base_color_nonnegative_out	%read{736,736} %write{382,382}
local	color	___700_coat_attenuation_bg_tmp	%read{384,384} %write{383,383}
local	color	___700_coat_attenuation_out	%read{816,816} %write{384,384}
local	float	___700_one_minus_coat_ior_in1_tmp	%read{386,386} %write{385,385}
local	float	___700_one_minus_coat_ior_out	%read{664,664} %write{386,386}
local	float	___700_one_plus_coat_ior_in1_tmp	%read{388,388} %write{387,387}
local	float	___700_one_plus_coat_ior_out	%read{664,664} %write{388,388}
local	color	___700_emission_weight_out	%read{818,818} %write{389,389}
local	color	___700_opacity_luminance_out	%read{667,667} %write{390,393}
local	vector	___700_coat_tangent_rotate_out	%read{668,668} %write{394,511}
local	color	___700_artistic_ior_ior	%read{528,757} %write{512,527}
local	color	___700_artistic_ior_extinction	%read{757,757} %write{513,538}
local	float	___700_coat_affect_roughness_multiply2_out	%read{670,673} %write{539,539}
local	vector	___700_tangent_rotate_out	%read{671,671} %write{540,657}
local	float	___700_transmission_roughness_clamped_low_tmp	%read{662,662} %write{658,658}
local	float	___700_transmission_roughness_clamped_high_tmp	%read{661,661} %write{659,659}
local	float	___700_transmission_roughness_clamped_out	%read{673,673} %write{662,662}
local	float	___700_coat_gamma_multiply_out	%read{675,675} %write{663,663}
local	float	___700_coat_ior_to_F0_sqrt_out	%read{676,676} %write{664,664}
local	int	___700_opacity_luminance_float_index_tmp	%read{667,667} %write{665,665}
local	float	___700_opacity_luminance_float_out	%read{845,845} %write{667,667}
local	vector	___700_coat_tangent_rotate_normalize_out	%read{681,681} %write{668,668}
local	float	___700_coat_affected_roughness_fg_tmp	%read{670,670} %write{669,669}
local	float	___700_coat_affected_roughness_out	%read{688,688} %write{670,670}
local	vector	___700_tangent_rotate_normalize_out	%read{710,710} %write{671,671}
local	float	___700_coat_affected_transmission_roughness_fg_tmp	%read{673,673} %write{672,672}
local	float	___700_coat_affected_transmission_roughness_out	%read{717,717} %write{673,673}
local	float	___700_coat_gamma_in2_tmp	%read{675,675} %write{674,674}
local	float	___700_coat_gamma_out	%read{735,736} %write{675,675}
local	float	___700_coat_ior_to_F0_out	%read{738,738} %write{676,676}
local	float	___700_coat_tangent_value2_tmp	%read{678,678} %write{677,677}
local	vector	___700_coat_tangent_out	%read{753,753} %write{681,683}
local	float	___700_main_roughness_out.x	%read{701,769} %write{685,704} %mystruct{___700_main_roughness_out} %mystructfield{0}
local	float	___700_main_roughness_out.y	%read{703,769} %write{686,705} %mystruct{___700_main_roughness_out} %mystructfield{1}
local	float	___700_main_tangent_value2_tmp	%read{707,707} %write{706,706}
local	vector	___700_main_tangent_out	%read{757,781} %write{710,712}
local	float	___700_transmission_roughness_out.x	%read{730,781} %write{714,733} %mystruct{___700_transmission_roughness_out} %mystructfield{0}
local	float	___700_transmission_roughness_out.y	%read{732,781} %write{715,734} %mystruct{___700_transmission_roughness_out} %mystructfield{1}
local	color	___700_coat_affected_subsurface_color_out	%read{786,790} %write{735,735}
local	color	___700_coat_affected_diffuse_color_out	%read{797,797} %write{736,736}
local	float	___700_one_minus_coat_ior_to_F0_in1_tmp	%read{738,738} %write{737,737}
local	float	___700_one_minus_coat_ior_to_F0_out	%read{741,741} %write{738,738}
local	color	___700_emission_color0_out	%read{831,831} %write{739,742}
local	closure color	___700_coat_bsdf_out	%read{817,817} %write{743,754}
local	float	___700_metal_bsdf_weight_tmp	%read{758,758} %write{755,755}
local	string	___700_metal_bsdf_distribution_tmp	%read{757,757} %write{756,756}
local	closure color	___700_metal_bsdf_out	%read{814,814} %write{758,758}
local	closure color	___700_specular_bsdf_out	%read{810,810} %write{759,770}
local	closure color	___700_transmission_bsdf_out	%read{808,808} %write{771,782}
local	closure color	___700_sheen_bsdf_out	%read{804,804} %write{784,784}
local	float	___700_translucent_bsdf_weight_tmp	%read{787,787} %write{785,785}
local	closure color	___700_translucent_bsdf_out	%read{795,795} %write{787,787}
local	closure color	___700_subsurface_bsdf_out	%read{794,794} %write{788,791}
local	closure color	___700_selected_subsurface_bsdf_out	%read{802,802} %write{796,796}
local	closure color	___700_diffuse_bsdf_out	%read{801,801} %write{798,798}
local	closure color	___700_subsurface_mix_out	%read{804,804} %write{803,803}
local	closure color	___700_sheen_layer_out	%read{807,807} %write{804,804}
local	closure color	___700_transmission_mix_out	%read{810,810} %write{809,809}
local	closure color	___700_specular_layer_out	%read{813,813} %write{810,810}
local	closure color	___700_metalness_mix_out	%read{816,816} %write{815,815}
local	closure color	___700_thin_film_layer_attenuated_out	%read{817,817} %write{816,816}
local	closure color	___700_coat_layer_out	%read{842,842} %write{817,817}
local	closure color	___700_emission_edf_out	%read{819,835} %write{818,818}
local	closure color	___700_coat_tinted_emission_edf_out	%read{832,832} %write{819,819}
local	closure color	___700_coat_emission_edf_out	%read{836,836} %write{820,832}
local	closure color	___700_blended_coat_emission_edf_out	%read{843,843} %write{837,837}
local	closure color	___700_shader_constructor_out.bsdf	%read{848,848} %write{838,842} %mystruct{___700_shader_constructor_out} %mystructfield{0}
local	closure color	___700_shader_constructor_out.edf	%read{849,849} %write{839,843} %mystruct{___700_shader_constructor_out} %mystructfield{1}
local	float	___700_shader_constructor_out.opacity	%read{847,850} %write{840,847} %mystruct{___700_shader_constructor_out} %mystructfield{2}
local	float	___701_opacity_weight	%read{856,858} %write{854,854}
local	closure color	null_closure	%read{335,336} %write{0,0}
local	string	bl_texture_file_.filename	%read{20,58} %write{1,1} %mystruct{bl_texture_file_} %mystructfield{0}
local	string	bl_texture_file_.colorspace	%read{58,58} %write{2,2} %mystruct{bl_texture_file_} %mystructfield{1}
local	string	bl1_texture_file_.filename	%read{66,104} %write{3,3} %mystruct{bl1_texture_file_} %mystructfield{0}
local	string	bl1_texture_file_.colorspace	%read{104,104} %write{4,4} %mystruct{bl1_texture_file_} %mystructfield{1}
local	string	tr1_file_.filename	%read{234,272} %write{5,5} %mystruct{tr1_file_} %mystructfield{0}
local	string	tr1_file_.colorspace	%read{272,272} %write{6,6} %mystruct{tr1_file_} %mystructfield{1}
local	vector	geomprop_Nworld_out1	%read{400,797} %write{8,8}
local	vector	geomprop_Tworld_out1	%read{462,712} %write{13,13}
local	color	bl_out	%read{111,126} %write{14,59}
local	color	bl1_out	%read{173,188} %write{60,105}
local	float	geomprop_UV0_out1.x	%read{240,270} %write{106,106} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{255,271} %write{107,107} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	color	bl_out_cm_out	%read{363,382} %write{108,169}
local	color	bl1_out_cm_out	%read{364,768} %write{170,231}
local	color	tr1_out	%read{276,291} %write{232,272}
local	color	tr1_out_cm_out	%read{776,780} %write{273,334}
local	closure color	shaderref1_out.bsdf	%read{855,855} %write{335,848} %mystruct{shaderref1_out} %mystructfield{0}
local	closure color	shaderref1_out.edf	%read{855,855} %write{336,849} %mystruct{shaderref1_out} %mystructfield{1}
local	float	shaderref1_out.opacity	%read{853,853} %write{337,850} %mystruct{shaderref1_out} %mystructfield{2}
local	closure color	Filename_CM_Test_out	%read{861,861} %write{860,860}
const	int	$const1	0		%read{0,665} %write{2147483647,-1}
const	string	$const2	"transform"		%read{7,612} %write{2147483647,-1}
const	string	$const3	"common"		%read{8,8} %write{2147483647,-1}
temp	vector	$tmp1	%read{13,13} %write{12,12}
const	int	$const4	2		%read{9,651} %write{2147483647,-1}
temp	float	$tmp2	%read{12,12} %write{9,9}
const	float	$const5	0		%read{12,854} %write{2147483647,-1}
temp	float	$tmp3	%read{11,11} %write{10,10}
temp	float	$tmp4	%read{12,12} %write{11,11}
const	color	$const6	0 0 0		%read{14,831} %write{2147483647,-1}
const	string	$const7	"NG_tm_test"		%read{15,15} %write{2147483647,-1}
const	string	$const8	""		%read{20,234} %write{2147483647,-1}
const	string	$const9	"periodic"		%read{23,104} %write{2147483647,-1}
const	string	$const10	"linear"		%read{58,104} %write{2147483647,-1}
const	string	$const11	"constant"		%read{23,252} %write{2147483647,-1}
const	string	$const12	"mx_image_color3"		%read{19,233} %write{2147483647,-1}
temp	int	$tmp6	%read{21,21} %write{20,20}
temp	int	$tmp7	%read{22,36} %write{21,35}
temp	int	$tmp8	%read{24,24} %write{23,23}
temp	int	$tmp9	%read{25,34} %write{24,33}
temp	int	$tmp10	%read{27,27} %write{26,26}
temp	int	$tmp11	%read{28,32} %write{27,31}
const	float	$const13	1		%read{29,858} %write{2147483647,-1}
temp	int	$tmp12	%read{30,30} %write{29,29}
temp	int	$tmp13	%read{31,31} %write{30,30}
temp	int	$tmp14	%read{33,33} %write{32,32}
temp	int	$tmp15	%read{35,35} %write{34,34}
temp	int	$tmp16	%read{37,51} %write{36,50}
temp	int	$tmp17	%read{39,39} %write{38,38}
temp	int	$tmp18	%read{40,49} %write{39,48}
temp	int	$tmp19	%read{42,42} %write{41,41}
temp	int	$tmp20	%read{43,47} %write{42,46}
temp	int	$tmp21	%read{45,45} %write{44,44}
temp	int	$tmp22	%read{46,46} %write{45,45}
temp	int	$tmp23	%read{48,48} %write{47,47}
temp	int	$tmp24	%read{50,50} %write{49,49}
const	string	$const14	"mx_transform_uv"		%read{55,269} %write{2147483647,-1}
const	string	$const15	"subimage"		%read{58,272} %write{2147483647,-1}
const	string	$const16	"interp"		%read{58,272} %write{2147483647,-1}
const	string	$const17	"missingcolor"		%read{58,272} %write{2147483647,-1}
const	string	$const18	"swrap"		%read{58,272} %write{2147483647,-1}
const	string	$const19	"twrap"		%read{58,272} %write{2147483647,-1}
const	string	$const20	"colorspace"		%read{58,272} %write{2147483647,-1}
const	string	$const21	"NG_tm_retest"		%read{61,61} %write{2147483647,-1}
temp	int	$tmp26	%read{67,67} %write{66,66}
temp	int	$tmp27	%read{68,82} %write{67,81}
temp	int	$tmp28	%read{70,70} %write{69,69}
temp	int	$tmp29	%read{71,80} %write{70,79}
temp	int	$tmp30	%read{73,73} %write{72,72}
temp	int	$tmp31	%read{74,78} %write{73,77}
temp	int	$tmp32	%read{76,76} %write{75,75}
temp	int	$tmp33	%read{77,77} %write{76,76}
temp	int	$tmp34	%read{79,79} %write{78,78}
temp	int	$tmp35	%read{81,81} %write{80,80}
temp	int	$tmp36	%read{83,97} %write{82,96}
temp	int	$tmp37	%read{85,85} %write{84,84}
temp	int	$tmp38	%read{86,95} %write{85,94}
temp	int	$tmp39	%read{88,88} %write{87,87}
temp	int	$tmp40	%read{89,93} %write{88,92}
temp	int	$tmp41	%read{91,91} %write{90,90}
temp	int	$tmp42	%read{92,92} %write{91,91}
temp	int	$tmp43	%read{94,94} %write{93,93}
temp	int	$tmp44	%read{96,96} %write{95,95}
const	string	$const22	"NG_srgb_texture_to_lin_rec709_color3"		%read{109,274} %write{2147483647,-1}
const	float	$const23	0.055		%read{110,275} %write{2147483647,-1}
const	float	$const24	12.92		%read{112,277} %write{2147483647,-1}
const	string	$const25	"NG_separate3_color3"		%read{117,282} %write{2147483647,-1}
const	string	$const26	"mx_extract"		%read{119,666} %write{2147483647,-1}
const	int	$const27	1		%read{121,648} %write{2147483647,-1}
temp	color	$tmp45	%read{132,132} %write{131,131}
const	float	$const28	0.04045		%read{133,318} %write{2147483647,-1}
temp	int	$tmp46	%read{138,138} %write{136,136}
const	string	$const29	"mx_ternary"		%read{137,708} %write{2147483647,-1}
temp	int	$tmp47	%read{148,148} %write{146,146}
temp	int	$tmp48	%read{158,158} %write{156,156}
const	float	$const30	1.055		%read{163,328} %write{2147483647,-1}
const	float	$const31	2.4		%read{166,331} %write{2147483647,-1}
temp	color	$tmp49	%read{194,194} %write{193,193}
temp	int	$tmp50	%read{200,200} %write{198,198}
temp	int	$tmp51	%read{210,210} %write{208,208}
temp	int	$tmp52	%read{220,220} %write{218,218}
temp	int	$tmp53	%read{235,235} %write{234,234}
temp	int	$tmp54	%read{236,250} %write{235,249}
temp	int	$tmp55	%read{238,238} %write{237,237}
temp	int	$tmp56	%read{239,248} %write{238,247}
temp	int	$tmp57	%read{241,241} %write{240,240}
temp	int	$tmp58	%read{242,246} %write{241,245}
temp	int	$tmp59	%read{244,244} %write{243,243}
temp	int	$tmp60	%read{245,245} %write{244,244}
temp	int	$tmp61	%read{247,247} %write{246,246}
temp	int	$tmp62	%read{249,249} %write{248,248}
temp	int	$tmp63	%read{251,265} %write{250,264}
temp	int	$tmp64	%read{253,253} %write{252,252}
temp	int	$tmp65	%read{254,263} %write{253,262}
temp	int	$tmp66	%read{256,256} %write{255,255}
temp	int	$tmp67	%read{257,261} %write{256,260}
temp	int	$tmp68	%read{259,259} %write{258,258}
temp	int	$tmp69	%read{260,260} %write{259,259}
temp	int	$tmp70	%read{262,262} %write{261,261}
temp	int	$tmp71	%read{264,264} %write{263,263}
temp	color	$tmp72	%read{297,297} %write{296,296}
temp	int	$tmp73	%read{303,303} %write{301,301}
temp	int	$tmp74	%read{313,313} %write{311,311}
temp	int	$tmp75	%read{323,323} %write{321,321}
const	string	$const32	"NG_standard_surface_surfaceshader_100"		%read{338,338} %write{2147483647,-1}
const	string	$const33	"mx_roughness_anisotropy"		%read{342,716} %write{2147483647,-1}
temp	float	$tmp76	%read{345,345} %write{343,343}
const	float	$const34	1e-08		%read{346,720} %write{2147483647,-1}
const	string	$const35	"clamp"		%read{344,852} %write{2147483647,-1}
temp	float	$tmp77	%read{346,346} %write{345,345}
temp	int	$tmp78	%read{348,348} %write{347,347}
temp	float	$tmp79	%read{352,352} %write{351,351}
const	float	$const36	0.98		%read{350,724} %write{2147483647,-1}
temp	float	$tmp80	%read{351,351} %write{350,350}
temp	float	$tmp81	%read{353,353} %write{352,352}
temp	float	$tmp82	%read{355,355} %write{354,354}
const	float	$const37	360		%read{361,366} %write{2147483647,-1}
temp	color	$tmp83	%read{371,371} %write{370,370}
temp	float	$tmp84	%read{376,376} %write{375,375}
temp	float	$tmp85	%read{379,379} %write{378,378}
temp	color	$tmp86	%read{382,382} %write{381,381}
const	color	$const38	1 1 1		%read{383,752} %write{2147483647,-1}
const	color	$const39	0.272229 0.674082 0.053689		%read{392,392} %write{2147483647,-1}
const	string	$const40	"mx_luminance_color3"		%read{391,391} %write{2147483647,-1}
temp	float	$tmp88	%read{393,393} %write{392,392}
const	vector	$const41	0 0 0		%read{394,540} %write{2147483647,-1}
const	string	$const42	"mx_rotate_vector3"		%read{395,541} %write{2147483647,-1}
const	string	$const43	"radians"		%read{396,542} %write{2147483647,-1}
const	float	$const44	3.1415927		%read{397,543} %write{2147483647,-1}
const	float	$const45	180		%read{397,543} %write{2147483647,-1}
temp	float	$tmp89	%read{398,398} %write{397,397}
const	string	$const46	"rotationMatrix"		%read{399,545} %write{2147483647,-1}
temp	float	$tmp90	%read{405,405} %write{404,404}
temp	float	$tmp91	%read{407,407} %write{405,405}
temp	float	$tmp92	%read{407,407} %write{406,406}
temp	float	$tmp93	%read{408,408} %write{407,407}
temp	float	$tmp94	%read{461,461} %write{408,408}
temp	float	$tmp95	%read{410,410} %write{409,409}
temp	float	$tmp96	%read{412,412} %write{410,410}
temp	float	$tmp97	%read{412,412} %write{411,411}
temp	float	$tmp98	%read{415,415} %write{412,412}
temp	float	$tmp99	%read{414,414} %write{413,413}
temp	float	$tmp100	%read{415,415} %write{414,414}
temp	float	$tmp101	%read{461,461} %write{415,415}
temp	float	$tmp102	%read{417,417} %write{416,416}
temp	float	$tmp103	%read{419,419} %write{417,417}
temp	float	$tmp104	%read{419,419} %write{418,418}
temp	float	$tmp105	%read{422,422} %write{419,419}
temp	float	$tmp106	%read{421,421} %write{420,420}
temp	float	$tmp107	%read{422,422} %write{421,421}
temp	float	$tmp108	%read{461,461} %write{422,422}
temp	float	$tmp109	%read{424,424} %write{423,423}
temp	float	$tmp110	%read{426,426} %write{424,424}
temp	float	$tmp111	%read{426,426} %write{425,425}
temp	float	$tmp112	%read{429,429} %write{426,426}
temp	float	$tmp113	%read{428,428} %write{427,427}
temp	float	$tmp114	%read{429,429} %write{428,428}
temp	float	$tmp115	%read{461,461} %write{429,429}
temp	float	$tmp116	%read{431,431} %write{430,430}
temp	float	$tmp117	%read{433,433} %write{431,431}
temp	float	$tmp118	%read{433,433} %write{432,432}
temp	float	$tmp119	%read{434,434} %write{433,433}
temp	float	$tmp120	%read{461,461} %write{434,434}
temp	float	$tmp121	%read{436,436} %write{435,435}
temp	float	$tmp122	%read{438,438} %write{436,436}
temp	float	$tmp123	%read{438,438} %write{437,437}
temp	float	$tmp124	%read{441,441} %write{438,438}
temp	float	$tmp125	%read{440,440} %write{439,439}
temp	float	$tmp126	%read{441,441} %write{440,440}
temp	float	$tmp127	%read{461,461} %write{441,441}
temp	float	$tmp128	%read{443,443} %write{442,442}
temp	float	$tmp129	%read{445,445} %write{443,443}
temp	float	$tmp130	%read{445,445} %write{444,444}
temp	float	$tmp131	%read{448,448} %write{445,445}
temp	float	$tmp132	%read{447,447} %write{446,446}
temp	float	$tmp133	%read{448,448} %write{447,447}
temp	float	$tmp134	%read{461,461} %write{448,448}
temp	float	$tmp135	%read{450,450} %write{449,449}
temp	float	$tmp136	%read{452,452} %write{450,450}
temp	float	$tmp137	%read{452,452} %write{451,451}
temp	float	$tmp138	%read{455,455} %write{452,452}
temp	float	$tmp139	%read{454,454} %write{453,453}
temp	float	$tmp140	%read{455,455} %write{454,454}
temp	float	$tmp141	%read{461,461} %write{455,455}
temp	float	$tmp142	%read{457,457} %write{456,456}
temp	float	$tmp143	%read{459,459} %write{457,457}
temp	float	$tmp144	%read{459,459} %write{458,458}
temp	float	$tmp145	%read{460,460} %write{459,459}
temp	float	$tmp146	%read{461,461} %write{460,460}
temp	float	$tmp147.x	%read{468,501} %write{462,462}
temp	float	$tmp147.y	%read{470,503} %write{463,463}
temp	float	$tmp147.z	%read{473,506} %write{464,464}
temp	float	$tmp147.w	%read{476,509} %write{465,465}
temp	float	$tmp148	%read{468,468} %write{467,467}
temp	float	$tmp149	%read{471,471} %write{468,468}
temp	float	$tmp150	%read{470,470} %write{469,469}
temp	float	$tmp151	%read{471,471} %write{470,470}
temp	float	$tmp152	%read{474,474} %write{471,471}
temp	float	$tmp153	%read{473,473} %write{472,472}
temp	float	$tmp154	%read{474,474} %write{473,473}
temp	float	$tmp155	%read{477,477} %write{474,474}
const	int	$const47	3		%read{475,654} %write{2147483647,-1}
temp	float	$tmp156	%read{476,476} %write{475,475}
temp	float	$tmp157	%read{477,477} %write{476,476}
temp	float	$tmp158	%read{479,479} %write{478,478}
temp	float	$tmp159	%read{482,482} %write{479,479}
temp	float	$tmp160	%read{481,481} %write{480,480}
temp	float	$tmp161	%read{482,482} %write{481,481}
temp	float	$tmp162	%read{485,485} %write{482,482}
temp	float	$tmp163	%read{484,484} %write{483,483}
temp	float	$tmp164	%read{485,485} %write{484,484}
temp	float	$tmp165	%read{488,488} %write{485,485}
temp	float	$tmp166	%read{487,487} %write{486,486}
temp	float	$tmp167	%read{488,488} %write{487,487}
temp	float	$tmp168	%read{490,490} %write{489,489}
temp	float	$tmp169	%read{493,493} %write{490,490}
temp	float	$tmp170	%read{492,492} %write{491,491}
temp	float	$tmp171	%read{493,493} %write{492,492}
temp	float	$tmp172	%read{496,496} %write{493,493}
temp	float	$tmp173	%read{495,495} %write{494,494}
temp	float	$tmp174	%read{496,496} %write{495,495}
temp	float	$tmp175	%read{499,499} %write{496,496}
temp	float	$tmp176	%read{498,498} %write{497,497}
temp	float	$tmp177	%read{499,499} %write{498,498}
temp	float	$tmp178	%read{501,501} %write{500,500}
temp	float	$tmp179	%read{504,504} %write{501,501}
temp	float	$tmp180	%read{503,503} %write{502,502}
temp	float	$tmp181	%read{504,504} %write{503,503}
temp	float	$tmp182	%read{507,507} %write{504,504}
temp	float	$tmp183	%read{506,506} %write{505,505}
temp	float	$tmp184	%read{507,507} %write{506,506}
temp	float	$tmp185	%read{510,510} %write{507,507}
temp	float	$tmp186	%read{509,509} %write{508,508}
temp	float	$tmp187	%read{510,510} %write{509,509}
const	string	$const48	"mx_artistic_ior"		%read{514,514} %write{2147483647,-1}
temp	color	$tmp188	%read{519,519} %write{515,515}
const	float	$const49	0.99		%read{516,516} %write{2147483647,-1}
temp	color	$tmp189	%read{518,518} %write{516,516}
temp	color	$tmp190	%read{519,519} %write{518,518}
temp	color	$tmp191	%read{523,523} %write{521,521}
temp	color	$tmp192	%read{523,523} %write{522,522}
temp	color	$tmp193	%read{526,526} %write{524,524}
temp	color	$tmp194	%read{526,526} %write{525,525}
temp	color	$tmp195	%read{531,531} %write{530,530}
temp	color	$tmp196	%read{533,533} %write{531,531}
temp	color	$tmp197	%read{533,533} %write{532,532}
temp	color	$tmp198	%read{535,535} %write{533,533}
temp	color	$tmp199	%read{535,535} %write{534,534}
temp	color	$tmp200	%read{537,537} %write{536,536}
temp	float	$tmp201	%read{544,544} %write{543,543}
temp	float	$tmp202	%read{551,551} %write{550,550}
temp	float	$tmp203	%read{553,553} %write{551,551}
temp	float	$tmp204	%read{553,553} %write{552,552}
temp	float	$tmp205	%read{554,554} %write{553,553}
temp	float	$tmp206	%read{607,607} %write{554,554}
temp	float	$tmp207	%read{556,556} %write{555,555}
temp	float	$tmp208	%read{558,558} %write{556,556}
temp	float	$tmp209	%read{558,558} %write{557,557}
temp	float	$tmp210	%read{561,561} %write{558,558}
temp	float	$tmp211	%read{560,560} %write{559,559}
temp	float	$tmp212	%read{561,561} %write{560,560}
temp	float	$tmp213	%read{607,607} %write{561,561}
temp	float	$tmp214	%read{563,563} %write{562,562}
temp	float	$tmp215	%read{565,565} %write{563,563}
temp	float	$tmp216	%read{565,565} %write{564,564}
temp	float	$tmp217	%read{568,568} %write{565,565}
temp	float	$tmp218	%read{567,567} %write{566,566}
temp	float	$tmp219	%read{568,568} %write{567,567}
temp	float	$tmp220	%read{607,607} %write{568,568}
temp	float	$tmp221	%read{570,570} %write{569,569}
temp	float	$tmp222	%read{572,572} %write{570,570}
temp	float	$tmp223	%read{572,572} %write{571,571}
temp	float	$tmp224	%read{575,575} %write{572,572}
temp	float	$tmp225	%read{574,574} %write{573,573}
temp	float	$tmp226	%read{575,575} %write{574,574}
temp	float	$tmp227	%read{607,607} %write{575,575}
temp	float	$tmp228	%read{577,577} %write{576,576}
temp	float	$tmp229	%read{579,579} %write{577,577}
temp	float	$tmp230	%read{579,579} %write{578,578}
temp	float	$tmp231	%read{580,580} %write{579,579}
temp	float	$tmp232	%read{607,607} %write{580,580}
temp	float	$tmp233	%read{582,582} %write{581,581}
temp	float	$tmp234	%read{584,584} %write{582,582}
temp	float	$tmp235	%read{584,584} %write{583,583}
temp	float	$tmp236	%read{587,587} %write{584,584}
temp	float	$tmp237	%read{586,586} %write{585,585}
temp	float	$tmp238	%read{587,587} %write{586,586}
temp	float	$tmp239	%read{607,607} %write{587,587}
temp	float	$tmp240	%read{589,589} %write{588,588}
temp	float	$tmp241	%read{591,591} %write{589,589}
temp	float	$tmp242	%read{591,591} %write{590,590}
temp	float	$tmp243	%read{594,594} %write{591,591}
temp	float	$tmp244	%read{593,593} %write{592,592}
temp	float	$tmp245	%read{594,594} %write{593,593}
temp	float	$tmp246	%read{607,607} %write{594,594}
temp	float	$tmp247	%read{596,596} %write{595,595}
temp	float	$tmp248	%read{598,598} %write{596,596}
temp	float	$tmp249	%read{598,598} %write{597,597}
temp	float	$tmp250	%read{601,601} %write{598,598}
temp	float	$tmp251	%read{600,600} %write{599,599}
temp	float	$tmp252	%read{601,601} %write{600,600}
temp	float	$tmp253	%read{607,607} %write{601,601}
temp	float	$tmp254	%read{603,603} %write{602,602}
temp	float	$tmp255	%read{605,605} %write{603,603}
temp	float	$tmp256	%read{605,605} %write{604,604}
temp	float	$tmp257	%read{606,606} %write{605,605}
temp	float	$tmp258	%read{607,607} %write{606,606}
temp	float	$tmp259.x	%read{614,647} %write{608,608}
temp	float	$tmp259.y	%read{616,649} %write{609,609}
temp	float	$tmp259.z	%read{619,652} %write{610,610}
temp	float	$tmp259.w	%read{622,655} %write{611,611}
temp	float	$tmp260	%read{614,614} %write{613,613}
temp	float	$tmp261	%read{617,617} %write{614,614}
temp	float	$tmp262	%read{616,616} %write{615,615}
temp	float	$tmp263	%read{617,617} %write{616,616}
temp	float	$tmp264	%read{620,620} %write{617,617}
temp	float	$tmp265	%read{619,619} %write{618,618}
temp	float	$tmp266	%read{620,620} %write{619,619}
temp	float	$tmp267	%read{623,623} %write{620,620}
temp	float	$tmp268	%read{622,622} %write{621,621}
temp	float	$tmp269	%read{623,623} %write{622,622}
temp	float	$tmp270	%read{625,625} %write{624,624}
temp	float	$tmp271	%read{628,628} %write{625,625}
temp	float	$tmp272	%read{627,627} %write{626,626}
temp	float	$tmp273	%read{628,628} %write{627,627}
temp	float	$tmp274	%read{631,631} %write{628,628}
temp	float	$tmp275	%read{630,630} %write{629,629}
temp	float	$tmp276	%read{631,631} %write{630,630}
temp	float	$tmp277	%read{634,634} %write{631,631}
temp	float	$tmp278	%read{633,633} %write{632,632}
temp	float	$tmp279	%read{634,634} %write{633,633}
temp	float	$tmp280	%read{636,636} %write{635,635}
temp	float	$tmp281	%read{639,639} %write{636,636}
temp	float	$tmp282	%read{638,638} %write{637,637}
temp	float	$tmp283	%read{639,639} %write{638,638}
temp	float	$tmp284	%read{642,642} %write{639,639}
temp	float	$tmp285	%read{641,641} %write{640,640}
temp	float	$tmp286	%read{642,642} %write{641,641}
temp	float	$tmp287	%read{645,645} %write{642,642}
temp	float	$tmp288	%read{644,644} %write{643,643}
temp	float	$tmp289	%read{645,645} %write{644,644}
temp	float	$tmp290	%read{647,647} %write{646,646}
temp	float	$tmp291	%read{650,650} %write{647,647}
temp	float	$tmp292	%read{649,649} %write{648,648}
temp	float	$tmp293	%read{650,650} %write{649,649}
temp	float	$tmp294	%read{653,653} %write{650,650}
temp	float	$tmp295	%read{652,652} %write{651,651}
temp	float	$tmp296	%read{653,653} %write{652,652}
temp	float	$tmp297	%read{656,656} %write{653,653}
temp	float	$tmp298	%read{655,655} %write{654,654}
temp	float	$tmp299	%read{656,656} %write{655,655}
temp	float	$tmp300	%read{662,662} %write{661,661}
temp	int	$tmp301	%read{680,680} %write{678,678}
temp	float	$tmp302	%read{690,690} %write{688,688}
temp	float	$tmp303	%read{691,691} %write{690,690}
temp	int	$tmp304	%read{693,693} %write{692,692}
temp	float	$tmp305	%read{697,697} %write{696,696}
temp	float	$tmp306	%read{696,696} %write{695,695}
temp	float	$tmp307	%read{698,698} %write{697,697}
temp	float	$tmp308	%read{700,700} %write{699,699}
temp	int	$tmp309	%read{709,709} %write{707,707}
temp	float	$tmp310	%read{719,719} %write{717,717}
temp	float	$tmp311	%read{720,720} %write{719,719}
temp	int	$tmp312	%read{722,722} %write{721,721}
temp	float	$tmp313	%read{726,726} %write{725,725}
temp	float	$tmp314	%read{725,725} %write{724,724}
temp	float	$tmp315	%read{727,727} %write{726,726}
temp	float	$tmp316	%read{729,729} %write{728,728}
const	string	$const50	"NG_convert_float_color3"		%read{740,740} %write{2147483647,-1}
const	float	$const51	1.5		%read{753,781} %write{2147483647,-1}
const	string	$const52	"ggx"		%read{753,781} %write{2147483647,-1}
const	string	$const53	"R"		%read{745,777} %write{2147483647,-1}
const	string	$const54	"mx_dielectric_bsdf"		%read{744,772} %write{2147483647,-1}
const	string	$const55	"T"		%read{745,777} %write{2147483647,-1}
temp	int	$tmp318	%read{746,746} %write{745,745}
temp	int	$tmp319	%read{750,750} %write{749,749}
temp	closure color	$tmp320	%read{754,754} %write{753,753}
const	string	$const56	"thinfilm_thickness"		%read{753,781} %write{2147483647,-1}
const	string	$const57	"thinfilm_ior"		%read{753,781} %write{2147483647,-1}
const	string	$const58	"dielectric_bsdf"		%read{753,781} %write{2147483647,-1}
temp	closure color	$tmp321	%read{758,758} %write{757,757}
const	string	$const59	"conductor_bsdf"		%read{757,757} %write{2147483647,-1}
temp	int	$tmp322	%read{762,762} %write{761,761}
temp	int	$tmp323	%read{766,766} %write{765,765}
temp	closure color	$tmp324	%read{770,770} %write{769,769}
temp	int	$tmp325	%read{774,774} %write{773,773}
temp	int	$tmp326	%read{778,778} %write{777,777}
temp	closure color	$tmp327	%read{782,782} %write{781,781}
temp	closure color	$tmp328	%read{784,784} %write{783,783}
const	string	$const60	"sheen_bsdf"		%read{783,783} %write{2147483647,-1}
temp	closure color	$tmp329	%read{787,787} %write{786,786}
const	string	$const61	"translucent_bsdf"		%read{786,786} %write{2147483647,-1}
const	string	$const62	"mx_subsurface_bsdf"		%read{789,789} %write{2147483647,-1}
temp	color	$tmp330	%read{791,791} %write{790,790}
const	string	$const63	"subsurface_bssrdf"		%read{791,791} %write{2147483647,-1}
const	string	$const64	"mix"		%read{792,833} %write{2147483647,-1}
temp	float	$tmp331	%read{794,794} %write{793,793}
temp	closure color	$tmp332	%read{796,796} %write{794,794}
temp	closure color	$tmp333	%read{796,796} %write{795,795}
temp	closure color	$tmp334	%read{798,798} %write{797,797}
const	string	$const65	"oren_nayar_diffuse_bsdf"		%read{797,797} %write{2147483647,-1}
temp	float	$tmp335	%read{801,801} %write{800,800}
temp	closure color	$tmp336	%read{803,803} %write{801,801}
temp	closure color	$tmp337	%read{803,803} %write{802,802}
const	string	$const66	"layer"		%read{804,817} %write{2147483647,-1}
temp	float	$tmp338	%read{807,807} %write{806,806}
temp	closure color	$tmp339	%read{809,809} %write{807,807}
temp	closure color	$tmp340	%read{809,809} %write{808,808}
temp	float	$tmp341	%read{813,813} %write{812,812}
temp	closure color	$tmp342	%read{815,815} %write{813,813}
temp	closure color	$tmp343	%read{815,815} %write{814,814}
const	string	$const67	"uniform_edf"		%read{818,818} %write{2147483647,-1}
const	float	$const68	5		%read{830,830} %write{2147483647,-1}
const	string	$const69	"mx_generalized_schlick_edf"		%read{821,821} %write{2147483647,-1}
temp	float	$tmp345	%read{824,824} %write{823,823}
temp	vector	$tmp346	%read{823,823} %write{822,822}
const	string	$const70	"mx_fresnel_schlick"		%read{825,825} %write{2147483647,-1}
temp	float	$tmp347	%read{828,828} %write{826,826}
temp	float	$tmp348	%read{829,829} %write{828,828}
temp	float	$tmp349	%read{831,831} %write{830,830}
temp	float	$tmp350	%read{835,835} %write{834,834}
temp	closure color	$tmp351	%read{837,837} %write{835,835}
temp	closure color	$tmp352	%read{837,837} %write{836,836}
const	string	$const71	"mx_surface"		%read{841,841} %write{2147483647,-1}
temp	float	$tmp353	%read{846,846} %write{845,845}
const	string	$const72	"mx_surfacematerial"		%read{851,851} %write{2147483647,-1}
temp	float	$tmp354	%read{854,854} %write{853,853}
temp	closure color	$tmp355	%read{856,856} %write{855,855}
temp	closure color	$tmp356	%read{860,860} %write{856,856}
temp	closure color	$tmp357	%read{859,859} %write{857,857}
const	string	$const73	"transparent"		%read{857,857} %write{2147483647,-1}
temp	float	$tmp358	%read{859,859} %write{858,858}
temp	closure color	$tmp359	%read{860,860} %write{859,859}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:809
#     textureresource bl_texture_file_ = {bl_texture_file, bl_texture_file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{809} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:810
#     textureresource bl1_texture_file_ = {bl1_texture_file, bl1_texture_file_colorspace};
	assign		bl_texture_file_.filename bl_texture_file 	%line{810} %argrw{"wr"}
	assign		bl_texture_file_.colorspace bl_texture_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:811
#     textureresource tr1_file_ = {tr1_file, tr1_file_colorspace};
	assign		bl1_texture_file_.filename bl1_texture_file 	%line{811} %argrw{"wr"}
	assign		bl1_texture_file_.colorspace bl1_texture_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:812
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		tr1_file_.filename tr1_file 	%line{812} %argrw{"wr"}
	assign		tr1_file_.colorspace tr1_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:813
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 9 	%line{813} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:814
#     color bl_out = color(0.0);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{814} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:815
#     NG_tm_test(bl_texture_file_, bl_out);
	assign		bl_out $const6 	%line{815} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:816
#     color bl1_out = color(0.0);
	functioncall	$const7 60 	%line{816} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:44
#     color b_image_out = color(0.0);
	assign		___672_geomprop_UV0_out1.x u 	%line{44} %argrw{"wr"}
	assign		___672_geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:45
#     mx_image_color3(texture_file, "", color(0.000000, 0.000000, 0.000000), geomprop_UV0_out1, "periodic", "periodic", "linear", "", 0, "constant", b_image_out);
	assign		___672_b_image_out $const6 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:46
#     out = b_image_out;
	functioncall	$const12 59 	%line{46} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp6 bl_texture_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp7 $tmp6 $const1 	%argrw{"wrr"}
	if		$tmp7 23 36 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp8 $const9 $const11 	%line{26} %argrw{"wrr"}
	neq		$tmp9 $tmp8 $const1 	%argrw{"wrr"}
	if		$tmp9 34 34 	%argrw{"r"}
	lt		$tmp10 ___672_geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 29 32 	%argrw{"r"}
	gt		$tmp12 ___672_geomprop_UV0_out1.x $const13 	%argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	assign		$tmp11 $tmp13 	%argrw{"wr"}
	neq		$tmp14 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp9 $tmp14 	%argrw{"wr"}
	neq		$tmp15 $tmp9 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp7 $tmp15 	%line{25} %argrw{"wr"}
	neq		$tmp16 $tmp7 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp16 38 51 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:27
#     {
	eq		$tmp17 $const9 $const11 	%line{27} %argrw{"wrr"}
	neq		$tmp18 $tmp17 $const1 	%argrw{"wrr"}
	if		$tmp18 49 49 	%argrw{"r"}
	lt		$tmp19 ___672_geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp20 $tmp19 $const1 	%argrw{"wrr"}
	if		$tmp20 44 47 	%argrw{"r"}
	gt		$tmp21 ___672_geomprop_UV0_out1.y $const13 	%argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	assign		$tmp20 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp20 $const1 	%argrw{"wrr"}
	assign		$tmp18 $tmp23 	%argrw{"wr"}
	neq		$tmp24 $tmp18 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp16 $tmp24 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp16 54 54 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:29
#         return;
	assign		___672_b_image_out $const6 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor $const6 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const14 58 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:20
# }
	assign		___670_st.x ___672_geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___672_b_image_out bl_texture_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 $const10 $const17 ___670_missingColor $const18 $const9 $const19 $const9 $const20 bl_texture_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:47
# }
	assign		bl_out ___672_b_image_out 	%line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:817
#     NG_tm_retest(bl1_texture_file_, bl1_out);
	assign		bl1_out $const6 	%line{817} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:818
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	functioncall	$const21 106 	%line{818} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:52
#     color b_image_out = color(0.0);
	assign		___673_geomprop_UV0_out1.x u 	%line{52} %argrw{"wr"}
	assign		___673_geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:53
#     mx_image_color3(texture_file, "", color(0.000000, 0.000000, 0.000000), geomprop_UV0_out1, "periodic", "periodic", "linear", "", 0, "constant", b_image_out);
	assign		___673_b_image_out $const6 	%line{53} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:54
#     out = b_image_out;
	functioncall	$const12 105 	%line{54} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp26 bl1_texture_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp27 $tmp26 $const1 	%argrw{"wrr"}
	if		$tmp27 69 82 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp28 $const9 $const11 	%line{26} %argrw{"wrr"}
	neq		$tmp29 $tmp28 $const1 	%argrw{"wrr"}
	if		$tmp29 80 80 	%argrw{"r"}
	lt		$tmp30 ___673_geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp31 $tmp30 $const1 	%argrw{"wrr"}
	if		$tmp31 75 78 	%argrw{"r"}
	gt		$tmp32 ___673_geomprop_UV0_out1.x $const13 	%argrw{"wrr"}
	neq		$tmp33 $tmp32 $const1 	%argrw{"wrr"}
	assign		$tmp31 $tmp33 	%argrw{"wr"}
	neq		$tmp34 $tmp31 $const1 	%argrw{"wrr"}
	assign		$tmp29 $tmp34 	%argrw{"wr"}
	neq		$tmp35 $tmp29 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp27 $tmp35 	%line{25} %argrw{"wr"}
	neq		$tmp36 $tmp27 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp36 84 97 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:27
#     {
	eq		$tmp37 $const9 $const11 	%line{27} %argrw{"wrr"}
	neq		$tmp38 $tmp37 $const1 	%argrw{"wrr"}
	if		$tmp38 95 95 	%argrw{"r"}
	lt		$tmp39 ___673_geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const1 	%argrw{"wrr"}
	if		$tmp40 90 93 	%argrw{"r"}
	gt		$tmp41 ___673_geomprop_UV0_out1.y $const13 	%argrw{"wrr"}
	neq		$tmp42 $tmp41 $const1 	%argrw{"wrr"}
	assign		$tmp40 $tmp42 	%argrw{"wr"}
	neq		$tmp43 $tmp40 $const1 	%argrw{"wrr"}
	assign		$tmp38 $tmp43 	%argrw{"wr"}
	neq		$tmp44 $tmp38 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp36 $tmp44 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp36 100 100 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:29
#         return;
	assign		___673_b_image_out $const6 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor $const6 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const14 104 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:20
# }
	assign		___670_st.x ___673_geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___673_geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		___673_b_image_out bl1_texture_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 $const10 $const17 ___670_missingColor $const18 $const9 $const19 $const9 $const20 bl1_texture_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:55
# }
	assign		bl1_out ___673_b_image_out 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:819
#     color bl_out_cm_out = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{819} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:820
#     NG_srgb_texture_to_lin_rec709_color3(bl_out, bl_out_cm_out);
	assign		bl_out_cm_out $const6 	%line{820} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:821
#     color bl1_out_cm_out = color(0.0);
	functioncall	$const22 170 	%line{821} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:73
#     color bias_out = in + bias_in2_tmp;
	assign		___675_bias_in2_tmp $const23 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:74
#     float linSeg_in2_tmp = 12.920000;
	add		___675_bias_out bl_out ___675_bias_in2_tmp 	%line{74} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:75
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___675_linSeg_in2_tmp $const24 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:76
#     float colorSeparate_outr = 0.0;
	div		___675_linSeg_out bl_out ___675_linSeg_in2_tmp 	%line{76} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:77
#     float colorSeparate_outg = 0.0;
	assign		___675_colorSeparate_outr $const5 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:78
#     float colorSeparate_outb = 0.0;
	assign		___675_colorSeparate_outg $const5 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:79
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___675_colorSeparate_outb $const5 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:80
#     float max_in2_tmp = 0.000000;
	functioncall	$const25 130 	%line{80} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:60
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___674_N_extract_0_index_tmp $const1 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:61
#     int N_extract_1_index_tmp = 1;
	functioncall	$const26 121 	%line{61} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_0_out bl_out ___674_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:62
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___674_N_extract_1_index_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:63
#     int N_extract_2_index_tmp = 2;
	functioncall	$const26 124 	%line{63} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_1_out bl_out ___674_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:64
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___674_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:65
#     outr = N_extract_0_out;
	functioncall	$const26 127 	%line{65} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_2_out bl_out ___674_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:66
#     outg = N_extract_1_out;
	assign		___675_colorSeparate_outr ___674_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:67
#     outb = N_extract_2_out;
	assign		___675_colorSeparate_outg ___674_N_extract_1_out 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:68
# }
	assign		___675_colorSeparate_outb ___674_N_extract_2_out 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:81
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___675_max_in2_tmp $const5 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:82
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp45 ___675_max_in2_tmp 	%line{82} %argrw{"wr"}
	max		___675_max_out ___675_bias_out $tmp45 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:83
#     float isAboveR_in1_tmp = 1.000000;
	assign		___675_isAboveR_value2_tmp $const28 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:84
#     float isAboveR_in2_tmp = 0.000000;
	assign		___675_isAboveR_in1_tmp $const13 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:85
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___675_isAboveR_in2_tmp $const5 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:86
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp46 ___675_colorSeparate_outr ___675_isAboveR_value2_tmp 	%line{86} %argrw{"wrr"}
	functioncall	$const29 143 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp46 141 143 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveR_out ___675_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveR_out ___675_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:87
#     float isAboveG_in1_tmp = 1.000000;
	assign		___675_isAboveG_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:88
#     float isAboveG_in2_tmp = 0.000000;
	assign		___675_isAboveG_in1_tmp $const13 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:89
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___675_isAboveG_in2_tmp $const5 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:90
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp47 ___675_colorSeparate_outg ___675_isAboveG_value2_tmp 	%line{90} %argrw{"wrr"}
	functioncall	$const29 153 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp47 151 153 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveG_out ___675_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveG_out ___675_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:91
#     float isAboveB_in1_tmp = 1.000000;
	assign		___675_isAboveB_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:92
#     float isAboveB_in2_tmp = 0.000000;
	assign		___675_isAboveB_in1_tmp $const13 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:93
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___675_isAboveB_in2_tmp $const5 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:94
#     float scale_in2_tmp = 1.055000;
	gt		$tmp48 ___675_colorSeparate_outb ___675_isAboveB_value2_tmp 	%line{94} %argrw{"wrr"}
	functioncall	$const29 163 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp48 161 163 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveB_out ___675_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveB_out ___675_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:95
#     color scale_out = max_out / scale_in2_tmp;
	assign		___675_scale_in2_tmp $const30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:96
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___675_scale_out ___675_max_out ___675_scale_in2_tmp 	%line{96} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:97
#     float powSeg_in2_tmp = 2.400000;
	color		___675_isAbove_out ___675_isAboveR_out ___675_isAboveG_out ___675_isAboveB_out 	%line{97} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:98
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___675_powSeg_in2_tmp $const31 	%line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:99
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___675_powSeg_out ___675_scale_out ___675_powSeg_in2_tmp 	%line{99} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:100
#     out = mix_out;
	mix		___675_mix_out ___675_linSeg_out ___675_powSeg_out ___675_isAbove_out 	%line{100} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:101
# }
	assign		bl_out_cm_out ___675_mix_out 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:822
#     NG_srgb_texture_to_lin_rec709_color3(bl1_out, bl1_out_cm_out);
	assign		bl1_out_cm_out $const6 	%line{822} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:823
#     color tr1_out = color(0.0);
	functioncall	$const22 232 	%line{823} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:73
#     color bias_out = in + bias_in2_tmp;
	assign		___675_bias_in2_tmp $const23 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:74
#     float linSeg_in2_tmp = 12.920000;
	add		___675_bias_out bl1_out ___675_bias_in2_tmp 	%line{74} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:75
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___675_linSeg_in2_tmp $const24 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:76
#     float colorSeparate_outr = 0.0;
	div		___675_linSeg_out bl1_out ___675_linSeg_in2_tmp 	%line{76} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:77
#     float colorSeparate_outg = 0.0;
	assign		___675_colorSeparate_outr $const5 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:78
#     float colorSeparate_outb = 0.0;
	assign		___675_colorSeparate_outg $const5 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:79
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___675_colorSeparate_outb $const5 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:80
#     float max_in2_tmp = 0.000000;
	functioncall	$const25 192 	%line{80} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:60
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___674_N_extract_0_index_tmp $const1 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:61
#     int N_extract_1_index_tmp = 1;
	functioncall	$const26 183 	%line{61} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_0_out bl1_out ___674_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:62
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___674_N_extract_1_index_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:63
#     int N_extract_2_index_tmp = 2;
	functioncall	$const26 186 	%line{63} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_1_out bl1_out ___674_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:64
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___674_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:65
#     outr = N_extract_0_out;
	functioncall	$const26 189 	%line{65} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_2_out bl1_out ___674_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:66
#     outg = N_extract_1_out;
	assign		___675_colorSeparate_outr ___674_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:67
#     outb = N_extract_2_out;
	assign		___675_colorSeparate_outg ___674_N_extract_1_out 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:68
# }
	assign		___675_colorSeparate_outb ___674_N_extract_2_out 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:81
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___675_max_in2_tmp $const5 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:82
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp49 ___675_max_in2_tmp 	%line{82} %argrw{"wr"}
	max		___675_max_out ___675_bias_out $tmp49 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:83
#     float isAboveR_in1_tmp = 1.000000;
	assign		___675_isAboveR_value2_tmp $const28 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:84
#     float isAboveR_in2_tmp = 0.000000;
	assign		___675_isAboveR_in1_tmp $const13 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:85
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___675_isAboveR_in2_tmp $const5 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:86
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp50 ___675_colorSeparate_outr ___675_isAboveR_value2_tmp 	%line{86} %argrw{"wrr"}
	functioncall	$const29 205 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp50 203 205 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveR_out ___675_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveR_out ___675_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:87
#     float isAboveG_in1_tmp = 1.000000;
	assign		___675_isAboveG_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:88
#     float isAboveG_in2_tmp = 0.000000;
	assign		___675_isAboveG_in1_tmp $const13 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:89
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___675_isAboveG_in2_tmp $const5 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:90
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp51 ___675_colorSeparate_outg ___675_isAboveG_value2_tmp 	%line{90} %argrw{"wrr"}
	functioncall	$const29 215 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp51 213 215 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveG_out ___675_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveG_out ___675_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:91
#     float isAboveB_in1_tmp = 1.000000;
	assign		___675_isAboveB_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:92
#     float isAboveB_in2_tmp = 0.000000;
	assign		___675_isAboveB_in1_tmp $const13 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:93
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___675_isAboveB_in2_tmp $const5 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:94
#     float scale_in2_tmp = 1.055000;
	gt		$tmp52 ___675_colorSeparate_outb ___675_isAboveB_value2_tmp 	%line{94} %argrw{"wrr"}
	functioncall	$const29 225 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp52 223 225 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveB_out ___675_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveB_out ___675_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:95
#     color scale_out = max_out / scale_in2_tmp;
	assign		___675_scale_in2_tmp $const30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:96
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___675_scale_out ___675_max_out ___675_scale_in2_tmp 	%line{96} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:97
#     float powSeg_in2_tmp = 2.400000;
	color		___675_isAbove_out ___675_isAboveR_out ___675_isAboveG_out ___675_isAboveB_out 	%line{97} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:98
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___675_powSeg_in2_tmp $const31 	%line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:99
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___675_powSeg_out ___675_scale_out ___675_powSeg_in2_tmp 	%line{99} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:100
#     out = mix_out;
	mix		___675_mix_out ___675_linSeg_out ___675_powSeg_out ___675_isAbove_out 	%line{100} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:101
# }
	assign		bl1_out_cm_out ___675_mix_out 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:824
#     mx_image_color3(tr1_file_, tr1_layer, tr1_default, geomprop_UV0_out1, tr1_uaddressmode, tr1_vaddressmode, tr1_filtertype, tr1_framerange, tr1_frameoffset, tr1_frameendaction, tr1_out);
	assign		tr1_out $const6 	%line{824} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:825
#     color tr1_out_cm_out = color(0.0);
	functioncall	$const12 273 	%line{825} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp53 tr1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp54 $tmp53 $const1 	%argrw{"wrr"}
	if		$tmp54 237 250 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp55 tr1_uaddressmode $const11 	%line{26} %argrw{"wrr"}
	neq		$tmp56 $tmp55 $const1 	%argrw{"wrr"}
	if		$tmp56 248 248 	%argrw{"r"}
	lt		$tmp57 geomprop_UV0_out1.x $const5 	%argrw{"wrr"}
	neq		$tmp58 $tmp57 $const1 	%argrw{"wrr"}
	if		$tmp58 243 246 	%argrw{"r"}
	gt		$tmp59 geomprop_UV0_out1.x $const13 	%argrw{"wrr"}
	neq		$tmp60 $tmp59 $const1 	%argrw{"wrr"}
	assign		$tmp58 $tmp60 	%argrw{"wr"}
	neq		$tmp61 $tmp58 $const1 	%argrw{"wrr"}
	assign		$tmp56 $tmp61 	%argrw{"wr"}
	neq		$tmp62 $tmp56 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp54 $tmp62 	%line{25} %argrw{"wr"}
	neq		$tmp63 $tmp54 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp63 252 265 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:27
#     {
	eq		$tmp64 tr1_vaddressmode $const11 	%line{27} %argrw{"wrr"}
	neq		$tmp65 $tmp64 $const1 	%argrw{"wrr"}
	if		$tmp65 263 263 	%argrw{"r"}
	lt		$tmp66 geomprop_UV0_out1.y $const5 	%argrw{"wrr"}
	neq		$tmp67 $tmp66 $const1 	%argrw{"wrr"}
	if		$tmp67 258 261 	%argrw{"r"}
	gt		$tmp68 geomprop_UV0_out1.y $const13 	%argrw{"wrr"}
	neq		$tmp69 $tmp68 $const1 	%argrw{"wrr"}
	assign		$tmp67 $tmp69 	%argrw{"wr"}
	neq		$tmp70 $tmp67 $const1 	%argrw{"wrr"}
	assign		$tmp65 $tmp70 	%argrw{"wr"}
	neq		$tmp71 $tmp65 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp63 $tmp71 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp63 268 268 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:29
#         return;
	assign		tr1_out tr1_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tr1_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:34
#     out = texture(file.filename, st.x, st.y,
	functioncall	$const14 272 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:20
# }
	assign		___670_st.x geomprop_UV0_out1.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y geomprop_UV0_out1.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:35
#                   "subimage", layer, "interp", filtertype,
	texture		tr1_out tr1_file_.filename ___670_st.x ___670_st.y $const15 tr1_layer $const16 tr1_filtertype $const17 ___670_missingColor $const18 tr1_uaddressmode $const19 tr1_vaddressmode $const20 tr1_file_.colorspace 	%line{35} %argrw{"wrrrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:826
#     NG_srgb_texture_to_lin_rec709_color3(tr1_out, tr1_out_cm_out);
	assign		tr1_out_cm_out $const6 	%line{826} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:827
#     surfaceshader shaderref1_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const22 335 	%line{827} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:73
#     color bias_out = in + bias_in2_tmp;
	assign		___675_bias_in2_tmp $const23 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:74
#     float linSeg_in2_tmp = 12.920000;
	add		___675_bias_out tr1_out ___675_bias_in2_tmp 	%line{74} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:75
#     color linSeg_out = in / linSeg_in2_tmp;
	assign		___675_linSeg_in2_tmp $const24 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:76
#     float colorSeparate_outr = 0.0;
	div		___675_linSeg_out tr1_out ___675_linSeg_in2_tmp 	%line{76} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:77
#     float colorSeparate_outg = 0.0;
	assign		___675_colorSeparate_outr $const5 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:78
#     float colorSeparate_outb = 0.0;
	assign		___675_colorSeparate_outg $const5 	%line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:79
#     NG_separate3_color3(in, colorSeparate_outr, colorSeparate_outg, colorSeparate_outb);
	assign		___675_colorSeparate_outb $const5 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:80
#     float max_in2_tmp = 0.000000;
	functioncall	$const25 295 	%line{80} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:60
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___674_N_extract_0_index_tmp $const1 	%line{60} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:61
#     int N_extract_1_index_tmp = 1;
	functioncall	$const26 286 	%line{61} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_0_out tr1_out ___674_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:62
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___674_N_extract_1_index_tmp $const27 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:63
#     int N_extract_2_index_tmp = 2;
	functioncall	$const26 289 	%line{63} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_1_out tr1_out ___674_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:64
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___674_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:65
#     outr = N_extract_0_out;
	functioncall	$const26 292 	%line{65} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___674_N_extract_2_out tr1_out ___674_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:66
#     outg = N_extract_1_out;
	assign		___675_colorSeparate_outr ___674_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:67
#     outb = N_extract_2_out;
	assign		___675_colorSeparate_outg ___674_N_extract_1_out 	%line{67} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:68
# }
	assign		___675_colorSeparate_outb ___674_N_extract_2_out 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:81
#     color max_out = max(bias_out, max_in2_tmp);
	assign		___675_max_in2_tmp $const5 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:82
#     float isAboveR_value2_tmp = 0.040450;
	assign		$tmp72 ___675_max_in2_tmp 	%line{82} %argrw{"wr"}
	max		___675_max_out ___675_bias_out $tmp72 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:83
#     float isAboveR_in1_tmp = 1.000000;
	assign		___675_isAboveR_value2_tmp $const28 	%line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:84
#     float isAboveR_in2_tmp = 0.000000;
	assign		___675_isAboveR_in1_tmp $const13 	%line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:85
#     float isAboveR_out = mx_ternary(colorSeparate_outr > isAboveR_value2_tmp, isAboveR_in1_tmp, isAboveR_in2_tmp);
	assign		___675_isAboveR_in2_tmp $const5 	%line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:86
#     float isAboveG_value2_tmp = 0.040450;
	gt		$tmp73 ___675_colorSeparate_outr ___675_isAboveR_value2_tmp 	%line{86} %argrw{"wrr"}
	functioncall	$const29 308 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp73 306 308 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveR_out ___675_isAboveR_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveR_out ___675_isAboveR_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:87
#     float isAboveG_in1_tmp = 1.000000;
	assign		___675_isAboveG_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:88
#     float isAboveG_in2_tmp = 0.000000;
	assign		___675_isAboveG_in1_tmp $const13 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:89
#     float isAboveG_out = mx_ternary(colorSeparate_outg > isAboveG_value2_tmp, isAboveG_in1_tmp, isAboveG_in2_tmp);
	assign		___675_isAboveG_in2_tmp $const5 	%line{89} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:90
#     float isAboveB_value2_tmp = 0.040450;
	gt		$tmp74 ___675_colorSeparate_outg ___675_isAboveG_value2_tmp 	%line{90} %argrw{"wrr"}
	functioncall	$const29 318 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp74 316 318 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveG_out ___675_isAboveG_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveG_out ___675_isAboveG_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:91
#     float isAboveB_in1_tmp = 1.000000;
	assign		___675_isAboveB_value2_tmp $const28 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{91} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:92
#     float isAboveB_in2_tmp = 0.000000;
	assign		___675_isAboveB_in1_tmp $const13 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:93
#     float isAboveB_out = mx_ternary(colorSeparate_outb > isAboveB_value2_tmp, isAboveB_in1_tmp, isAboveB_in2_tmp);
	assign		___675_isAboveB_in2_tmp $const5 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:94
#     float scale_in2_tmp = 1.055000;
	gt		$tmp75 ___675_colorSeparate_outb ___675_isAboveB_value2_tmp 	%line{94} %argrw{"wrr"}
	functioncall	$const29 328 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp75 326 328 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___675_isAboveB_out ___675_isAboveB_in1_tmp 	%argrw{"wr"}
	return
	assign		___675_isAboveB_out ___675_isAboveB_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:95
#     color scale_out = max_out / scale_in2_tmp;
	assign		___675_scale_in2_tmp $const30 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:96
#     color isAbove_out = color( isAboveR_out,isAboveG_out,isAboveB_out );
	div		___675_scale_out ___675_max_out ___675_scale_in2_tmp 	%line{96} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:97
#     float powSeg_in2_tmp = 2.400000;
	color		___675_isAbove_out ___675_isAboveR_out ___675_isAboveG_out ___675_isAboveB_out 	%line{97} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:98
#     color powSeg_out = pow(scale_out, powSeg_in2_tmp);
	assign		___675_powSeg_in2_tmp $const31 	%line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:99
#     color mix_out = mix(linSeg_out, powSeg_out, isAbove_out);
	pow		___675_powSeg_out ___675_scale_out ___675_powSeg_in2_tmp 	%line{99} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:100
#     out = mix_out;
	mix		___675_mix_out ___675_linSeg_out ___675_powSeg_out ___675_isAbove_out 	%line{100} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:101
# }
	assign		tr1_out_cm_out ___675_mix_out 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:828
#     NG_standard_surface_surfaceshader_100(shaderref1_base, bl_out_cm_out, shaderref1_diffuse_roughness, shaderref1_metalness, shaderref1_specular, bl1_out_cm_out, shaderref1_specular_roughness, shaderref1_specular_IOR, shaderref1_specular_anisotropy, shaderref1_specular_rotation, shaderref1_transmission, tr1_out_cm_out, shaderref1_transmission_depth, shaderref1_transmission_scatter, shaderref1_transmission_scatter_anisotropy, shaderref1_transmission_dispersion, shaderref1_transmission_extra_roughness, shaderref1_subsurface, shaderref1_subsurface_color, shaderref1_subsurface_radius, shaderref1_subsurface_scale, shaderref1_subsurface_anisotropy, shaderref1_sheen, shaderref1_sheen_color, shaderref1_sheen_roughness, shaderref1_coat, shaderref1_coat_color, shaderref1_coat_roughness, shaderref1_coat_anisotropy, shaderref1_coat_rotation, shaderref1_coat_IOR, geomprop_Nworld_out1, shaderref1_coat_affect_color, shaderref1_coat_affect_roughness, shaderref1_thin_film_thickness, shaderref1_thin_film_IOR, shaderref1_emission, shaderref1_emission_color, shaderref1_opacity, shaderref1_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, shaderref1_out);
	assign		shaderref1_out.bsdf null_closure 	%line{828} %argrw{"wr"}
	assign		shaderref1_out.edf null_closure 	%argrw{"wr"}
	assign		shaderref1_out.opacity $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:829
#     MATERIAL Filename_CM_Test_out = mx_surfacematerial(shaderref1_out, backsurfaceshader, displacementshader1);
	functioncall	$const32 851 	%line{829} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:281
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___700_null_closure $const1 	%line{281} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:282
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___700_coat_roughness_vector_out.x $const5 	%line{282} %argrw{"wr"}
	assign		___700_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:283
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const33 361 	%line{283} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:106
#     if (anisotropy > 0.0)
	mul		$tmp76 shaderref1_coat_roughness shaderref1_coat_roughness 	%line{106} %argrw{"wrr"}
	functioncall	$const35 347 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp77 $tmp76 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp77 $const34 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:107
#     {
	gt		$tmp78 shaderref1_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{107} %argrw{"wrr"}
	if		$tmp78 359 361 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 352 	%line{109} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp80 shaderref1_coat_anisotropy $const36 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp79 $tmp80 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp81 $const13 $tmp79 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{109} %argrw{"wrr"}
	sqrt		___677_aspect $tmp81 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:110
#         result.y = roughness_sqr * aspect;
	div		$tmp82 ___676_roughness_sqr ___677_aspect 	%line{110} %argrw{"wrr"}
	min		___700_coat_roughness_vector_out.x $tmp82 $const13 	%argrw{"wrr"}
	assign		___700_coat_roughness_vector_out.x ___700_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:111
#     }
	mul		___700_coat_roughness_vector_out.y ___676_roughness_sqr ___677_aspect 	%line{111} %argrw{"wrr"}
	assign		___700_coat_roughness_vector_out.y ___700_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:115
#         result.y = roughness_sqr;
	assign		___700_coat_roughness_vector_out.x ___676_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:116
#     }
	assign		___700_coat_roughness_vector_out.y ___676_roughness_sqr 	%line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:284
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___700_coat_tangent_rotate_degree_in2_tmp $const37 	%line{284} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:285
#     color metal_reflectivity_out = base_color * base;
	mul		___700_coat_tangent_rotate_degree_out shaderref1_coat_rotation ___700_coat_tangent_rotate_degree_in2_tmp 	%line{285} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:286
#     color metal_edgecolor_out = specular_color * specular;
	mul		___700_metal_reflectivity_out bl_out_cm_out shaderref1_base 	%line{286} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:287
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___700_metal_edgecolor_out bl1_out_cm_out shaderref1_specular 	%line{287} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:288
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___700_coat_affect_roughness_multiply1_out shaderref1_coat_affect_roughness shaderref1_coat 	%line{288} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:289
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___700_tangent_rotate_degree_in2_tmp $const37 	%line{289} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:290
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___700_tangent_rotate_degree_out shaderref1_specular_rotation ___700_tangent_rotate_degree_in2_tmp 	%line{290} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:291
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___700_transmission_roughness_add_out shaderref1_specular_roughness shaderref1_transmission_extra_roughness 	%line{291} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:292
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___700_subsurface_color_nonnegative_in2_tmp $const5 	%line{292} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:293
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp83 ___700_subsurface_color_nonnegative_in2_tmp 	%line{293} %argrw{"wr"}
	max		___700_subsurface_color_nonnegative_out shaderref1_subsurface_color $tmp83 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:294
#     float coat_clamped_high_tmp = 1.000000;
	assign		___700_coat_clamped_low_tmp $const5 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:295
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___700_coat_clamped_high_tmp $const13 	%line{295} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:296
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const35 377 	%line{296} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp84 shaderref1_coat ___700_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_coat_clamped_out $tmp84 ___700_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:297
#     float subsurface_selector_out = float(thin_walled);
	mul		___700_subsurface_radius_scaled_out shaderref1_subsurface_radius shaderref1_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{297} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:298
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp85 shaderref1_thin_walled 	%line{298} %argrw{"wr"}
	assign		___700_subsurface_selector_out $tmp85 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:299
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___700_base_color_nonnegative_in2_tmp $const5 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:300
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp86 ___700_base_color_nonnegative_in2_tmp 	%line{300} %argrw{"wr"}
	max		___700_base_color_nonnegative_out bl_out_cm_out $tmp86 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:301
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___700_coat_attenuation_bg_tmp $const38 	%line{301} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:302
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___700_coat_attenuation_out ___700_coat_attenuation_bg_tmp shaderref1_coat_color shaderref1_coat 	%line{302} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:303
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___700_one_minus_coat_ior_in1_tmp $const13 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:304
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___700_one_minus_coat_ior_out ___700_one_minus_coat_ior_in1_tmp shaderref1_coat_IOR 	%line{304} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:305
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___700_one_plus_coat_ior_in1_tmp $const13 	%line{305} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:306
#     color emission_weight_out = emission_color * emission1;
	add		___700_one_plus_coat_ior_out ___700_one_plus_coat_ior_in1_tmp shaderref1_coat_IOR 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:307
#     color opacity_luminance_out = color(0.0);
	mul		___700_emission_weight_out shaderref1_emission_color shaderref1_emission 	%line{307} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:308
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___700_opacity_luminance_out $const6 	%line{308} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:309
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const40 394 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:122
# }
	dot		$tmp88 shaderref1_opacity $const39 	%line{122} %argrw{"wrr"}
	assign		___700_opacity_luminance_out $tmp88 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:310
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___700_coat_tangent_rotate_out $const41 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:311
#     color artistic_ior_ior = color(0.0);
	functioncall	$const42 512 	%line{311} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:140
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const43 399 	%line{140} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp89 $const44 $const45 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___681_rotationRadians ___700_coat_tangent_rotate_degree_out $tmp89 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:141
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const46 462 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{141} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:127
#     float s = sin(angle);
	normalize	___680_nAxis geomprop_Nworld_out1 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:128
#     float c = cos(angle);
	sin		___680_s ___681_rotationRadians 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:129
#     float oc = 1.0 - c;
	cos		___680_c ___681_rotationRadians 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:130
# 
	sub		___680_oc $const13 ___680_c 	%line{130} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:132
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp90 ___680_nAxis $const1 	%line{132} %argrw{"wrr"}
	mul		$tmp91 ___680_oc $tmp90 	%argrw{"wrr"}
	compref		$tmp92 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp93 $tmp91 $tmp92 	%argrw{"wrr"}
	add		$tmp94 $tmp93 ___680_c 	%argrw{"wrr"}
	compref		$tmp95 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp96 ___680_oc $tmp95 	%argrw{"wrr"}
	compref		$tmp97 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp98 $tmp96 $tmp97 	%argrw{"wrr"}
	compref		$tmp99 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp100 $tmp99 ___680_s 	%argrw{"wrr"}
	sub		$tmp101 $tmp98 $tmp100 	%argrw{"wrr"}
	compref		$tmp102 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp103 ___680_oc $tmp102 	%argrw{"wrr"}
	compref		$tmp104 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp105 $tmp103 $tmp104 	%argrw{"wrr"}
	compref		$tmp106 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp107 $tmp106 ___680_s 	%argrw{"wrr"}
	add		$tmp108 $tmp105 $tmp107 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:133
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp109 ___680_nAxis $const1 	%line{133} %argrw{"wrr"}
	mul		$tmp110 ___680_oc $tmp109 	%argrw{"wrr"}
	compref		$tmp111 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp112 $tmp110 $tmp111 	%argrw{"wrr"}
	compref		$tmp113 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp114 $tmp113 ___680_s 	%argrw{"wrr"}
	add		$tmp115 $tmp112 $tmp114 	%argrw{"wrr"}
	compref		$tmp116 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp117 ___680_oc $tmp116 	%argrw{"wrr"}
	compref		$tmp118 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp119 $tmp117 $tmp118 	%argrw{"wrr"}
	add		$tmp120 $tmp119 ___680_c 	%argrw{"wrr"}
	compref		$tmp121 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp122 ___680_oc $tmp121 	%argrw{"wrr"}
	compref		$tmp123 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp124 $tmp122 $tmp123 	%argrw{"wrr"}
	compref		$tmp125 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp126 $tmp125 ___680_s 	%argrw{"wrr"}
	sub		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:134
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp128 ___680_nAxis $const4 	%line{134} %argrw{"wrr"}
	mul		$tmp129 ___680_oc $tmp128 	%argrw{"wrr"}
	compref		$tmp130 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp131 $tmp129 $tmp130 	%argrw{"wrr"}
	compref		$tmp132 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp133 $tmp132 ___680_s 	%argrw{"wrr"}
	sub		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	compref		$tmp135 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp136 ___680_oc $tmp135 	%argrw{"wrr"}
	compref		$tmp137 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp138 $tmp136 $tmp137 	%argrw{"wrr"}
	compref		$tmp139 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp140 $tmp139 ___680_s 	%argrw{"wrr"}
	add		$tmp141 $tmp138 $tmp140 	%argrw{"wrr"}
	compref		$tmp142 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp143 ___680_oc $tmp142 	%argrw{"wrr"}
	compref		$tmp144 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp145 $tmp143 $tmp144 	%argrw{"wrr"}
	add		$tmp146 $tmp145 ___680_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:132
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___681_m $tmp94 $tmp101 $tmp108 $const5 $tmp115 $tmp120 $tmp127 $const5 $tmp134 $tmp141 $tmp146 $const5 $const5 $const5 $const5 $const13 	%line{132} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:142
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp147.x geomprop_Tworld_out1 $const1 	%line{142} %argrw{"wrr"}
	compref		$tmp147.y geomprop_Tworld_out1 $const27 	%argrw{"wrr"}
	compref		$tmp147.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp147.w $const13 	%argrw{"wr"}
	functioncall	$const2 511 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp148 ___681_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp149 $tmp148 $tmp147.x 	%argrw{"wrr"}
	mxcompref	$tmp150 ___681_m $const27 $const1 	%argrw{"wrrr"}
	mul		$tmp151 $tmp150 $tmp147.y 	%argrw{"wrr"}
	add		$tmp152 $tmp149 $tmp151 	%argrw{"wrr"}
	mxcompref	$tmp153 ___681_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp154 $tmp153 $tmp147.z 	%argrw{"wrr"}
	add		$tmp155 $tmp152 $tmp154 	%argrw{"wrr"}
	mxcompref	$tmp156 ___681_m $const47 $const1 	%argrw{"wrrr"}
	mul		$tmp157 $tmp156 $tmp147.w 	%argrw{"wrr"}
	add		___681_trans.x $tmp155 $tmp157 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp158 ___681_m $const1 $const27 	%line{416} %argrw{"wrrr"}
	mul		$tmp159 $tmp158 $tmp147.x 	%argrw{"wrr"}
	mxcompref	$tmp160 ___681_m $const27 $const27 	%argrw{"wrrr"}
	mul		$tmp161 $tmp160 $tmp147.y 	%argrw{"wrr"}
	add		$tmp162 $tmp159 $tmp161 	%argrw{"wrr"}
	mxcompref	$tmp163 ___681_m $const4 $const27 	%argrw{"wrrr"}
	mul		$tmp164 $tmp163 $tmp147.z 	%argrw{"wrr"}
	add		$tmp165 $tmp162 $tmp164 	%argrw{"wrr"}
	mxcompref	$tmp166 ___681_m $const47 $const27 	%argrw{"wrrr"}
	mul		$tmp167 $tmp166 $tmp147.w 	%argrw{"wrr"}
	add		___681_trans.y $tmp165 $tmp167 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp168 ___681_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp169 $tmp168 $tmp147.x 	%argrw{"wrr"}
	mxcompref	$tmp170 ___681_m $const27 $const4 	%argrw{"wrrr"}
	mul		$tmp171 $tmp170 $tmp147.y 	%argrw{"wrr"}
	add		$tmp172 $tmp169 $tmp171 	%argrw{"wrr"}
	mxcompref	$tmp173 ___681_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp174 $tmp173 $tmp147.z 	%argrw{"wrr"}
	add		$tmp175 $tmp172 $tmp174 	%argrw{"wrr"}
	mxcompref	$tmp176 ___681_m $const47 $const4 	%argrw{"wrrr"}
	mul		$tmp177 $tmp176 $tmp147.w 	%argrw{"wrr"}
	add		___681_trans.z $tmp175 $tmp177 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp178 ___681_m $const1 $const47 	%line{418} %argrw{"wrrr"}
	mul		$tmp179 $tmp178 $tmp147.x 	%argrw{"wrr"}
	mxcompref	$tmp180 ___681_m $const27 $const47 	%argrw{"wrrr"}
	mul		$tmp181 $tmp180 $tmp147.y 	%argrw{"wrr"}
	add		$tmp182 $tmp179 $tmp181 	%argrw{"wrr"}
	mxcompref	$tmp183 ___681_m $const4 $const47 	%argrw{"wrrr"}
	mul		$tmp184 $tmp183 $tmp147.z 	%argrw{"wrr"}
	add		$tmp185 $tmp182 $tmp184 	%argrw{"wrr"}
	mxcompref	$tmp186 ___681_m $const47 $const47 	%argrw{"wrrr"}
	mul		$tmp187 $tmp186 $tmp147.w 	%argrw{"wrr"}
	add		___681_trans.w $tmp185 $tmp187 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:143
# }
	vector		___700_coat_tangent_rotate_out ___681_trans.x ___681_trans.y ___681_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{143} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:312
#     color artistic_ior_extinction = color(0.0);
	assign		___700_artistic_ior_ior $const6 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:313
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___700_artistic_ior_extinction $const6 	%line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:314
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const48 539 	%line{314} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:151
#     color r_sqrt = sqrt(r);
	assign		$tmp188 $const5 	%line{151} %argrw{"wr"}
	assign		$tmp189 $const49 	%argrw{"wr"}
	functioncall	$const35 520 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp190 ___700_metal_reflectivity_out $tmp189 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___682_r $tmp190 $tmp188 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:152
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___682_r_sqrt ___682_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{152} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:153
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp191 $const13 ___682_r 	%line{153} %argrw{"wrr"}
	add		$tmp192 $const13 ___682_r 	%argrw{"wrr"}
	div		___682_n_min $tmp191 $tmp192 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:154
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp193 $const13 ___682_r_sqrt 	%line{154} %argrw{"wrr"}
	sub		$tmp194 $const13 ___682_r_sqrt 	%argrw{"wrr"}
	div		___682_n_max $tmp193 $tmp194 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:155
# 
	mix		___700_artistic_ior_ior ___682_n_max ___682_n_min ___700_metal_edgecolor_out 	%line{155} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:157
#     color nm1 = ior - 1.0;
	add		___682_np1 ___700_artistic_ior_ior $const13 	%line{157} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:158
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___682_nm1 ___700_artistic_ior_ior $const13 	%line{158} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:159
#     k2 = max(k2, 0.0);
	mul		$tmp195 ___682_np1 ___682_np1 	%line{159} %argrw{"wrr"}
	mul		$tmp196 $tmp195 ___682_r 	%argrw{"wrr"}
	mul		$tmp197 ___682_nm1 ___682_nm1 	%argrw{"wrr"}
	sub		$tmp198 $tmp196 $tmp197 	%argrw{"wrr"}
	sub		$tmp199 $const13 ___682_r 	%argrw{"wrr"}
	div		___682_k2 $tmp198 $tmp199 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:160
#     extinction = sqrt(k2);
	assign		$tmp200 $const5 	%line{160} %argrw{"wr"}
	max		___682_k2 ___682_k2 $tmp200 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:161
# }
	sqrt		___700_artistic_ior_extinction ___682_k2 	%line{161} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:315
#     vector tangent_rotate_out = vector(0.0);
	mul		___700_coat_affect_roughness_multiply2_out ___700_coat_affect_roughness_multiply1_out shaderref1_coat_roughness 	%line{315} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:316
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___700_tangent_rotate_out $const41 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:317
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const42 658 	%line{317} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:140
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const43 545 	%line{140} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp201 $const44 $const45 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___681_rotationRadians ___700_tangent_rotate_degree_out $tmp201 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:141
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const46 608 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{141} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:127
#     float s = sin(angle);
	normalize	___680_nAxis geomprop_Nworld_out1 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:128
#     float c = cos(angle);
	sin		___680_s ___681_rotationRadians 	%line{128} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:129
#     float oc = 1.0 - c;
	cos		___680_c ___681_rotationRadians 	%line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:130
# 
	sub		___680_oc $const13 ___680_c 	%line{130} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:132
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp202 ___680_nAxis $const1 	%line{132} %argrw{"wrr"}
	mul		$tmp203 ___680_oc $tmp202 	%argrw{"wrr"}
	compref		$tmp204 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp205 $tmp203 $tmp204 	%argrw{"wrr"}
	add		$tmp206 $tmp205 ___680_c 	%argrw{"wrr"}
	compref		$tmp207 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp208 ___680_oc $tmp207 	%argrw{"wrr"}
	compref		$tmp209 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp210 $tmp208 $tmp209 	%argrw{"wrr"}
	compref		$tmp211 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp212 $tmp211 ___680_s 	%argrw{"wrr"}
	sub		$tmp213 $tmp210 $tmp212 	%argrw{"wrr"}
	compref		$tmp214 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp215 ___680_oc $tmp214 	%argrw{"wrr"}
	compref		$tmp216 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp217 $tmp215 $tmp216 	%argrw{"wrr"}
	compref		$tmp218 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp219 $tmp218 ___680_s 	%argrw{"wrr"}
	add		$tmp220 $tmp217 $tmp219 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:133
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp221 ___680_nAxis $const1 	%line{133} %argrw{"wrr"}
	mul		$tmp222 ___680_oc $tmp221 	%argrw{"wrr"}
	compref		$tmp223 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp224 $tmp222 $tmp223 	%argrw{"wrr"}
	compref		$tmp225 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp226 $tmp225 ___680_s 	%argrw{"wrr"}
	add		$tmp227 $tmp224 $tmp226 	%argrw{"wrr"}
	compref		$tmp228 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp229 ___680_oc $tmp228 	%argrw{"wrr"}
	compref		$tmp230 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp231 $tmp229 $tmp230 	%argrw{"wrr"}
	add		$tmp232 $tmp231 ___680_c 	%argrw{"wrr"}
	compref		$tmp233 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp234 ___680_oc $tmp233 	%argrw{"wrr"}
	compref		$tmp235 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp236 $tmp234 $tmp235 	%argrw{"wrr"}
	compref		$tmp237 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp238 $tmp237 ___680_s 	%argrw{"wrr"}
	sub		$tmp239 $tmp236 $tmp238 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:134
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp240 ___680_nAxis $const4 	%line{134} %argrw{"wrr"}
	mul		$tmp241 ___680_oc $tmp240 	%argrw{"wrr"}
	compref		$tmp242 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp243 $tmp241 $tmp242 	%argrw{"wrr"}
	compref		$tmp244 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp245 $tmp244 ___680_s 	%argrw{"wrr"}
	sub		$tmp246 $tmp243 $tmp245 	%argrw{"wrr"}
	compref		$tmp247 ___680_nAxis $const27 	%argrw{"wrr"}
	mul		$tmp248 ___680_oc $tmp247 	%argrw{"wrr"}
	compref		$tmp249 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp250 $tmp248 $tmp249 	%argrw{"wrr"}
	compref		$tmp251 ___680_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp252 $tmp251 ___680_s 	%argrw{"wrr"}
	add		$tmp253 $tmp250 $tmp252 	%argrw{"wrr"}
	compref		$tmp254 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp255 ___680_oc $tmp254 	%argrw{"wrr"}
	compref		$tmp256 ___680_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp257 $tmp255 $tmp256 	%argrw{"wrr"}
	add		$tmp258 $tmp257 ___680_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:132
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___681_m $tmp206 $tmp213 $tmp220 $const5 $tmp227 $tmp232 $tmp239 $const5 $tmp246 $tmp253 $tmp258 $const5 $const5 $const5 $const5 $const13 	%line{132} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:142
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp259.x geomprop_Tworld_out1 $const1 	%line{142} %argrw{"wrr"}
	compref		$tmp259.y geomprop_Tworld_out1 $const27 	%argrw{"wrr"}
	compref		$tmp259.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp259.w $const13 	%argrw{"wr"}
	functioncall	$const2 657 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp260 ___681_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp261 $tmp260 $tmp259.x 	%argrw{"wrr"}
	mxcompref	$tmp262 ___681_m $const27 $const1 	%argrw{"wrrr"}
	mul		$tmp263 $tmp262 $tmp259.y 	%argrw{"wrr"}
	add		$tmp264 $tmp261 $tmp263 	%argrw{"wrr"}
	mxcompref	$tmp265 ___681_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp266 $tmp265 $tmp259.z 	%argrw{"wrr"}
	add		$tmp267 $tmp264 $tmp266 	%argrw{"wrr"}
	mxcompref	$tmp268 ___681_m $const47 $const1 	%argrw{"wrrr"}
	mul		$tmp269 $tmp268 $tmp259.w 	%argrw{"wrr"}
	add		___681_trans.x $tmp267 $tmp269 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp270 ___681_m $const1 $const27 	%line{416} %argrw{"wrrr"}
	mul		$tmp271 $tmp270 $tmp259.x 	%argrw{"wrr"}
	mxcompref	$tmp272 ___681_m $const27 $const27 	%argrw{"wrrr"}
	mul		$tmp273 $tmp272 $tmp259.y 	%argrw{"wrr"}
	add		$tmp274 $tmp271 $tmp273 	%argrw{"wrr"}
	mxcompref	$tmp275 ___681_m $const4 $const27 	%argrw{"wrrr"}
	mul		$tmp276 $tmp275 $tmp259.z 	%argrw{"wrr"}
	add		$tmp277 $tmp274 $tmp276 	%argrw{"wrr"}
	mxcompref	$tmp278 ___681_m $const47 $const27 	%argrw{"wrrr"}
	mul		$tmp279 $tmp278 $tmp259.w 	%argrw{"wrr"}
	add		___681_trans.y $tmp277 $tmp279 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp280 ___681_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp281 $tmp280 $tmp259.x 	%argrw{"wrr"}
	mxcompref	$tmp282 ___681_m $const27 $const4 	%argrw{"wrrr"}
	mul		$tmp283 $tmp282 $tmp259.y 	%argrw{"wrr"}
	add		$tmp284 $tmp281 $tmp283 	%argrw{"wrr"}
	mxcompref	$tmp285 ___681_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp286 $tmp285 $tmp259.z 	%argrw{"wrr"}
	add		$tmp287 $tmp284 $tmp286 	%argrw{"wrr"}
	mxcompref	$tmp288 ___681_m $const47 $const4 	%argrw{"wrrr"}
	mul		$tmp289 $tmp288 $tmp259.w 	%argrw{"wrr"}
	add		___681_trans.z $tmp287 $tmp289 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp290 ___681_m $const1 $const47 	%line{418} %argrw{"wrrr"}
	mul		$tmp291 $tmp290 $tmp259.x 	%argrw{"wrr"}
	mxcompref	$tmp292 ___681_m $const27 $const47 	%argrw{"wrrr"}
	mul		$tmp293 $tmp292 $tmp259.y 	%argrw{"wrr"}
	add		$tmp294 $tmp291 $tmp293 	%argrw{"wrr"}
	mxcompref	$tmp295 ___681_m $const4 $const47 	%argrw{"wrrr"}
	mul		$tmp296 $tmp295 $tmp259.z 	%argrw{"wrr"}
	add		$tmp297 $tmp294 $tmp296 	%argrw{"wrr"}
	mxcompref	$tmp298 ___681_m $const47 $const47 	%argrw{"wrrr"}
	mul		$tmp299 $tmp298 $tmp259.w 	%argrw{"wrr"}
	add		___681_trans.w $tmp297 $tmp299 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:143
# }
	vector		___700_tangent_rotate_out ___681_trans.x ___681_trans.y ___681_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{143} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:318
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___700_transmission_roughness_clamped_low_tmp $const5 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:319
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___700_transmission_roughness_clamped_high_tmp $const13 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:320
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const35 663 	%line{320} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp300 ___700_transmission_roughness_add_out ___700_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_transmission_roughness_clamped_out $tmp300 ___700_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:321
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___700_coat_gamma_multiply_out ___700_coat_clamped_out shaderref1_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{321} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:322
#     int opacity_luminance_float_index_tmp = 0;
	div		___700_coat_ior_to_F0_sqrt_out ___700_one_minus_coat_ior_out ___700_one_plus_coat_ior_out 	%line{322} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:323
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___700_opacity_luminance_float_index_tmp $const1 	%line{323} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:324
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const26 668 	%line{324} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___700_opacity_luminance_float_out ___700_opacity_luminance_out ___700_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:325
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___700_coat_tangent_rotate_normalize_out ___700_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:326
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___700_coat_affected_roughness_fg_tmp $const13 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:327
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___700_coat_affected_roughness_out shaderref1_specular_roughness ___700_coat_affected_roughness_fg_tmp ___700_coat_affect_roughness_multiply2_out 	%line{327} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:328
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___700_tangent_rotate_normalize_out ___700_tangent_rotate_out 	%line{328} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:329
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___700_coat_affected_transmission_roughness_fg_tmp $const13 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:330
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___700_coat_affected_transmission_roughness_out ___700_transmission_roughness_clamped_out ___700_coat_affected_transmission_roughness_fg_tmp ___700_coat_affect_roughness_multiply2_out 	%line{330} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:331
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___700_coat_gamma_in2_tmp $const13 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:332
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___700_coat_gamma_out ___700_coat_gamma_multiply_out ___700_coat_gamma_in2_tmp 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:333
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___700_coat_ior_to_F0_out ___700_coat_ior_to_F0_sqrt_out ___700_coat_ior_to_F0_sqrt_out 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:334
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___700_coat_tangent_value2_tmp $const5 	%line{334} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:335
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp301 shaderref1_coat_anisotropy ___700_coat_tangent_value2_tmp 	%line{335} %argrw{"wrr"}
	functioncall	$const29 685 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp301 683 685 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___700_coat_tangent_out ___700_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___700_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:336
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___700_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{336} %argrw{"wr"}
	assign		___700_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:337
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const33 706 	%line{337} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:106
#     if (anisotropy > 0.0)
	mul		$tmp302 ___700_coat_affected_roughness_out ___700_coat_affected_roughness_out 	%line{106} %argrw{"wrr"}
	functioncall	$const35 692 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp303 $tmp302 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp303 $const34 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:107
#     {
	gt		$tmp304 shaderref1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{107} %argrw{"wrr"}
	if		$tmp304 704 706 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 697 	%line{109} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp306 shaderref1_specular_anisotropy $const36 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp305 $tmp306 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp307 $const13 $tmp305 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{109} %argrw{"wrr"}
	sqrt		___677_aspect $tmp307 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:110
#         result.y = roughness_sqr * aspect;
	div		$tmp308 ___676_roughness_sqr ___677_aspect 	%line{110} %argrw{"wrr"}
	min		___700_main_roughness_out.x $tmp308 $const13 	%argrw{"wrr"}
	assign		___700_main_roughness_out.x ___700_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:111
#     }
	mul		___700_main_roughness_out.y ___676_roughness_sqr ___677_aspect 	%line{111} %argrw{"wrr"}
	assign		___700_main_roughness_out.y ___700_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:115
#         result.y = roughness_sqr;
	assign		___700_main_roughness_out.x ___676_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:116
#     }
	assign		___700_main_roughness_out.y ___676_roughness_sqr 	%line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:338
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___700_main_tangent_value2_tmp $const5 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:339
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp309 shaderref1_specular_anisotropy ___700_main_tangent_value2_tmp 	%line{339} %argrw{"wrr"}
	functioncall	$const29 714 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp309 712 714 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___700_main_tangent_out ___700_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___700_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:340
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___700_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{340} %argrw{"wr"}
	assign		___700_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:341
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const33 735 	%line{341} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:106
#     if (anisotropy > 0.0)
	mul		$tmp310 ___700_coat_affected_transmission_roughness_out ___700_coat_affected_transmission_roughness_out 	%line{106} %argrw{"wrr"}
	functioncall	$const35 721 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp311 $tmp310 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___676_roughness_sqr $tmp311 $const34 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:107
#     {
	gt		$tmp312 shaderref1_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{107} %argrw{"wrr"}
	if		$tmp312 733 735 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const35 726 	%line{109} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp314 shaderref1_specular_anisotropy $const36 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp313 $tmp314 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:109
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp315 $const13 $tmp313 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{109} %argrw{"wrr"}
	sqrt		___677_aspect $tmp315 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:110
#         result.y = roughness_sqr * aspect;
	div		$tmp316 ___676_roughness_sqr ___677_aspect 	%line{110} %argrw{"wrr"}
	min		___700_transmission_roughness_out.x $tmp316 $const13 	%argrw{"wrr"}
	assign		___700_transmission_roughness_out.x ___700_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:111
#     }
	mul		___700_transmission_roughness_out.y ___676_roughness_sqr ___677_aspect 	%line{111} %argrw{"wrr"}
	assign		___700_transmission_roughness_out.y ___700_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:115
#         result.y = roughness_sqr;
	assign		___700_transmission_roughness_out.x ___676_roughness_sqr 	%line{115} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:116
#     }
	assign		___700_transmission_roughness_out.y ___676_roughness_sqr 	%line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:342
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___700_coat_affected_subsurface_color_out ___700_subsurface_color_nonnegative_out ___700_coat_gamma_out 	%line{342} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:343
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___700_coat_affected_diffuse_color_out ___700_base_color_nonnegative_out ___700_coat_gamma_out 	%line{343} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:344
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___700_one_minus_coat_ior_to_F0_in1_tmp $const13 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:345
#     color emission_color0_out = color(0.0);
	sub		___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_in1_tmp ___700_coat_ior_to_F0_out 	%line{345} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:346
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___700_emission_color0_out $const6 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:347
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const50 743 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:182
#     out = combine_out;
	color		___685_combine_out ___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_out ___700_one_minus_coat_ior_to_F0_out 	%line{182} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:183
# }
	assign		___700_emission_color0_out ___685_combine_out 	%line{183} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:348
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___700_coat_bsdf_out ___700_null_closure 	%line{348} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:349
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const54 755 	%line{349} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:166
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp318 $const53 $const55 	%line{166} %argrw{"wrr"}
	if		$tmp318 748 749 	%argrw{"r"}
	assign		___683_reflection_tint $const6 	%argrw{"wr"}
	assign		___683_reflection_tint $const38 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:167
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp319 $const53 $const53 	%line{167} %argrw{"wrr"}
	if		$tmp319 752 753 	%argrw{"r"}
	assign		___683_transmission_tint $const6 	%argrw{"wr"}
	assign		___683_transmission_tint $const38 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:168
# }
	closure		$tmp320 $const58 geomprop_Nworld_out1 ___700_coat_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_coat_roughness_vector_out.x ___700_coat_roughness_vector_out.y shaderref1_coat_IOR $const52 $const56 $const5 $const57 $const51 	%line{168} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_coat_bsdf_out $tmp320 shaderref1_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:350
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___700_metal_bsdf_weight_tmp $const13 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:351
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___700_metal_bsdf_distribution_tmp $const52 	%line{351} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:352
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp321 $const59 geomprop_Nworld_out1 ___700_main_tangent_out ___700_main_roughness_out.x ___700_main_roughness_out.y ___700_artistic_ior_ior ___700_artistic_ior_extinction ___700_metal_bsdf_distribution_tmp $const56 shaderref1_thin_film_thickness $const57 shaderref1_thin_film_IOR 	%line{352} %argrw{"wrrrrrrrrrrrr"}
	mul		___700_metal_bsdf_out $tmp321 ___700_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:353
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___700_specular_bsdf_out ___700_null_closure 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:354
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const54 771 	%line{354} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:166
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp322 $const53 $const55 	%line{166} %argrw{"wrr"}
	if		$tmp322 764 765 	%argrw{"r"}
	assign		___683_reflection_tint $const6 	%argrw{"wr"}
	assign		___683_reflection_tint bl1_out_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:167
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp323 $const53 $const53 	%line{167} %argrw{"wrr"}
	if		$tmp323 768 769 	%argrw{"r"}
	assign		___683_transmission_tint $const6 	%argrw{"wr"}
	assign		___683_transmission_tint bl1_out_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:168
# }
	closure		$tmp324 $const58 geomprop_Nworld_out1 ___700_main_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_main_roughness_out.x ___700_main_roughness_out.y shaderref1_specular_IOR $const52 $const56 shaderref1_thin_film_thickness $const57 shaderref1_thin_film_IOR 	%line{168} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_specular_bsdf_out $tmp324 shaderref1_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:355
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___700_transmission_bsdf_out ___700_null_closure 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:356
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const54 783 	%line{356} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:166
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp325 $const55 $const55 	%line{166} %argrw{"wrr"}
	if		$tmp325 776 777 	%argrw{"r"}
	assign		___683_reflection_tint $const6 	%argrw{"wr"}
	assign		___683_reflection_tint tr1_out_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:167
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp326 $const55 $const53 	%line{167} %argrw{"wrr"}
	if		$tmp326 780 781 	%argrw{"r"}
	assign		___683_transmission_tint $const6 	%argrw{"wr"}
	assign		___683_transmission_tint tr1_out_cm_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:168
# }
	closure		$tmp327 $const58 geomprop_Nworld_out1 ___700_main_tangent_out ___683_reflection_tint ___683_transmission_tint ___700_transmission_roughness_out.x ___700_transmission_roughness_out.y shaderref1_specular_IOR $const52 $const56 $const5 $const57 $const51 	%line{168} %argrw{"wrrrrrrrrrrrrr"}
	mul		___700_transmission_bsdf_out $tmp327 $const13 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:357
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp328 $const60 geomprop_Nworld_out1 shaderref1_sheen_color shaderref1_sheen_roughness 	%line{357} %argrw{"wrrrr"}
	mul		___700_sheen_bsdf_out $tmp328 shaderref1_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:358
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___700_translucent_bsdf_weight_tmp $const13 	%line{358} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:359
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp329 $const61 geomprop_Nworld_out1 ___700_coat_affected_subsurface_color_out 	%line{359} %argrw{"wrrr"}
	mul		___700_translucent_bsdf_out $tmp329 ___700_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:360
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___700_subsurface_bsdf_out ___700_null_closure 	%line{360} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:361
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const62 792 	%line{361} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:176
# #endif
	mul		$tmp330 $const13 ___700_coat_affected_subsurface_color_out 	%line{176} %argrw{"wrr"}
	closure		___700_subsurface_bsdf_out $const63 geomprop_Nworld_out1 $tmp330 $const13 ___700_subsurface_radius_scaled_out shaderref1_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:362
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const64 797 	%line{362} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp331 $const13 ___700_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp332 ___700_subsurface_bsdf_out $tmp331 	%argrw{"wrr"}
	mul		$tmp333 ___700_translucent_bsdf_out ___700_subsurface_selector_out 	%argrw{"wrr"}
	add		___700_selected_subsurface_bsdf_out $tmp332 $tmp333 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:363
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp334 $const65 geomprop_Nworld_out1 ___700_coat_affected_diffuse_color_out shaderref1_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{363} %argrw{"wrrrr"}
	mul		___700_diffuse_bsdf_out $tmp334 shaderref1_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:364
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const64 804 	%line{364} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp335 $const13 shaderref1_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp336 ___700_diffuse_bsdf_out $tmp335 	%argrw{"wrr"}
	mul		$tmp337 ___700_selected_subsurface_bsdf_out shaderref1_subsurface 	%argrw{"wrr"}
	add		___700_subsurface_mix_out $tmp336 $tmp337 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:365
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___700_sheen_layer_out $const66 ___700_sheen_bsdf_out ___700_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{365} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:366
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const64 810 	%line{366} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp338 $const13 shaderref1_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp339 ___700_sheen_layer_out $tmp338 	%argrw{"wrr"}
	mul		$tmp340 ___700_transmission_bsdf_out shaderref1_transmission 	%argrw{"wrr"}
	add		___700_transmission_mix_out $tmp339 $tmp340 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:367
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___700_specular_layer_out $const66 ___700_specular_bsdf_out ___700_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{367} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:368
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const64 816 	%line{368} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp341 $const13 shaderref1_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp342 ___700_specular_layer_out $tmp341 	%argrw{"wrr"}
	mul		$tmp343 ___700_metal_bsdf_out shaderref1_metalness 	%argrw{"wrr"}
	add		___700_metalness_mix_out $tmp342 $tmp343 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:369
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___700_thin_film_layer_attenuated_out ___700_metalness_mix_out ___700_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{369} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:370
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___700_coat_layer_out $const66 ___700_coat_bsdf_out ___700_thin_film_layer_attenuated_out 	%line{370} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:371
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___700_emission_edf_out $const67 ___700_emission_weight_out 	%line{371} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:372
#     EDF coat_emission_edf_out = null_closure;
	mul		___700_coat_tinted_emission_edf_out ___700_emission_edf_out shaderref1_coat_color 	%line{372} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:373
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___700_coat_emission_edf_out ___700_null_closure 	%line{373} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:374
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const69 833 	%line{374} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:267
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp346 I 	%line{267} %argrw{"wr"}
	dot		$tmp345 N $tmp346 	%argrw{"wrr"}
	fabs		___698_NdotV $tmp345 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:268
#     result = base * f;
	functioncall	$const70 832 	%line{268} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:261
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp347 $const13 ___698_NdotV 	%line{261} %argrw{"wrr"}
	functioncall	$const35 830 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp348 $tmp347 $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_x $tmp348 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:262
# }
	pow		$tmp349 ___697_x $const68 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{262} %argrw{"wrr"}
	mix		___698_f ___700_emission_color0_out $const6 $tmp349 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:269
# }
	mul		___700_coat_emission_edf_out ___700_coat_tinted_emission_edf_out ___698_f 	%line{269} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:375
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const64 838 	%line{375} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp350 $const13 shaderref1_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp351 ___700_emission_edf_out $tmp350 	%argrw{"wrr"}
	mul		$tmp352 ___700_coat_emission_edf_out shaderref1_coat 	%argrw{"wrr"}
	add		___700_blended_coat_emission_edf_out $tmp351 $tmp352 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:376
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___700_shader_constructor_out.bsdf ___700_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{376} %argrw{"wr"}
	assign		___700_shader_constructor_out.edf ___700_null_closure 	%argrw{"wr"}
	assign		___700_shader_constructor_out.opacity $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:377
#     out = shader_constructor_out;
	functioncall	$const71 848 	%line{377} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:274
#     result.edf     = edf;
	assign		___700_shader_constructor_out.bsdf ___700_coat_layer_out 	%line{274} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:275
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___700_shader_constructor_out.edf ___700_blended_coat_emission_edf_out 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:276
# }
	functioncall	$const35 847 	%line{276} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp353 ___700_opacity_luminance_float_out $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___700_shader_constructor_out.opacity $tmp353 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:276
# }
	assign		___700_shader_constructor_out.opacity ___700_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{276} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:378
# }
	assign		shaderref1_out.bsdf ___700_shader_constructor_out.bsdf 	%line{378} %argrw{"wr"}
	assign		shaderref1_out.edf ___700_shader_constructor_out.edf 	%argrw{"wr"}
	assign		shaderref1_out.opacity ___700_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:830
#     out = Filename_CM_Test_out;
	functioncall	$const72 861 	%line{830} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:383
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const35 855 	%line{383} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp354 shaderref1_out.opacity $const13 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___701_opacity_weight $tmp354 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:384
# }
	add		$tmp355 shaderref1_out.bsdf shaderref1_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl"} %line{384} %argrw{"wrr"}
	mul		$tmp356 $tmp355 ___701_opacity_weight 	%argrw{"wrr"}
	closure		$tmp357 $const73 	%argrw{"wr"}
	sub		$tmp358 $const13 ___701_opacity_weight 	%argrw{"wrr"}
	mul		$tmp359 $tmp357 $tmp358 	%argrw{"wrr"}
	add		Filename_CM_Test_out $tmp356 $tmp359 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\color_management\\filename_cm_test\\Filename_CM_Test.osl:831
# }
	assign		out Filename_CM_Test_out 	%line{831} %argrw{"wr"}
	end
