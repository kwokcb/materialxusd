OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\convolution\blur\blur_vector2_out.oso
shader blur_vector2_out1	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"out"} 
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage1_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,widget,"filename"}  %read{2,2} %write{2147483647,-1}
param	string	tiledimage1_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{3,3} %write{2147483647,-1}
param	struct vector2	tiledimage1_default			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_default.x	0		%read{56,1888} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{0}
param	float	tiledimage1_default.y	0		%read{57,1888} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{1}
param	struct vector2	tiledimage1_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_uvtiling.x	1		%read{10,1839} %write{2147483647,-1} %mystruct{tiledimage1_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage1_uvtiling.y	1		%read{11,1840} %write{2147483647,-1} %mystruct{tiledimage1_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_uvoffset.x	0		%read{13,1842} %write{2147483647,-1} %mystruct{tiledimage1_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage1_uvoffset.y	0		%read{14,1843} %write{2147483647,-1} %mystruct{tiledimage1_uvoffset} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_realworldimagesize.x	1		%read{16,1845} %write{2147483647,-1} %mystruct{tiledimage1_realworldimagesize} %mystructfield{0} %derivs
param	float	tiledimage1_realworldimagesize.y	1		%read{17,1846} %write{2147483647,-1} %mystruct{tiledimage1_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_realworldtilesize.x	1		%read{19,1848} %write{2147483647,-1} %mystruct{tiledimage1_realworldtilesize} %mystructfield{0} %derivs
param	float	tiledimage1_realworldtilesize.y	1		%read{20,1849} %write{2147483647,-1} %mystruct{tiledimage1_realworldtilesize} %mystructfield{1} %derivs
param	string	tiledimage1_filtertype	"linear"		%read{63,1892} %write{2147483647,-1}
param	string	tiledimage1_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage1_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage1_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	blur_vector2_size	0.5		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	blur_vector2_filtertype	"box"		%read{1949,1949} %write{2147483647,-1}
oparam	struct vector2	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
oparam	float	out.x	0		%read{2147483647,-1} %write{1999,1999} %mystruct{out} %mystructfield{0}
oparam	float	out.y	0		%read{2147483647,-1} %write{2000,2000} %mystruct{out} %mystructfield{1}
global	float	u	%read{4,4} %write{2147483647,-1} %derivs
global	float	v	%read{5,5} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{63,1892} %write{59,1888}
local	float	___670_st.x	%read{63,1892} %write{61,1890} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{63,1892} %write{62,1891} %mystruct{___670_st} %mystructfield{1} %derivs
local	color	___670_rgb	%read{64,1895} %write{63,1892}
local	float	___672_N_mult_vector2_out.x	%read{13,1842} %write{10,1839} %mystruct{___672_N_mult_vector2_out} %mystructfield{0} %derivs
local	float	___672_N_mult_vector2_out.y	%read{14,1843} %write{11,1840} %mystruct{___672_N_mult_vector2_out} %mystructfield{1} %derivs
local	float	___672_N_sub_vector2_out.x	%read{16,1845} %write{13,1842} %mystruct{___672_N_sub_vector2_out} %mystructfield{0} %derivs
local	float	___672_N_sub_vector2_out.y	%read{17,1846} %write{14,1843} %mystruct{___672_N_sub_vector2_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_vector2_out.x	%read{19,1848} %write{16,1845} %mystruct{___672_N_divtilesize_vector2_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_vector2_out.y	%read{20,1849} %write{17,1846} %mystruct{___672_N_divtilesize_vector2_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_vector2_out.x	%read{30,1890} %write{19,1848} %mystruct{___672_N_multtilesize_vector2_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_vector2_out.y	%read{45,1891} %write{20,1849} %mystruct{___672_N_multtilesize_vector2_out} %mystructfield{1} %derivs
local	float	___672_N_img_vector2_out.x	%read{65,1897} %write{21,1894} %mystruct{___672_N_img_vector2_out} %mystructfield{0}
local	float	___672_N_img_vector2_out.y	%read{67,1898} %write{22,1896} %mystruct{___672_N_img_vector2_out} %mystructfield{1}
local	vector	___673_derivUVx	%read{77,82} %write{73,73} %derivs
local	vector	___673_derivUVy	%read{79,84} %write{76,76} %derivs
local	float	___673_derivX	%read{87,87} %write{81,81} %derivs
local	float	___673_derivY	%read{92,92} %write{86,86} %derivs
local	float	___673_sampleSizeU	%read{89,97} %write{88,91} %derivs
local	float	___673_sampleSizeV	%read{94,98} %write{93,96} %derivs
local	float	___685_result.x	%read{1956,1997} %write{1952,1996} %mystruct{___685_result} %mystructfield{0}
local	float	___685_result.y	%read{1956,1998} %write{1953,1996} %mystruct{___685_result} %mystructfield{1}
local	int	___686_i	%read{1956,1996} %write{1955,1996}
local	float[84]	c_box_filter_weights	%read{1980,1996} %write{0,0}
local	float[84]	c_gaussian_filter_weights	%read{1956,1972} %write{1,1}
local	string	tiledimage1_file_.filename	%read{24,1892} %write{2,2} %mystruct{tiledimage1_file_} %mystructfield{0}
local	string	tiledimage1_file_.colorspace	%read{2147483647,-1} %write{3,3} %mystruct{tiledimage1_file_} %mystructfield{1}
local	float	geomprop_UV0_out1.x	%read{10,1835} %write{4,4} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{11,1836} %write{5,5} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage1_out.x	%read{2147483647,-1} %write{6,68} %mystruct{tiledimage1_out} %mystructfield{0}
local	float	tiledimage1_out.y	%read{2147483647,-1} %write{7,69} %mystruct{tiledimage1_out} %mystructfield{1}
local	float	blur_vector2_out_sample_size.x	%read{104,1832} %write{97,97} %mystruct{blur_vector2_out_sample_size} %mystructfield{0} %derivs
local	float	blur_vector2_out_sample_size.y	%read{105,1833} %write{98,98} %mystruct{blur_vector2_out_sample_size} %mystructfield{1} %derivs
local	float	tiledimage1_out_blur_vector2_out0.x	%read{1899,1899} %write{99,169} %mystruct{tiledimage1_out_blur_vector2_out0} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out0.y	%read{1900,1900} %write{100,170} %mystruct{tiledimage1_out_blur_vector2_out0} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out1.x	%read{1901,1901} %write{171,241} %mystruct{tiledimage1_out_blur_vector2_out1} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out1.y	%read{1902,1902} %write{172,242} %mystruct{tiledimage1_out_blur_vector2_out1} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out2.x	%read{1903,1903} %write{243,313} %mystruct{tiledimage1_out_blur_vector2_out2} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out2.y	%read{1904,1904} %write{244,314} %mystruct{tiledimage1_out_blur_vector2_out2} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out3.x	%read{1905,1905} %write{315,385} %mystruct{tiledimage1_out_blur_vector2_out3} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out3.y	%read{1906,1906} %write{316,386} %mystruct{tiledimage1_out_blur_vector2_out3} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out4.x	%read{1907,1907} %write{387,457} %mystruct{tiledimage1_out_blur_vector2_out4} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out4.y	%read{1908,1908} %write{388,458} %mystruct{tiledimage1_out_blur_vector2_out4} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out5.x	%read{1909,1909} %write{459,529} %mystruct{tiledimage1_out_blur_vector2_out5} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out5.y	%read{1910,1910} %write{460,530} %mystruct{tiledimage1_out_blur_vector2_out5} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out6.x	%read{1911,1911} %write{531,601} %mystruct{tiledimage1_out_blur_vector2_out6} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out6.y	%read{1912,1912} %write{532,602} %mystruct{tiledimage1_out_blur_vector2_out6} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out7.x	%read{1913,1913} %write{603,673} %mystruct{tiledimage1_out_blur_vector2_out7} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out7.y	%read{1914,1914} %write{604,674} %mystruct{tiledimage1_out_blur_vector2_out7} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out8.x	%read{1915,1915} %write{675,745} %mystruct{tiledimage1_out_blur_vector2_out8} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out8.y	%read{1916,1916} %write{676,746} %mystruct{tiledimage1_out_blur_vector2_out8} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out9.x	%read{1917,1917} %write{747,817} %mystruct{tiledimage1_out_blur_vector2_out9} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out9.y	%read{1918,1918} %write{748,818} %mystruct{tiledimage1_out_blur_vector2_out9} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out10.x	%read{1919,1919} %write{819,889} %mystruct{tiledimage1_out_blur_vector2_out10} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out10.y	%read{1920,1920} %write{820,890} %mystruct{tiledimage1_out_blur_vector2_out10} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out11.x	%read{1921,1921} %write{891,961} %mystruct{tiledimage1_out_blur_vector2_out11} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out11.y	%read{1922,1922} %write{892,962} %mystruct{tiledimage1_out_blur_vector2_out11} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out12.x	%read{1923,1923} %write{963,1033} %mystruct{tiledimage1_out_blur_vector2_out12} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out12.y	%read{1924,1924} %write{964,1034} %mystruct{tiledimage1_out_blur_vector2_out12} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out13.x	%read{1925,1925} %write{1035,1105} %mystruct{tiledimage1_out_blur_vector2_out13} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out13.y	%read{1926,1926} %write{1036,1106} %mystruct{tiledimage1_out_blur_vector2_out13} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out14.x	%read{1927,1927} %write{1107,1177} %mystruct{tiledimage1_out_blur_vector2_out14} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out14.y	%read{1928,1928} %write{1108,1178} %mystruct{tiledimage1_out_blur_vector2_out14} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out15.x	%read{1929,1929} %write{1179,1249} %mystruct{tiledimage1_out_blur_vector2_out15} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out15.y	%read{1930,1930} %write{1180,1250} %mystruct{tiledimage1_out_blur_vector2_out15} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out16.x	%read{1931,1931} %write{1251,1321} %mystruct{tiledimage1_out_blur_vector2_out16} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out16.y	%read{1932,1932} %write{1252,1322} %mystruct{tiledimage1_out_blur_vector2_out16} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out17.x	%read{1933,1933} %write{1323,1393} %mystruct{tiledimage1_out_blur_vector2_out17} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out17.y	%read{1934,1934} %write{1324,1394} %mystruct{tiledimage1_out_blur_vector2_out17} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out18.x	%read{1935,1935} %write{1395,1465} %mystruct{tiledimage1_out_blur_vector2_out18} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out18.y	%read{1936,1936} %write{1396,1466} %mystruct{tiledimage1_out_blur_vector2_out18} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out19.x	%read{1937,1937} %write{1467,1537} %mystruct{tiledimage1_out_blur_vector2_out19} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out19.y	%read{1938,1938} %write{1468,1538} %mystruct{tiledimage1_out_blur_vector2_out19} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out20.x	%read{1939,1939} %write{1539,1609} %mystruct{tiledimage1_out_blur_vector2_out20} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out20.y	%read{1940,1940} %write{1540,1610} %mystruct{tiledimage1_out_blur_vector2_out20} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out21.x	%read{1941,1941} %write{1611,1681} %mystruct{tiledimage1_out_blur_vector2_out21} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out21.y	%read{1942,1942} %write{1612,1682} %mystruct{tiledimage1_out_blur_vector2_out21} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out22.x	%read{1943,1943} %write{1683,1753} %mystruct{tiledimage1_out_blur_vector2_out22} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out22.y	%read{1944,1944} %write{1684,1754} %mystruct{tiledimage1_out_blur_vector2_out22} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out23.x	%read{1945,1945} %write{1755,1825} %mystruct{tiledimage1_out_blur_vector2_out23} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out23.y	%read{1946,1946} %write{1756,1826} %mystruct{tiledimage1_out_blur_vector2_out23} %mystructfield{1}
local	float	tiledimage1_out_blur_vector2_out24.x	%read{1947,1947} %write{1827,1897} %mystruct{tiledimage1_out_blur_vector2_out24} %mystructfield{0}
local	float	tiledimage1_out_blur_vector2_out24.y	%read{1948,1948} %write{1828,1898} %mystruct{tiledimage1_out_blur_vector2_out24} %mystructfield{1}
local	float[49]	blur_vector2_out_samples.x	%read{1956,1996} %write{1899,1947} %mystruct{blur_vector2_out_samples} %mystructfield{0}
local	float[49]	blur_vector2_out_samples.y	%read{1956,1996} %write{1900,1948} %mystruct{blur_vector2_out_samples} %mystructfield{1}
local	float	blur_vector2_out.x	%read{1999,1999} %write{1973,1997} %mystruct{blur_vector2_out} %mystructfield{0}
local	float	blur_vector2_out.y	%read{2000,2000} %write{1974,1998} %mystruct{blur_vector2_out} %mystructfield{1}
const	float[84]	$const1	1 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 		%read{0,0} %write{2147483647,-1}
const	float[84]	$const2	1 0.077847 0.123317 0.077847 0.123317 0.195346 0.123317 0.077847 0.123317 0.077847 0.003765 0.015019 0.023792 0.015019 0.003765 0.015019 0.059912 0.094907 0.059912 0.015019 0.023792 0.094907 0.150342 0.094907 0.023792 0.015019 0.059912 0.094907 0.059912 0.015019 0.003765 0.015019 0.023792 0.015019 0.003765 3.6e-05 0.000363 0.001446 0.002291 0.001446 0.000363 3.6e-05 0.000363 0.003676 0.014662 0.023226 0.014662 0.003676 0.000363 0.001446 0.014662 0.058488 0.092651 0.058488 0.014662 0.001446 0.002291 0.023226 0.092651 0.146768 0.092651 0.023226 0.002291 0.001446 0.014662 0.058488 0.092651 0.058488 0.014662 0.001446 0.000363 0.003676 0.014662 0.023226 0.014662 0.003676 0.000363 3.6e-05 0.000363 0.001446 0.002291 0.001446 0.000363 3.6e-05 		%read{1,1} %write{2147483647,-1}
const	float	$const3	0		%read{6,1977} %write{2147483647,-1}
const	string	$const4	"NG_tiledimage_vector2"		%read{8,1837} %write{2147483647,-1}
const	string	$const5	"__operator__mul__"		%read{9,1989} %write{2147483647,-1}
const	string	$const6	"__operator__sub__"		%read{12,1841} %write{2147483647,-1}
const	string	$const7	"__operator__div__"		%read{15,1844} %write{2147483647,-1}
const	string	$const8	""		%read{24,1892} %write{2147483647,-1}
const	string	$const9	"periodic"		%read{27,1892} %write{2147483647,-1}
const	string	$const10	"mx_image_vector2"		%read{23,1852} %write{2147483647,-1}
temp	int	$tmp1	%read{25,25} %write{24,24}
temp	int	$tmp2	%read{26,40} %write{25,39}
const	int	$const11	0		%read{25,1981} %write{2147483647,-1}
const	string	$const12	"constant"		%read{27,1871} %write{2147483647,-1}
temp	int	$tmp3	%read{28,28} %write{27,27}
temp	int	$tmp4	%read{29,38} %write{28,37}
temp	int	$tmp5	%read{31,31} %write{30,30}
temp	int	$tmp6	%read{32,36} %write{31,35}
const	float	$const13	1		%read{33,1877} %write{2147483647,-1}
temp	int	$tmp7	%read{34,34} %write{33,33}
temp	int	$tmp8	%read{35,35} %write{34,34}
temp	int	$tmp9	%read{37,37} %write{36,36}
temp	int	$tmp10	%read{39,39} %write{38,38}
temp	int	$tmp11	%read{41,55} %write{40,54}
temp	int	$tmp12	%read{43,43} %write{42,42}
temp	int	$tmp13	%read{44,53} %write{43,52}
temp	int	$tmp14	%read{46,46} %write{45,45}
temp	int	$tmp15	%read{47,51} %write{46,50}
temp	int	$tmp16	%read{49,49} %write{48,48}
temp	int	$tmp17	%read{50,50} %write{49,49}
temp	int	$tmp18	%read{52,52} %write{51,51}
temp	int	$tmp19	%read{54,54} %write{53,53}
const	string	$const14	"mx_transform_uv"		%read{60,1889} %write{2147483647,-1}
const	string	$const15	"subimage"		%read{63,1892} %write{2147483647,-1}
const	string	$const16	"interp"		%read{63,1892} %write{2147483647,-1}
const	string	$const17	"missingcolor"		%read{63,1892} %write{2147483647,-1}
const	string	$const18	"swrap"		%read{63,1892} %write{2147483647,-1}
const	string	$const19	"twrap"		%read{63,1892} %write{2147483647,-1}
const	int	$const20	1		%read{66,1996} %write{2147483647,-1}
const	string	$const21	"mx_compute_sample_size_uv"		%read{70,70} %write{2147483647,-1}
temp	vector	$tmp20	%read{73,73} %write{72,72} %derivs
temp	vector	$tmp21	%read{72,72} %write{71,71} %derivs
const	float	$const22	0.5		%read{73,76} %write{2147483647,-1}
temp	vector	$tmp22	%read{76,76} %write{75,75} %derivs
temp	vector	$tmp23	%read{75,75} %write{74,74} %derivs
temp	float	$tmp24	%read{81,81} %write{78,78} %derivs
temp	float	$tmp25	%read{78,78} %write{77,77} %derivs
temp	float	$tmp26	%read{81,81} %write{80,80} %derivs
temp	float	$tmp27	%read{80,80} %write{79,79} %derivs
temp	float	$tmp28	%read{86,86} %write{83,83} %derivs
temp	float	$tmp29	%read{83,83} %write{82,82} %derivs
temp	float	$tmp30	%read{86,86} %write{85,85} %derivs
temp	float	$tmp31	%read{85,85} %write{84,84} %derivs
temp	float	$tmp32	%read{88,88} %write{87,87} %derivs
const	float	$const23	1e-05		%read{89,96} %write{2147483647,-1}
temp	int	$tmp33	%read{90,90} %write{89,89}
temp	float	$tmp34	%read{93,93} %write{92,92} %derivs
temp	int	$tmp35	%read{95,95} %write{94,94}
temp	float	$tmp36.x	%read{111,111} %write{107,107} %derivs
temp	float	$tmp36.y	%read{112,112} %write{108,108} %derivs
temp	float	$tmp37.x	%read{107,107} %write{104,104} %derivs
temp	float	$tmp37.y	%read{108,108} %write{105,105} %derivs
temp	float	$tmp38.x	%read{104,104} %write{101,101} %derivs
temp	float	$tmp38.y	%read{105,105} %write{102,102} %derivs
const	float	$const24	-2		%read{101,1541} %write{2147483647,-1}
const	string	$const25	"__operator__add__"		%read{106,1992} %write{2147483647,-1}
temp	int	$tmp39	%read{126,126} %write{125,125}
temp	int	$tmp40	%read{127,141} %write{126,140}
temp	int	$tmp41	%read{129,129} %write{128,128}
temp	int	$tmp42	%read{130,139} %write{129,138}
temp	int	$tmp43	%read{132,132} %write{131,131}
temp	int	$tmp44	%read{133,137} %write{132,136}
temp	int	$tmp45	%read{135,135} %write{134,134}
temp	int	$tmp46	%read{136,136} %write{135,135}
temp	int	$tmp47	%read{138,138} %write{137,137}
temp	int	$tmp48	%read{140,140} %write{139,139}
temp	int	$tmp49	%read{142,156} %write{141,155}
temp	int	$tmp50	%read{144,144} %write{143,143}
temp	int	$tmp51	%read{145,154} %write{144,153}
temp	int	$tmp52	%read{147,147} %write{146,146}
temp	int	$tmp53	%read{148,152} %write{147,151}
temp	int	$tmp54	%read{150,150} %write{149,149}
temp	int	$tmp55	%read{151,151} %write{150,150}
temp	int	$tmp56	%read{153,153} %write{152,152}
temp	int	$tmp57	%read{155,155} %write{154,154}
temp	float	$tmp58.x	%read{183,183} %write{179,179} %derivs
temp	float	$tmp58.y	%read{184,184} %write{180,180} %derivs
temp	float	$tmp59.x	%read{179,179} %write{176,176} %derivs
temp	float	$tmp59.y	%read{180,180} %write{177,177} %derivs
temp	float	$tmp60.x	%read{176,176} %write{173,173} %derivs
temp	float	$tmp60.y	%read{177,177} %write{174,174} %derivs
const	float	$const26	-1		%read{173,1613} %write{2147483647,-1}
temp	int	$tmp61	%read{198,198} %write{197,197}
temp	int	$tmp62	%read{199,213} %write{198,212}
temp	int	$tmp63	%read{201,201} %write{200,200}
temp	int	$tmp64	%read{202,211} %write{201,210}
temp	int	$tmp65	%read{204,204} %write{203,203}
temp	int	$tmp66	%read{205,209} %write{204,208}
temp	int	$tmp67	%read{207,207} %write{206,206}
temp	int	$tmp68	%read{208,208} %write{207,207}
temp	int	$tmp69	%read{210,210} %write{209,209}
temp	int	$tmp70	%read{212,212} %write{211,211}
temp	int	$tmp71	%read{214,228} %write{213,227}
temp	int	$tmp72	%read{216,216} %write{215,215}
temp	int	$tmp73	%read{217,226} %write{216,225}
temp	int	$tmp74	%read{219,219} %write{218,218}
temp	int	$tmp75	%read{220,224} %write{219,223}
temp	int	$tmp76	%read{222,222} %write{221,221}
temp	int	$tmp77	%read{223,223} %write{222,222}
temp	int	$tmp78	%read{225,225} %write{224,224}
temp	int	$tmp79	%read{227,227} %write{226,226}
temp	float	$tmp80.x	%read{255,255} %write{251,251} %derivs
temp	float	$tmp80.y	%read{256,256} %write{252,252} %derivs
temp	float	$tmp81.x	%read{251,251} %write{248,248} %derivs
temp	float	$tmp81.y	%read{252,252} %write{249,249} %derivs
temp	float	$tmp82.x	%read{248,248} %write{245,245} %derivs
temp	float	$tmp82.y	%read{249,249} %write{246,246} %derivs
temp	int	$tmp83	%read{270,270} %write{269,269}
temp	int	$tmp84	%read{271,285} %write{270,284}
temp	int	$tmp85	%read{273,273} %write{272,272}
temp	int	$tmp86	%read{274,283} %write{273,282}
temp	int	$tmp87	%read{276,276} %write{275,275}
temp	int	$tmp88	%read{277,281} %write{276,280}
temp	int	$tmp89	%read{279,279} %write{278,278}
temp	int	$tmp90	%read{280,280} %write{279,279}
temp	int	$tmp91	%read{282,282} %write{281,281}
temp	int	$tmp92	%read{284,284} %write{283,283}
temp	int	$tmp93	%read{286,300} %write{285,299}
temp	int	$tmp94	%read{288,288} %write{287,287}
temp	int	$tmp95	%read{289,298} %write{288,297}
temp	int	$tmp96	%read{291,291} %write{290,290}
temp	int	$tmp97	%read{292,296} %write{291,295}
temp	int	$tmp98	%read{294,294} %write{293,293}
temp	int	$tmp99	%read{295,295} %write{294,294}
temp	int	$tmp100	%read{297,297} %write{296,296}
temp	int	$tmp101	%read{299,299} %write{298,298}
temp	float	$tmp102.x	%read{327,327} %write{323,323} %derivs
temp	float	$tmp102.y	%read{328,328} %write{324,324} %derivs
temp	float	$tmp103.x	%read{323,323} %write{320,320} %derivs
temp	float	$tmp103.y	%read{324,324} %write{321,321} %derivs
temp	float	$tmp104.x	%read{320,320} %write{317,317} %derivs
temp	float	$tmp104.y	%read{321,321} %write{318,318} %derivs
temp	int	$tmp105	%read{342,342} %write{341,341}
temp	int	$tmp106	%read{343,357} %write{342,356}
temp	int	$tmp107	%read{345,345} %write{344,344}
temp	int	$tmp108	%read{346,355} %write{345,354}
temp	int	$tmp109	%read{348,348} %write{347,347}
temp	int	$tmp110	%read{349,353} %write{348,352}
temp	int	$tmp111	%read{351,351} %write{350,350}
temp	int	$tmp112	%read{352,352} %write{351,351}
temp	int	$tmp113	%read{354,354} %write{353,353}
temp	int	$tmp114	%read{356,356} %write{355,355}
temp	int	$tmp115	%read{358,372} %write{357,371}
temp	int	$tmp116	%read{360,360} %write{359,359}
temp	int	$tmp117	%read{361,370} %write{360,369}
temp	int	$tmp118	%read{363,363} %write{362,362}
temp	int	$tmp119	%read{364,368} %write{363,367}
temp	int	$tmp120	%read{366,366} %write{365,365}
temp	int	$tmp121	%read{367,367} %write{366,366}
temp	int	$tmp122	%read{369,369} %write{368,368}
temp	int	$tmp123	%read{371,371} %write{370,370}
temp	float	$tmp124.x	%read{399,399} %write{395,395} %derivs
temp	float	$tmp124.y	%read{400,400} %write{396,396} %derivs
temp	float	$tmp125.x	%read{395,395} %write{392,392} %derivs
temp	float	$tmp125.y	%read{396,396} %write{393,393} %derivs
temp	float	$tmp126.x	%read{392,392} %write{389,389} %derivs
temp	float	$tmp126.y	%read{393,393} %write{390,390} %derivs
const	float	$const27	2		%read{389,1830} %write{2147483647,-1}
temp	int	$tmp127	%read{414,414} %write{413,413}
temp	int	$tmp128	%read{415,429} %write{414,428}
temp	int	$tmp129	%read{417,417} %write{416,416}
temp	int	$tmp130	%read{418,427} %write{417,426}
temp	int	$tmp131	%read{420,420} %write{419,419}
temp	int	$tmp132	%read{421,425} %write{420,424}
temp	int	$tmp133	%read{423,423} %write{422,422}
temp	int	$tmp134	%read{424,424} %write{423,423}
temp	int	$tmp135	%read{426,426} %write{425,425}
temp	int	$tmp136	%read{428,428} %write{427,427}
temp	int	$tmp137	%read{430,444} %write{429,443}
temp	int	$tmp138	%read{432,432} %write{431,431}
temp	int	$tmp139	%read{433,442} %write{432,441}
temp	int	$tmp140	%read{435,435} %write{434,434}
temp	int	$tmp141	%read{436,440} %write{435,439}
temp	int	$tmp142	%read{438,438} %write{437,437}
temp	int	$tmp143	%read{439,439} %write{438,438}
temp	int	$tmp144	%read{441,441} %write{440,440}
temp	int	$tmp145	%read{443,443} %write{442,442}
temp	float	$tmp146.x	%read{471,471} %write{467,467} %derivs
temp	float	$tmp146.y	%read{472,472} %write{468,468} %derivs
temp	float	$tmp147.x	%read{467,467} %write{464,464} %derivs
temp	float	$tmp147.y	%read{468,468} %write{465,465} %derivs
temp	float	$tmp148.x	%read{464,464} %write{461,461} %derivs
temp	float	$tmp148.y	%read{465,465} %write{462,462} %derivs
temp	int	$tmp149	%read{486,486} %write{485,485}
temp	int	$tmp150	%read{487,501} %write{486,500}
temp	int	$tmp151	%read{489,489} %write{488,488}
temp	int	$tmp152	%read{490,499} %write{489,498}
temp	int	$tmp153	%read{492,492} %write{491,491}
temp	int	$tmp154	%read{493,497} %write{492,496}
temp	int	$tmp155	%read{495,495} %write{494,494}
temp	int	$tmp156	%read{496,496} %write{495,495}
temp	int	$tmp157	%read{498,498} %write{497,497}
temp	int	$tmp158	%read{500,500} %write{499,499}
temp	int	$tmp159	%read{502,516} %write{501,515}
temp	int	$tmp160	%read{504,504} %write{503,503}
temp	int	$tmp161	%read{505,514} %write{504,513}
temp	int	$tmp162	%read{507,507} %write{506,506}
temp	int	$tmp163	%read{508,512} %write{507,511}
temp	int	$tmp164	%read{510,510} %write{509,509}
temp	int	$tmp165	%read{511,511} %write{510,510}
temp	int	$tmp166	%read{513,513} %write{512,512}
temp	int	$tmp167	%read{515,515} %write{514,514}
temp	float	$tmp168.x	%read{543,543} %write{539,539} %derivs
temp	float	$tmp168.y	%read{544,544} %write{540,540} %derivs
temp	float	$tmp169.x	%read{539,539} %write{536,536} %derivs
temp	float	$tmp169.y	%read{540,540} %write{537,537} %derivs
temp	float	$tmp170.x	%read{536,536} %write{533,533} %derivs
temp	float	$tmp170.y	%read{537,537} %write{534,534} %derivs
temp	int	$tmp171	%read{558,558} %write{557,557}
temp	int	$tmp172	%read{559,573} %write{558,572}
temp	int	$tmp173	%read{561,561} %write{560,560}
temp	int	$tmp174	%read{562,571} %write{561,570}
temp	int	$tmp175	%read{564,564} %write{563,563}
temp	int	$tmp176	%read{565,569} %write{564,568}
temp	int	$tmp177	%read{567,567} %write{566,566}
temp	int	$tmp178	%read{568,568} %write{567,567}
temp	int	$tmp179	%read{570,570} %write{569,569}
temp	int	$tmp180	%read{572,572} %write{571,571}
temp	int	$tmp181	%read{574,588} %write{573,587}
temp	int	$tmp182	%read{576,576} %write{575,575}
temp	int	$tmp183	%read{577,586} %write{576,585}
temp	int	$tmp184	%read{579,579} %write{578,578}
temp	int	$tmp185	%read{580,584} %write{579,583}
temp	int	$tmp186	%read{582,582} %write{581,581}
temp	int	$tmp187	%read{583,583} %write{582,582}
temp	int	$tmp188	%read{585,585} %write{584,584}
temp	int	$tmp189	%read{587,587} %write{586,586}
temp	float	$tmp190.x	%read{615,615} %write{611,611} %derivs
temp	float	$tmp190.y	%read{616,616} %write{612,612} %derivs
temp	float	$tmp191.x	%read{611,611} %write{608,608} %derivs
temp	float	$tmp191.y	%read{612,612} %write{609,609} %derivs
temp	float	$tmp192.x	%read{608,608} %write{605,605} %derivs
temp	float	$tmp192.y	%read{609,609} %write{606,606} %derivs
temp	int	$tmp193	%read{630,630} %write{629,629}
temp	int	$tmp194	%read{631,645} %write{630,644}
temp	int	$tmp195	%read{633,633} %write{632,632}
temp	int	$tmp196	%read{634,643} %write{633,642}
temp	int	$tmp197	%read{636,636} %write{635,635}
temp	int	$tmp198	%read{637,641} %write{636,640}
temp	int	$tmp199	%read{639,639} %write{638,638}
temp	int	$tmp200	%read{640,640} %write{639,639}
temp	int	$tmp201	%read{642,642} %write{641,641}
temp	int	$tmp202	%read{644,644} %write{643,643}
temp	int	$tmp203	%read{646,660} %write{645,659}
temp	int	$tmp204	%read{648,648} %write{647,647}
temp	int	$tmp205	%read{649,658} %write{648,657}
temp	int	$tmp206	%read{651,651} %write{650,650}
temp	int	$tmp207	%read{652,656} %write{651,655}
temp	int	$tmp208	%read{654,654} %write{653,653}
temp	int	$tmp209	%read{655,655} %write{654,654}
temp	int	$tmp210	%read{657,657} %write{656,656}
temp	int	$tmp211	%read{659,659} %write{658,658}
temp	float	$tmp212.x	%read{687,687} %write{683,683} %derivs
temp	float	$tmp212.y	%read{688,688} %write{684,684} %derivs
temp	float	$tmp213.x	%read{683,683} %write{680,680} %derivs
temp	float	$tmp213.y	%read{684,684} %write{681,681} %derivs
temp	float	$tmp214.x	%read{680,680} %write{677,677} %derivs
temp	float	$tmp214.y	%read{681,681} %write{678,678} %derivs
temp	int	$tmp215	%read{702,702} %write{701,701}
temp	int	$tmp216	%read{703,717} %write{702,716}
temp	int	$tmp217	%read{705,705} %write{704,704}
temp	int	$tmp218	%read{706,715} %write{705,714}
temp	int	$tmp219	%read{708,708} %write{707,707}
temp	int	$tmp220	%read{709,713} %write{708,712}
temp	int	$tmp221	%read{711,711} %write{710,710}
temp	int	$tmp222	%read{712,712} %write{711,711}
temp	int	$tmp223	%read{714,714} %write{713,713}
temp	int	$tmp224	%read{716,716} %write{715,715}
temp	int	$tmp225	%read{718,732} %write{717,731}
temp	int	$tmp226	%read{720,720} %write{719,719}
temp	int	$tmp227	%read{721,730} %write{720,729}
temp	int	$tmp228	%read{723,723} %write{722,722}
temp	int	$tmp229	%read{724,728} %write{723,727}
temp	int	$tmp230	%read{726,726} %write{725,725}
temp	int	$tmp231	%read{727,727} %write{726,726}
temp	int	$tmp232	%read{729,729} %write{728,728}
temp	int	$tmp233	%read{731,731} %write{730,730}
temp	float	$tmp234.x	%read{759,759} %write{755,755} %derivs
temp	float	$tmp234.y	%read{760,760} %write{756,756} %derivs
temp	float	$tmp235.x	%read{755,755} %write{752,752} %derivs
temp	float	$tmp235.y	%read{756,756} %write{753,753} %derivs
temp	float	$tmp236.x	%read{752,752} %write{749,749} %derivs
temp	float	$tmp236.y	%read{753,753} %write{750,750} %derivs
temp	int	$tmp237	%read{774,774} %write{773,773}
temp	int	$tmp238	%read{775,789} %write{774,788}
temp	int	$tmp239	%read{777,777} %write{776,776}
temp	int	$tmp240	%read{778,787} %write{777,786}
temp	int	$tmp241	%read{780,780} %write{779,779}
temp	int	$tmp242	%read{781,785} %write{780,784}
temp	int	$tmp243	%read{783,783} %write{782,782}
temp	int	$tmp244	%read{784,784} %write{783,783}
temp	int	$tmp245	%read{786,786} %write{785,785}
temp	int	$tmp246	%read{788,788} %write{787,787}
temp	int	$tmp247	%read{790,804} %write{789,803}
temp	int	$tmp248	%read{792,792} %write{791,791}
temp	int	$tmp249	%read{793,802} %write{792,801}
temp	int	$tmp250	%read{795,795} %write{794,794}
temp	int	$tmp251	%read{796,800} %write{795,799}
temp	int	$tmp252	%read{798,798} %write{797,797}
temp	int	$tmp253	%read{799,799} %write{798,798}
temp	int	$tmp254	%read{801,801} %write{800,800}
temp	int	$tmp255	%read{803,803} %write{802,802}
temp	float	$tmp256.x	%read{831,831} %write{827,827} %derivs
temp	float	$tmp256.y	%read{832,832} %write{828,828} %derivs
temp	float	$tmp257.x	%read{827,827} %write{824,824} %derivs
temp	float	$tmp257.y	%read{828,828} %write{825,825} %derivs
temp	float	$tmp258.x	%read{824,824} %write{821,821} %derivs
temp	float	$tmp258.y	%read{825,825} %write{822,822} %derivs
temp	int	$tmp259	%read{846,846} %write{845,845}
temp	int	$tmp260	%read{847,861} %write{846,860}
temp	int	$tmp261	%read{849,849} %write{848,848}
temp	int	$tmp262	%read{850,859} %write{849,858}
temp	int	$tmp263	%read{852,852} %write{851,851}
temp	int	$tmp264	%read{853,857} %write{852,856}
temp	int	$tmp265	%read{855,855} %write{854,854}
temp	int	$tmp266	%read{856,856} %write{855,855}
temp	int	$tmp267	%read{858,858} %write{857,857}
temp	int	$tmp268	%read{860,860} %write{859,859}
temp	int	$tmp269	%read{862,876} %write{861,875}
temp	int	$tmp270	%read{864,864} %write{863,863}
temp	int	$tmp271	%read{865,874} %write{864,873}
temp	int	$tmp272	%read{867,867} %write{866,866}
temp	int	$tmp273	%read{868,872} %write{867,871}
temp	int	$tmp274	%read{870,870} %write{869,869}
temp	int	$tmp275	%read{871,871} %write{870,870}
temp	int	$tmp276	%read{873,873} %write{872,872}
temp	int	$tmp277	%read{875,875} %write{874,874}
temp	float	$tmp278.x	%read{903,903} %write{899,899} %derivs
temp	float	$tmp278.y	%read{904,904} %write{900,900} %derivs
temp	float	$tmp279.x	%read{899,899} %write{896,896} %derivs
temp	float	$tmp279.y	%read{900,900} %write{897,897} %derivs
temp	float	$tmp280.x	%read{896,896} %write{893,893} %derivs
temp	float	$tmp280.y	%read{897,897} %write{894,894} %derivs
temp	int	$tmp281	%read{918,918} %write{917,917}
temp	int	$tmp282	%read{919,933} %write{918,932}
temp	int	$tmp283	%read{921,921} %write{920,920}
temp	int	$tmp284	%read{922,931} %write{921,930}
temp	int	$tmp285	%read{924,924} %write{923,923}
temp	int	$tmp286	%read{925,929} %write{924,928}
temp	int	$tmp287	%read{927,927} %write{926,926}
temp	int	$tmp288	%read{928,928} %write{927,927}
temp	int	$tmp289	%read{930,930} %write{929,929}
temp	int	$tmp290	%read{932,932} %write{931,931}
temp	int	$tmp291	%read{934,948} %write{933,947}
temp	int	$tmp292	%read{936,936} %write{935,935}
temp	int	$tmp293	%read{937,946} %write{936,945}
temp	int	$tmp294	%read{939,939} %write{938,938}
temp	int	$tmp295	%read{940,944} %write{939,943}
temp	int	$tmp296	%read{942,942} %write{941,941}
temp	int	$tmp297	%read{943,943} %write{942,942}
temp	int	$tmp298	%read{945,945} %write{944,944}
temp	int	$tmp299	%read{947,947} %write{946,946}
temp	float	$tmp300.x	%read{975,975} %write{971,971} %derivs
temp	float	$tmp300.y	%read{976,976} %write{972,972} %derivs
temp	float	$tmp301.x	%read{971,971} %write{968,968} %derivs
temp	float	$tmp301.y	%read{972,972} %write{969,969} %derivs
temp	float	$tmp302.x	%read{968,968} %write{965,965} %derivs
temp	float	$tmp302.y	%read{969,969} %write{966,966} %derivs
temp	int	$tmp303	%read{990,990} %write{989,989}
temp	int	$tmp304	%read{991,1005} %write{990,1004}
temp	int	$tmp305	%read{993,993} %write{992,992}
temp	int	$tmp306	%read{994,1003} %write{993,1002}
temp	int	$tmp307	%read{996,996} %write{995,995}
temp	int	$tmp308	%read{997,1001} %write{996,1000}
temp	int	$tmp309	%read{999,999} %write{998,998}
temp	int	$tmp310	%read{1000,1000} %write{999,999}
temp	int	$tmp311	%read{1002,1002} %write{1001,1001}
temp	int	$tmp312	%read{1004,1004} %write{1003,1003}
temp	int	$tmp313	%read{1006,1020} %write{1005,1019}
temp	int	$tmp314	%read{1008,1008} %write{1007,1007}
temp	int	$tmp315	%read{1009,1018} %write{1008,1017}
temp	int	$tmp316	%read{1011,1011} %write{1010,1010}
temp	int	$tmp317	%read{1012,1016} %write{1011,1015}
temp	int	$tmp318	%read{1014,1014} %write{1013,1013}
temp	int	$tmp319	%read{1015,1015} %write{1014,1014}
temp	int	$tmp320	%read{1017,1017} %write{1016,1016}
temp	int	$tmp321	%read{1019,1019} %write{1018,1018}
temp	float	$tmp322.x	%read{1047,1047} %write{1043,1043} %derivs
temp	float	$tmp322.y	%read{1048,1048} %write{1044,1044} %derivs
temp	float	$tmp323.x	%read{1043,1043} %write{1040,1040} %derivs
temp	float	$tmp323.y	%read{1044,1044} %write{1041,1041} %derivs
temp	float	$tmp324.x	%read{1040,1040} %write{1037,1037} %derivs
temp	float	$tmp324.y	%read{1041,1041} %write{1038,1038} %derivs
temp	int	$tmp325	%read{1062,1062} %write{1061,1061}
temp	int	$tmp326	%read{1063,1077} %write{1062,1076}
temp	int	$tmp327	%read{1065,1065} %write{1064,1064}
temp	int	$tmp328	%read{1066,1075} %write{1065,1074}
temp	int	$tmp329	%read{1068,1068} %write{1067,1067}
temp	int	$tmp330	%read{1069,1073} %write{1068,1072}
temp	int	$tmp331	%read{1071,1071} %write{1070,1070}
temp	int	$tmp332	%read{1072,1072} %write{1071,1071}
temp	int	$tmp333	%read{1074,1074} %write{1073,1073}
temp	int	$tmp334	%read{1076,1076} %write{1075,1075}
temp	int	$tmp335	%read{1078,1092} %write{1077,1091}
temp	int	$tmp336	%read{1080,1080} %write{1079,1079}
temp	int	$tmp337	%read{1081,1090} %write{1080,1089}
temp	int	$tmp338	%read{1083,1083} %write{1082,1082}
temp	int	$tmp339	%read{1084,1088} %write{1083,1087}
temp	int	$tmp340	%read{1086,1086} %write{1085,1085}
temp	int	$tmp341	%read{1087,1087} %write{1086,1086}
temp	int	$tmp342	%read{1089,1089} %write{1088,1088}
temp	int	$tmp343	%read{1091,1091} %write{1090,1090}
temp	float	$tmp344.x	%read{1119,1119} %write{1115,1115} %derivs
temp	float	$tmp344.y	%read{1120,1120} %write{1116,1116} %derivs
temp	float	$tmp345.x	%read{1115,1115} %write{1112,1112} %derivs
temp	float	$tmp345.y	%read{1116,1116} %write{1113,1113} %derivs
temp	float	$tmp346.x	%read{1112,1112} %write{1109,1109} %derivs
temp	float	$tmp346.y	%read{1113,1113} %write{1110,1110} %derivs
temp	int	$tmp347	%read{1134,1134} %write{1133,1133}
temp	int	$tmp348	%read{1135,1149} %write{1134,1148}
temp	int	$tmp349	%read{1137,1137} %write{1136,1136}
temp	int	$tmp350	%read{1138,1147} %write{1137,1146}
temp	int	$tmp351	%read{1140,1140} %write{1139,1139}
temp	int	$tmp352	%read{1141,1145} %write{1140,1144}
temp	int	$tmp353	%read{1143,1143} %write{1142,1142}
temp	int	$tmp354	%read{1144,1144} %write{1143,1143}
temp	int	$tmp355	%read{1146,1146} %write{1145,1145}
temp	int	$tmp356	%read{1148,1148} %write{1147,1147}
temp	int	$tmp357	%read{1150,1164} %write{1149,1163}
temp	int	$tmp358	%read{1152,1152} %write{1151,1151}
temp	int	$tmp359	%read{1153,1162} %write{1152,1161}
temp	int	$tmp360	%read{1155,1155} %write{1154,1154}
temp	int	$tmp361	%read{1156,1160} %write{1155,1159}
temp	int	$tmp362	%read{1158,1158} %write{1157,1157}
temp	int	$tmp363	%read{1159,1159} %write{1158,1158}
temp	int	$tmp364	%read{1161,1161} %write{1160,1160}
temp	int	$tmp365	%read{1163,1163} %write{1162,1162}
temp	float	$tmp366.x	%read{1191,1191} %write{1187,1187} %derivs
temp	float	$tmp366.y	%read{1192,1192} %write{1188,1188} %derivs
temp	float	$tmp367.x	%read{1187,1187} %write{1184,1184} %derivs
temp	float	$tmp367.y	%read{1188,1188} %write{1185,1185} %derivs
temp	float	$tmp368.x	%read{1184,1184} %write{1181,1181} %derivs
temp	float	$tmp368.y	%read{1185,1185} %write{1182,1182} %derivs
temp	int	$tmp369	%read{1206,1206} %write{1205,1205}
temp	int	$tmp370	%read{1207,1221} %write{1206,1220}
temp	int	$tmp371	%read{1209,1209} %write{1208,1208}
temp	int	$tmp372	%read{1210,1219} %write{1209,1218}
temp	int	$tmp373	%read{1212,1212} %write{1211,1211}
temp	int	$tmp374	%read{1213,1217} %write{1212,1216}
temp	int	$tmp375	%read{1215,1215} %write{1214,1214}
temp	int	$tmp376	%read{1216,1216} %write{1215,1215}
temp	int	$tmp377	%read{1218,1218} %write{1217,1217}
temp	int	$tmp378	%read{1220,1220} %write{1219,1219}
temp	int	$tmp379	%read{1222,1236} %write{1221,1235}
temp	int	$tmp380	%read{1224,1224} %write{1223,1223}
temp	int	$tmp381	%read{1225,1234} %write{1224,1233}
temp	int	$tmp382	%read{1227,1227} %write{1226,1226}
temp	int	$tmp383	%read{1228,1232} %write{1227,1231}
temp	int	$tmp384	%read{1230,1230} %write{1229,1229}
temp	int	$tmp385	%read{1231,1231} %write{1230,1230}
temp	int	$tmp386	%read{1233,1233} %write{1232,1232}
temp	int	$tmp387	%read{1235,1235} %write{1234,1234}
temp	float	$tmp388.x	%read{1263,1263} %write{1259,1259} %derivs
temp	float	$tmp388.y	%read{1264,1264} %write{1260,1260} %derivs
temp	float	$tmp389.x	%read{1259,1259} %write{1256,1256} %derivs
temp	float	$tmp389.y	%read{1260,1260} %write{1257,1257} %derivs
temp	float	$tmp390.x	%read{1256,1256} %write{1253,1253} %derivs
temp	float	$tmp390.y	%read{1257,1257} %write{1254,1254} %derivs
temp	int	$tmp391	%read{1278,1278} %write{1277,1277}
temp	int	$tmp392	%read{1279,1293} %write{1278,1292}
temp	int	$tmp393	%read{1281,1281} %write{1280,1280}
temp	int	$tmp394	%read{1282,1291} %write{1281,1290}
temp	int	$tmp395	%read{1284,1284} %write{1283,1283}
temp	int	$tmp396	%read{1285,1289} %write{1284,1288}
temp	int	$tmp397	%read{1287,1287} %write{1286,1286}
temp	int	$tmp398	%read{1288,1288} %write{1287,1287}
temp	int	$tmp399	%read{1290,1290} %write{1289,1289}
temp	int	$tmp400	%read{1292,1292} %write{1291,1291}
temp	int	$tmp401	%read{1294,1308} %write{1293,1307}
temp	int	$tmp402	%read{1296,1296} %write{1295,1295}
temp	int	$tmp403	%read{1297,1306} %write{1296,1305}
temp	int	$tmp404	%read{1299,1299} %write{1298,1298}
temp	int	$tmp405	%read{1300,1304} %write{1299,1303}
temp	int	$tmp406	%read{1302,1302} %write{1301,1301}
temp	int	$tmp407	%read{1303,1303} %write{1302,1302}
temp	int	$tmp408	%read{1305,1305} %write{1304,1304}
temp	int	$tmp409	%read{1307,1307} %write{1306,1306}
temp	float	$tmp410.x	%read{1335,1335} %write{1331,1331} %derivs
temp	float	$tmp410.y	%read{1336,1336} %write{1332,1332} %derivs
temp	float	$tmp411.x	%read{1331,1331} %write{1328,1328} %derivs
temp	float	$tmp411.y	%read{1332,1332} %write{1329,1329} %derivs
temp	float	$tmp412.x	%read{1328,1328} %write{1325,1325} %derivs
temp	float	$tmp412.y	%read{1329,1329} %write{1326,1326} %derivs
temp	int	$tmp413	%read{1350,1350} %write{1349,1349}
temp	int	$tmp414	%read{1351,1365} %write{1350,1364}
temp	int	$tmp415	%read{1353,1353} %write{1352,1352}
temp	int	$tmp416	%read{1354,1363} %write{1353,1362}
temp	int	$tmp417	%read{1356,1356} %write{1355,1355}
temp	int	$tmp418	%read{1357,1361} %write{1356,1360}
temp	int	$tmp419	%read{1359,1359} %write{1358,1358}
temp	int	$tmp420	%read{1360,1360} %write{1359,1359}
temp	int	$tmp421	%read{1362,1362} %write{1361,1361}
temp	int	$tmp422	%read{1364,1364} %write{1363,1363}
temp	int	$tmp423	%read{1366,1380} %write{1365,1379}
temp	int	$tmp424	%read{1368,1368} %write{1367,1367}
temp	int	$tmp425	%read{1369,1378} %write{1368,1377}
temp	int	$tmp426	%read{1371,1371} %write{1370,1370}
temp	int	$tmp427	%read{1372,1376} %write{1371,1375}
temp	int	$tmp428	%read{1374,1374} %write{1373,1373}
temp	int	$tmp429	%read{1375,1375} %write{1374,1374}
temp	int	$tmp430	%read{1377,1377} %write{1376,1376}
temp	int	$tmp431	%read{1379,1379} %write{1378,1378}
temp	float	$tmp432.x	%read{1407,1407} %write{1403,1403} %derivs
temp	float	$tmp432.y	%read{1408,1408} %write{1404,1404} %derivs
temp	float	$tmp433.x	%read{1403,1403} %write{1400,1400} %derivs
temp	float	$tmp433.y	%read{1404,1404} %write{1401,1401} %derivs
temp	float	$tmp434.x	%read{1400,1400} %write{1397,1397} %derivs
temp	float	$tmp434.y	%read{1401,1401} %write{1398,1398} %derivs
temp	int	$tmp435	%read{1422,1422} %write{1421,1421}
temp	int	$tmp436	%read{1423,1437} %write{1422,1436}
temp	int	$tmp437	%read{1425,1425} %write{1424,1424}
temp	int	$tmp438	%read{1426,1435} %write{1425,1434}
temp	int	$tmp439	%read{1428,1428} %write{1427,1427}
temp	int	$tmp440	%read{1429,1433} %write{1428,1432}
temp	int	$tmp441	%read{1431,1431} %write{1430,1430}
temp	int	$tmp442	%read{1432,1432} %write{1431,1431}
temp	int	$tmp443	%read{1434,1434} %write{1433,1433}
temp	int	$tmp444	%read{1436,1436} %write{1435,1435}
temp	int	$tmp445	%read{1438,1452} %write{1437,1451}
temp	int	$tmp446	%read{1440,1440} %write{1439,1439}
temp	int	$tmp447	%read{1441,1450} %write{1440,1449}
temp	int	$tmp448	%read{1443,1443} %write{1442,1442}
temp	int	$tmp449	%read{1444,1448} %write{1443,1447}
temp	int	$tmp450	%read{1446,1446} %write{1445,1445}
temp	int	$tmp451	%read{1447,1447} %write{1446,1446}
temp	int	$tmp452	%read{1449,1449} %write{1448,1448}
temp	int	$tmp453	%read{1451,1451} %write{1450,1450}
temp	float	$tmp454.x	%read{1479,1479} %write{1475,1475} %derivs
temp	float	$tmp454.y	%read{1480,1480} %write{1476,1476} %derivs
temp	float	$tmp455.x	%read{1475,1475} %write{1472,1472} %derivs
temp	float	$tmp455.y	%read{1476,1476} %write{1473,1473} %derivs
temp	float	$tmp456.x	%read{1472,1472} %write{1469,1469} %derivs
temp	float	$tmp456.y	%read{1473,1473} %write{1470,1470} %derivs
temp	int	$tmp457	%read{1494,1494} %write{1493,1493}
temp	int	$tmp458	%read{1495,1509} %write{1494,1508}
temp	int	$tmp459	%read{1497,1497} %write{1496,1496}
temp	int	$tmp460	%read{1498,1507} %write{1497,1506}
temp	int	$tmp461	%read{1500,1500} %write{1499,1499}
temp	int	$tmp462	%read{1501,1505} %write{1500,1504}
temp	int	$tmp463	%read{1503,1503} %write{1502,1502}
temp	int	$tmp464	%read{1504,1504} %write{1503,1503}
temp	int	$tmp465	%read{1506,1506} %write{1505,1505}
temp	int	$tmp466	%read{1508,1508} %write{1507,1507}
temp	int	$tmp467	%read{1510,1524} %write{1509,1523}
temp	int	$tmp468	%read{1512,1512} %write{1511,1511}
temp	int	$tmp469	%read{1513,1522} %write{1512,1521}
temp	int	$tmp470	%read{1515,1515} %write{1514,1514}
temp	int	$tmp471	%read{1516,1520} %write{1515,1519}
temp	int	$tmp472	%read{1518,1518} %write{1517,1517}
temp	int	$tmp473	%read{1519,1519} %write{1518,1518}
temp	int	$tmp474	%read{1521,1521} %write{1520,1520}
temp	int	$tmp475	%read{1523,1523} %write{1522,1522}
temp	float	$tmp476.x	%read{1551,1551} %write{1547,1547} %derivs
temp	float	$tmp476.y	%read{1552,1552} %write{1548,1548} %derivs
temp	float	$tmp477.x	%read{1547,1547} %write{1544,1544} %derivs
temp	float	$tmp477.y	%read{1548,1548} %write{1545,1545} %derivs
temp	float	$tmp478.x	%read{1544,1544} %write{1541,1541} %derivs
temp	float	$tmp478.y	%read{1545,1545} %write{1542,1542} %derivs
temp	int	$tmp479	%read{1566,1566} %write{1565,1565}
temp	int	$tmp480	%read{1567,1581} %write{1566,1580}
temp	int	$tmp481	%read{1569,1569} %write{1568,1568}
temp	int	$tmp482	%read{1570,1579} %write{1569,1578}
temp	int	$tmp483	%read{1572,1572} %write{1571,1571}
temp	int	$tmp484	%read{1573,1577} %write{1572,1576}
temp	int	$tmp485	%read{1575,1575} %write{1574,1574}
temp	int	$tmp486	%read{1576,1576} %write{1575,1575}
temp	int	$tmp487	%read{1578,1578} %write{1577,1577}
temp	int	$tmp488	%read{1580,1580} %write{1579,1579}
temp	int	$tmp489	%read{1582,1596} %write{1581,1595}
temp	int	$tmp490	%read{1584,1584} %write{1583,1583}
temp	int	$tmp491	%read{1585,1594} %write{1584,1593}
temp	int	$tmp492	%read{1587,1587} %write{1586,1586}
temp	int	$tmp493	%read{1588,1592} %write{1587,1591}
temp	int	$tmp494	%read{1590,1590} %write{1589,1589}
temp	int	$tmp495	%read{1591,1591} %write{1590,1590}
temp	int	$tmp496	%read{1593,1593} %write{1592,1592}
temp	int	$tmp497	%read{1595,1595} %write{1594,1594}
temp	float	$tmp498.x	%read{1623,1623} %write{1619,1619} %derivs
temp	float	$tmp498.y	%read{1624,1624} %write{1620,1620} %derivs
temp	float	$tmp499.x	%read{1619,1619} %write{1616,1616} %derivs
temp	float	$tmp499.y	%read{1620,1620} %write{1617,1617} %derivs
temp	float	$tmp500.x	%read{1616,1616} %write{1613,1613} %derivs
temp	float	$tmp500.y	%read{1617,1617} %write{1614,1614} %derivs
temp	int	$tmp501	%read{1638,1638} %write{1637,1637}
temp	int	$tmp502	%read{1639,1653} %write{1638,1652}
temp	int	$tmp503	%read{1641,1641} %write{1640,1640}
temp	int	$tmp504	%read{1642,1651} %write{1641,1650}
temp	int	$tmp505	%read{1644,1644} %write{1643,1643}
temp	int	$tmp506	%read{1645,1649} %write{1644,1648}
temp	int	$tmp507	%read{1647,1647} %write{1646,1646}
temp	int	$tmp508	%read{1648,1648} %write{1647,1647}
temp	int	$tmp509	%read{1650,1650} %write{1649,1649}
temp	int	$tmp510	%read{1652,1652} %write{1651,1651}
temp	int	$tmp511	%read{1654,1668} %write{1653,1667}
temp	int	$tmp512	%read{1656,1656} %write{1655,1655}
temp	int	$tmp513	%read{1657,1666} %write{1656,1665}
temp	int	$tmp514	%read{1659,1659} %write{1658,1658}
temp	int	$tmp515	%read{1660,1664} %write{1659,1663}
temp	int	$tmp516	%read{1662,1662} %write{1661,1661}
temp	int	$tmp517	%read{1663,1663} %write{1662,1662}
temp	int	$tmp518	%read{1665,1665} %write{1664,1664}
temp	int	$tmp519	%read{1667,1667} %write{1666,1666}
temp	float	$tmp520.x	%read{1695,1695} %write{1691,1691} %derivs
temp	float	$tmp520.y	%read{1696,1696} %write{1692,1692} %derivs
temp	float	$tmp521.x	%read{1691,1691} %write{1688,1688} %derivs
temp	float	$tmp521.y	%read{1692,1692} %write{1689,1689} %derivs
temp	float	$tmp522.x	%read{1688,1688} %write{1685,1685} %derivs
temp	float	$tmp522.y	%read{1689,1689} %write{1686,1686} %derivs
temp	int	$tmp523	%read{1710,1710} %write{1709,1709}
temp	int	$tmp524	%read{1711,1725} %write{1710,1724}
temp	int	$tmp525	%read{1713,1713} %write{1712,1712}
temp	int	$tmp526	%read{1714,1723} %write{1713,1722}
temp	int	$tmp527	%read{1716,1716} %write{1715,1715}
temp	int	$tmp528	%read{1717,1721} %write{1716,1720}
temp	int	$tmp529	%read{1719,1719} %write{1718,1718}
temp	int	$tmp530	%read{1720,1720} %write{1719,1719}
temp	int	$tmp531	%read{1722,1722} %write{1721,1721}
temp	int	$tmp532	%read{1724,1724} %write{1723,1723}
temp	int	$tmp533	%read{1726,1740} %write{1725,1739}
temp	int	$tmp534	%read{1728,1728} %write{1727,1727}
temp	int	$tmp535	%read{1729,1738} %write{1728,1737}
temp	int	$tmp536	%read{1731,1731} %write{1730,1730}
temp	int	$tmp537	%read{1732,1736} %write{1731,1735}
temp	int	$tmp538	%read{1734,1734} %write{1733,1733}
temp	int	$tmp539	%read{1735,1735} %write{1734,1734}
temp	int	$tmp540	%read{1737,1737} %write{1736,1736}
temp	int	$tmp541	%read{1739,1739} %write{1738,1738}
temp	float	$tmp542.x	%read{1767,1767} %write{1763,1763} %derivs
temp	float	$tmp542.y	%read{1768,1768} %write{1764,1764} %derivs
temp	float	$tmp543.x	%read{1763,1763} %write{1760,1760} %derivs
temp	float	$tmp543.y	%read{1764,1764} %write{1761,1761} %derivs
temp	float	$tmp544.x	%read{1760,1760} %write{1757,1757} %derivs
temp	float	$tmp544.y	%read{1761,1761} %write{1758,1758} %derivs
temp	int	$tmp545	%read{1782,1782} %write{1781,1781}
temp	int	$tmp546	%read{1783,1797} %write{1782,1796}
temp	int	$tmp547	%read{1785,1785} %write{1784,1784}
temp	int	$tmp548	%read{1786,1795} %write{1785,1794}
temp	int	$tmp549	%read{1788,1788} %write{1787,1787}
temp	int	$tmp550	%read{1789,1793} %write{1788,1792}
temp	int	$tmp551	%read{1791,1791} %write{1790,1790}
temp	int	$tmp552	%read{1792,1792} %write{1791,1791}
temp	int	$tmp553	%read{1794,1794} %write{1793,1793}
temp	int	$tmp554	%read{1796,1796} %write{1795,1795}
temp	int	$tmp555	%read{1798,1812} %write{1797,1811}
temp	int	$tmp556	%read{1800,1800} %write{1799,1799}
temp	int	$tmp557	%read{1801,1810} %write{1800,1809}
temp	int	$tmp558	%read{1803,1803} %write{1802,1802}
temp	int	$tmp559	%read{1804,1808} %write{1803,1807}
temp	int	$tmp560	%read{1806,1806} %write{1805,1805}
temp	int	$tmp561	%read{1807,1807} %write{1806,1806}
temp	int	$tmp562	%read{1809,1809} %write{1808,1808}
temp	int	$tmp563	%read{1811,1811} %write{1810,1810}
temp	float	$tmp564.x	%read{1839,1839} %write{1835,1835} %derivs
temp	float	$tmp564.y	%read{1840,1840} %write{1836,1836} %derivs
temp	float	$tmp565.x	%read{1835,1835} %write{1832,1832} %derivs
temp	float	$tmp565.y	%read{1836,1836} %write{1833,1833} %derivs
temp	float	$tmp566.x	%read{1832,1832} %write{1829,1829} %derivs
temp	float	$tmp566.y	%read{1833,1833} %write{1830,1830} %derivs
temp	int	$tmp567	%read{1854,1854} %write{1853,1853}
temp	int	$tmp568	%read{1855,1869} %write{1854,1868}
temp	int	$tmp569	%read{1857,1857} %write{1856,1856}
temp	int	$tmp570	%read{1858,1867} %write{1857,1866}
temp	int	$tmp571	%read{1860,1860} %write{1859,1859}
temp	int	$tmp572	%read{1861,1865} %write{1860,1864}
temp	int	$tmp573	%read{1863,1863} %write{1862,1862}
temp	int	$tmp574	%read{1864,1864} %write{1863,1863}
temp	int	$tmp575	%read{1866,1866} %write{1865,1865}
temp	int	$tmp576	%read{1868,1868} %write{1867,1867}
temp	int	$tmp577	%read{1870,1884} %write{1869,1883}
temp	int	$tmp578	%read{1872,1872} %write{1871,1871}
temp	int	$tmp579	%read{1873,1882} %write{1872,1881}
temp	int	$tmp580	%read{1875,1875} %write{1874,1874}
temp	int	$tmp581	%read{1876,1880} %write{1875,1879}
temp	int	$tmp582	%read{1878,1878} %write{1877,1877}
temp	int	$tmp583	%read{1879,1879} %write{1878,1878}
temp	int	$tmp584	%read{1881,1881} %write{1880,1880}
temp	int	$tmp585	%read{1883,1883} %write{1882,1882}
const	int	$const28	2		%read{1903,1904} %write{2147483647,-1}
const	int	$const29	3		%read{1905,1906} %write{2147483647,-1}
const	int	$const30	4		%read{1907,1908} %write{2147483647,-1}
const	int	$const31	5		%read{1909,1910} %write{2147483647,-1}
const	int	$const32	6		%read{1911,1912} %write{2147483647,-1}
const	int	$const33	7		%read{1913,1914} %write{2147483647,-1}
const	int	$const34	8		%read{1915,1916} %write{2147483647,-1}
const	int	$const35	9		%read{1917,1918} %write{2147483647,-1}
const	int	$const36	10		%read{1919,1984} %write{2147483647,-1}
const	int	$const37	11		%read{1921,1922} %write{2147483647,-1}
const	int	$const38	12		%read{1923,1924} %write{2147483647,-1}
const	int	$const39	13		%read{1925,1926} %write{2147483647,-1}
const	int	$const40	14		%read{1927,1928} %write{2147483647,-1}
const	int	$const41	15		%read{1929,1930} %write{2147483647,-1}
const	int	$const42	16		%read{1931,1932} %write{2147483647,-1}
const	int	$const43	17		%read{1933,1934} %write{2147483647,-1}
const	int	$const44	18		%read{1935,1936} %write{2147483647,-1}
const	int	$const45	19		%read{1937,1938} %write{2147483647,-1}
const	int	$const46	20		%read{1939,1940} %write{2147483647,-1}
const	int	$const47	21		%read{1941,1942} %write{2147483647,-1}
const	int	$const48	22		%read{1943,1944} %write{2147483647,-1}
const	int	$const49	23		%read{1945,1946} %write{2147483647,-1}
const	int	$const50	24		%read{1947,1948} %write{2147483647,-1}
const	string	$const51	"gaussian"		%read{1949,1949} %write{2147483647,-1}
temp	int	$tmp586	%read{1950,1950} %write{1949,1949}
const	int	$const52	25		%read{1956,1980} %write{2147483647,-1}
const	string	$const53	"mx_convolution_vector2"		%read{1951,1975} %write{2147483647,-1}
temp	int	$tmp587	%read{1956,1972} %write{1956,1972}
temp	int	$tmp588	%read{1954,1972} %write{1955,1972}
temp	float	$tmp589.x	%read{1956,1972} %write{1956,1972}
temp	float	$tmp589.y	%read{1956,1972} %write{1956,1972}
temp	float	$tmp590.x	%read{1956,1972} %write{1956,1972}
temp	float	$tmp590.y	%read{1956,1972} %write{1956,1972}
temp	int	$tmp591	%read{1956,1972} %write{1956,1972}
temp	float	$tmp592	%read{1956,1972} %write{1956,1972}
temp	float	$tmp593.x	%read{1956,1972} %write{1956,1972}
temp	float	$tmp593.y	%read{1956,1972} %write{1956,1972}
temp	int	$tmp594	%read{2147483647,-1} %write{1956,1972}
temp	int	$tmp595	%read{1980,1996} %write{1980,1996}
temp	int	$tmp596	%read{1978,1996} %write{1979,1996}
temp	float	$tmp597.x	%read{1980,1996} %write{1980,1996}
temp	float	$tmp597.y	%read{1980,1996} %write{1980,1996}
temp	float	$tmp598.x	%read{1980,1996} %write{1980,1996}
temp	float	$tmp598.y	%read{1980,1996} %write{1980,1996}
temp	int	$tmp599	%read{1980,1996} %write{1980,1996}
temp	float	$tmp600	%read{1980,1996} %write{1980,1996}
temp	float	$tmp601.x	%read{1980,1996} %write{1980,1996}
temp	float	$tmp601.y	%read{1980,1996} %write{1980,1996}
temp	int	$tmp602	%read{2147483647,-1} %write{1980,1996}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:243
#     float c_gaussian_filter_weights[84] = {1.000000, 0.077847, 0.123317, 0.077847, 0.123317, 0.195346, 0.123317, 0.077847, 0.123317, 0.077847, 0.003765, 0.015019, 0.023792, 0.015019, 0.003765, 0.015019, 0.059912, 0.094907, 0.059912, 0.015019, 0.023792, 0.094907, 0.150342, 0.094907, 0.023792, 0.015019, 0.059912, 0.094907, 0.059912, 0.015019, 0.003765, 0.015019, 0.023792, 0.015019, 0.003765, 0.000036, 0.000363, 0.001446, 0.002291, 0.001446, 0.000363, 0.000036, 0.000363, 0.003676, 0.014662, 0.023226, 0.014662, 0.003676, 0.000363, 0.001446, 0.014662, 0.058488, 0.092651, 0.058488, 0.014662, 0.001446, 0.002291, 0.023226, 0.092651, 0.146768, 0.092651, 0.023226, 0.002291, 0.001446, 0.014662, 0.058488, 0.092651, 0.058488, 0.014662, 0.001446, 0.000363, 0.003676, 0.014662, 0.023226, 0.014662, 0.003676, 0.000363, 0.000036, 0.000363, 0.001446, 0.002291, 0.001446, 0.000363, 0.000036};
	assign		c_box_filter_weights $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{243} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:244
# 
	assign		c_gaussian_filter_weights $const2 	%line{244} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:246
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	assign		tiledimage1_file_.filename tiledimage1_file 	%line{246} %argrw{"wr"}
	assign		tiledimage1_file_.colorspace tiledimage1_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:247
#     vector2 tiledimage1_out = vector2(0.0, 0.0);
	assign		geomprop_UV0_out1.x u 	%line{247} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:248
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1, tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out);
	assign		tiledimage1_out.x $const3 	%line{248} %argrw{"wr"}
	assign		tiledimage1_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:249
#     vector2 blur_vector2_out_sample_size = mx_compute_sample_size_uv(geomprop_UV0_out1,1.000000,0.000000);
	functioncall	$const4 70 	%line{249} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 12 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x geomprop_UV0_out1.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y geomprop_UV0_out1.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 18 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 21 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 68 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp1 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const11 	%argrw{"wrr"}
	if		$tmp2 27 40 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp3 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const11 	%argrw{"wrr"}
	if		$tmp4 38 38 	%argrw{"r"}
	lt		$tmp5 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const11 	%argrw{"wrr"}
	if		$tmp6 33 36 	%argrw{"r"}
	gt		$tmp7 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const11 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	neq		$tmp9 $tmp6 $const11 	%argrw{"wrr"}
	assign		$tmp4 $tmp9 	%argrw{"wr"}
	neq		$tmp10 $tmp4 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp2 $tmp10 	%line{25} %argrw{"wr"}
	neq		$tmp11 $tmp2 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp11 42 55 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp12 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const11 	%argrw{"wrr"}
	if		$tmp13 53 53 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const11 	%argrw{"wrr"}
	if		$tmp15 48 51 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const11 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const11 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp11 $tmp19 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp11 59 59 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 63 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:250
#     vector2 tiledimage1_out_blur_vector2_out0 = vector2(0.0, 0.0);
	functioncall	$const21 99 	%line{250} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:64
#    vector derivUVy = Dy(vector(uv.x, uv.y, 0.0)) * 0.5;
	vector		$tmp21 geomprop_UV0_out1.x geomprop_UV0_out1.y $const3 	%line{64} %argrw{"wrrr"}
	Dx		$tmp20 $tmp21 	%argrw{"wr"} %argderivs{1}
	mul		___673_derivUVx $tmp20 $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:65
#    float derivX = abs(derivUVx[0]) + abs(derivUVy[0]);
	vector		$tmp23 geomprop_UV0_out1.x geomprop_UV0_out1.y $const3 	%line{65} %argrw{"wrrr"}
	Dy		$tmp22 $tmp23 	%argrw{"wr"} %argderivs{1}
	mul		___673_derivUVy $tmp22 $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:66
#    float derivY = abs(derivUVx[1]) + abs(derivUVy[1]);
	compref		$tmp25 ___673_derivUVx $const11 	%line{66} %argrw{"wrr"}
	abs		$tmp24 $tmp25 	%argrw{"wr"}
	compref		$tmp27 ___673_derivUVy $const11 	%argrw{"wrr"}
	abs		$tmp26 $tmp27 	%argrw{"wr"}
	add		___673_derivX $tmp24 $tmp26 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:67
#    float sampleSizeU = filterSize * derivX + filterOffset;
	compref		$tmp29 ___673_derivUVx $const20 	%line{67} %argrw{"wrr"}
	abs		$tmp28 $tmp29 	%argrw{"wr"}
	compref		$tmp31 ___673_derivUVy $const20 	%argrw{"wrr"}
	abs		$tmp30 $tmp31 	%argrw{"wr"}
	add		___673_derivY $tmp28 $tmp30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:68
#    if (sampleSizeU < 1.0E-05)
	mul		$tmp32 $const13 ___673_derivX 	%line{68} %argrw{"wrr"}
	add		___673_sampleSizeU $tmp32 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:69
#        sampleSizeU = 1.0E-05;
	lt		$tmp33 ___673_sampleSizeU $const23 	%line{69} %argrw{"wrr"}
	if		$tmp33 92 92 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:70
#    float sampleSizeV = filterSize * derivY + filterOffset;
	assign		___673_sampleSizeU $const23 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:71
#    if (sampleSizeV < 1.0E-05)
	mul		$tmp34 $const13 ___673_derivY 	%line{71} %argrw{"wrr"}
	add		___673_sampleSizeV $tmp34 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:72
#        sampleSizeV = 1.0E-05;
	lt		$tmp35 ___673_sampleSizeV $const23 	%line{72} %argrw{"wrr"}
	if		$tmp35 97 97 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:73
#    return vector2(sampleSizeU, sampleSizeV);
	assign		___673_sampleSizeV $const23 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:74
# }
	assign		blur_vector2_out_sample_size.x ___673_sampleSizeU 	%line{74} %argrw{"wr"}
	assign		blur_vector2_out_sample_size.y ___673_sampleSizeV 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:251
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-2.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out0);
	assign		tiledimage1_out_blur_vector2_out0.x $const3 	%line{251} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out0.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:252
#     vector2 tiledimage1_out_blur_vector2_out1 = vector2(0.0, 0.0);
	assign		$tmp38.x $const24 	%line{252} %argrw{"wr"}
	assign		$tmp38.y $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 106 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp37.x blur_vector2_out_sample_size.x $tmp38.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp37.y blur_vector2_out_sample_size.y $tmp38.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 109 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp36.x geomprop_UV0_out1.x $tmp37.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp36.y geomprop_UV0_out1.y $tmp37.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:252
#     vector2 tiledimage1_out_blur_vector2_out1 = vector2(0.0, 0.0);
	functioncall	$const4 171 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{252} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 113 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp36.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp36.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 116 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 119 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 122 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 169 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp39 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp40 $tmp39 $const11 	%argrw{"wrr"}
	if		$tmp40 128 141 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp41 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp42 $tmp41 $const11 	%argrw{"wrr"}
	if		$tmp42 139 139 	%argrw{"r"}
	lt		$tmp43 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp44 $tmp43 $const11 	%argrw{"wrr"}
	if		$tmp44 134 137 	%argrw{"r"}
	gt		$tmp45 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp46 $tmp45 $const11 	%argrw{"wrr"}
	assign		$tmp44 $tmp46 	%argrw{"wr"}
	neq		$tmp47 $tmp44 $const11 	%argrw{"wrr"}
	assign		$tmp42 $tmp47 	%argrw{"wr"}
	neq		$tmp48 $tmp42 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp40 $tmp48 	%line{25} %argrw{"wr"}
	neq		$tmp49 $tmp40 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp49 143 156 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp50 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp51 $tmp50 $const11 	%argrw{"wrr"}
	if		$tmp51 154 154 	%argrw{"r"}
	lt		$tmp52 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp53 $tmp52 $const11 	%argrw{"wrr"}
	if		$tmp53 149 152 	%argrw{"r"}
	gt		$tmp54 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp55 $tmp54 $const11 	%argrw{"wrr"}
	assign		$tmp53 $tmp55 	%argrw{"wr"}
	neq		$tmp56 $tmp53 $const11 	%argrw{"wrr"}
	assign		$tmp51 $tmp56 	%argrw{"wr"}
	neq		$tmp57 $tmp51 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp49 $tmp57 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp49 160 160 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 164 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out0.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out0.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:253
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-1.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out1);
	assign		tiledimage1_out_blur_vector2_out1.x $const3 	%line{253} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out1.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:254
#     vector2 tiledimage1_out_blur_vector2_out2 = vector2(0.0, 0.0);
	assign		$tmp60.x $const26 	%line{254} %argrw{"wr"}
	assign		$tmp60.y $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 178 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp59.x blur_vector2_out_sample_size.x $tmp60.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp59.y blur_vector2_out_sample_size.y $tmp60.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 181 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp58.x geomprop_UV0_out1.x $tmp59.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp58.y geomprop_UV0_out1.y $tmp59.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:254
#     vector2 tiledimage1_out_blur_vector2_out2 = vector2(0.0, 0.0);
	functioncall	$const4 243 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{254} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 185 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp58.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp58.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 188 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 191 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 194 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 241 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp61 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp62 $tmp61 $const11 	%argrw{"wrr"}
	if		$tmp62 200 213 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp63 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp64 $tmp63 $const11 	%argrw{"wrr"}
	if		$tmp64 211 211 	%argrw{"r"}
	lt		$tmp65 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const11 	%argrw{"wrr"}
	if		$tmp66 206 209 	%argrw{"r"}
	gt		$tmp67 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp68 $tmp67 $const11 	%argrw{"wrr"}
	assign		$tmp66 $tmp68 	%argrw{"wr"}
	neq		$tmp69 $tmp66 $const11 	%argrw{"wrr"}
	assign		$tmp64 $tmp69 	%argrw{"wr"}
	neq		$tmp70 $tmp64 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp62 $tmp70 	%line{25} %argrw{"wr"}
	neq		$tmp71 $tmp62 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp71 215 228 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp72 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp73 $tmp72 $const11 	%argrw{"wrr"}
	if		$tmp73 226 226 	%argrw{"r"}
	lt		$tmp74 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp75 $tmp74 $const11 	%argrw{"wrr"}
	if		$tmp75 221 224 	%argrw{"r"}
	gt		$tmp76 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp77 $tmp76 $const11 	%argrw{"wrr"}
	assign		$tmp75 $tmp77 	%argrw{"wr"}
	neq		$tmp78 $tmp75 $const11 	%argrw{"wrr"}
	assign		$tmp73 $tmp78 	%argrw{"wr"}
	neq		$tmp79 $tmp73 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp71 $tmp79 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp71 232 232 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 236 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out1.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out1.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:255
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(0.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out2);
	assign		tiledimage1_out_blur_vector2_out2.x $const3 	%line{255} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out2.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:256
#     vector2 tiledimage1_out_blur_vector2_out3 = vector2(0.0, 0.0);
	assign		$tmp82.x $const3 	%line{256} %argrw{"wr"}
	assign		$tmp82.y $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 250 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp81.x blur_vector2_out_sample_size.x $tmp82.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp81.y blur_vector2_out_sample_size.y $tmp82.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 253 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp80.x geomprop_UV0_out1.x $tmp81.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp80.y geomprop_UV0_out1.y $tmp81.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:256
#     vector2 tiledimage1_out_blur_vector2_out3 = vector2(0.0, 0.0);
	functioncall	$const4 315 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{256} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 257 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp80.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp80.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 260 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 263 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 266 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 313 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp83 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp84 $tmp83 $const11 	%argrw{"wrr"}
	if		$tmp84 272 285 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp85 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp86 $tmp85 $const11 	%argrw{"wrr"}
	if		$tmp86 283 283 	%argrw{"r"}
	lt		$tmp87 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp88 $tmp87 $const11 	%argrw{"wrr"}
	if		$tmp88 278 281 	%argrw{"r"}
	gt		$tmp89 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp90 $tmp89 $const11 	%argrw{"wrr"}
	assign		$tmp88 $tmp90 	%argrw{"wr"}
	neq		$tmp91 $tmp88 $const11 	%argrw{"wrr"}
	assign		$tmp86 $tmp91 	%argrw{"wr"}
	neq		$tmp92 $tmp86 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp84 $tmp92 	%line{25} %argrw{"wr"}
	neq		$tmp93 $tmp84 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp93 287 300 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp94 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp95 $tmp94 $const11 	%argrw{"wrr"}
	if		$tmp95 298 298 	%argrw{"r"}
	lt		$tmp96 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp97 $tmp96 $const11 	%argrw{"wrr"}
	if		$tmp97 293 296 	%argrw{"r"}
	gt		$tmp98 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp99 $tmp98 $const11 	%argrw{"wrr"}
	assign		$tmp97 $tmp99 	%argrw{"wr"}
	neq		$tmp100 $tmp97 $const11 	%argrw{"wrr"}
	assign		$tmp95 $tmp100 	%argrw{"wr"}
	neq		$tmp101 $tmp95 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp93 $tmp101 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp93 304 304 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 308 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out2.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out2.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:257
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(1.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out3);
	assign		tiledimage1_out_blur_vector2_out3.x $const3 	%line{257} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out3.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:258
#     vector2 tiledimage1_out_blur_vector2_out4 = vector2(0.0, 0.0);
	assign		$tmp104.x $const13 	%line{258} %argrw{"wr"}
	assign		$tmp104.y $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 322 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp103.x blur_vector2_out_sample_size.x $tmp104.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp103.y blur_vector2_out_sample_size.y $tmp104.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 325 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp102.x geomprop_UV0_out1.x $tmp103.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp102.y geomprop_UV0_out1.y $tmp103.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:258
#     vector2 tiledimage1_out_blur_vector2_out4 = vector2(0.0, 0.0);
	functioncall	$const4 387 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{258} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 329 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp102.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp102.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 332 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 335 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 338 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 385 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp105 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp106 $tmp105 $const11 	%argrw{"wrr"}
	if		$tmp106 344 357 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp107 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp108 $tmp107 $const11 	%argrw{"wrr"}
	if		$tmp108 355 355 	%argrw{"r"}
	lt		$tmp109 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp110 $tmp109 $const11 	%argrw{"wrr"}
	if		$tmp110 350 353 	%argrw{"r"}
	gt		$tmp111 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp112 $tmp111 $const11 	%argrw{"wrr"}
	assign		$tmp110 $tmp112 	%argrw{"wr"}
	neq		$tmp113 $tmp110 $const11 	%argrw{"wrr"}
	assign		$tmp108 $tmp113 	%argrw{"wr"}
	neq		$tmp114 $tmp108 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp106 $tmp114 	%line{25} %argrw{"wr"}
	neq		$tmp115 $tmp106 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp115 359 372 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp116 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp117 $tmp116 $const11 	%argrw{"wrr"}
	if		$tmp117 370 370 	%argrw{"r"}
	lt		$tmp118 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp119 $tmp118 $const11 	%argrw{"wrr"}
	if		$tmp119 365 368 	%argrw{"r"}
	gt		$tmp120 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp121 $tmp120 $const11 	%argrw{"wrr"}
	assign		$tmp119 $tmp121 	%argrw{"wr"}
	neq		$tmp122 $tmp119 $const11 	%argrw{"wrr"}
	assign		$tmp117 $tmp122 	%argrw{"wr"}
	neq		$tmp123 $tmp117 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp115 $tmp123 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp115 376 376 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 380 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out3.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out3.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:259
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(2.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out4);
	assign		tiledimage1_out_blur_vector2_out4.x $const3 	%line{259} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out4.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:260
#     vector2 tiledimage1_out_blur_vector2_out5 = vector2(0.0, 0.0);
	assign		$tmp126.x $const27 	%line{260} %argrw{"wr"}
	assign		$tmp126.y $const24 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 394 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp125.x blur_vector2_out_sample_size.x $tmp126.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp125.y blur_vector2_out_sample_size.y $tmp126.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 397 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp124.x geomprop_UV0_out1.x $tmp125.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp124.y geomprop_UV0_out1.y $tmp125.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:260
#     vector2 tiledimage1_out_blur_vector2_out5 = vector2(0.0, 0.0);
	functioncall	$const4 459 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{260} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 401 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp124.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp124.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 404 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 407 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 410 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 457 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp127 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp128 $tmp127 $const11 	%argrw{"wrr"}
	if		$tmp128 416 429 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp129 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp130 $tmp129 $const11 	%argrw{"wrr"}
	if		$tmp130 427 427 	%argrw{"r"}
	lt		$tmp131 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp132 $tmp131 $const11 	%argrw{"wrr"}
	if		$tmp132 422 425 	%argrw{"r"}
	gt		$tmp133 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp134 $tmp133 $const11 	%argrw{"wrr"}
	assign		$tmp132 $tmp134 	%argrw{"wr"}
	neq		$tmp135 $tmp132 $const11 	%argrw{"wrr"}
	assign		$tmp130 $tmp135 	%argrw{"wr"}
	neq		$tmp136 $tmp130 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp128 $tmp136 	%line{25} %argrw{"wr"}
	neq		$tmp137 $tmp128 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp137 431 444 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp138 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp139 $tmp138 $const11 	%argrw{"wrr"}
	if		$tmp139 442 442 	%argrw{"r"}
	lt		$tmp140 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp141 $tmp140 $const11 	%argrw{"wrr"}
	if		$tmp141 437 440 	%argrw{"r"}
	gt		$tmp142 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp143 $tmp142 $const11 	%argrw{"wrr"}
	assign		$tmp141 $tmp143 	%argrw{"wr"}
	neq		$tmp144 $tmp141 $const11 	%argrw{"wrr"}
	assign		$tmp139 $tmp144 	%argrw{"wr"}
	neq		$tmp145 $tmp139 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp137 $tmp145 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp137 448 448 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 452 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out4.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out4.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:261
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-2.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out5);
	assign		tiledimage1_out_blur_vector2_out5.x $const3 	%line{261} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out5.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:262
#     vector2 tiledimage1_out_blur_vector2_out6 = vector2(0.0, 0.0);
	assign		$tmp148.x $const24 	%line{262} %argrw{"wr"}
	assign		$tmp148.y $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 466 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp147.x blur_vector2_out_sample_size.x $tmp148.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp147.y blur_vector2_out_sample_size.y $tmp148.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 469 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp146.x geomprop_UV0_out1.x $tmp147.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp146.y geomprop_UV0_out1.y $tmp147.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:262
#     vector2 tiledimage1_out_blur_vector2_out6 = vector2(0.0, 0.0);
	functioncall	$const4 531 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{262} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 473 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp146.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp146.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 476 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 479 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 482 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 529 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp149 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp150 $tmp149 $const11 	%argrw{"wrr"}
	if		$tmp150 488 501 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp151 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp152 $tmp151 $const11 	%argrw{"wrr"}
	if		$tmp152 499 499 	%argrw{"r"}
	lt		$tmp153 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp154 $tmp153 $const11 	%argrw{"wrr"}
	if		$tmp154 494 497 	%argrw{"r"}
	gt		$tmp155 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp156 $tmp155 $const11 	%argrw{"wrr"}
	assign		$tmp154 $tmp156 	%argrw{"wr"}
	neq		$tmp157 $tmp154 $const11 	%argrw{"wrr"}
	assign		$tmp152 $tmp157 	%argrw{"wr"}
	neq		$tmp158 $tmp152 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp150 $tmp158 	%line{25} %argrw{"wr"}
	neq		$tmp159 $tmp150 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp159 503 516 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp160 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp161 $tmp160 $const11 	%argrw{"wrr"}
	if		$tmp161 514 514 	%argrw{"r"}
	lt		$tmp162 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp163 $tmp162 $const11 	%argrw{"wrr"}
	if		$tmp163 509 512 	%argrw{"r"}
	gt		$tmp164 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp165 $tmp164 $const11 	%argrw{"wrr"}
	assign		$tmp163 $tmp165 	%argrw{"wr"}
	neq		$tmp166 $tmp163 $const11 	%argrw{"wrr"}
	assign		$tmp161 $tmp166 	%argrw{"wr"}
	neq		$tmp167 $tmp161 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp159 $tmp167 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp159 520 520 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 524 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out5.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out5.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:263
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-1.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out6);
	assign		tiledimage1_out_blur_vector2_out6.x $const3 	%line{263} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out6.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:264
#     vector2 tiledimage1_out_blur_vector2_out7 = vector2(0.0, 0.0);
	assign		$tmp170.x $const26 	%line{264} %argrw{"wr"}
	assign		$tmp170.y $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 538 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp169.x blur_vector2_out_sample_size.x $tmp170.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp169.y blur_vector2_out_sample_size.y $tmp170.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 541 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp168.x geomprop_UV0_out1.x $tmp169.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp168.y geomprop_UV0_out1.y $tmp169.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:264
#     vector2 tiledimage1_out_blur_vector2_out7 = vector2(0.0, 0.0);
	functioncall	$const4 603 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{264} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 545 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp168.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp168.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 548 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 551 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 554 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 601 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp171 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp172 $tmp171 $const11 	%argrw{"wrr"}
	if		$tmp172 560 573 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp173 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp174 $tmp173 $const11 	%argrw{"wrr"}
	if		$tmp174 571 571 	%argrw{"r"}
	lt		$tmp175 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp176 $tmp175 $const11 	%argrw{"wrr"}
	if		$tmp176 566 569 	%argrw{"r"}
	gt		$tmp177 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp178 $tmp177 $const11 	%argrw{"wrr"}
	assign		$tmp176 $tmp178 	%argrw{"wr"}
	neq		$tmp179 $tmp176 $const11 	%argrw{"wrr"}
	assign		$tmp174 $tmp179 	%argrw{"wr"}
	neq		$tmp180 $tmp174 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp172 $tmp180 	%line{25} %argrw{"wr"}
	neq		$tmp181 $tmp172 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp181 575 588 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp182 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp183 $tmp182 $const11 	%argrw{"wrr"}
	if		$tmp183 586 586 	%argrw{"r"}
	lt		$tmp184 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp185 $tmp184 $const11 	%argrw{"wrr"}
	if		$tmp185 581 584 	%argrw{"r"}
	gt		$tmp186 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp187 $tmp186 $const11 	%argrw{"wrr"}
	assign		$tmp185 $tmp187 	%argrw{"wr"}
	neq		$tmp188 $tmp185 $const11 	%argrw{"wrr"}
	assign		$tmp183 $tmp188 	%argrw{"wr"}
	neq		$tmp189 $tmp183 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp181 $tmp189 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp181 592 592 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 596 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out6.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out6.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:265
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(0.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out7);
	assign		tiledimage1_out_blur_vector2_out7.x $const3 	%line{265} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out7.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:266
#     vector2 tiledimage1_out_blur_vector2_out8 = vector2(0.0, 0.0);
	assign		$tmp192.x $const3 	%line{266} %argrw{"wr"}
	assign		$tmp192.y $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 610 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp191.x blur_vector2_out_sample_size.x $tmp192.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp191.y blur_vector2_out_sample_size.y $tmp192.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 613 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp190.x geomprop_UV0_out1.x $tmp191.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp190.y geomprop_UV0_out1.y $tmp191.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:266
#     vector2 tiledimage1_out_blur_vector2_out8 = vector2(0.0, 0.0);
	functioncall	$const4 675 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{266} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 617 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp190.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp190.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 620 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 623 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 626 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 673 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp193 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp194 $tmp193 $const11 	%argrw{"wrr"}
	if		$tmp194 632 645 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp195 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp196 $tmp195 $const11 	%argrw{"wrr"}
	if		$tmp196 643 643 	%argrw{"r"}
	lt		$tmp197 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp198 $tmp197 $const11 	%argrw{"wrr"}
	if		$tmp198 638 641 	%argrw{"r"}
	gt		$tmp199 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp200 $tmp199 $const11 	%argrw{"wrr"}
	assign		$tmp198 $tmp200 	%argrw{"wr"}
	neq		$tmp201 $tmp198 $const11 	%argrw{"wrr"}
	assign		$tmp196 $tmp201 	%argrw{"wr"}
	neq		$tmp202 $tmp196 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp194 $tmp202 	%line{25} %argrw{"wr"}
	neq		$tmp203 $tmp194 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp203 647 660 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp204 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp205 $tmp204 $const11 	%argrw{"wrr"}
	if		$tmp205 658 658 	%argrw{"r"}
	lt		$tmp206 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp207 $tmp206 $const11 	%argrw{"wrr"}
	if		$tmp207 653 656 	%argrw{"r"}
	gt		$tmp208 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp209 $tmp208 $const11 	%argrw{"wrr"}
	assign		$tmp207 $tmp209 	%argrw{"wr"}
	neq		$tmp210 $tmp207 $const11 	%argrw{"wrr"}
	assign		$tmp205 $tmp210 	%argrw{"wr"}
	neq		$tmp211 $tmp205 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp203 $tmp211 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp203 664 664 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 668 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out7.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out7.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:267
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(1.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out8);
	assign		tiledimage1_out_blur_vector2_out8.x $const3 	%line{267} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out8.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:268
#     vector2 tiledimage1_out_blur_vector2_out9 = vector2(0.0, 0.0);
	assign		$tmp214.x $const13 	%line{268} %argrw{"wr"}
	assign		$tmp214.y $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 682 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp213.x blur_vector2_out_sample_size.x $tmp214.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp213.y blur_vector2_out_sample_size.y $tmp214.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 685 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp212.x geomprop_UV0_out1.x $tmp213.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp212.y geomprop_UV0_out1.y $tmp213.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:268
#     vector2 tiledimage1_out_blur_vector2_out9 = vector2(0.0, 0.0);
	functioncall	$const4 747 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{268} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 689 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp212.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp212.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 692 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 695 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 698 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 745 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp215 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp216 $tmp215 $const11 	%argrw{"wrr"}
	if		$tmp216 704 717 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp217 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp218 $tmp217 $const11 	%argrw{"wrr"}
	if		$tmp218 715 715 	%argrw{"r"}
	lt		$tmp219 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp220 $tmp219 $const11 	%argrw{"wrr"}
	if		$tmp220 710 713 	%argrw{"r"}
	gt		$tmp221 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp222 $tmp221 $const11 	%argrw{"wrr"}
	assign		$tmp220 $tmp222 	%argrw{"wr"}
	neq		$tmp223 $tmp220 $const11 	%argrw{"wrr"}
	assign		$tmp218 $tmp223 	%argrw{"wr"}
	neq		$tmp224 $tmp218 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp216 $tmp224 	%line{25} %argrw{"wr"}
	neq		$tmp225 $tmp216 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp225 719 732 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp226 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp227 $tmp226 $const11 	%argrw{"wrr"}
	if		$tmp227 730 730 	%argrw{"r"}
	lt		$tmp228 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp229 $tmp228 $const11 	%argrw{"wrr"}
	if		$tmp229 725 728 	%argrw{"r"}
	gt		$tmp230 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp231 $tmp230 $const11 	%argrw{"wrr"}
	assign		$tmp229 $tmp231 	%argrw{"wr"}
	neq		$tmp232 $tmp229 $const11 	%argrw{"wrr"}
	assign		$tmp227 $tmp232 	%argrw{"wr"}
	neq		$tmp233 $tmp227 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp225 $tmp233 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp225 736 736 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 740 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out8.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out8.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:269
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(2.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out9);
	assign		tiledimage1_out_blur_vector2_out9.x $const3 	%line{269} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out9.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:270
#     vector2 tiledimage1_out_blur_vector2_out10 = vector2(0.0, 0.0);
	assign		$tmp236.x $const27 	%line{270} %argrw{"wr"}
	assign		$tmp236.y $const26 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 754 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp235.x blur_vector2_out_sample_size.x $tmp236.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp235.y blur_vector2_out_sample_size.y $tmp236.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 757 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp234.x geomprop_UV0_out1.x $tmp235.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp234.y geomprop_UV0_out1.y $tmp235.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:270
#     vector2 tiledimage1_out_blur_vector2_out10 = vector2(0.0, 0.0);
	functioncall	$const4 819 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{270} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 761 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp234.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp234.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 764 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 767 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 770 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 817 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp237 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp238 $tmp237 $const11 	%argrw{"wrr"}
	if		$tmp238 776 789 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp239 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp240 $tmp239 $const11 	%argrw{"wrr"}
	if		$tmp240 787 787 	%argrw{"r"}
	lt		$tmp241 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp242 $tmp241 $const11 	%argrw{"wrr"}
	if		$tmp242 782 785 	%argrw{"r"}
	gt		$tmp243 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp244 $tmp243 $const11 	%argrw{"wrr"}
	assign		$tmp242 $tmp244 	%argrw{"wr"}
	neq		$tmp245 $tmp242 $const11 	%argrw{"wrr"}
	assign		$tmp240 $tmp245 	%argrw{"wr"}
	neq		$tmp246 $tmp240 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp238 $tmp246 	%line{25} %argrw{"wr"}
	neq		$tmp247 $tmp238 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp247 791 804 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp248 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp249 $tmp248 $const11 	%argrw{"wrr"}
	if		$tmp249 802 802 	%argrw{"r"}
	lt		$tmp250 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp251 $tmp250 $const11 	%argrw{"wrr"}
	if		$tmp251 797 800 	%argrw{"r"}
	gt		$tmp252 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp253 $tmp252 $const11 	%argrw{"wrr"}
	assign		$tmp251 $tmp253 	%argrw{"wr"}
	neq		$tmp254 $tmp251 $const11 	%argrw{"wrr"}
	assign		$tmp249 $tmp254 	%argrw{"wr"}
	neq		$tmp255 $tmp249 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp247 $tmp255 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp247 808 808 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 812 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out9.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out9.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:271
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-2.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out10);
	assign		tiledimage1_out_blur_vector2_out10.x $const3 	%line{271} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out10.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:272
#     vector2 tiledimage1_out_blur_vector2_out11 = vector2(0.0, 0.0);
	assign		$tmp258.x $const24 	%line{272} %argrw{"wr"}
	assign		$tmp258.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 826 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp257.x blur_vector2_out_sample_size.x $tmp258.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp257.y blur_vector2_out_sample_size.y $tmp258.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 829 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp256.x geomprop_UV0_out1.x $tmp257.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp256.y geomprop_UV0_out1.y $tmp257.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:272
#     vector2 tiledimage1_out_blur_vector2_out11 = vector2(0.0, 0.0);
	functioncall	$const4 891 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{272} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 833 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp256.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp256.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 836 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 839 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 842 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 889 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp259 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp260 $tmp259 $const11 	%argrw{"wrr"}
	if		$tmp260 848 861 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp261 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp262 $tmp261 $const11 	%argrw{"wrr"}
	if		$tmp262 859 859 	%argrw{"r"}
	lt		$tmp263 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp264 $tmp263 $const11 	%argrw{"wrr"}
	if		$tmp264 854 857 	%argrw{"r"}
	gt		$tmp265 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp266 $tmp265 $const11 	%argrw{"wrr"}
	assign		$tmp264 $tmp266 	%argrw{"wr"}
	neq		$tmp267 $tmp264 $const11 	%argrw{"wrr"}
	assign		$tmp262 $tmp267 	%argrw{"wr"}
	neq		$tmp268 $tmp262 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp260 $tmp268 	%line{25} %argrw{"wr"}
	neq		$tmp269 $tmp260 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp269 863 876 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp270 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp271 $tmp270 $const11 	%argrw{"wrr"}
	if		$tmp271 874 874 	%argrw{"r"}
	lt		$tmp272 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp273 $tmp272 $const11 	%argrw{"wrr"}
	if		$tmp273 869 872 	%argrw{"r"}
	gt		$tmp274 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp275 $tmp274 $const11 	%argrw{"wrr"}
	assign		$tmp273 $tmp275 	%argrw{"wr"}
	neq		$tmp276 $tmp273 $const11 	%argrw{"wrr"}
	assign		$tmp271 $tmp276 	%argrw{"wr"}
	neq		$tmp277 $tmp271 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp269 $tmp277 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp269 880 880 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 884 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out10.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out10.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:273
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-1.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out11);
	assign		tiledimage1_out_blur_vector2_out11.x $const3 	%line{273} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out11.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:274
#     vector2 tiledimage1_out_blur_vector2_out12 = vector2(0.0, 0.0);
	assign		$tmp280.x $const26 	%line{274} %argrw{"wr"}
	assign		$tmp280.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 898 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp279.x blur_vector2_out_sample_size.x $tmp280.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp279.y blur_vector2_out_sample_size.y $tmp280.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 901 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp278.x geomprop_UV0_out1.x $tmp279.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp278.y geomprop_UV0_out1.y $tmp279.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:274
#     vector2 tiledimage1_out_blur_vector2_out12 = vector2(0.0, 0.0);
	functioncall	$const4 963 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 905 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp278.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp278.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 908 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 911 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 914 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 961 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp281 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp282 $tmp281 $const11 	%argrw{"wrr"}
	if		$tmp282 920 933 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp283 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp284 $tmp283 $const11 	%argrw{"wrr"}
	if		$tmp284 931 931 	%argrw{"r"}
	lt		$tmp285 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp286 $tmp285 $const11 	%argrw{"wrr"}
	if		$tmp286 926 929 	%argrw{"r"}
	gt		$tmp287 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp288 $tmp287 $const11 	%argrw{"wrr"}
	assign		$tmp286 $tmp288 	%argrw{"wr"}
	neq		$tmp289 $tmp286 $const11 	%argrw{"wrr"}
	assign		$tmp284 $tmp289 	%argrw{"wr"}
	neq		$tmp290 $tmp284 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp282 $tmp290 	%line{25} %argrw{"wr"}
	neq		$tmp291 $tmp282 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp291 935 948 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp292 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp293 $tmp292 $const11 	%argrw{"wrr"}
	if		$tmp293 946 946 	%argrw{"r"}
	lt		$tmp294 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp295 $tmp294 $const11 	%argrw{"wrr"}
	if		$tmp295 941 944 	%argrw{"r"}
	gt		$tmp296 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp297 $tmp296 $const11 	%argrw{"wrr"}
	assign		$tmp295 $tmp297 	%argrw{"wr"}
	neq		$tmp298 $tmp295 $const11 	%argrw{"wrr"}
	assign		$tmp293 $tmp298 	%argrw{"wr"}
	neq		$tmp299 $tmp293 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp291 $tmp299 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp291 952 952 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 956 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out11.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out11.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:275
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(0.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out12);
	assign		tiledimage1_out_blur_vector2_out12.x $const3 	%line{275} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out12.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:276
#     vector2 tiledimage1_out_blur_vector2_out13 = vector2(0.0, 0.0);
	assign		$tmp302.x $const3 	%line{276} %argrw{"wr"}
	assign		$tmp302.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 970 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp301.x blur_vector2_out_sample_size.x $tmp302.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp301.y blur_vector2_out_sample_size.y $tmp302.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 973 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp300.x geomprop_UV0_out1.x $tmp301.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp300.y geomprop_UV0_out1.y $tmp301.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:276
#     vector2 tiledimage1_out_blur_vector2_out13 = vector2(0.0, 0.0);
	functioncall	$const4 1035 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{276} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 977 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp300.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp300.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 980 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 983 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 986 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1033 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp303 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp304 $tmp303 $const11 	%argrw{"wrr"}
	if		$tmp304 992 1005 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp305 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp306 $tmp305 $const11 	%argrw{"wrr"}
	if		$tmp306 1003 1003 	%argrw{"r"}
	lt		$tmp307 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp308 $tmp307 $const11 	%argrw{"wrr"}
	if		$tmp308 998 1001 	%argrw{"r"}
	gt		$tmp309 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp310 $tmp309 $const11 	%argrw{"wrr"}
	assign		$tmp308 $tmp310 	%argrw{"wr"}
	neq		$tmp311 $tmp308 $const11 	%argrw{"wrr"}
	assign		$tmp306 $tmp311 	%argrw{"wr"}
	neq		$tmp312 $tmp306 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp304 $tmp312 	%line{25} %argrw{"wr"}
	neq		$tmp313 $tmp304 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp313 1007 1020 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp314 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp315 $tmp314 $const11 	%argrw{"wrr"}
	if		$tmp315 1018 1018 	%argrw{"r"}
	lt		$tmp316 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp317 $tmp316 $const11 	%argrw{"wrr"}
	if		$tmp317 1013 1016 	%argrw{"r"}
	gt		$tmp318 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp319 $tmp318 $const11 	%argrw{"wrr"}
	assign		$tmp317 $tmp319 	%argrw{"wr"}
	neq		$tmp320 $tmp317 $const11 	%argrw{"wrr"}
	assign		$tmp315 $tmp320 	%argrw{"wr"}
	neq		$tmp321 $tmp315 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp313 $tmp321 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp313 1024 1024 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1028 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out12.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out12.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:277
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(1.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out13);
	assign		tiledimage1_out_blur_vector2_out13.x $const3 	%line{277} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out13.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:278
#     vector2 tiledimage1_out_blur_vector2_out14 = vector2(0.0, 0.0);
	assign		$tmp324.x $const13 	%line{278} %argrw{"wr"}
	assign		$tmp324.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1042 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp323.x blur_vector2_out_sample_size.x $tmp324.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp323.y blur_vector2_out_sample_size.y $tmp324.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1045 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp322.x geomprop_UV0_out1.x $tmp323.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp322.y geomprop_UV0_out1.y $tmp323.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:278
#     vector2 tiledimage1_out_blur_vector2_out14 = vector2(0.0, 0.0);
	functioncall	$const4 1107 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1049 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp322.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp322.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1052 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1055 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1058 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1105 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp325 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp326 $tmp325 $const11 	%argrw{"wrr"}
	if		$tmp326 1064 1077 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp327 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp328 $tmp327 $const11 	%argrw{"wrr"}
	if		$tmp328 1075 1075 	%argrw{"r"}
	lt		$tmp329 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp330 $tmp329 $const11 	%argrw{"wrr"}
	if		$tmp330 1070 1073 	%argrw{"r"}
	gt		$tmp331 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp332 $tmp331 $const11 	%argrw{"wrr"}
	assign		$tmp330 $tmp332 	%argrw{"wr"}
	neq		$tmp333 $tmp330 $const11 	%argrw{"wrr"}
	assign		$tmp328 $tmp333 	%argrw{"wr"}
	neq		$tmp334 $tmp328 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp326 $tmp334 	%line{25} %argrw{"wr"}
	neq		$tmp335 $tmp326 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp335 1079 1092 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp336 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp337 $tmp336 $const11 	%argrw{"wrr"}
	if		$tmp337 1090 1090 	%argrw{"r"}
	lt		$tmp338 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp339 $tmp338 $const11 	%argrw{"wrr"}
	if		$tmp339 1085 1088 	%argrw{"r"}
	gt		$tmp340 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp341 $tmp340 $const11 	%argrw{"wrr"}
	assign		$tmp339 $tmp341 	%argrw{"wr"}
	neq		$tmp342 $tmp339 $const11 	%argrw{"wrr"}
	assign		$tmp337 $tmp342 	%argrw{"wr"}
	neq		$tmp343 $tmp337 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp335 $tmp343 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp335 1096 1096 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1100 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out13.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out13.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:279
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(2.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out14);
	assign		tiledimage1_out_blur_vector2_out14.x $const3 	%line{279} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out14.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:280
#     vector2 tiledimage1_out_blur_vector2_out15 = vector2(0.0, 0.0);
	assign		$tmp346.x $const27 	%line{280} %argrw{"wr"}
	assign		$tmp346.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1114 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp345.x blur_vector2_out_sample_size.x $tmp346.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp345.y blur_vector2_out_sample_size.y $tmp346.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1117 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp344.x geomprop_UV0_out1.x $tmp345.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp344.y geomprop_UV0_out1.y $tmp345.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:280
#     vector2 tiledimage1_out_blur_vector2_out15 = vector2(0.0, 0.0);
	functioncall	$const4 1179 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{280} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1121 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp344.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp344.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1124 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1127 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1130 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1177 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp347 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp348 $tmp347 $const11 	%argrw{"wrr"}
	if		$tmp348 1136 1149 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp349 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp350 $tmp349 $const11 	%argrw{"wrr"}
	if		$tmp350 1147 1147 	%argrw{"r"}
	lt		$tmp351 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp352 $tmp351 $const11 	%argrw{"wrr"}
	if		$tmp352 1142 1145 	%argrw{"r"}
	gt		$tmp353 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp354 $tmp353 $const11 	%argrw{"wrr"}
	assign		$tmp352 $tmp354 	%argrw{"wr"}
	neq		$tmp355 $tmp352 $const11 	%argrw{"wrr"}
	assign		$tmp350 $tmp355 	%argrw{"wr"}
	neq		$tmp356 $tmp350 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp348 $tmp356 	%line{25} %argrw{"wr"}
	neq		$tmp357 $tmp348 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp357 1151 1164 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp358 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp359 $tmp358 $const11 	%argrw{"wrr"}
	if		$tmp359 1162 1162 	%argrw{"r"}
	lt		$tmp360 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp361 $tmp360 $const11 	%argrw{"wrr"}
	if		$tmp361 1157 1160 	%argrw{"r"}
	gt		$tmp362 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp363 $tmp362 $const11 	%argrw{"wrr"}
	assign		$tmp361 $tmp363 	%argrw{"wr"}
	neq		$tmp364 $tmp361 $const11 	%argrw{"wrr"}
	assign		$tmp359 $tmp364 	%argrw{"wr"}
	neq		$tmp365 $tmp359 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp357 $tmp365 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp357 1168 1168 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1172 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out14.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out14.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:281
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-2.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out15);
	assign		tiledimage1_out_blur_vector2_out15.x $const3 	%line{281} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out15.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:282
#     vector2 tiledimage1_out_blur_vector2_out16 = vector2(0.0, 0.0);
	assign		$tmp368.x $const24 	%line{282} %argrw{"wr"}
	assign		$tmp368.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1186 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp367.x blur_vector2_out_sample_size.x $tmp368.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp367.y blur_vector2_out_sample_size.y $tmp368.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1189 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp366.x geomprop_UV0_out1.x $tmp367.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp366.y geomprop_UV0_out1.y $tmp367.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:282
#     vector2 tiledimage1_out_blur_vector2_out16 = vector2(0.0, 0.0);
	functioncall	$const4 1251 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1193 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp366.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp366.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1196 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1199 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1202 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1249 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp369 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp370 $tmp369 $const11 	%argrw{"wrr"}
	if		$tmp370 1208 1221 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp371 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp372 $tmp371 $const11 	%argrw{"wrr"}
	if		$tmp372 1219 1219 	%argrw{"r"}
	lt		$tmp373 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp374 $tmp373 $const11 	%argrw{"wrr"}
	if		$tmp374 1214 1217 	%argrw{"r"}
	gt		$tmp375 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp376 $tmp375 $const11 	%argrw{"wrr"}
	assign		$tmp374 $tmp376 	%argrw{"wr"}
	neq		$tmp377 $tmp374 $const11 	%argrw{"wrr"}
	assign		$tmp372 $tmp377 	%argrw{"wr"}
	neq		$tmp378 $tmp372 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp370 $tmp378 	%line{25} %argrw{"wr"}
	neq		$tmp379 $tmp370 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp379 1223 1236 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp380 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp381 $tmp380 $const11 	%argrw{"wrr"}
	if		$tmp381 1234 1234 	%argrw{"r"}
	lt		$tmp382 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp383 $tmp382 $const11 	%argrw{"wrr"}
	if		$tmp383 1229 1232 	%argrw{"r"}
	gt		$tmp384 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp385 $tmp384 $const11 	%argrw{"wrr"}
	assign		$tmp383 $tmp385 	%argrw{"wr"}
	neq		$tmp386 $tmp383 $const11 	%argrw{"wrr"}
	assign		$tmp381 $tmp386 	%argrw{"wr"}
	neq		$tmp387 $tmp381 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp379 $tmp387 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp379 1240 1240 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1244 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out15.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out15.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:283
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-1.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out16);
	assign		tiledimage1_out_blur_vector2_out16.x $const3 	%line{283} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out16.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:284
#     vector2 tiledimage1_out_blur_vector2_out17 = vector2(0.0, 0.0);
	assign		$tmp390.x $const26 	%line{284} %argrw{"wr"}
	assign		$tmp390.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1258 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp389.x blur_vector2_out_sample_size.x $tmp390.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp389.y blur_vector2_out_sample_size.y $tmp390.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1261 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp388.x geomprop_UV0_out1.x $tmp389.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp388.y geomprop_UV0_out1.y $tmp389.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:284
#     vector2 tiledimage1_out_blur_vector2_out17 = vector2(0.0, 0.0);
	functioncall	$const4 1323 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{284} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1265 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp388.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp388.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1268 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1271 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1274 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1321 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp391 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp392 $tmp391 $const11 	%argrw{"wrr"}
	if		$tmp392 1280 1293 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp393 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp394 $tmp393 $const11 	%argrw{"wrr"}
	if		$tmp394 1291 1291 	%argrw{"r"}
	lt		$tmp395 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp396 $tmp395 $const11 	%argrw{"wrr"}
	if		$tmp396 1286 1289 	%argrw{"r"}
	gt		$tmp397 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp398 $tmp397 $const11 	%argrw{"wrr"}
	assign		$tmp396 $tmp398 	%argrw{"wr"}
	neq		$tmp399 $tmp396 $const11 	%argrw{"wrr"}
	assign		$tmp394 $tmp399 	%argrw{"wr"}
	neq		$tmp400 $tmp394 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp392 $tmp400 	%line{25} %argrw{"wr"}
	neq		$tmp401 $tmp392 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp401 1295 1308 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp402 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp403 $tmp402 $const11 	%argrw{"wrr"}
	if		$tmp403 1306 1306 	%argrw{"r"}
	lt		$tmp404 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp405 $tmp404 $const11 	%argrw{"wrr"}
	if		$tmp405 1301 1304 	%argrw{"r"}
	gt		$tmp406 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp407 $tmp406 $const11 	%argrw{"wrr"}
	assign		$tmp405 $tmp407 	%argrw{"wr"}
	neq		$tmp408 $tmp405 $const11 	%argrw{"wrr"}
	assign		$tmp403 $tmp408 	%argrw{"wr"}
	neq		$tmp409 $tmp403 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp401 $tmp409 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp401 1312 1312 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1316 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out16.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out16.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:285
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(0.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out17);
	assign		tiledimage1_out_blur_vector2_out17.x $const3 	%line{285} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out17.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:286
#     vector2 tiledimage1_out_blur_vector2_out18 = vector2(0.0, 0.0);
	assign		$tmp412.x $const3 	%line{286} %argrw{"wr"}
	assign		$tmp412.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1330 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp411.x blur_vector2_out_sample_size.x $tmp412.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp411.y blur_vector2_out_sample_size.y $tmp412.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1333 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp410.x geomprop_UV0_out1.x $tmp411.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp410.y geomprop_UV0_out1.y $tmp411.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:286
#     vector2 tiledimage1_out_blur_vector2_out18 = vector2(0.0, 0.0);
	functioncall	$const4 1395 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{286} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1337 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp410.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp410.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1340 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1343 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1346 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1393 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp413 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp414 $tmp413 $const11 	%argrw{"wrr"}
	if		$tmp414 1352 1365 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp415 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp416 $tmp415 $const11 	%argrw{"wrr"}
	if		$tmp416 1363 1363 	%argrw{"r"}
	lt		$tmp417 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp418 $tmp417 $const11 	%argrw{"wrr"}
	if		$tmp418 1358 1361 	%argrw{"r"}
	gt		$tmp419 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp420 $tmp419 $const11 	%argrw{"wrr"}
	assign		$tmp418 $tmp420 	%argrw{"wr"}
	neq		$tmp421 $tmp418 $const11 	%argrw{"wrr"}
	assign		$tmp416 $tmp421 	%argrw{"wr"}
	neq		$tmp422 $tmp416 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp414 $tmp422 	%line{25} %argrw{"wr"}
	neq		$tmp423 $tmp414 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp423 1367 1380 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp424 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp425 $tmp424 $const11 	%argrw{"wrr"}
	if		$tmp425 1378 1378 	%argrw{"r"}
	lt		$tmp426 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp427 $tmp426 $const11 	%argrw{"wrr"}
	if		$tmp427 1373 1376 	%argrw{"r"}
	gt		$tmp428 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp429 $tmp428 $const11 	%argrw{"wrr"}
	assign		$tmp427 $tmp429 	%argrw{"wr"}
	neq		$tmp430 $tmp427 $const11 	%argrw{"wrr"}
	assign		$tmp425 $tmp430 	%argrw{"wr"}
	neq		$tmp431 $tmp425 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp423 $tmp431 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp423 1384 1384 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1388 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out17.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out17.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:287
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(1.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out18);
	assign		tiledimage1_out_blur_vector2_out18.x $const3 	%line{287} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out18.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:288
#     vector2 tiledimage1_out_blur_vector2_out19 = vector2(0.0, 0.0);
	assign		$tmp434.x $const13 	%line{288} %argrw{"wr"}
	assign		$tmp434.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1402 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp433.x blur_vector2_out_sample_size.x $tmp434.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp433.y blur_vector2_out_sample_size.y $tmp434.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1405 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp432.x geomprop_UV0_out1.x $tmp433.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp432.y geomprop_UV0_out1.y $tmp433.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:288
#     vector2 tiledimage1_out_blur_vector2_out19 = vector2(0.0, 0.0);
	functioncall	$const4 1467 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{288} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1409 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp432.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp432.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1412 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1415 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1418 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1465 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp435 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp436 $tmp435 $const11 	%argrw{"wrr"}
	if		$tmp436 1424 1437 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp437 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp438 $tmp437 $const11 	%argrw{"wrr"}
	if		$tmp438 1435 1435 	%argrw{"r"}
	lt		$tmp439 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp440 $tmp439 $const11 	%argrw{"wrr"}
	if		$tmp440 1430 1433 	%argrw{"r"}
	gt		$tmp441 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp442 $tmp441 $const11 	%argrw{"wrr"}
	assign		$tmp440 $tmp442 	%argrw{"wr"}
	neq		$tmp443 $tmp440 $const11 	%argrw{"wrr"}
	assign		$tmp438 $tmp443 	%argrw{"wr"}
	neq		$tmp444 $tmp438 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp436 $tmp444 	%line{25} %argrw{"wr"}
	neq		$tmp445 $tmp436 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp445 1439 1452 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp446 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp447 $tmp446 $const11 	%argrw{"wrr"}
	if		$tmp447 1450 1450 	%argrw{"r"}
	lt		$tmp448 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp449 $tmp448 $const11 	%argrw{"wrr"}
	if		$tmp449 1445 1448 	%argrw{"r"}
	gt		$tmp450 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp451 $tmp450 $const11 	%argrw{"wrr"}
	assign		$tmp449 $tmp451 	%argrw{"wr"}
	neq		$tmp452 $tmp449 $const11 	%argrw{"wrr"}
	assign		$tmp447 $tmp452 	%argrw{"wr"}
	neq		$tmp453 $tmp447 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp445 $tmp453 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp445 1456 1456 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1460 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out18.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out18.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:289
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(2.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out19);
	assign		tiledimage1_out_blur_vector2_out19.x $const3 	%line{289} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out19.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:290
#     vector2 tiledimage1_out_blur_vector2_out20 = vector2(0.0, 0.0);
	assign		$tmp456.x $const27 	%line{290} %argrw{"wr"}
	assign		$tmp456.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1474 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp455.x blur_vector2_out_sample_size.x $tmp456.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp455.y blur_vector2_out_sample_size.y $tmp456.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1477 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp454.x geomprop_UV0_out1.x $tmp455.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp454.y geomprop_UV0_out1.y $tmp455.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:290
#     vector2 tiledimage1_out_blur_vector2_out20 = vector2(0.0, 0.0);
	functioncall	$const4 1539 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{290} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1481 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp454.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp454.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1484 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1487 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1490 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1537 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp457 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp458 $tmp457 $const11 	%argrw{"wrr"}
	if		$tmp458 1496 1509 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp459 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp460 $tmp459 $const11 	%argrw{"wrr"}
	if		$tmp460 1507 1507 	%argrw{"r"}
	lt		$tmp461 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp462 $tmp461 $const11 	%argrw{"wrr"}
	if		$tmp462 1502 1505 	%argrw{"r"}
	gt		$tmp463 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp464 $tmp463 $const11 	%argrw{"wrr"}
	assign		$tmp462 $tmp464 	%argrw{"wr"}
	neq		$tmp465 $tmp462 $const11 	%argrw{"wrr"}
	assign		$tmp460 $tmp465 	%argrw{"wr"}
	neq		$tmp466 $tmp460 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp458 $tmp466 	%line{25} %argrw{"wr"}
	neq		$tmp467 $tmp458 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp467 1511 1524 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp468 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp469 $tmp468 $const11 	%argrw{"wrr"}
	if		$tmp469 1522 1522 	%argrw{"r"}
	lt		$tmp470 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp471 $tmp470 $const11 	%argrw{"wrr"}
	if		$tmp471 1517 1520 	%argrw{"r"}
	gt		$tmp472 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp473 $tmp472 $const11 	%argrw{"wrr"}
	assign		$tmp471 $tmp473 	%argrw{"wr"}
	neq		$tmp474 $tmp471 $const11 	%argrw{"wrr"}
	assign		$tmp469 $tmp474 	%argrw{"wr"}
	neq		$tmp475 $tmp469 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp467 $tmp475 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp467 1528 1528 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1532 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out19.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out19.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:291
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-2.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out20);
	assign		tiledimage1_out_blur_vector2_out20.x $const3 	%line{291} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out20.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:292
#     vector2 tiledimage1_out_blur_vector2_out21 = vector2(0.0, 0.0);
	assign		$tmp478.x $const24 	%line{292} %argrw{"wr"}
	assign		$tmp478.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1546 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp477.x blur_vector2_out_sample_size.x $tmp478.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp477.y blur_vector2_out_sample_size.y $tmp478.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1549 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp476.x geomprop_UV0_out1.x $tmp477.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp476.y geomprop_UV0_out1.y $tmp477.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:292
#     vector2 tiledimage1_out_blur_vector2_out21 = vector2(0.0, 0.0);
	functioncall	$const4 1611 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{292} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1553 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp476.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp476.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1556 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1559 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1562 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1609 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp479 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp480 $tmp479 $const11 	%argrw{"wrr"}
	if		$tmp480 1568 1581 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp481 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp482 $tmp481 $const11 	%argrw{"wrr"}
	if		$tmp482 1579 1579 	%argrw{"r"}
	lt		$tmp483 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp484 $tmp483 $const11 	%argrw{"wrr"}
	if		$tmp484 1574 1577 	%argrw{"r"}
	gt		$tmp485 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp486 $tmp485 $const11 	%argrw{"wrr"}
	assign		$tmp484 $tmp486 	%argrw{"wr"}
	neq		$tmp487 $tmp484 $const11 	%argrw{"wrr"}
	assign		$tmp482 $tmp487 	%argrw{"wr"}
	neq		$tmp488 $tmp482 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp480 $tmp488 	%line{25} %argrw{"wr"}
	neq		$tmp489 $tmp480 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp489 1583 1596 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp490 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp491 $tmp490 $const11 	%argrw{"wrr"}
	if		$tmp491 1594 1594 	%argrw{"r"}
	lt		$tmp492 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp493 $tmp492 $const11 	%argrw{"wrr"}
	if		$tmp493 1589 1592 	%argrw{"r"}
	gt		$tmp494 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp495 $tmp494 $const11 	%argrw{"wrr"}
	assign		$tmp493 $tmp495 	%argrw{"wr"}
	neq		$tmp496 $tmp493 $const11 	%argrw{"wrr"}
	assign		$tmp491 $tmp496 	%argrw{"wr"}
	neq		$tmp497 $tmp491 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp489 $tmp497 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp489 1600 1600 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1604 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out20.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out20.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:293
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(-1.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out21);
	assign		tiledimage1_out_blur_vector2_out21.x $const3 	%line{293} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out21.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:294
#     vector2 tiledimage1_out_blur_vector2_out22 = vector2(0.0, 0.0);
	assign		$tmp500.x $const26 	%line{294} %argrw{"wr"}
	assign		$tmp500.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1618 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp499.x blur_vector2_out_sample_size.x $tmp500.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp499.y blur_vector2_out_sample_size.y $tmp500.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1621 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp498.x geomprop_UV0_out1.x $tmp499.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp498.y geomprop_UV0_out1.y $tmp499.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:294
#     vector2 tiledimage1_out_blur_vector2_out22 = vector2(0.0, 0.0);
	functioncall	$const4 1683 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1625 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp498.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp498.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1628 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1631 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1634 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1681 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp501 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp502 $tmp501 $const11 	%argrw{"wrr"}
	if		$tmp502 1640 1653 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp503 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp504 $tmp503 $const11 	%argrw{"wrr"}
	if		$tmp504 1651 1651 	%argrw{"r"}
	lt		$tmp505 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp506 $tmp505 $const11 	%argrw{"wrr"}
	if		$tmp506 1646 1649 	%argrw{"r"}
	gt		$tmp507 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp508 $tmp507 $const11 	%argrw{"wrr"}
	assign		$tmp506 $tmp508 	%argrw{"wr"}
	neq		$tmp509 $tmp506 $const11 	%argrw{"wrr"}
	assign		$tmp504 $tmp509 	%argrw{"wr"}
	neq		$tmp510 $tmp504 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp502 $tmp510 	%line{25} %argrw{"wr"}
	neq		$tmp511 $tmp502 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp511 1655 1668 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp512 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp513 $tmp512 $const11 	%argrw{"wrr"}
	if		$tmp513 1666 1666 	%argrw{"r"}
	lt		$tmp514 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp515 $tmp514 $const11 	%argrw{"wrr"}
	if		$tmp515 1661 1664 	%argrw{"r"}
	gt		$tmp516 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp517 $tmp516 $const11 	%argrw{"wrr"}
	assign		$tmp515 $tmp517 	%argrw{"wr"}
	neq		$tmp518 $tmp515 $const11 	%argrw{"wrr"}
	assign		$tmp513 $tmp518 	%argrw{"wr"}
	neq		$tmp519 $tmp513 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp511 $tmp519 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp511 1672 1672 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1676 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out21.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out21.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:295
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(0.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out22);
	assign		tiledimage1_out_blur_vector2_out22.x $const3 	%line{295} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out22.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:296
#     vector2 tiledimage1_out_blur_vector2_out23 = vector2(0.0, 0.0);
	assign		$tmp522.x $const3 	%line{296} %argrw{"wr"}
	assign		$tmp522.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1690 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp521.x blur_vector2_out_sample_size.x $tmp522.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp521.y blur_vector2_out_sample_size.y $tmp522.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1693 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp520.x geomprop_UV0_out1.x $tmp521.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp520.y geomprop_UV0_out1.y $tmp521.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:296
#     vector2 tiledimage1_out_blur_vector2_out23 = vector2(0.0, 0.0);
	functioncall	$const4 1755 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{296} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1697 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp520.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp520.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1700 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1703 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1706 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1753 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp523 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp524 $tmp523 $const11 	%argrw{"wrr"}
	if		$tmp524 1712 1725 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp525 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp526 $tmp525 $const11 	%argrw{"wrr"}
	if		$tmp526 1723 1723 	%argrw{"r"}
	lt		$tmp527 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp528 $tmp527 $const11 	%argrw{"wrr"}
	if		$tmp528 1718 1721 	%argrw{"r"}
	gt		$tmp529 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp530 $tmp529 $const11 	%argrw{"wrr"}
	assign		$tmp528 $tmp530 	%argrw{"wr"}
	neq		$tmp531 $tmp528 $const11 	%argrw{"wrr"}
	assign		$tmp526 $tmp531 	%argrw{"wr"}
	neq		$tmp532 $tmp526 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp524 $tmp532 	%line{25} %argrw{"wr"}
	neq		$tmp533 $tmp524 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp533 1727 1740 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp534 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp535 $tmp534 $const11 	%argrw{"wrr"}
	if		$tmp535 1738 1738 	%argrw{"r"}
	lt		$tmp536 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp537 $tmp536 $const11 	%argrw{"wrr"}
	if		$tmp537 1733 1736 	%argrw{"r"}
	gt		$tmp538 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp539 $tmp538 $const11 	%argrw{"wrr"}
	assign		$tmp537 $tmp539 	%argrw{"wr"}
	neq		$tmp540 $tmp537 $const11 	%argrw{"wrr"}
	assign		$tmp535 $tmp540 	%argrw{"wr"}
	neq		$tmp541 $tmp535 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp533 $tmp541 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp533 1744 1744 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1748 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out22.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out22.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:297
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(1.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out23);
	assign		tiledimage1_out_blur_vector2_out23.x $const3 	%line{297} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out23.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:298
#     vector2 tiledimage1_out_blur_vector2_out24 = vector2(0.0, 0.0);
	assign		$tmp544.x $const13 	%line{298} %argrw{"wr"}
	assign		$tmp544.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1762 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp543.x blur_vector2_out_sample_size.x $tmp544.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp543.y blur_vector2_out_sample_size.y $tmp544.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1765 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp542.x geomprop_UV0_out1.x $tmp543.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp542.y geomprop_UV0_out1.y $tmp543.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:298
#     vector2 tiledimage1_out_blur_vector2_out24 = vector2(0.0, 0.0);
	functioncall	$const4 1827 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{298} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1769 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp542.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp542.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1772 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1775 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1778 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1825 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp545 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp546 $tmp545 $const11 	%argrw{"wrr"}
	if		$tmp546 1784 1797 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp547 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp548 $tmp547 $const11 	%argrw{"wrr"}
	if		$tmp548 1795 1795 	%argrw{"r"}
	lt		$tmp549 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp550 $tmp549 $const11 	%argrw{"wrr"}
	if		$tmp550 1790 1793 	%argrw{"r"}
	gt		$tmp551 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp552 $tmp551 $const11 	%argrw{"wrr"}
	assign		$tmp550 $tmp552 	%argrw{"wr"}
	neq		$tmp553 $tmp550 $const11 	%argrw{"wrr"}
	assign		$tmp548 $tmp553 	%argrw{"wr"}
	neq		$tmp554 $tmp548 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp546 $tmp554 	%line{25} %argrw{"wr"}
	neq		$tmp555 $tmp546 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp555 1799 1812 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp556 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp557 $tmp556 $const11 	%argrw{"wrr"}
	if		$tmp557 1810 1810 	%argrw{"r"}
	lt		$tmp558 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp559 $tmp558 $const11 	%argrw{"wrr"}
	if		$tmp559 1805 1808 	%argrw{"r"}
	gt		$tmp560 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp561 $tmp560 $const11 	%argrw{"wrr"}
	assign		$tmp559 $tmp561 	%argrw{"wr"}
	neq		$tmp562 $tmp559 $const11 	%argrw{"wrr"}
	assign		$tmp557 $tmp562 	%argrw{"wr"}
	neq		$tmp563 $tmp557 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp555 $tmp563 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp555 1816 1816 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1820 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out23.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out23.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:299
#     NG_tiledimage_vector2(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector2_out_sample_size * vector2(2.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector2_out24);
	assign		tiledimage1_out_blur_vector2_out24.x $const3 	%line{299} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out24.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:300
#     vector2 blur_vector2_out_samples[MX_MAX_SAMPLE_COUNT];
	assign		$tmp566.x $const27 	%line{300} %argrw{"wr"}
	assign		$tmp566.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1834 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp565.x blur_vector2_out_sample_size.x $tmp566.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp565.y blur_vector2_out_sample_size.y $tmp566.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1837 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp564.x geomprop_UV0_out1.x $tmp565.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp564.y geomprop_UV0_out1.y $tmp565.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:300
#     vector2 blur_vector2_out_samples[MX_MAX_SAMPLE_COUNT];
	functioncall	$const4 1899 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{300} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1841 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector2_out.x $tmp564.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector2_out.y $tmp564.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const6 1844 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector2_out.x ___672_N_mult_vector2_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector2_out.y ___672_N_mult_vector2_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const7 1847 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector2_out.x ___672_N_sub_vector2_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector2_out.y ___672_N_sub_vector2_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1850 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector2_out.x ___672_N_divtilesize_vector2_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector2_out.y ___672_N_divtilesize_vector2_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:49
#     mx_image_vector2(file, "", default1, N_multtilesize_vector2_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector2_out);
	assign		___672_N_img_vector2_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{49} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:50
#     out = N_img_vector2_out;
	functioncall	$const10 1897 	%line{50} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp567 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp568 $tmp567 $const11 	%argrw{"wrr"}
	if		$tmp568 1856 1869 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp569 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp570 $tmp569 $const11 	%argrw{"wrr"}
	if		$tmp570 1867 1867 	%argrw{"r"}
	lt		$tmp571 ___672_N_multtilesize_vector2_out.x $const3 	%argrw{"wrr"}
	neq		$tmp572 $tmp571 $const11 	%argrw{"wrr"}
	if		$tmp572 1862 1865 	%argrw{"r"}
	gt		$tmp573 ___672_N_multtilesize_vector2_out.x $const13 	%argrw{"wrr"}
	neq		$tmp574 $tmp573 $const11 	%argrw{"wrr"}
	assign		$tmp572 $tmp574 	%argrw{"wr"}
	neq		$tmp575 $tmp572 $const11 	%argrw{"wrr"}
	assign		$tmp570 $tmp575 	%argrw{"wr"}
	neq		$tmp576 $tmp570 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp568 $tmp576 	%line{25} %argrw{"wr"}
	neq		$tmp577 $tmp568 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp577 1871 1884 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:27
#     {
	eq		$tmp578 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp579 $tmp578 $const11 	%argrw{"wrr"}
	if		$tmp579 1882 1882 	%argrw{"r"}
	lt		$tmp580 ___672_N_multtilesize_vector2_out.y $const3 	%argrw{"wrr"}
	neq		$tmp581 $tmp580 $const11 	%argrw{"wrr"}
	if		$tmp581 1877 1880 	%argrw{"r"}
	gt		$tmp582 ___672_N_multtilesize_vector2_out.y $const13 	%argrw{"wrr"}
	neq		$tmp583 $tmp582 $const11 	%argrw{"wrr"}
	assign		$tmp581 $tmp583 	%argrw{"wr"}
	neq		$tmp584 $tmp581 $const11 	%argrw{"wrr"}
	assign		$tmp579 $tmp584 	%argrw{"wr"}
	neq		$tmp585 $tmp579 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp577 $tmp585 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp577 1888 1888 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:29
#         return;
	assign		___672_N_img_vector2_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector2_out.y tiledimage1_default.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y $const3 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const14 1892 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector2_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 $const8 $const16 tiledimage1_filtertype $const17 ___670_missingColor $const18 $const9 $const19 $const9 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:39
#     out.y = rgb[1];
	compref		___672_N_img_vector2_out.x ___670_rgb $const11 	%line{39} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.x ___672_N_img_vector2_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:40
# }
	compref		___672_N_img_vector2_out.y ___670_rgb $const20 	%line{40} %argrw{"wrr"}
	assign		___672_N_img_vector2_out.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:51
# }
	assign		tiledimage1_out_blur_vector2_out24.x ___672_N_img_vector2_out.x 	%line{51} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector2_out24.y ___672_N_img_vector2_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:302
#     blur_vector2_out_samples[1] = tiledimage1_out_blur_vector2_out1;
	aassign		blur_vector2_out_samples.x $const11 tiledimage1_out_blur_vector2_out0.x 	%line{302} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const11 tiledimage1_out_blur_vector2_out0.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:303
#     blur_vector2_out_samples[2] = tiledimage1_out_blur_vector2_out2;
	aassign		blur_vector2_out_samples.x $const20 tiledimage1_out_blur_vector2_out1.x 	%line{303} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const20 tiledimage1_out_blur_vector2_out1.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:304
#     blur_vector2_out_samples[3] = tiledimage1_out_blur_vector2_out3;
	aassign		blur_vector2_out_samples.x $const28 tiledimage1_out_blur_vector2_out2.x 	%line{304} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const28 tiledimage1_out_blur_vector2_out2.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:305
#     blur_vector2_out_samples[4] = tiledimage1_out_blur_vector2_out4;
	aassign		blur_vector2_out_samples.x $const29 tiledimage1_out_blur_vector2_out3.x 	%line{305} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const29 tiledimage1_out_blur_vector2_out3.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:306
#     blur_vector2_out_samples[5] = tiledimage1_out_blur_vector2_out5;
	aassign		blur_vector2_out_samples.x $const30 tiledimage1_out_blur_vector2_out4.x 	%line{306} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const30 tiledimage1_out_blur_vector2_out4.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:307
#     blur_vector2_out_samples[6] = tiledimage1_out_blur_vector2_out6;
	aassign		blur_vector2_out_samples.x $const31 tiledimage1_out_blur_vector2_out5.x 	%line{307} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const31 tiledimage1_out_blur_vector2_out5.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:308
#     blur_vector2_out_samples[7] = tiledimage1_out_blur_vector2_out7;
	aassign		blur_vector2_out_samples.x $const32 tiledimage1_out_blur_vector2_out6.x 	%line{308} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const32 tiledimage1_out_blur_vector2_out6.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:309
#     blur_vector2_out_samples[8] = tiledimage1_out_blur_vector2_out8;
	aassign		blur_vector2_out_samples.x $const33 tiledimage1_out_blur_vector2_out7.x 	%line{309} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const33 tiledimage1_out_blur_vector2_out7.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:310
#     blur_vector2_out_samples[9] = tiledimage1_out_blur_vector2_out9;
	aassign		blur_vector2_out_samples.x $const34 tiledimage1_out_blur_vector2_out8.x 	%line{310} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const34 tiledimage1_out_blur_vector2_out8.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:311
#     blur_vector2_out_samples[10] = tiledimage1_out_blur_vector2_out10;
	aassign		blur_vector2_out_samples.x $const35 tiledimage1_out_blur_vector2_out9.x 	%line{311} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const35 tiledimage1_out_blur_vector2_out9.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:312
#     blur_vector2_out_samples[11] = tiledimage1_out_blur_vector2_out11;
	aassign		blur_vector2_out_samples.x $const36 tiledimage1_out_blur_vector2_out10.x 	%line{312} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const36 tiledimage1_out_blur_vector2_out10.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:313
#     blur_vector2_out_samples[12] = tiledimage1_out_blur_vector2_out12;
	aassign		blur_vector2_out_samples.x $const37 tiledimage1_out_blur_vector2_out11.x 	%line{313} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const37 tiledimage1_out_blur_vector2_out11.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:314
#     blur_vector2_out_samples[13] = tiledimage1_out_blur_vector2_out13;
	aassign		blur_vector2_out_samples.x $const38 tiledimage1_out_blur_vector2_out12.x 	%line{314} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const38 tiledimage1_out_blur_vector2_out12.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:315
#     blur_vector2_out_samples[14] = tiledimage1_out_blur_vector2_out14;
	aassign		blur_vector2_out_samples.x $const39 tiledimage1_out_blur_vector2_out13.x 	%line{315} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const39 tiledimage1_out_blur_vector2_out13.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:316
#     blur_vector2_out_samples[15] = tiledimage1_out_blur_vector2_out15;
	aassign		blur_vector2_out_samples.x $const40 tiledimage1_out_blur_vector2_out14.x 	%line{316} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const40 tiledimage1_out_blur_vector2_out14.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:317
#     blur_vector2_out_samples[16] = tiledimage1_out_blur_vector2_out16;
	aassign		blur_vector2_out_samples.x $const41 tiledimage1_out_blur_vector2_out15.x 	%line{317} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const41 tiledimage1_out_blur_vector2_out15.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:318
#     blur_vector2_out_samples[17] = tiledimage1_out_blur_vector2_out17;
	aassign		blur_vector2_out_samples.x $const42 tiledimage1_out_blur_vector2_out16.x 	%line{318} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const42 tiledimage1_out_blur_vector2_out16.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:319
#     blur_vector2_out_samples[18] = tiledimage1_out_blur_vector2_out18;
	aassign		blur_vector2_out_samples.x $const43 tiledimage1_out_blur_vector2_out17.x 	%line{319} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const43 tiledimage1_out_blur_vector2_out17.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:320
#     blur_vector2_out_samples[19] = tiledimage1_out_blur_vector2_out19;
	aassign		blur_vector2_out_samples.x $const44 tiledimage1_out_blur_vector2_out18.x 	%line{320} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const44 tiledimage1_out_blur_vector2_out18.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:321
#     blur_vector2_out_samples[20] = tiledimage1_out_blur_vector2_out20;
	aassign		blur_vector2_out_samples.x $const45 tiledimage1_out_blur_vector2_out19.x 	%line{321} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const45 tiledimage1_out_blur_vector2_out19.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:322
#     blur_vector2_out_samples[21] = tiledimage1_out_blur_vector2_out21;
	aassign		blur_vector2_out_samples.x $const46 tiledimage1_out_blur_vector2_out20.x 	%line{322} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const46 tiledimage1_out_blur_vector2_out20.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:323
#     blur_vector2_out_samples[22] = tiledimage1_out_blur_vector2_out22;
	aassign		blur_vector2_out_samples.x $const47 tiledimage1_out_blur_vector2_out21.x 	%line{323} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const47 tiledimage1_out_blur_vector2_out21.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:324
#     blur_vector2_out_samples[23] = tiledimage1_out_blur_vector2_out23;
	aassign		blur_vector2_out_samples.x $const48 tiledimage1_out_blur_vector2_out22.x 	%line{324} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const48 tiledimage1_out_blur_vector2_out22.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:325
#     blur_vector2_out_samples[24] = tiledimage1_out_blur_vector2_out24;
	aassign		blur_vector2_out_samples.x $const49 tiledimage1_out_blur_vector2_out23.x 	%line{325} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const49 tiledimage1_out_blur_vector2_out23.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:326
#     vector2 blur_vector2_out;
	aassign		blur_vector2_out_samples.x $const50 tiledimage1_out_blur_vector2_out24.x 	%line{326} %argrw{"wrr"}
	aassign		blur_vector2_out_samples.y $const50 tiledimage1_out_blur_vector2_out24.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:328
#     {
	eq		$tmp586 blur_vector2_filtertype $const51 	%line{328} %argrw{"wrr"}
	if		$tmp586 1975 1999 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:330
#     }
	functioncall	$const53 1975 	%line{330} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:141
#     for (int i=0;  i<sampleCount; i++)
	assign		___685_result.x $const3 	%line{141} %argrw{"wr"}
	assign		___685_result.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:142
#     {
	for		$tmp588 1956 1958 1971 1973 	%line{142} %argrw{"r"}
	assign		___686_i $const11 	%argrw{"wr"}
	lt		$tmp587 ___686_i $const52 	%argrw{"wrr"}
	neq		$tmp588 $tmp587 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:144
#     }
	aref		$tmp590.x blur_vector2_out_samples.x ___686_i 	%line{144} %argrw{"wrr"}
	aref		$tmp590.y blur_vector2_out_samples.y ___686_i 	%argrw{"wrr"}
	add		$tmp591 ___686_i $const36 	%argrw{"wrr"}
	aref		$tmp592 c_gaussian_filter_weights $tmp591 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1968 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp593.x $tmp592 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp593.y $tmp592 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1968 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp589.x $tmp590.x $tmp593.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp589.y $tmp590.y $tmp593.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1971 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___685_result.x ___685_result.x $tmp589.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		___685_result.y ___685_result.y $tmp589.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:142
#     {
	assign		$tmp594 ___686_i 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{142} %argrw{"wr"}
	add		___686_i ___686_i $const20 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:146
# }
	assign		blur_vector2_out.x ___685_result.x 	%line{146} %argrw{"wr"}
	assign		blur_vector2_out.y ___685_result.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:334
#     }
	functioncall	$const53 1999 	%line{334} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:141
#     for (int i=0;  i<sampleCount; i++)
	assign		___685_result.x $const3 	%line{141} %argrw{"wr"}
	assign		___685_result.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:142
#     {
	for		$tmp596 1980 1982 1995 1997 	%line{142} %argrw{"r"}
	assign		___686_i $const11 	%argrw{"wr"}
	lt		$tmp595 ___686_i $const52 	%argrw{"wrr"}
	neq		$tmp596 $tmp595 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:144
#     }
	aref		$tmp598.x blur_vector2_out_samples.x ___686_i 	%line{144} %argrw{"wrr"}
	aref		$tmp598.y blur_vector2_out_samples.y ___686_i 	%argrw{"wrr"}
	add		$tmp599 ___686_i $const36 	%argrw{"wrr"}
	aref		$tmp600 c_box_filter_weights $tmp599 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1992 	%line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp601.x $tmp600 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp601.y $tmp600 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const5 1992 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp597.x $tmp598.x $tmp601.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp597.y $tmp598.y $tmp601.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:338
# 
	functioncall	$const25 1995 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{338} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		___685_result.x ___685_result.x $tmp597.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		___685_result.y ___685_result.y $tmp597.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:142
#     {
	assign		$tmp602 ___686_i 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl"} %line{142} %argrw{"wr"}
	add		___686_i ___686_i $const20 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:146
# }
	assign		blur_vector2_out.x ___685_result.x 	%line{146} %argrw{"wr"}
	assign		blur_vector2_out.y ___685_result.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector2_out.osl:336
# }
	assign		out.x blur_vector2_out.x 	%line{336} %argrw{"wr"}
	assign		out.y blur_vector2_out.y 	%argrw{"wr"}
	end
