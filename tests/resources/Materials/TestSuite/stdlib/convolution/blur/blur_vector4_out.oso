OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\convolution\blur\blur_vector4_out.oso
shader blur_vector4_out1	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"out"} 
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage1_file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/grid.png"		%meta{string,widget,"filename"}  %read{2,2} %write{2147483647,-1}
param	string	tiledimage1_file_colorspace	""		%meta{string,widget,"colorspace"}  %read{3,3} %write{2147483647,-1}
param	struct vector4	tiledimage1_default			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector4"} %structfields{x,y,z,w} %structfieldtypes{"ffff"} %structnfields{4}
param	float	tiledimage1_default.x	0		%read{60,2119} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{0}
param	float	tiledimage1_default.y	0		%read{61,2119} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{1}
param	float	tiledimage1_default.z	0		%read{62,2119} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{2}
param	float	tiledimage1_default.w	0		%read{63,2120} %write{2147483647,-1} %mystruct{tiledimage1_default} %mystructfield{3}
param	struct vector2	tiledimage1_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_uvtiling.x	1		%read{12,2066} %write{2147483647,-1} %mystruct{tiledimage1_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage1_uvtiling.y	1		%read{13,2067} %write{2147483647,-1} %mystruct{tiledimage1_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_uvoffset.x	0		%read{15,2069} %write{2147483647,-1} %mystruct{tiledimage1_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage1_uvoffset.y	0		%read{16,2070} %write{2147483647,-1} %mystruct{tiledimage1_uvoffset} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_realworldimagesize.x	1		%read{18,2072} %write{2147483647,-1} %mystruct{tiledimage1_realworldimagesize} %mystructfield{0} %derivs
param	float	tiledimage1_realworldimagesize.y	1		%read{19,2073} %write{2147483647,-1} %mystruct{tiledimage1_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	tiledimage1_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage1_realworldtilesize.x	1		%read{21,2075} %write{2147483647,-1} %mystruct{tiledimage1_realworldtilesize} %mystructfield{0} %derivs
param	float	tiledimage1_realworldtilesize.y	1		%read{22,2076} %write{2147483647,-1} %mystruct{tiledimage1_realworldtilesize} %mystructfield{1} %derivs
param	string	tiledimage1_filtertype	"linear"		%read{70,2124} %write{2147483647,-1}
param	string	tiledimage1_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage1_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage1_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	blur_vector4_size	0.5		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	blur_vector4_filtertype	"box"		%read{2233,2233} %write{2147483647,-1}
oparam	struct vector4	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector4"} %structfields{x,y,z,w} %structfieldtypes{"ffff"} %structnfields{4}
oparam	float	out.x	0		%read{2147483647,-1} %write{2307,2307} %mystruct{out} %mystructfield{0}
oparam	float	out.y	0		%read{2147483647,-1} %write{2308,2308} %mystruct{out} %mystructfield{1}
oparam	float	out.z	0		%read{2147483647,-1} %write{2309,2309} %mystruct{out} %mystructfield{2}
oparam	float	out.w	0		%read{2147483647,-1} %write{2310,2310} %mystruct{out} %mystructfield{3}
global	float	u	%read{4,4} %write{2147483647,-1} %derivs
global	float	v	%read{5,5} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{70,2124} %write{65,2119}
local	float	___670_missingAlpha	%read{70,2124} %write{66,2120}
local	float	___670_st.x	%read{70,2124} %write{68,2122} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{70,2124} %write{69,2123} %mystruct{___670_st} %mystructfield{1} %derivs
local	float	___670_alpha	%read{74,2128} %write{70,2124}
local	color	___670_rgb	%read{71,2127} %write{70,2124}
local	float	___672_N_mult_vector4_out.x	%read{15,2069} %write{12,2066} %mystruct{___672_N_mult_vector4_out} %mystructfield{0} %derivs
local	float	___672_N_mult_vector4_out.y	%read{16,2070} %write{13,2067} %mystruct{___672_N_mult_vector4_out} %mystructfield{1} %derivs
local	float	___672_N_sub_vector4_out.x	%read{18,2072} %write{15,2069} %mystruct{___672_N_sub_vector4_out} %mystructfield{0} %derivs
local	float	___672_N_sub_vector4_out.y	%read{19,2073} %write{16,2070} %mystruct{___672_N_sub_vector4_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_vector4_out.x	%read{21,2075} %write{18,2072} %mystruct{___672_N_divtilesize_vector4_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_vector4_out.y	%read{22,2076} %write{19,2073} %mystruct{___672_N_divtilesize_vector4_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_vector4_out.x	%read{34,2122} %write{21,2075} %mystruct{___672_N_multtilesize_vector4_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_vector4_out.y	%read{49,2123} %write{22,2076} %mystruct{___672_N_multtilesize_vector4_out} %mystructfield{1} %derivs
local	float	___672_N_img_vector4_out.x	%read{75,2129} %write{23,2125} %mystruct{___672_N_img_vector4_out} %mystructfield{0}
local	float	___672_N_img_vector4_out.y	%read{76,2130} %write{24,2126} %mystruct{___672_N_img_vector4_out} %mystructfield{1}
local	float	___672_N_img_vector4_out.z	%read{77,2131} %write{25,2127} %mystruct{___672_N_img_vector4_out} %mystructfield{2}
local	float	___672_N_img_vector4_out.w	%read{78,2132} %write{26,2128} %mystruct{___672_N_img_vector4_out} %mystructfield{3}
local	vector	___673_derivUVx	%read{86,91} %write{82,82} %derivs
local	vector	___673_derivUVy	%read{88,93} %write{85,85} %derivs
local	float	___673_derivX	%read{96,96} %write{90,90} %derivs
local	float	___673_derivY	%read{101,101} %write{95,95} %derivs
local	float	___673_sampleSizeU	%read{98,106} %write{97,100} %derivs
local	float	___673_sampleSizeV	%read{103,107} %write{102,105} %derivs
local	float	___691_result.x	%read{2242,2303} %write{2236,2302} %mystruct{___691_result} %mystructfield{0}
local	float	___691_result.y	%read{2242,2304} %write{2237,2302} %mystruct{___691_result} %mystructfield{1}
local	float	___691_result.z	%read{2242,2305} %write{2238,2302} %mystruct{___691_result} %mystructfield{2}
local	float	___691_result.w	%read{2242,2306} %write{2239,2302} %mystruct{___691_result} %mystructfield{3}
local	int	___692_i	%read{2242,2302} %write{2241,2302}
local	float[84]	c_box_filter_weights	%read{2278,2302} %write{0,0}
local	float[84]	c_gaussian_filter_weights	%read{2242,2266} %write{1,1}
local	string	tiledimage1_file_.filename	%read{28,2124} %write{2,2} %mystruct{tiledimage1_file_} %mystructfield{0}
local	string	tiledimage1_file_.colorspace	%read{2147483647,-1} %write{3,3} %mystruct{tiledimage1_file_} %mystructfield{1}
local	float	geomprop_UV0_out1.x	%read{12,2062} %write{4,4} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{13,2063} %write{5,5} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage1_out.x	%read{2147483647,-1} %write{6,75} %mystruct{tiledimage1_out} %mystructfield{0}
local	float	tiledimage1_out.y	%read{2147483647,-1} %write{7,76} %mystruct{tiledimage1_out} %mystructfield{1}
local	float	tiledimage1_out.z	%read{2147483647,-1} %write{8,77} %mystruct{tiledimage1_out} %mystructfield{2}
local	float	tiledimage1_out.w	%read{2147483647,-1} %write{9,78} %mystruct{tiledimage1_out} %mystructfield{3}
local	float	blur_vector4_out_sample_size.x	%read{115,2059} %write{106,106} %mystruct{blur_vector4_out_sample_size} %mystructfield{0} %derivs
local	float	blur_vector4_out_sample_size.y	%read{116,2060} %write{107,107} %mystruct{blur_vector4_out_sample_size} %mystructfield{1} %derivs
local	float	tiledimage1_out_blur_vector4_out0.x	%read{2133,2133} %write{108,185} %mystruct{tiledimage1_out_blur_vector4_out0} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out0.y	%read{2134,2134} %write{109,186} %mystruct{tiledimage1_out_blur_vector4_out0} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out0.z	%read{2135,2135} %write{110,187} %mystruct{tiledimage1_out_blur_vector4_out0} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out0.w	%read{2136,2136} %write{111,188} %mystruct{tiledimage1_out_blur_vector4_out0} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out1.x	%read{2137,2137} %write{189,266} %mystruct{tiledimage1_out_blur_vector4_out1} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out1.y	%read{2138,2138} %write{190,267} %mystruct{tiledimage1_out_blur_vector4_out1} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out1.z	%read{2139,2139} %write{191,268} %mystruct{tiledimage1_out_blur_vector4_out1} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out1.w	%read{2140,2140} %write{192,269} %mystruct{tiledimage1_out_blur_vector4_out1} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out2.x	%read{2141,2141} %write{270,347} %mystruct{tiledimage1_out_blur_vector4_out2} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out2.y	%read{2142,2142} %write{271,348} %mystruct{tiledimage1_out_blur_vector4_out2} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out2.z	%read{2143,2143} %write{272,349} %mystruct{tiledimage1_out_blur_vector4_out2} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out2.w	%read{2144,2144} %write{273,350} %mystruct{tiledimage1_out_blur_vector4_out2} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out3.x	%read{2145,2145} %write{351,428} %mystruct{tiledimage1_out_blur_vector4_out3} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out3.y	%read{2146,2146} %write{352,429} %mystruct{tiledimage1_out_blur_vector4_out3} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out3.z	%read{2147,2147} %write{353,430} %mystruct{tiledimage1_out_blur_vector4_out3} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out3.w	%read{2148,2148} %write{354,431} %mystruct{tiledimage1_out_blur_vector4_out3} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out4.x	%read{2149,2149} %write{432,509} %mystruct{tiledimage1_out_blur_vector4_out4} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out4.y	%read{2150,2150} %write{433,510} %mystruct{tiledimage1_out_blur_vector4_out4} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out4.z	%read{2151,2151} %write{434,511} %mystruct{tiledimage1_out_blur_vector4_out4} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out4.w	%read{2152,2152} %write{435,512} %mystruct{tiledimage1_out_blur_vector4_out4} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out5.x	%read{2153,2153} %write{513,590} %mystruct{tiledimage1_out_blur_vector4_out5} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out5.y	%read{2154,2154} %write{514,591} %mystruct{tiledimage1_out_blur_vector4_out5} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out5.z	%read{2155,2155} %write{515,592} %mystruct{tiledimage1_out_blur_vector4_out5} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out5.w	%read{2156,2156} %write{516,593} %mystruct{tiledimage1_out_blur_vector4_out5} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out6.x	%read{2157,2157} %write{594,671} %mystruct{tiledimage1_out_blur_vector4_out6} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out6.y	%read{2158,2158} %write{595,672} %mystruct{tiledimage1_out_blur_vector4_out6} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out6.z	%read{2159,2159} %write{596,673} %mystruct{tiledimage1_out_blur_vector4_out6} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out6.w	%read{2160,2160} %write{597,674} %mystruct{tiledimage1_out_blur_vector4_out6} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out7.x	%read{2161,2161} %write{675,752} %mystruct{tiledimage1_out_blur_vector4_out7} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out7.y	%read{2162,2162} %write{676,753} %mystruct{tiledimage1_out_blur_vector4_out7} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out7.z	%read{2163,2163} %write{677,754} %mystruct{tiledimage1_out_blur_vector4_out7} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out7.w	%read{2164,2164} %write{678,755} %mystruct{tiledimage1_out_blur_vector4_out7} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out8.x	%read{2165,2165} %write{756,833} %mystruct{tiledimage1_out_blur_vector4_out8} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out8.y	%read{2166,2166} %write{757,834} %mystruct{tiledimage1_out_blur_vector4_out8} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out8.z	%read{2167,2167} %write{758,835} %mystruct{tiledimage1_out_blur_vector4_out8} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out8.w	%read{2168,2168} %write{759,836} %mystruct{tiledimage1_out_blur_vector4_out8} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out9.x	%read{2169,2169} %write{837,914} %mystruct{tiledimage1_out_blur_vector4_out9} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out9.y	%read{2170,2170} %write{838,915} %mystruct{tiledimage1_out_blur_vector4_out9} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out9.z	%read{2171,2171} %write{839,916} %mystruct{tiledimage1_out_blur_vector4_out9} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out9.w	%read{2172,2172} %write{840,917} %mystruct{tiledimage1_out_blur_vector4_out9} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out10.x	%read{2173,2173} %write{918,995} %mystruct{tiledimage1_out_blur_vector4_out10} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out10.y	%read{2174,2174} %write{919,996} %mystruct{tiledimage1_out_blur_vector4_out10} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out10.z	%read{2175,2175} %write{920,997} %mystruct{tiledimage1_out_blur_vector4_out10} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out10.w	%read{2176,2176} %write{921,998} %mystruct{tiledimage1_out_blur_vector4_out10} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out11.x	%read{2177,2177} %write{999,1076} %mystruct{tiledimage1_out_blur_vector4_out11} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out11.y	%read{2178,2178} %write{1000,1077} %mystruct{tiledimage1_out_blur_vector4_out11} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out11.z	%read{2179,2179} %write{1001,1078} %mystruct{tiledimage1_out_blur_vector4_out11} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out11.w	%read{2180,2180} %write{1002,1079} %mystruct{tiledimage1_out_blur_vector4_out11} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out12.x	%read{2181,2181} %write{1080,1157} %mystruct{tiledimage1_out_blur_vector4_out12} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out12.y	%read{2182,2182} %write{1081,1158} %mystruct{tiledimage1_out_blur_vector4_out12} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out12.z	%read{2183,2183} %write{1082,1159} %mystruct{tiledimage1_out_blur_vector4_out12} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out12.w	%read{2184,2184} %write{1083,1160} %mystruct{tiledimage1_out_blur_vector4_out12} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out13.x	%read{2185,2185} %write{1161,1238} %mystruct{tiledimage1_out_blur_vector4_out13} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out13.y	%read{2186,2186} %write{1162,1239} %mystruct{tiledimage1_out_blur_vector4_out13} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out13.z	%read{2187,2187} %write{1163,1240} %mystruct{tiledimage1_out_blur_vector4_out13} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out13.w	%read{2188,2188} %write{1164,1241} %mystruct{tiledimage1_out_blur_vector4_out13} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out14.x	%read{2189,2189} %write{1242,1319} %mystruct{tiledimage1_out_blur_vector4_out14} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out14.y	%read{2190,2190} %write{1243,1320} %mystruct{tiledimage1_out_blur_vector4_out14} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out14.z	%read{2191,2191} %write{1244,1321} %mystruct{tiledimage1_out_blur_vector4_out14} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out14.w	%read{2192,2192} %write{1245,1322} %mystruct{tiledimage1_out_blur_vector4_out14} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out15.x	%read{2193,2193} %write{1323,1400} %mystruct{tiledimage1_out_blur_vector4_out15} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out15.y	%read{2194,2194} %write{1324,1401} %mystruct{tiledimage1_out_blur_vector4_out15} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out15.z	%read{2195,2195} %write{1325,1402} %mystruct{tiledimage1_out_blur_vector4_out15} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out15.w	%read{2196,2196} %write{1326,1403} %mystruct{tiledimage1_out_blur_vector4_out15} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out16.x	%read{2197,2197} %write{1404,1481} %mystruct{tiledimage1_out_blur_vector4_out16} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out16.y	%read{2198,2198} %write{1405,1482} %mystruct{tiledimage1_out_blur_vector4_out16} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out16.z	%read{2199,2199} %write{1406,1483} %mystruct{tiledimage1_out_blur_vector4_out16} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out16.w	%read{2200,2200} %write{1407,1484} %mystruct{tiledimage1_out_blur_vector4_out16} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out17.x	%read{2201,2201} %write{1485,1562} %mystruct{tiledimage1_out_blur_vector4_out17} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out17.y	%read{2202,2202} %write{1486,1563} %mystruct{tiledimage1_out_blur_vector4_out17} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out17.z	%read{2203,2203} %write{1487,1564} %mystruct{tiledimage1_out_blur_vector4_out17} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out17.w	%read{2204,2204} %write{1488,1565} %mystruct{tiledimage1_out_blur_vector4_out17} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out18.x	%read{2205,2205} %write{1566,1643} %mystruct{tiledimage1_out_blur_vector4_out18} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out18.y	%read{2206,2206} %write{1567,1644} %mystruct{tiledimage1_out_blur_vector4_out18} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out18.z	%read{2207,2207} %write{1568,1645} %mystruct{tiledimage1_out_blur_vector4_out18} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out18.w	%read{2208,2208} %write{1569,1646} %mystruct{tiledimage1_out_blur_vector4_out18} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out19.x	%read{2209,2209} %write{1647,1724} %mystruct{tiledimage1_out_blur_vector4_out19} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out19.y	%read{2210,2210} %write{1648,1725} %mystruct{tiledimage1_out_blur_vector4_out19} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out19.z	%read{2211,2211} %write{1649,1726} %mystruct{tiledimage1_out_blur_vector4_out19} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out19.w	%read{2212,2212} %write{1650,1727} %mystruct{tiledimage1_out_blur_vector4_out19} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out20.x	%read{2213,2213} %write{1728,1805} %mystruct{tiledimage1_out_blur_vector4_out20} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out20.y	%read{2214,2214} %write{1729,1806} %mystruct{tiledimage1_out_blur_vector4_out20} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out20.z	%read{2215,2215} %write{1730,1807} %mystruct{tiledimage1_out_blur_vector4_out20} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out20.w	%read{2216,2216} %write{1731,1808} %mystruct{tiledimage1_out_blur_vector4_out20} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out21.x	%read{2217,2217} %write{1809,1886} %mystruct{tiledimage1_out_blur_vector4_out21} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out21.y	%read{2218,2218} %write{1810,1887} %mystruct{tiledimage1_out_blur_vector4_out21} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out21.z	%read{2219,2219} %write{1811,1888} %mystruct{tiledimage1_out_blur_vector4_out21} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out21.w	%read{2220,2220} %write{1812,1889} %mystruct{tiledimage1_out_blur_vector4_out21} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out22.x	%read{2221,2221} %write{1890,1967} %mystruct{tiledimage1_out_blur_vector4_out22} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out22.y	%read{2222,2222} %write{1891,1968} %mystruct{tiledimage1_out_blur_vector4_out22} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out22.z	%read{2223,2223} %write{1892,1969} %mystruct{tiledimage1_out_blur_vector4_out22} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out22.w	%read{2224,2224} %write{1893,1970} %mystruct{tiledimage1_out_blur_vector4_out22} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out23.x	%read{2225,2225} %write{1971,2048} %mystruct{tiledimage1_out_blur_vector4_out23} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out23.y	%read{2226,2226} %write{1972,2049} %mystruct{tiledimage1_out_blur_vector4_out23} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out23.z	%read{2227,2227} %write{1973,2050} %mystruct{tiledimage1_out_blur_vector4_out23} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out23.w	%read{2228,2228} %write{1974,2051} %mystruct{tiledimage1_out_blur_vector4_out23} %mystructfield{3}
local	float	tiledimage1_out_blur_vector4_out24.x	%read{2229,2229} %write{2052,2129} %mystruct{tiledimage1_out_blur_vector4_out24} %mystructfield{0}
local	float	tiledimage1_out_blur_vector4_out24.y	%read{2230,2230} %write{2053,2130} %mystruct{tiledimage1_out_blur_vector4_out24} %mystructfield{1}
local	float	tiledimage1_out_blur_vector4_out24.z	%read{2231,2231} %write{2054,2131} %mystruct{tiledimage1_out_blur_vector4_out24} %mystructfield{2}
local	float	tiledimage1_out_blur_vector4_out24.w	%read{2232,2232} %write{2055,2132} %mystruct{tiledimage1_out_blur_vector4_out24} %mystructfield{3}
local	float[49]	blur_vector4_out_samples.x	%read{2242,2302} %write{2133,2229} %mystruct{blur_vector4_out_samples} %mystructfield{0}
local	float[49]	blur_vector4_out_samples.y	%read{2242,2302} %write{2134,2230} %mystruct{blur_vector4_out_samples} %mystructfield{1}
local	float[49]	blur_vector4_out_samples.z	%read{2242,2302} %write{2135,2231} %mystruct{blur_vector4_out_samples} %mystructfield{2}
local	float[49]	blur_vector4_out_samples.w	%read{2242,2302} %write{2136,2232} %mystruct{blur_vector4_out_samples} %mystructfield{3}
local	float	blur_vector4_out.x	%read{2307,2307} %write{2267,2303} %mystruct{blur_vector4_out} %mystructfield{0}
local	float	blur_vector4_out.y	%read{2308,2308} %write{2268,2304} %mystruct{blur_vector4_out} %mystructfield{1}
local	float	blur_vector4_out.z	%read{2309,2309} %write{2269,2305} %mystruct{blur_vector4_out} %mystructfield{2}
local	float	blur_vector4_out.w	%read{2310,2310} %write{2270,2306} %mystruct{blur_vector4_out} %mystructfield{3}
const	float[84]	$const1	1 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 0.020408 		%read{0,0} %write{2147483647,-1}
const	float[84]	$const2	1 0.077847 0.123317 0.077847 0.123317 0.195346 0.123317 0.077847 0.123317 0.077847 0.003765 0.015019 0.023792 0.015019 0.003765 0.015019 0.059912 0.094907 0.059912 0.015019 0.023792 0.094907 0.150342 0.094907 0.023792 0.015019 0.059912 0.094907 0.059912 0.015019 0.003765 0.015019 0.023792 0.015019 0.003765 3.6e-05 0.000363 0.001446 0.002291 0.001446 0.000363 3.6e-05 0.000363 0.003676 0.014662 0.023226 0.014662 0.003676 0.000363 0.001446 0.014662 0.058488 0.092651 0.058488 0.014662 0.001446 0.002291 0.023226 0.092651 0.146768 0.092651 0.023226 0.002291 0.001446 0.014662 0.058488 0.092651 0.058488 0.014662 0.001446 0.000363 0.003676 0.014662 0.023226 0.014662 0.003676 0.000363 3.6e-05 0.000363 0.001446 0.002291 0.001446 0.000363 3.6e-05 		%read{1,1} %write{2147483647,-1}
const	float	$const3	0		%read{6,2275} %write{2147483647,-1}
const	string	$const4	"NG_tiledimage_vector4"		%read{10,2064} %write{2147483647,-1}
const	string	$const5	"__operator__mul__"		%read{11,2291} %write{2147483647,-1}
const	string	$const6	"__operator__sub__"		%read{14,2068} %write{2147483647,-1}
const	string	$const7	"__operator__div__"		%read{17,2071} %write{2147483647,-1}
const	string	$const8	""		%read{28,2124} %write{2147483647,-1}
const	string	$const9	"periodic"		%read{31,2124} %write{2147483647,-1}
const	string	$const10	"mx_image_vector4"		%read{27,2081} %write{2147483647,-1}
temp	int	$tmp1	%read{29,29} %write{28,28}
temp	int	$tmp2	%read{30,44} %write{29,43}
const	int	$const11	0		%read{29,2279} %write{2147483647,-1}
const	string	$const12	"constant"		%read{31,2100} %write{2147483647,-1}
temp	int	$tmp3	%read{32,32} %write{31,31}
temp	int	$tmp4	%read{33,42} %write{32,41}
temp	int	$tmp5	%read{35,35} %write{34,34}
temp	int	$tmp6	%read{36,40} %write{35,39}
const	float	$const13	1		%read{37,2106} %write{2147483647,-1}
temp	int	$tmp7	%read{38,38} %write{37,37}
temp	int	$tmp8	%read{39,39} %write{38,38}
temp	int	$tmp9	%read{41,41} %write{40,40}
temp	int	$tmp10	%read{43,43} %write{42,42}
temp	int	$tmp11	%read{45,59} %write{44,58}
temp	int	$tmp12	%read{47,47} %write{46,46}
temp	int	$tmp13	%read{48,57} %write{47,56}
temp	int	$tmp14	%read{50,50} %write{49,49}
temp	int	$tmp15	%read{51,55} %write{50,54}
temp	int	$tmp16	%read{53,53} %write{52,52}
temp	int	$tmp17	%read{54,54} %write{53,53}
temp	int	$tmp18	%read{56,56} %write{55,55}
temp	int	$tmp19	%read{58,58} %write{57,57}
const	string	$const14	"mx_transform_uv"		%read{67,2121} %write{2147483647,-1}
const	string	$const15	"alpha"		%read{70,2124} %write{2147483647,-1}
const	string	$const16	"subimage"		%read{70,2124} %write{2147483647,-1}
const	string	$const17	"interp"		%read{70,2124} %write{2147483647,-1}
const	string	$const18	"missingcolor"		%read{70,2124} %write{2147483647,-1}
const	string	$const19	"missingalpha"		%read{70,2124} %write{2147483647,-1}
const	string	$const20	"swrap"		%read{70,2124} %write{2147483647,-1}
const	string	$const21	"twrap"		%read{70,2124} %write{2147483647,-1}
const	int	$const22	1		%read{72,2302} %write{2147483647,-1}
const	int	$const23	2		%read{73,2144} %write{2147483647,-1}
const	string	$const24	"mx_compute_sample_size_uv"		%read{79,79} %write{2147483647,-1}
temp	vector	$tmp20	%read{82,82} %write{81,81} %derivs
temp	vector	$tmp21	%read{81,81} %write{80,80} %derivs
const	float	$const25	0.5		%read{82,85} %write{2147483647,-1}
temp	vector	$tmp22	%read{85,85} %write{84,84} %derivs
temp	vector	$tmp23	%read{84,84} %write{83,83} %derivs
temp	float	$tmp24	%read{90,90} %write{87,87} %derivs
temp	float	$tmp25	%read{87,87} %write{86,86} %derivs
temp	float	$tmp26	%read{90,90} %write{89,89} %derivs
temp	float	$tmp27	%read{89,89} %write{88,88} %derivs
temp	float	$tmp28	%read{95,95} %write{92,92} %derivs
temp	float	$tmp29	%read{92,92} %write{91,91} %derivs
temp	float	$tmp30	%read{95,95} %write{94,94} %derivs
temp	float	$tmp31	%read{94,94} %write{93,93} %derivs
temp	float	$tmp32	%read{97,97} %write{96,96} %derivs
const	float	$const26	1e-05		%read{98,105} %write{2147483647,-1}
temp	int	$tmp33	%read{99,99} %write{98,98}
temp	float	$tmp34	%read{102,102} %write{101,101} %derivs
temp	int	$tmp35	%read{104,104} %write{103,103}
temp	float	$tmp36.x	%read{122,122} %write{118,118} %derivs
temp	float	$tmp36.y	%read{123,123} %write{119,119} %derivs
temp	float	$tmp37.x	%read{118,118} %write{115,115} %derivs
temp	float	$tmp37.y	%read{119,119} %write{116,116} %derivs
temp	float	$tmp38.x	%read{115,115} %write{112,112} %derivs
temp	float	$tmp38.y	%read{116,116} %write{113,113} %derivs
const	float	$const27	-2		%read{112,1732} %write{2147483647,-1}
const	string	$const28	"__operator__add__"		%read{117,2296} %write{2147483647,-1}
temp	int	$tmp39	%read{139,139} %write{138,138}
temp	int	$tmp40	%read{140,154} %write{139,153}
temp	int	$tmp41	%read{142,142} %write{141,141}
temp	int	$tmp42	%read{143,152} %write{142,151}
temp	int	$tmp43	%read{145,145} %write{144,144}
temp	int	$tmp44	%read{146,150} %write{145,149}
temp	int	$tmp45	%read{148,148} %write{147,147}
temp	int	$tmp46	%read{149,149} %write{148,148}
temp	int	$tmp47	%read{151,151} %write{150,150}
temp	int	$tmp48	%read{153,153} %write{152,152}
temp	int	$tmp49	%read{155,169} %write{154,168}
temp	int	$tmp50	%read{157,157} %write{156,156}
temp	int	$tmp51	%read{158,167} %write{157,166}
temp	int	$tmp52	%read{160,160} %write{159,159}
temp	int	$tmp53	%read{161,165} %write{160,164}
temp	int	$tmp54	%read{163,163} %write{162,162}
temp	int	$tmp55	%read{164,164} %write{163,163}
temp	int	$tmp56	%read{166,166} %write{165,165}
temp	int	$tmp57	%read{168,168} %write{167,167}
temp	float	$tmp58.x	%read{203,203} %write{199,199} %derivs
temp	float	$tmp58.y	%read{204,204} %write{200,200} %derivs
temp	float	$tmp59.x	%read{199,199} %write{196,196} %derivs
temp	float	$tmp59.y	%read{200,200} %write{197,197} %derivs
temp	float	$tmp60.x	%read{196,196} %write{193,193} %derivs
temp	float	$tmp60.y	%read{197,197} %write{194,194} %derivs
const	float	$const29	-1		%read{193,1813} %write{2147483647,-1}
temp	int	$tmp61	%read{220,220} %write{219,219}
temp	int	$tmp62	%read{221,235} %write{220,234}
temp	int	$tmp63	%read{223,223} %write{222,222}
temp	int	$tmp64	%read{224,233} %write{223,232}
temp	int	$tmp65	%read{226,226} %write{225,225}
temp	int	$tmp66	%read{227,231} %write{226,230}
temp	int	$tmp67	%read{229,229} %write{228,228}
temp	int	$tmp68	%read{230,230} %write{229,229}
temp	int	$tmp69	%read{232,232} %write{231,231}
temp	int	$tmp70	%read{234,234} %write{233,233}
temp	int	$tmp71	%read{236,250} %write{235,249}
temp	int	$tmp72	%read{238,238} %write{237,237}
temp	int	$tmp73	%read{239,248} %write{238,247}
temp	int	$tmp74	%read{241,241} %write{240,240}
temp	int	$tmp75	%read{242,246} %write{241,245}
temp	int	$tmp76	%read{244,244} %write{243,243}
temp	int	$tmp77	%read{245,245} %write{244,244}
temp	int	$tmp78	%read{247,247} %write{246,246}
temp	int	$tmp79	%read{249,249} %write{248,248}
temp	float	$tmp80.x	%read{284,284} %write{280,280} %derivs
temp	float	$tmp80.y	%read{285,285} %write{281,281} %derivs
temp	float	$tmp81.x	%read{280,280} %write{277,277} %derivs
temp	float	$tmp81.y	%read{281,281} %write{278,278} %derivs
temp	float	$tmp82.x	%read{277,277} %write{274,274} %derivs
temp	float	$tmp82.y	%read{278,278} %write{275,275} %derivs
temp	int	$tmp83	%read{301,301} %write{300,300}
temp	int	$tmp84	%read{302,316} %write{301,315}
temp	int	$tmp85	%read{304,304} %write{303,303}
temp	int	$tmp86	%read{305,314} %write{304,313}
temp	int	$tmp87	%read{307,307} %write{306,306}
temp	int	$tmp88	%read{308,312} %write{307,311}
temp	int	$tmp89	%read{310,310} %write{309,309}
temp	int	$tmp90	%read{311,311} %write{310,310}
temp	int	$tmp91	%read{313,313} %write{312,312}
temp	int	$tmp92	%read{315,315} %write{314,314}
temp	int	$tmp93	%read{317,331} %write{316,330}
temp	int	$tmp94	%read{319,319} %write{318,318}
temp	int	$tmp95	%read{320,329} %write{319,328}
temp	int	$tmp96	%read{322,322} %write{321,321}
temp	int	$tmp97	%read{323,327} %write{322,326}
temp	int	$tmp98	%read{325,325} %write{324,324}
temp	int	$tmp99	%read{326,326} %write{325,325}
temp	int	$tmp100	%read{328,328} %write{327,327}
temp	int	$tmp101	%read{330,330} %write{329,329}
temp	float	$tmp102.x	%read{365,365} %write{361,361} %derivs
temp	float	$tmp102.y	%read{366,366} %write{362,362} %derivs
temp	float	$tmp103.x	%read{361,361} %write{358,358} %derivs
temp	float	$tmp103.y	%read{362,362} %write{359,359} %derivs
temp	float	$tmp104.x	%read{358,358} %write{355,355} %derivs
temp	float	$tmp104.y	%read{359,359} %write{356,356} %derivs
temp	int	$tmp105	%read{382,382} %write{381,381}
temp	int	$tmp106	%read{383,397} %write{382,396}
temp	int	$tmp107	%read{385,385} %write{384,384}
temp	int	$tmp108	%read{386,395} %write{385,394}
temp	int	$tmp109	%read{388,388} %write{387,387}
temp	int	$tmp110	%read{389,393} %write{388,392}
temp	int	$tmp111	%read{391,391} %write{390,390}
temp	int	$tmp112	%read{392,392} %write{391,391}
temp	int	$tmp113	%read{394,394} %write{393,393}
temp	int	$tmp114	%read{396,396} %write{395,395}
temp	int	$tmp115	%read{398,412} %write{397,411}
temp	int	$tmp116	%read{400,400} %write{399,399}
temp	int	$tmp117	%read{401,410} %write{400,409}
temp	int	$tmp118	%read{403,403} %write{402,402}
temp	int	$tmp119	%read{404,408} %write{403,407}
temp	int	$tmp120	%read{406,406} %write{405,405}
temp	int	$tmp121	%read{407,407} %write{406,406}
temp	int	$tmp122	%read{409,409} %write{408,408}
temp	int	$tmp123	%read{411,411} %write{410,410}
temp	float	$tmp124.x	%read{446,446} %write{442,442} %derivs
temp	float	$tmp124.y	%read{447,447} %write{443,443} %derivs
temp	float	$tmp125.x	%read{442,442} %write{439,439} %derivs
temp	float	$tmp125.y	%read{443,443} %write{440,440} %derivs
temp	float	$tmp126.x	%read{439,439} %write{436,436} %derivs
temp	float	$tmp126.y	%read{440,440} %write{437,437} %derivs
const	float	$const30	2		%read{436,2057} %write{2147483647,-1}
temp	int	$tmp127	%read{463,463} %write{462,462}
temp	int	$tmp128	%read{464,478} %write{463,477}
temp	int	$tmp129	%read{466,466} %write{465,465}
temp	int	$tmp130	%read{467,476} %write{466,475}
temp	int	$tmp131	%read{469,469} %write{468,468}
temp	int	$tmp132	%read{470,474} %write{469,473}
temp	int	$tmp133	%read{472,472} %write{471,471}
temp	int	$tmp134	%read{473,473} %write{472,472}
temp	int	$tmp135	%read{475,475} %write{474,474}
temp	int	$tmp136	%read{477,477} %write{476,476}
temp	int	$tmp137	%read{479,493} %write{478,492}
temp	int	$tmp138	%read{481,481} %write{480,480}
temp	int	$tmp139	%read{482,491} %write{481,490}
temp	int	$tmp140	%read{484,484} %write{483,483}
temp	int	$tmp141	%read{485,489} %write{484,488}
temp	int	$tmp142	%read{487,487} %write{486,486}
temp	int	$tmp143	%read{488,488} %write{487,487}
temp	int	$tmp144	%read{490,490} %write{489,489}
temp	int	$tmp145	%read{492,492} %write{491,491}
temp	float	$tmp146.x	%read{527,527} %write{523,523} %derivs
temp	float	$tmp146.y	%read{528,528} %write{524,524} %derivs
temp	float	$tmp147.x	%read{523,523} %write{520,520} %derivs
temp	float	$tmp147.y	%read{524,524} %write{521,521} %derivs
temp	float	$tmp148.x	%read{520,520} %write{517,517} %derivs
temp	float	$tmp148.y	%read{521,521} %write{518,518} %derivs
temp	int	$tmp149	%read{544,544} %write{543,543}
temp	int	$tmp150	%read{545,559} %write{544,558}
temp	int	$tmp151	%read{547,547} %write{546,546}
temp	int	$tmp152	%read{548,557} %write{547,556}
temp	int	$tmp153	%read{550,550} %write{549,549}
temp	int	$tmp154	%read{551,555} %write{550,554}
temp	int	$tmp155	%read{553,553} %write{552,552}
temp	int	$tmp156	%read{554,554} %write{553,553}
temp	int	$tmp157	%read{556,556} %write{555,555}
temp	int	$tmp158	%read{558,558} %write{557,557}
temp	int	$tmp159	%read{560,574} %write{559,573}
temp	int	$tmp160	%read{562,562} %write{561,561}
temp	int	$tmp161	%read{563,572} %write{562,571}
temp	int	$tmp162	%read{565,565} %write{564,564}
temp	int	$tmp163	%read{566,570} %write{565,569}
temp	int	$tmp164	%read{568,568} %write{567,567}
temp	int	$tmp165	%read{569,569} %write{568,568}
temp	int	$tmp166	%read{571,571} %write{570,570}
temp	int	$tmp167	%read{573,573} %write{572,572}
temp	float	$tmp168.x	%read{608,608} %write{604,604} %derivs
temp	float	$tmp168.y	%read{609,609} %write{605,605} %derivs
temp	float	$tmp169.x	%read{604,604} %write{601,601} %derivs
temp	float	$tmp169.y	%read{605,605} %write{602,602} %derivs
temp	float	$tmp170.x	%read{601,601} %write{598,598} %derivs
temp	float	$tmp170.y	%read{602,602} %write{599,599} %derivs
temp	int	$tmp171	%read{625,625} %write{624,624}
temp	int	$tmp172	%read{626,640} %write{625,639}
temp	int	$tmp173	%read{628,628} %write{627,627}
temp	int	$tmp174	%read{629,638} %write{628,637}
temp	int	$tmp175	%read{631,631} %write{630,630}
temp	int	$tmp176	%read{632,636} %write{631,635}
temp	int	$tmp177	%read{634,634} %write{633,633}
temp	int	$tmp178	%read{635,635} %write{634,634}
temp	int	$tmp179	%read{637,637} %write{636,636}
temp	int	$tmp180	%read{639,639} %write{638,638}
temp	int	$tmp181	%read{641,655} %write{640,654}
temp	int	$tmp182	%read{643,643} %write{642,642}
temp	int	$tmp183	%read{644,653} %write{643,652}
temp	int	$tmp184	%read{646,646} %write{645,645}
temp	int	$tmp185	%read{647,651} %write{646,650}
temp	int	$tmp186	%read{649,649} %write{648,648}
temp	int	$tmp187	%read{650,650} %write{649,649}
temp	int	$tmp188	%read{652,652} %write{651,651}
temp	int	$tmp189	%read{654,654} %write{653,653}
temp	float	$tmp190.x	%read{689,689} %write{685,685} %derivs
temp	float	$tmp190.y	%read{690,690} %write{686,686} %derivs
temp	float	$tmp191.x	%read{685,685} %write{682,682} %derivs
temp	float	$tmp191.y	%read{686,686} %write{683,683} %derivs
temp	float	$tmp192.x	%read{682,682} %write{679,679} %derivs
temp	float	$tmp192.y	%read{683,683} %write{680,680} %derivs
temp	int	$tmp193	%read{706,706} %write{705,705}
temp	int	$tmp194	%read{707,721} %write{706,720}
temp	int	$tmp195	%read{709,709} %write{708,708}
temp	int	$tmp196	%read{710,719} %write{709,718}
temp	int	$tmp197	%read{712,712} %write{711,711}
temp	int	$tmp198	%read{713,717} %write{712,716}
temp	int	$tmp199	%read{715,715} %write{714,714}
temp	int	$tmp200	%read{716,716} %write{715,715}
temp	int	$tmp201	%read{718,718} %write{717,717}
temp	int	$tmp202	%read{720,720} %write{719,719}
temp	int	$tmp203	%read{722,736} %write{721,735}
temp	int	$tmp204	%read{724,724} %write{723,723}
temp	int	$tmp205	%read{725,734} %write{724,733}
temp	int	$tmp206	%read{727,727} %write{726,726}
temp	int	$tmp207	%read{728,732} %write{727,731}
temp	int	$tmp208	%read{730,730} %write{729,729}
temp	int	$tmp209	%read{731,731} %write{730,730}
temp	int	$tmp210	%read{733,733} %write{732,732}
temp	int	$tmp211	%read{735,735} %write{734,734}
temp	float	$tmp212.x	%read{770,770} %write{766,766} %derivs
temp	float	$tmp212.y	%read{771,771} %write{767,767} %derivs
temp	float	$tmp213.x	%read{766,766} %write{763,763} %derivs
temp	float	$tmp213.y	%read{767,767} %write{764,764} %derivs
temp	float	$tmp214.x	%read{763,763} %write{760,760} %derivs
temp	float	$tmp214.y	%read{764,764} %write{761,761} %derivs
temp	int	$tmp215	%read{787,787} %write{786,786}
temp	int	$tmp216	%read{788,802} %write{787,801}
temp	int	$tmp217	%read{790,790} %write{789,789}
temp	int	$tmp218	%read{791,800} %write{790,799}
temp	int	$tmp219	%read{793,793} %write{792,792}
temp	int	$tmp220	%read{794,798} %write{793,797}
temp	int	$tmp221	%read{796,796} %write{795,795}
temp	int	$tmp222	%read{797,797} %write{796,796}
temp	int	$tmp223	%read{799,799} %write{798,798}
temp	int	$tmp224	%read{801,801} %write{800,800}
temp	int	$tmp225	%read{803,817} %write{802,816}
temp	int	$tmp226	%read{805,805} %write{804,804}
temp	int	$tmp227	%read{806,815} %write{805,814}
temp	int	$tmp228	%read{808,808} %write{807,807}
temp	int	$tmp229	%read{809,813} %write{808,812}
temp	int	$tmp230	%read{811,811} %write{810,810}
temp	int	$tmp231	%read{812,812} %write{811,811}
temp	int	$tmp232	%read{814,814} %write{813,813}
temp	int	$tmp233	%read{816,816} %write{815,815}
temp	float	$tmp234.x	%read{851,851} %write{847,847} %derivs
temp	float	$tmp234.y	%read{852,852} %write{848,848} %derivs
temp	float	$tmp235.x	%read{847,847} %write{844,844} %derivs
temp	float	$tmp235.y	%read{848,848} %write{845,845} %derivs
temp	float	$tmp236.x	%read{844,844} %write{841,841} %derivs
temp	float	$tmp236.y	%read{845,845} %write{842,842} %derivs
temp	int	$tmp237	%read{868,868} %write{867,867}
temp	int	$tmp238	%read{869,883} %write{868,882}
temp	int	$tmp239	%read{871,871} %write{870,870}
temp	int	$tmp240	%read{872,881} %write{871,880}
temp	int	$tmp241	%read{874,874} %write{873,873}
temp	int	$tmp242	%read{875,879} %write{874,878}
temp	int	$tmp243	%read{877,877} %write{876,876}
temp	int	$tmp244	%read{878,878} %write{877,877}
temp	int	$tmp245	%read{880,880} %write{879,879}
temp	int	$tmp246	%read{882,882} %write{881,881}
temp	int	$tmp247	%read{884,898} %write{883,897}
temp	int	$tmp248	%read{886,886} %write{885,885}
temp	int	$tmp249	%read{887,896} %write{886,895}
temp	int	$tmp250	%read{889,889} %write{888,888}
temp	int	$tmp251	%read{890,894} %write{889,893}
temp	int	$tmp252	%read{892,892} %write{891,891}
temp	int	$tmp253	%read{893,893} %write{892,892}
temp	int	$tmp254	%read{895,895} %write{894,894}
temp	int	$tmp255	%read{897,897} %write{896,896}
temp	float	$tmp256.x	%read{932,932} %write{928,928} %derivs
temp	float	$tmp256.y	%read{933,933} %write{929,929} %derivs
temp	float	$tmp257.x	%read{928,928} %write{925,925} %derivs
temp	float	$tmp257.y	%read{929,929} %write{926,926} %derivs
temp	float	$tmp258.x	%read{925,925} %write{922,922} %derivs
temp	float	$tmp258.y	%read{926,926} %write{923,923} %derivs
temp	int	$tmp259	%read{949,949} %write{948,948}
temp	int	$tmp260	%read{950,964} %write{949,963}
temp	int	$tmp261	%read{952,952} %write{951,951}
temp	int	$tmp262	%read{953,962} %write{952,961}
temp	int	$tmp263	%read{955,955} %write{954,954}
temp	int	$tmp264	%read{956,960} %write{955,959}
temp	int	$tmp265	%read{958,958} %write{957,957}
temp	int	$tmp266	%read{959,959} %write{958,958}
temp	int	$tmp267	%read{961,961} %write{960,960}
temp	int	$tmp268	%read{963,963} %write{962,962}
temp	int	$tmp269	%read{965,979} %write{964,978}
temp	int	$tmp270	%read{967,967} %write{966,966}
temp	int	$tmp271	%read{968,977} %write{967,976}
temp	int	$tmp272	%read{970,970} %write{969,969}
temp	int	$tmp273	%read{971,975} %write{970,974}
temp	int	$tmp274	%read{973,973} %write{972,972}
temp	int	$tmp275	%read{974,974} %write{973,973}
temp	int	$tmp276	%read{976,976} %write{975,975}
temp	int	$tmp277	%read{978,978} %write{977,977}
temp	float	$tmp278.x	%read{1013,1013} %write{1009,1009} %derivs
temp	float	$tmp278.y	%read{1014,1014} %write{1010,1010} %derivs
temp	float	$tmp279.x	%read{1009,1009} %write{1006,1006} %derivs
temp	float	$tmp279.y	%read{1010,1010} %write{1007,1007} %derivs
temp	float	$tmp280.x	%read{1006,1006} %write{1003,1003} %derivs
temp	float	$tmp280.y	%read{1007,1007} %write{1004,1004} %derivs
temp	int	$tmp281	%read{1030,1030} %write{1029,1029}
temp	int	$tmp282	%read{1031,1045} %write{1030,1044}
temp	int	$tmp283	%read{1033,1033} %write{1032,1032}
temp	int	$tmp284	%read{1034,1043} %write{1033,1042}
temp	int	$tmp285	%read{1036,1036} %write{1035,1035}
temp	int	$tmp286	%read{1037,1041} %write{1036,1040}
temp	int	$tmp287	%read{1039,1039} %write{1038,1038}
temp	int	$tmp288	%read{1040,1040} %write{1039,1039}
temp	int	$tmp289	%read{1042,1042} %write{1041,1041}
temp	int	$tmp290	%read{1044,1044} %write{1043,1043}
temp	int	$tmp291	%read{1046,1060} %write{1045,1059}
temp	int	$tmp292	%read{1048,1048} %write{1047,1047}
temp	int	$tmp293	%read{1049,1058} %write{1048,1057}
temp	int	$tmp294	%read{1051,1051} %write{1050,1050}
temp	int	$tmp295	%read{1052,1056} %write{1051,1055}
temp	int	$tmp296	%read{1054,1054} %write{1053,1053}
temp	int	$tmp297	%read{1055,1055} %write{1054,1054}
temp	int	$tmp298	%read{1057,1057} %write{1056,1056}
temp	int	$tmp299	%read{1059,1059} %write{1058,1058}
temp	float	$tmp300.x	%read{1094,1094} %write{1090,1090} %derivs
temp	float	$tmp300.y	%read{1095,1095} %write{1091,1091} %derivs
temp	float	$tmp301.x	%read{1090,1090} %write{1087,1087} %derivs
temp	float	$tmp301.y	%read{1091,1091} %write{1088,1088} %derivs
temp	float	$tmp302.x	%read{1087,1087} %write{1084,1084} %derivs
temp	float	$tmp302.y	%read{1088,1088} %write{1085,1085} %derivs
temp	int	$tmp303	%read{1111,1111} %write{1110,1110}
temp	int	$tmp304	%read{1112,1126} %write{1111,1125}
temp	int	$tmp305	%read{1114,1114} %write{1113,1113}
temp	int	$tmp306	%read{1115,1124} %write{1114,1123}
temp	int	$tmp307	%read{1117,1117} %write{1116,1116}
temp	int	$tmp308	%read{1118,1122} %write{1117,1121}
temp	int	$tmp309	%read{1120,1120} %write{1119,1119}
temp	int	$tmp310	%read{1121,1121} %write{1120,1120}
temp	int	$tmp311	%read{1123,1123} %write{1122,1122}
temp	int	$tmp312	%read{1125,1125} %write{1124,1124}
temp	int	$tmp313	%read{1127,1141} %write{1126,1140}
temp	int	$tmp314	%read{1129,1129} %write{1128,1128}
temp	int	$tmp315	%read{1130,1139} %write{1129,1138}
temp	int	$tmp316	%read{1132,1132} %write{1131,1131}
temp	int	$tmp317	%read{1133,1137} %write{1132,1136}
temp	int	$tmp318	%read{1135,1135} %write{1134,1134}
temp	int	$tmp319	%read{1136,1136} %write{1135,1135}
temp	int	$tmp320	%read{1138,1138} %write{1137,1137}
temp	int	$tmp321	%read{1140,1140} %write{1139,1139}
temp	float	$tmp322.x	%read{1175,1175} %write{1171,1171} %derivs
temp	float	$tmp322.y	%read{1176,1176} %write{1172,1172} %derivs
temp	float	$tmp323.x	%read{1171,1171} %write{1168,1168} %derivs
temp	float	$tmp323.y	%read{1172,1172} %write{1169,1169} %derivs
temp	float	$tmp324.x	%read{1168,1168} %write{1165,1165} %derivs
temp	float	$tmp324.y	%read{1169,1169} %write{1166,1166} %derivs
temp	int	$tmp325	%read{1192,1192} %write{1191,1191}
temp	int	$tmp326	%read{1193,1207} %write{1192,1206}
temp	int	$tmp327	%read{1195,1195} %write{1194,1194}
temp	int	$tmp328	%read{1196,1205} %write{1195,1204}
temp	int	$tmp329	%read{1198,1198} %write{1197,1197}
temp	int	$tmp330	%read{1199,1203} %write{1198,1202}
temp	int	$tmp331	%read{1201,1201} %write{1200,1200}
temp	int	$tmp332	%read{1202,1202} %write{1201,1201}
temp	int	$tmp333	%read{1204,1204} %write{1203,1203}
temp	int	$tmp334	%read{1206,1206} %write{1205,1205}
temp	int	$tmp335	%read{1208,1222} %write{1207,1221}
temp	int	$tmp336	%read{1210,1210} %write{1209,1209}
temp	int	$tmp337	%read{1211,1220} %write{1210,1219}
temp	int	$tmp338	%read{1213,1213} %write{1212,1212}
temp	int	$tmp339	%read{1214,1218} %write{1213,1217}
temp	int	$tmp340	%read{1216,1216} %write{1215,1215}
temp	int	$tmp341	%read{1217,1217} %write{1216,1216}
temp	int	$tmp342	%read{1219,1219} %write{1218,1218}
temp	int	$tmp343	%read{1221,1221} %write{1220,1220}
temp	float	$tmp344.x	%read{1256,1256} %write{1252,1252} %derivs
temp	float	$tmp344.y	%read{1257,1257} %write{1253,1253} %derivs
temp	float	$tmp345.x	%read{1252,1252} %write{1249,1249} %derivs
temp	float	$tmp345.y	%read{1253,1253} %write{1250,1250} %derivs
temp	float	$tmp346.x	%read{1249,1249} %write{1246,1246} %derivs
temp	float	$tmp346.y	%read{1250,1250} %write{1247,1247} %derivs
temp	int	$tmp347	%read{1273,1273} %write{1272,1272}
temp	int	$tmp348	%read{1274,1288} %write{1273,1287}
temp	int	$tmp349	%read{1276,1276} %write{1275,1275}
temp	int	$tmp350	%read{1277,1286} %write{1276,1285}
temp	int	$tmp351	%read{1279,1279} %write{1278,1278}
temp	int	$tmp352	%read{1280,1284} %write{1279,1283}
temp	int	$tmp353	%read{1282,1282} %write{1281,1281}
temp	int	$tmp354	%read{1283,1283} %write{1282,1282}
temp	int	$tmp355	%read{1285,1285} %write{1284,1284}
temp	int	$tmp356	%read{1287,1287} %write{1286,1286}
temp	int	$tmp357	%read{1289,1303} %write{1288,1302}
temp	int	$tmp358	%read{1291,1291} %write{1290,1290}
temp	int	$tmp359	%read{1292,1301} %write{1291,1300}
temp	int	$tmp360	%read{1294,1294} %write{1293,1293}
temp	int	$tmp361	%read{1295,1299} %write{1294,1298}
temp	int	$tmp362	%read{1297,1297} %write{1296,1296}
temp	int	$tmp363	%read{1298,1298} %write{1297,1297}
temp	int	$tmp364	%read{1300,1300} %write{1299,1299}
temp	int	$tmp365	%read{1302,1302} %write{1301,1301}
temp	float	$tmp366.x	%read{1337,1337} %write{1333,1333} %derivs
temp	float	$tmp366.y	%read{1338,1338} %write{1334,1334} %derivs
temp	float	$tmp367.x	%read{1333,1333} %write{1330,1330} %derivs
temp	float	$tmp367.y	%read{1334,1334} %write{1331,1331} %derivs
temp	float	$tmp368.x	%read{1330,1330} %write{1327,1327} %derivs
temp	float	$tmp368.y	%read{1331,1331} %write{1328,1328} %derivs
temp	int	$tmp369	%read{1354,1354} %write{1353,1353}
temp	int	$tmp370	%read{1355,1369} %write{1354,1368}
temp	int	$tmp371	%read{1357,1357} %write{1356,1356}
temp	int	$tmp372	%read{1358,1367} %write{1357,1366}
temp	int	$tmp373	%read{1360,1360} %write{1359,1359}
temp	int	$tmp374	%read{1361,1365} %write{1360,1364}
temp	int	$tmp375	%read{1363,1363} %write{1362,1362}
temp	int	$tmp376	%read{1364,1364} %write{1363,1363}
temp	int	$tmp377	%read{1366,1366} %write{1365,1365}
temp	int	$tmp378	%read{1368,1368} %write{1367,1367}
temp	int	$tmp379	%read{1370,1384} %write{1369,1383}
temp	int	$tmp380	%read{1372,1372} %write{1371,1371}
temp	int	$tmp381	%read{1373,1382} %write{1372,1381}
temp	int	$tmp382	%read{1375,1375} %write{1374,1374}
temp	int	$tmp383	%read{1376,1380} %write{1375,1379}
temp	int	$tmp384	%read{1378,1378} %write{1377,1377}
temp	int	$tmp385	%read{1379,1379} %write{1378,1378}
temp	int	$tmp386	%read{1381,1381} %write{1380,1380}
temp	int	$tmp387	%read{1383,1383} %write{1382,1382}
temp	float	$tmp388.x	%read{1418,1418} %write{1414,1414} %derivs
temp	float	$tmp388.y	%read{1419,1419} %write{1415,1415} %derivs
temp	float	$tmp389.x	%read{1414,1414} %write{1411,1411} %derivs
temp	float	$tmp389.y	%read{1415,1415} %write{1412,1412} %derivs
temp	float	$tmp390.x	%read{1411,1411} %write{1408,1408} %derivs
temp	float	$tmp390.y	%read{1412,1412} %write{1409,1409} %derivs
temp	int	$tmp391	%read{1435,1435} %write{1434,1434}
temp	int	$tmp392	%read{1436,1450} %write{1435,1449}
temp	int	$tmp393	%read{1438,1438} %write{1437,1437}
temp	int	$tmp394	%read{1439,1448} %write{1438,1447}
temp	int	$tmp395	%read{1441,1441} %write{1440,1440}
temp	int	$tmp396	%read{1442,1446} %write{1441,1445}
temp	int	$tmp397	%read{1444,1444} %write{1443,1443}
temp	int	$tmp398	%read{1445,1445} %write{1444,1444}
temp	int	$tmp399	%read{1447,1447} %write{1446,1446}
temp	int	$tmp400	%read{1449,1449} %write{1448,1448}
temp	int	$tmp401	%read{1451,1465} %write{1450,1464}
temp	int	$tmp402	%read{1453,1453} %write{1452,1452}
temp	int	$tmp403	%read{1454,1463} %write{1453,1462}
temp	int	$tmp404	%read{1456,1456} %write{1455,1455}
temp	int	$tmp405	%read{1457,1461} %write{1456,1460}
temp	int	$tmp406	%read{1459,1459} %write{1458,1458}
temp	int	$tmp407	%read{1460,1460} %write{1459,1459}
temp	int	$tmp408	%read{1462,1462} %write{1461,1461}
temp	int	$tmp409	%read{1464,1464} %write{1463,1463}
temp	float	$tmp410.x	%read{1499,1499} %write{1495,1495} %derivs
temp	float	$tmp410.y	%read{1500,1500} %write{1496,1496} %derivs
temp	float	$tmp411.x	%read{1495,1495} %write{1492,1492} %derivs
temp	float	$tmp411.y	%read{1496,1496} %write{1493,1493} %derivs
temp	float	$tmp412.x	%read{1492,1492} %write{1489,1489} %derivs
temp	float	$tmp412.y	%read{1493,1493} %write{1490,1490} %derivs
temp	int	$tmp413	%read{1516,1516} %write{1515,1515}
temp	int	$tmp414	%read{1517,1531} %write{1516,1530}
temp	int	$tmp415	%read{1519,1519} %write{1518,1518}
temp	int	$tmp416	%read{1520,1529} %write{1519,1528}
temp	int	$tmp417	%read{1522,1522} %write{1521,1521}
temp	int	$tmp418	%read{1523,1527} %write{1522,1526}
temp	int	$tmp419	%read{1525,1525} %write{1524,1524}
temp	int	$tmp420	%read{1526,1526} %write{1525,1525}
temp	int	$tmp421	%read{1528,1528} %write{1527,1527}
temp	int	$tmp422	%read{1530,1530} %write{1529,1529}
temp	int	$tmp423	%read{1532,1546} %write{1531,1545}
temp	int	$tmp424	%read{1534,1534} %write{1533,1533}
temp	int	$tmp425	%read{1535,1544} %write{1534,1543}
temp	int	$tmp426	%read{1537,1537} %write{1536,1536}
temp	int	$tmp427	%read{1538,1542} %write{1537,1541}
temp	int	$tmp428	%read{1540,1540} %write{1539,1539}
temp	int	$tmp429	%read{1541,1541} %write{1540,1540}
temp	int	$tmp430	%read{1543,1543} %write{1542,1542}
temp	int	$tmp431	%read{1545,1545} %write{1544,1544}
temp	float	$tmp432.x	%read{1580,1580} %write{1576,1576} %derivs
temp	float	$tmp432.y	%read{1581,1581} %write{1577,1577} %derivs
temp	float	$tmp433.x	%read{1576,1576} %write{1573,1573} %derivs
temp	float	$tmp433.y	%read{1577,1577} %write{1574,1574} %derivs
temp	float	$tmp434.x	%read{1573,1573} %write{1570,1570} %derivs
temp	float	$tmp434.y	%read{1574,1574} %write{1571,1571} %derivs
temp	int	$tmp435	%read{1597,1597} %write{1596,1596}
temp	int	$tmp436	%read{1598,1612} %write{1597,1611}
temp	int	$tmp437	%read{1600,1600} %write{1599,1599}
temp	int	$tmp438	%read{1601,1610} %write{1600,1609}
temp	int	$tmp439	%read{1603,1603} %write{1602,1602}
temp	int	$tmp440	%read{1604,1608} %write{1603,1607}
temp	int	$tmp441	%read{1606,1606} %write{1605,1605}
temp	int	$tmp442	%read{1607,1607} %write{1606,1606}
temp	int	$tmp443	%read{1609,1609} %write{1608,1608}
temp	int	$tmp444	%read{1611,1611} %write{1610,1610}
temp	int	$tmp445	%read{1613,1627} %write{1612,1626}
temp	int	$tmp446	%read{1615,1615} %write{1614,1614}
temp	int	$tmp447	%read{1616,1625} %write{1615,1624}
temp	int	$tmp448	%read{1618,1618} %write{1617,1617}
temp	int	$tmp449	%read{1619,1623} %write{1618,1622}
temp	int	$tmp450	%read{1621,1621} %write{1620,1620}
temp	int	$tmp451	%read{1622,1622} %write{1621,1621}
temp	int	$tmp452	%read{1624,1624} %write{1623,1623}
temp	int	$tmp453	%read{1626,1626} %write{1625,1625}
temp	float	$tmp454.x	%read{1661,1661} %write{1657,1657} %derivs
temp	float	$tmp454.y	%read{1662,1662} %write{1658,1658} %derivs
temp	float	$tmp455.x	%read{1657,1657} %write{1654,1654} %derivs
temp	float	$tmp455.y	%read{1658,1658} %write{1655,1655} %derivs
temp	float	$tmp456.x	%read{1654,1654} %write{1651,1651} %derivs
temp	float	$tmp456.y	%read{1655,1655} %write{1652,1652} %derivs
temp	int	$tmp457	%read{1678,1678} %write{1677,1677}
temp	int	$tmp458	%read{1679,1693} %write{1678,1692}
temp	int	$tmp459	%read{1681,1681} %write{1680,1680}
temp	int	$tmp460	%read{1682,1691} %write{1681,1690}
temp	int	$tmp461	%read{1684,1684} %write{1683,1683}
temp	int	$tmp462	%read{1685,1689} %write{1684,1688}
temp	int	$tmp463	%read{1687,1687} %write{1686,1686}
temp	int	$tmp464	%read{1688,1688} %write{1687,1687}
temp	int	$tmp465	%read{1690,1690} %write{1689,1689}
temp	int	$tmp466	%read{1692,1692} %write{1691,1691}
temp	int	$tmp467	%read{1694,1708} %write{1693,1707}
temp	int	$tmp468	%read{1696,1696} %write{1695,1695}
temp	int	$tmp469	%read{1697,1706} %write{1696,1705}
temp	int	$tmp470	%read{1699,1699} %write{1698,1698}
temp	int	$tmp471	%read{1700,1704} %write{1699,1703}
temp	int	$tmp472	%read{1702,1702} %write{1701,1701}
temp	int	$tmp473	%read{1703,1703} %write{1702,1702}
temp	int	$tmp474	%read{1705,1705} %write{1704,1704}
temp	int	$tmp475	%read{1707,1707} %write{1706,1706}
temp	float	$tmp476.x	%read{1742,1742} %write{1738,1738} %derivs
temp	float	$tmp476.y	%read{1743,1743} %write{1739,1739} %derivs
temp	float	$tmp477.x	%read{1738,1738} %write{1735,1735} %derivs
temp	float	$tmp477.y	%read{1739,1739} %write{1736,1736} %derivs
temp	float	$tmp478.x	%read{1735,1735} %write{1732,1732} %derivs
temp	float	$tmp478.y	%read{1736,1736} %write{1733,1733} %derivs
temp	int	$tmp479	%read{1759,1759} %write{1758,1758}
temp	int	$tmp480	%read{1760,1774} %write{1759,1773}
temp	int	$tmp481	%read{1762,1762} %write{1761,1761}
temp	int	$tmp482	%read{1763,1772} %write{1762,1771}
temp	int	$tmp483	%read{1765,1765} %write{1764,1764}
temp	int	$tmp484	%read{1766,1770} %write{1765,1769}
temp	int	$tmp485	%read{1768,1768} %write{1767,1767}
temp	int	$tmp486	%read{1769,1769} %write{1768,1768}
temp	int	$tmp487	%read{1771,1771} %write{1770,1770}
temp	int	$tmp488	%read{1773,1773} %write{1772,1772}
temp	int	$tmp489	%read{1775,1789} %write{1774,1788}
temp	int	$tmp490	%read{1777,1777} %write{1776,1776}
temp	int	$tmp491	%read{1778,1787} %write{1777,1786}
temp	int	$tmp492	%read{1780,1780} %write{1779,1779}
temp	int	$tmp493	%read{1781,1785} %write{1780,1784}
temp	int	$tmp494	%read{1783,1783} %write{1782,1782}
temp	int	$tmp495	%read{1784,1784} %write{1783,1783}
temp	int	$tmp496	%read{1786,1786} %write{1785,1785}
temp	int	$tmp497	%read{1788,1788} %write{1787,1787}
temp	float	$tmp498.x	%read{1823,1823} %write{1819,1819} %derivs
temp	float	$tmp498.y	%read{1824,1824} %write{1820,1820} %derivs
temp	float	$tmp499.x	%read{1819,1819} %write{1816,1816} %derivs
temp	float	$tmp499.y	%read{1820,1820} %write{1817,1817} %derivs
temp	float	$tmp500.x	%read{1816,1816} %write{1813,1813} %derivs
temp	float	$tmp500.y	%read{1817,1817} %write{1814,1814} %derivs
temp	int	$tmp501	%read{1840,1840} %write{1839,1839}
temp	int	$tmp502	%read{1841,1855} %write{1840,1854}
temp	int	$tmp503	%read{1843,1843} %write{1842,1842}
temp	int	$tmp504	%read{1844,1853} %write{1843,1852}
temp	int	$tmp505	%read{1846,1846} %write{1845,1845}
temp	int	$tmp506	%read{1847,1851} %write{1846,1850}
temp	int	$tmp507	%read{1849,1849} %write{1848,1848}
temp	int	$tmp508	%read{1850,1850} %write{1849,1849}
temp	int	$tmp509	%read{1852,1852} %write{1851,1851}
temp	int	$tmp510	%read{1854,1854} %write{1853,1853}
temp	int	$tmp511	%read{1856,1870} %write{1855,1869}
temp	int	$tmp512	%read{1858,1858} %write{1857,1857}
temp	int	$tmp513	%read{1859,1868} %write{1858,1867}
temp	int	$tmp514	%read{1861,1861} %write{1860,1860}
temp	int	$tmp515	%read{1862,1866} %write{1861,1865}
temp	int	$tmp516	%read{1864,1864} %write{1863,1863}
temp	int	$tmp517	%read{1865,1865} %write{1864,1864}
temp	int	$tmp518	%read{1867,1867} %write{1866,1866}
temp	int	$tmp519	%read{1869,1869} %write{1868,1868}
temp	float	$tmp520.x	%read{1904,1904} %write{1900,1900} %derivs
temp	float	$tmp520.y	%read{1905,1905} %write{1901,1901} %derivs
temp	float	$tmp521.x	%read{1900,1900} %write{1897,1897} %derivs
temp	float	$tmp521.y	%read{1901,1901} %write{1898,1898} %derivs
temp	float	$tmp522.x	%read{1897,1897} %write{1894,1894} %derivs
temp	float	$tmp522.y	%read{1898,1898} %write{1895,1895} %derivs
temp	int	$tmp523	%read{1921,1921} %write{1920,1920}
temp	int	$tmp524	%read{1922,1936} %write{1921,1935}
temp	int	$tmp525	%read{1924,1924} %write{1923,1923}
temp	int	$tmp526	%read{1925,1934} %write{1924,1933}
temp	int	$tmp527	%read{1927,1927} %write{1926,1926}
temp	int	$tmp528	%read{1928,1932} %write{1927,1931}
temp	int	$tmp529	%read{1930,1930} %write{1929,1929}
temp	int	$tmp530	%read{1931,1931} %write{1930,1930}
temp	int	$tmp531	%read{1933,1933} %write{1932,1932}
temp	int	$tmp532	%read{1935,1935} %write{1934,1934}
temp	int	$tmp533	%read{1937,1951} %write{1936,1950}
temp	int	$tmp534	%read{1939,1939} %write{1938,1938}
temp	int	$tmp535	%read{1940,1949} %write{1939,1948}
temp	int	$tmp536	%read{1942,1942} %write{1941,1941}
temp	int	$tmp537	%read{1943,1947} %write{1942,1946}
temp	int	$tmp538	%read{1945,1945} %write{1944,1944}
temp	int	$tmp539	%read{1946,1946} %write{1945,1945}
temp	int	$tmp540	%read{1948,1948} %write{1947,1947}
temp	int	$tmp541	%read{1950,1950} %write{1949,1949}
temp	float	$tmp542.x	%read{1985,1985} %write{1981,1981} %derivs
temp	float	$tmp542.y	%read{1986,1986} %write{1982,1982} %derivs
temp	float	$tmp543.x	%read{1981,1981} %write{1978,1978} %derivs
temp	float	$tmp543.y	%read{1982,1982} %write{1979,1979} %derivs
temp	float	$tmp544.x	%read{1978,1978} %write{1975,1975} %derivs
temp	float	$tmp544.y	%read{1979,1979} %write{1976,1976} %derivs
temp	int	$tmp545	%read{2002,2002} %write{2001,2001}
temp	int	$tmp546	%read{2003,2017} %write{2002,2016}
temp	int	$tmp547	%read{2005,2005} %write{2004,2004}
temp	int	$tmp548	%read{2006,2015} %write{2005,2014}
temp	int	$tmp549	%read{2008,2008} %write{2007,2007}
temp	int	$tmp550	%read{2009,2013} %write{2008,2012}
temp	int	$tmp551	%read{2011,2011} %write{2010,2010}
temp	int	$tmp552	%read{2012,2012} %write{2011,2011}
temp	int	$tmp553	%read{2014,2014} %write{2013,2013}
temp	int	$tmp554	%read{2016,2016} %write{2015,2015}
temp	int	$tmp555	%read{2018,2032} %write{2017,2031}
temp	int	$tmp556	%read{2020,2020} %write{2019,2019}
temp	int	$tmp557	%read{2021,2030} %write{2020,2029}
temp	int	$tmp558	%read{2023,2023} %write{2022,2022}
temp	int	$tmp559	%read{2024,2028} %write{2023,2027}
temp	int	$tmp560	%read{2026,2026} %write{2025,2025}
temp	int	$tmp561	%read{2027,2027} %write{2026,2026}
temp	int	$tmp562	%read{2029,2029} %write{2028,2028}
temp	int	$tmp563	%read{2031,2031} %write{2030,2030}
temp	float	$tmp564.x	%read{2066,2066} %write{2062,2062} %derivs
temp	float	$tmp564.y	%read{2067,2067} %write{2063,2063} %derivs
temp	float	$tmp565.x	%read{2062,2062} %write{2059,2059} %derivs
temp	float	$tmp565.y	%read{2063,2063} %write{2060,2060} %derivs
temp	float	$tmp566.x	%read{2059,2059} %write{2056,2056} %derivs
temp	float	$tmp566.y	%read{2060,2060} %write{2057,2057} %derivs
temp	int	$tmp567	%read{2083,2083} %write{2082,2082}
temp	int	$tmp568	%read{2084,2098} %write{2083,2097}
temp	int	$tmp569	%read{2086,2086} %write{2085,2085}
temp	int	$tmp570	%read{2087,2096} %write{2086,2095}
temp	int	$tmp571	%read{2089,2089} %write{2088,2088}
temp	int	$tmp572	%read{2090,2094} %write{2089,2093}
temp	int	$tmp573	%read{2092,2092} %write{2091,2091}
temp	int	$tmp574	%read{2093,2093} %write{2092,2092}
temp	int	$tmp575	%read{2095,2095} %write{2094,2094}
temp	int	$tmp576	%read{2097,2097} %write{2096,2096}
temp	int	$tmp577	%read{2099,2113} %write{2098,2112}
temp	int	$tmp578	%read{2101,2101} %write{2100,2100}
temp	int	$tmp579	%read{2102,2111} %write{2101,2110}
temp	int	$tmp580	%read{2104,2104} %write{2103,2103}
temp	int	$tmp581	%read{2105,2109} %write{2104,2108}
temp	int	$tmp582	%read{2107,2107} %write{2106,2106}
temp	int	$tmp583	%read{2108,2108} %write{2107,2107}
temp	int	$tmp584	%read{2110,2110} %write{2109,2109}
temp	int	$tmp585	%read{2112,2112} %write{2111,2111}
const	int	$const31	3		%read{2145,2148} %write{2147483647,-1}
const	int	$const32	4		%read{2149,2152} %write{2147483647,-1}
const	int	$const33	5		%read{2153,2156} %write{2147483647,-1}
const	int	$const34	6		%read{2157,2160} %write{2147483647,-1}
const	int	$const35	7		%read{2161,2164} %write{2147483647,-1}
const	int	$const36	8		%read{2165,2168} %write{2147483647,-1}
const	int	$const37	9		%read{2169,2172} %write{2147483647,-1}
const	int	$const38	10		%read{2173,2284} %write{2147483647,-1}
const	int	$const39	11		%read{2177,2180} %write{2147483647,-1}
const	int	$const40	12		%read{2181,2184} %write{2147483647,-1}
const	int	$const41	13		%read{2185,2188} %write{2147483647,-1}
const	int	$const42	14		%read{2189,2192} %write{2147483647,-1}
const	int	$const43	15		%read{2193,2196} %write{2147483647,-1}
const	int	$const44	16		%read{2197,2200} %write{2147483647,-1}
const	int	$const45	17		%read{2201,2204} %write{2147483647,-1}
const	int	$const46	18		%read{2205,2208} %write{2147483647,-1}
const	int	$const47	19		%read{2209,2212} %write{2147483647,-1}
const	int	$const48	20		%read{2213,2216} %write{2147483647,-1}
const	int	$const49	21		%read{2217,2220} %write{2147483647,-1}
const	int	$const50	22		%read{2221,2224} %write{2147483647,-1}
const	int	$const51	23		%read{2225,2228} %write{2147483647,-1}
const	int	$const52	24		%read{2229,2232} %write{2147483647,-1}
const	string	$const53	"gaussian"		%read{2233,2233} %write{2147483647,-1}
temp	int	$tmp586	%read{2234,2234} %write{2233,2233}
const	int	$const54	25		%read{2242,2278} %write{2147483647,-1}
const	string	$const55	"mx_convolution_vector4"		%read{2235,2271} %write{2147483647,-1}
temp	int	$tmp587	%read{2242,2266} %write{2242,2266}
temp	int	$tmp588	%read{2240,2266} %write{2241,2266}
temp	float	$tmp589.x	%read{2242,2266} %write{2242,2266}
temp	float	$tmp589.y	%read{2242,2266} %write{2242,2266}
temp	float	$tmp589.z	%read{2242,2266} %write{2242,2266}
temp	float	$tmp589.w	%read{2242,2266} %write{2242,2266}
temp	float	$tmp590.x	%read{2242,2266} %write{2242,2266}
temp	float	$tmp590.y	%read{2242,2266} %write{2242,2266}
temp	float	$tmp590.z	%read{2242,2266} %write{2242,2266}
temp	float	$tmp590.w	%read{2242,2266} %write{2242,2266}
temp	int	$tmp591	%read{2242,2266} %write{2242,2266}
temp	float	$tmp592	%read{2242,2266} %write{2242,2266}
temp	float	$tmp593.x	%read{2242,2266} %write{2242,2266}
temp	float	$tmp593.y	%read{2242,2266} %write{2242,2266}
temp	float	$tmp593.z	%read{2242,2266} %write{2242,2266}
temp	float	$tmp593.w	%read{2242,2266} %write{2242,2266}
temp	int	$tmp594	%read{2147483647,-1} %write{2242,2266}
temp	int	$tmp595	%read{2278,2302} %write{2278,2302}
temp	int	$tmp596	%read{2276,2302} %write{2277,2302}
temp	float	$tmp597.x	%read{2278,2302} %write{2278,2302}
temp	float	$tmp597.y	%read{2278,2302} %write{2278,2302}
temp	float	$tmp597.z	%read{2278,2302} %write{2278,2302}
temp	float	$tmp597.w	%read{2278,2302} %write{2278,2302}
temp	float	$tmp598.x	%read{2278,2302} %write{2278,2302}
temp	float	$tmp598.y	%read{2278,2302} %write{2278,2302}
temp	float	$tmp598.z	%read{2278,2302} %write{2278,2302}
temp	float	$tmp598.w	%read{2278,2302} %write{2278,2302}
temp	int	$tmp599	%read{2278,2302} %write{2278,2302}
temp	float	$tmp600	%read{2278,2302} %write{2278,2302}
temp	float	$tmp601.x	%read{2278,2302} %write{2278,2302}
temp	float	$tmp601.y	%read{2278,2302} %write{2278,2302}
temp	float	$tmp601.z	%read{2278,2302} %write{2278,2302}
temp	float	$tmp601.w	%read{2278,2302} %write{2278,2302}
temp	int	$tmp602	%read{2147483647,-1} %write{2278,2302}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:245
#     float c_gaussian_filter_weights[84] = {1.000000, 0.077847, 0.123317, 0.077847, 0.123317, 0.195346, 0.123317, 0.077847, 0.123317, 0.077847, 0.003765, 0.015019, 0.023792, 0.015019, 0.003765, 0.015019, 0.059912, 0.094907, 0.059912, 0.015019, 0.023792, 0.094907, 0.150342, 0.094907, 0.023792, 0.015019, 0.059912, 0.094907, 0.059912, 0.015019, 0.003765, 0.015019, 0.023792, 0.015019, 0.003765, 0.000036, 0.000363, 0.001446, 0.002291, 0.001446, 0.000363, 0.000036, 0.000363, 0.003676, 0.014662, 0.023226, 0.014662, 0.003676, 0.000363, 0.001446, 0.014662, 0.058488, 0.092651, 0.058488, 0.014662, 0.001446, 0.002291, 0.023226, 0.092651, 0.146768, 0.092651, 0.023226, 0.002291, 0.001446, 0.014662, 0.058488, 0.092651, 0.058488, 0.014662, 0.001446, 0.000363, 0.003676, 0.014662, 0.023226, 0.014662, 0.003676, 0.000363, 0.000036, 0.000363, 0.001446, 0.002291, 0.001446, 0.000363, 0.000036};
	assign		c_box_filter_weights $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{245} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:246
# 
	assign		c_gaussian_filter_weights $const2 	%line{246} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:248
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	assign		tiledimage1_file_.filename tiledimage1_file 	%line{248} %argrw{"wr"}
	assign		tiledimage1_file_.colorspace tiledimage1_file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:249
#     vector4 tiledimage1_out = vector4(0.0, 0.0, 0.0, 0.0);
	assign		geomprop_UV0_out1.x u 	%line{249} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:250
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1, tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out);
	assign		tiledimage1_out.x $const3 	%line{250} %argrw{"wr"}
	assign		tiledimage1_out.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:251
#     vector2 blur_vector4_out_sample_size = mx_compute_sample_size_uv(geomprop_UV0_out1,1.000000,0.000000);
	functioncall	$const4 79 	%line{251} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 14 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x geomprop_UV0_out1.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y geomprop_UV0_out1.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 17 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 20 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 75 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp1 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const11 	%argrw{"wrr"}
	if		$tmp2 31 44 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp3 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const11 	%argrw{"wrr"}
	if		$tmp4 42 42 	%argrw{"r"}
	lt		$tmp5 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const11 	%argrw{"wrr"}
	if		$tmp6 37 40 	%argrw{"r"}
	gt		$tmp7 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const11 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	neq		$tmp9 $tmp6 $const11 	%argrw{"wrr"}
	assign		$tmp4 $tmp9 	%argrw{"wr"}
	neq		$tmp10 $tmp4 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp2 $tmp10 	%line{25} %argrw{"wr"}
	neq		$tmp11 $tmp2 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp11 46 59 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp12 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const11 	%argrw{"wrr"}
	if		$tmp13 57 57 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const11 	%argrw{"wrr"}
	if		$tmp15 52 55 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const11 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const11 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp11 $tmp19 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp11 65 65 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 70 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:252
#     vector4 tiledimage1_out_blur_vector4_out0 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const24 108 	%line{252} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:66
#    vector derivUVy = Dy(vector(uv.x, uv.y, 0.0)) * 0.5;
	vector		$tmp21 geomprop_UV0_out1.x geomprop_UV0_out1.y $const3 	%line{66} %argrw{"wrrr"}
	Dx		$tmp20 $tmp21 	%argrw{"wr"} %argderivs{1}
	mul		___673_derivUVx $tmp20 $const25 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:67
#    float derivX = abs(derivUVx[0]) + abs(derivUVy[0]);
	vector		$tmp23 geomprop_UV0_out1.x geomprop_UV0_out1.y $const3 	%line{67} %argrw{"wrrr"}
	Dy		$tmp22 $tmp23 	%argrw{"wr"} %argderivs{1}
	mul		___673_derivUVy $tmp22 $const25 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:68
#    float derivY = abs(derivUVx[1]) + abs(derivUVy[1]);
	compref		$tmp25 ___673_derivUVx $const11 	%line{68} %argrw{"wrr"}
	abs		$tmp24 $tmp25 	%argrw{"wr"}
	compref		$tmp27 ___673_derivUVy $const11 	%argrw{"wrr"}
	abs		$tmp26 $tmp27 	%argrw{"wr"}
	add		___673_derivX $tmp24 $tmp26 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:69
#    float sampleSizeU = filterSize * derivX + filterOffset;
	compref		$tmp29 ___673_derivUVx $const22 	%line{69} %argrw{"wrr"}
	abs		$tmp28 $tmp29 	%argrw{"wr"}
	compref		$tmp31 ___673_derivUVy $const22 	%argrw{"wrr"}
	abs		$tmp30 $tmp31 	%argrw{"wr"}
	add		___673_derivY $tmp28 $tmp30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:70
#    if (sampleSizeU < 1.0E-05)
	mul		$tmp32 $const13 ___673_derivX 	%line{70} %argrw{"wrr"}
	add		___673_sampleSizeU $tmp32 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:71
#        sampleSizeU = 1.0E-05;
	lt		$tmp33 ___673_sampleSizeU $const26 	%line{71} %argrw{"wrr"}
	if		$tmp33 101 101 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:72
#    float sampleSizeV = filterSize * derivY + filterOffset;
	assign		___673_sampleSizeU $const26 	%line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:73
#    if (sampleSizeV < 1.0E-05)
	mul		$tmp34 $const13 ___673_derivY 	%line{73} %argrw{"wrr"}
	add		___673_sampleSizeV $tmp34 $const3 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:74
#        sampleSizeV = 1.0E-05;
	lt		$tmp35 ___673_sampleSizeV $const26 	%line{74} %argrw{"wrr"}
	if		$tmp35 106 106 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:75
#    return vector2(sampleSizeU, sampleSizeV);
	assign		___673_sampleSizeV $const26 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:76
# }
	assign		blur_vector4_out_sample_size.x ___673_sampleSizeU 	%line{76} %argrw{"wr"}
	assign		blur_vector4_out_sample_size.y ___673_sampleSizeV 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:253
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-2.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out0);
	assign		tiledimage1_out_blur_vector4_out0.x $const3 	%line{253} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:254
#     vector4 tiledimage1_out_blur_vector4_out1 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp38.x $const27 	%line{254} %argrw{"wr"}
	assign		$tmp38.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 117 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp37.x blur_vector4_out_sample_size.x $tmp38.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp37.y blur_vector4_out_sample_size.y $tmp38.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 120 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp36.x geomprop_UV0_out1.x $tmp37.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp36.y geomprop_UV0_out1.y $tmp37.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:254
#     vector4 tiledimage1_out_blur_vector4_out1 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 189 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{254} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 124 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp36.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp36.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 127 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 130 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 133 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 185 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp39 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp40 $tmp39 $const11 	%argrw{"wrr"}
	if		$tmp40 141 154 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp41 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp42 $tmp41 $const11 	%argrw{"wrr"}
	if		$tmp42 152 152 	%argrw{"r"}
	lt		$tmp43 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp44 $tmp43 $const11 	%argrw{"wrr"}
	if		$tmp44 147 150 	%argrw{"r"}
	gt		$tmp45 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp46 $tmp45 $const11 	%argrw{"wrr"}
	assign		$tmp44 $tmp46 	%argrw{"wr"}
	neq		$tmp47 $tmp44 $const11 	%argrw{"wrr"}
	assign		$tmp42 $tmp47 	%argrw{"wr"}
	neq		$tmp48 $tmp42 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp40 $tmp48 	%line{25} %argrw{"wr"}
	neq		$tmp49 $tmp40 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp49 156 169 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp50 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp51 $tmp50 $const11 	%argrw{"wrr"}
	if		$tmp51 167 167 	%argrw{"r"}
	lt		$tmp52 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp53 $tmp52 $const11 	%argrw{"wrr"}
	if		$tmp53 162 165 	%argrw{"r"}
	gt		$tmp54 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp55 $tmp54 $const11 	%argrw{"wrr"}
	assign		$tmp53 $tmp55 	%argrw{"wr"}
	neq		$tmp56 $tmp53 $const11 	%argrw{"wrr"}
	assign		$tmp51 $tmp56 	%argrw{"wr"}
	neq		$tmp57 $tmp51 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp49 $tmp57 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp49 175 175 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 180 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out0.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out0.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:255
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-1.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out1);
	assign		tiledimage1_out_blur_vector4_out1.x $const3 	%line{255} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:256
#     vector4 tiledimage1_out_blur_vector4_out2 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp60.x $const29 	%line{256} %argrw{"wr"}
	assign		$tmp60.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 198 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp59.x blur_vector4_out_sample_size.x $tmp60.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp59.y blur_vector4_out_sample_size.y $tmp60.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 201 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp58.x geomprop_UV0_out1.x $tmp59.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp58.y geomprop_UV0_out1.y $tmp59.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:256
#     vector4 tiledimage1_out_blur_vector4_out2 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 270 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{256} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 205 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp58.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp58.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 208 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 211 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 214 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 266 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp61 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp62 $tmp61 $const11 	%argrw{"wrr"}
	if		$tmp62 222 235 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp63 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp64 $tmp63 $const11 	%argrw{"wrr"}
	if		$tmp64 233 233 	%argrw{"r"}
	lt		$tmp65 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const11 	%argrw{"wrr"}
	if		$tmp66 228 231 	%argrw{"r"}
	gt		$tmp67 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp68 $tmp67 $const11 	%argrw{"wrr"}
	assign		$tmp66 $tmp68 	%argrw{"wr"}
	neq		$tmp69 $tmp66 $const11 	%argrw{"wrr"}
	assign		$tmp64 $tmp69 	%argrw{"wr"}
	neq		$tmp70 $tmp64 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp62 $tmp70 	%line{25} %argrw{"wr"}
	neq		$tmp71 $tmp62 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp71 237 250 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp72 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp73 $tmp72 $const11 	%argrw{"wrr"}
	if		$tmp73 248 248 	%argrw{"r"}
	lt		$tmp74 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp75 $tmp74 $const11 	%argrw{"wrr"}
	if		$tmp75 243 246 	%argrw{"r"}
	gt		$tmp76 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp77 $tmp76 $const11 	%argrw{"wrr"}
	assign		$tmp75 $tmp77 	%argrw{"wr"}
	neq		$tmp78 $tmp75 $const11 	%argrw{"wrr"}
	assign		$tmp73 $tmp78 	%argrw{"wr"}
	neq		$tmp79 $tmp73 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp71 $tmp79 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp71 256 256 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 261 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out1.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out1.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:257
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(0.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out2);
	assign		tiledimage1_out_blur_vector4_out2.x $const3 	%line{257} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:258
#     vector4 tiledimage1_out_blur_vector4_out3 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp82.x $const3 	%line{258} %argrw{"wr"}
	assign		$tmp82.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 279 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp81.x blur_vector4_out_sample_size.x $tmp82.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp81.y blur_vector4_out_sample_size.y $tmp82.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 282 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp80.x geomprop_UV0_out1.x $tmp81.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp80.y geomprop_UV0_out1.y $tmp81.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:258
#     vector4 tiledimage1_out_blur_vector4_out3 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 351 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{258} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 286 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp80.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp80.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 289 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 292 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 295 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 347 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp83 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp84 $tmp83 $const11 	%argrw{"wrr"}
	if		$tmp84 303 316 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp85 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp86 $tmp85 $const11 	%argrw{"wrr"}
	if		$tmp86 314 314 	%argrw{"r"}
	lt		$tmp87 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp88 $tmp87 $const11 	%argrw{"wrr"}
	if		$tmp88 309 312 	%argrw{"r"}
	gt		$tmp89 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp90 $tmp89 $const11 	%argrw{"wrr"}
	assign		$tmp88 $tmp90 	%argrw{"wr"}
	neq		$tmp91 $tmp88 $const11 	%argrw{"wrr"}
	assign		$tmp86 $tmp91 	%argrw{"wr"}
	neq		$tmp92 $tmp86 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp84 $tmp92 	%line{25} %argrw{"wr"}
	neq		$tmp93 $tmp84 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp93 318 331 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp94 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp95 $tmp94 $const11 	%argrw{"wrr"}
	if		$tmp95 329 329 	%argrw{"r"}
	lt		$tmp96 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp97 $tmp96 $const11 	%argrw{"wrr"}
	if		$tmp97 324 327 	%argrw{"r"}
	gt		$tmp98 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp99 $tmp98 $const11 	%argrw{"wrr"}
	assign		$tmp97 $tmp99 	%argrw{"wr"}
	neq		$tmp100 $tmp97 $const11 	%argrw{"wrr"}
	assign		$tmp95 $tmp100 	%argrw{"wr"}
	neq		$tmp101 $tmp95 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp93 $tmp101 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp93 337 337 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 342 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out2.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out2.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:259
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(1.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out3);
	assign		tiledimage1_out_blur_vector4_out3.x $const3 	%line{259} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:260
#     vector4 tiledimage1_out_blur_vector4_out4 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp104.x $const13 	%line{260} %argrw{"wr"}
	assign		$tmp104.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 360 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp103.x blur_vector4_out_sample_size.x $tmp104.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp103.y blur_vector4_out_sample_size.y $tmp104.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 363 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp102.x geomprop_UV0_out1.x $tmp103.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp102.y geomprop_UV0_out1.y $tmp103.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:260
#     vector4 tiledimage1_out_blur_vector4_out4 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 432 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{260} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 367 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp102.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp102.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 370 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 373 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 376 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 428 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp105 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp106 $tmp105 $const11 	%argrw{"wrr"}
	if		$tmp106 384 397 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp107 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp108 $tmp107 $const11 	%argrw{"wrr"}
	if		$tmp108 395 395 	%argrw{"r"}
	lt		$tmp109 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp110 $tmp109 $const11 	%argrw{"wrr"}
	if		$tmp110 390 393 	%argrw{"r"}
	gt		$tmp111 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp112 $tmp111 $const11 	%argrw{"wrr"}
	assign		$tmp110 $tmp112 	%argrw{"wr"}
	neq		$tmp113 $tmp110 $const11 	%argrw{"wrr"}
	assign		$tmp108 $tmp113 	%argrw{"wr"}
	neq		$tmp114 $tmp108 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp106 $tmp114 	%line{25} %argrw{"wr"}
	neq		$tmp115 $tmp106 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp115 399 412 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp116 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp117 $tmp116 $const11 	%argrw{"wrr"}
	if		$tmp117 410 410 	%argrw{"r"}
	lt		$tmp118 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp119 $tmp118 $const11 	%argrw{"wrr"}
	if		$tmp119 405 408 	%argrw{"r"}
	gt		$tmp120 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp121 $tmp120 $const11 	%argrw{"wrr"}
	assign		$tmp119 $tmp121 	%argrw{"wr"}
	neq		$tmp122 $tmp119 $const11 	%argrw{"wrr"}
	assign		$tmp117 $tmp122 	%argrw{"wr"}
	neq		$tmp123 $tmp117 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp115 $tmp123 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp115 418 418 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 423 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out3.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out3.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:261
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(2.000000,-2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out4);
	assign		tiledimage1_out_blur_vector4_out4.x $const3 	%line{261} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:262
#     vector4 tiledimage1_out_blur_vector4_out5 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp126.x $const30 	%line{262} %argrw{"wr"}
	assign		$tmp126.y $const27 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 441 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp125.x blur_vector4_out_sample_size.x $tmp126.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp125.y blur_vector4_out_sample_size.y $tmp126.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 444 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp124.x geomprop_UV0_out1.x $tmp125.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp124.y geomprop_UV0_out1.y $tmp125.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:262
#     vector4 tiledimage1_out_blur_vector4_out5 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 513 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{262} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 448 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp124.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp124.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 451 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 454 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 457 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 509 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp127 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp128 $tmp127 $const11 	%argrw{"wrr"}
	if		$tmp128 465 478 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp129 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp130 $tmp129 $const11 	%argrw{"wrr"}
	if		$tmp130 476 476 	%argrw{"r"}
	lt		$tmp131 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp132 $tmp131 $const11 	%argrw{"wrr"}
	if		$tmp132 471 474 	%argrw{"r"}
	gt		$tmp133 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp134 $tmp133 $const11 	%argrw{"wrr"}
	assign		$tmp132 $tmp134 	%argrw{"wr"}
	neq		$tmp135 $tmp132 $const11 	%argrw{"wrr"}
	assign		$tmp130 $tmp135 	%argrw{"wr"}
	neq		$tmp136 $tmp130 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp128 $tmp136 	%line{25} %argrw{"wr"}
	neq		$tmp137 $tmp128 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp137 480 493 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp138 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp139 $tmp138 $const11 	%argrw{"wrr"}
	if		$tmp139 491 491 	%argrw{"r"}
	lt		$tmp140 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp141 $tmp140 $const11 	%argrw{"wrr"}
	if		$tmp141 486 489 	%argrw{"r"}
	gt		$tmp142 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp143 $tmp142 $const11 	%argrw{"wrr"}
	assign		$tmp141 $tmp143 	%argrw{"wr"}
	neq		$tmp144 $tmp141 $const11 	%argrw{"wrr"}
	assign		$tmp139 $tmp144 	%argrw{"wr"}
	neq		$tmp145 $tmp139 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp137 $tmp145 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp137 499 499 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 504 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out4.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out4.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:263
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-2.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out5);
	assign		tiledimage1_out_blur_vector4_out5.x $const3 	%line{263} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:264
#     vector4 tiledimage1_out_blur_vector4_out6 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp148.x $const27 	%line{264} %argrw{"wr"}
	assign		$tmp148.y $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 522 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp147.x blur_vector4_out_sample_size.x $tmp148.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp147.y blur_vector4_out_sample_size.y $tmp148.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 525 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp146.x geomprop_UV0_out1.x $tmp147.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp146.y geomprop_UV0_out1.y $tmp147.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:264
#     vector4 tiledimage1_out_blur_vector4_out6 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 594 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{264} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 529 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp146.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp146.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 532 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 535 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 538 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 590 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp149 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp150 $tmp149 $const11 	%argrw{"wrr"}
	if		$tmp150 546 559 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp151 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp152 $tmp151 $const11 	%argrw{"wrr"}
	if		$tmp152 557 557 	%argrw{"r"}
	lt		$tmp153 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp154 $tmp153 $const11 	%argrw{"wrr"}
	if		$tmp154 552 555 	%argrw{"r"}
	gt		$tmp155 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp156 $tmp155 $const11 	%argrw{"wrr"}
	assign		$tmp154 $tmp156 	%argrw{"wr"}
	neq		$tmp157 $tmp154 $const11 	%argrw{"wrr"}
	assign		$tmp152 $tmp157 	%argrw{"wr"}
	neq		$tmp158 $tmp152 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp150 $tmp158 	%line{25} %argrw{"wr"}
	neq		$tmp159 $tmp150 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp159 561 574 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp160 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp161 $tmp160 $const11 	%argrw{"wrr"}
	if		$tmp161 572 572 	%argrw{"r"}
	lt		$tmp162 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp163 $tmp162 $const11 	%argrw{"wrr"}
	if		$tmp163 567 570 	%argrw{"r"}
	gt		$tmp164 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp165 $tmp164 $const11 	%argrw{"wrr"}
	assign		$tmp163 $tmp165 	%argrw{"wr"}
	neq		$tmp166 $tmp163 $const11 	%argrw{"wrr"}
	assign		$tmp161 $tmp166 	%argrw{"wr"}
	neq		$tmp167 $tmp161 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp159 $tmp167 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp159 580 580 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 585 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out5.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out5.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:265
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-1.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out6);
	assign		tiledimage1_out_blur_vector4_out6.x $const3 	%line{265} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:266
#     vector4 tiledimage1_out_blur_vector4_out7 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp170.x $const29 	%line{266} %argrw{"wr"}
	assign		$tmp170.y $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 603 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp169.x blur_vector4_out_sample_size.x $tmp170.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp169.y blur_vector4_out_sample_size.y $tmp170.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 606 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp168.x geomprop_UV0_out1.x $tmp169.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp168.y geomprop_UV0_out1.y $tmp169.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:266
#     vector4 tiledimage1_out_blur_vector4_out7 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 675 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{266} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 610 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp168.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp168.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 613 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 616 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 619 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 671 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp171 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp172 $tmp171 $const11 	%argrw{"wrr"}
	if		$tmp172 627 640 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp173 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp174 $tmp173 $const11 	%argrw{"wrr"}
	if		$tmp174 638 638 	%argrw{"r"}
	lt		$tmp175 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp176 $tmp175 $const11 	%argrw{"wrr"}
	if		$tmp176 633 636 	%argrw{"r"}
	gt		$tmp177 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp178 $tmp177 $const11 	%argrw{"wrr"}
	assign		$tmp176 $tmp178 	%argrw{"wr"}
	neq		$tmp179 $tmp176 $const11 	%argrw{"wrr"}
	assign		$tmp174 $tmp179 	%argrw{"wr"}
	neq		$tmp180 $tmp174 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp172 $tmp180 	%line{25} %argrw{"wr"}
	neq		$tmp181 $tmp172 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp181 642 655 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp182 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp183 $tmp182 $const11 	%argrw{"wrr"}
	if		$tmp183 653 653 	%argrw{"r"}
	lt		$tmp184 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp185 $tmp184 $const11 	%argrw{"wrr"}
	if		$tmp185 648 651 	%argrw{"r"}
	gt		$tmp186 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp187 $tmp186 $const11 	%argrw{"wrr"}
	assign		$tmp185 $tmp187 	%argrw{"wr"}
	neq		$tmp188 $tmp185 $const11 	%argrw{"wrr"}
	assign		$tmp183 $tmp188 	%argrw{"wr"}
	neq		$tmp189 $tmp183 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp181 $tmp189 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp181 661 661 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 666 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out6.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out6.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:267
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(0.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out7);
	assign		tiledimage1_out_blur_vector4_out7.x $const3 	%line{267} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:268
#     vector4 tiledimage1_out_blur_vector4_out8 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp192.x $const3 	%line{268} %argrw{"wr"}
	assign		$tmp192.y $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 684 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp191.x blur_vector4_out_sample_size.x $tmp192.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp191.y blur_vector4_out_sample_size.y $tmp192.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 687 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp190.x geomprop_UV0_out1.x $tmp191.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp190.y geomprop_UV0_out1.y $tmp191.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:268
#     vector4 tiledimage1_out_blur_vector4_out8 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 756 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{268} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 691 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp190.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp190.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 694 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 697 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 700 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 752 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp193 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp194 $tmp193 $const11 	%argrw{"wrr"}
	if		$tmp194 708 721 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp195 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp196 $tmp195 $const11 	%argrw{"wrr"}
	if		$tmp196 719 719 	%argrw{"r"}
	lt		$tmp197 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp198 $tmp197 $const11 	%argrw{"wrr"}
	if		$tmp198 714 717 	%argrw{"r"}
	gt		$tmp199 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp200 $tmp199 $const11 	%argrw{"wrr"}
	assign		$tmp198 $tmp200 	%argrw{"wr"}
	neq		$tmp201 $tmp198 $const11 	%argrw{"wrr"}
	assign		$tmp196 $tmp201 	%argrw{"wr"}
	neq		$tmp202 $tmp196 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp194 $tmp202 	%line{25} %argrw{"wr"}
	neq		$tmp203 $tmp194 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp203 723 736 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp204 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp205 $tmp204 $const11 	%argrw{"wrr"}
	if		$tmp205 734 734 	%argrw{"r"}
	lt		$tmp206 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp207 $tmp206 $const11 	%argrw{"wrr"}
	if		$tmp207 729 732 	%argrw{"r"}
	gt		$tmp208 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp209 $tmp208 $const11 	%argrw{"wrr"}
	assign		$tmp207 $tmp209 	%argrw{"wr"}
	neq		$tmp210 $tmp207 $const11 	%argrw{"wrr"}
	assign		$tmp205 $tmp210 	%argrw{"wr"}
	neq		$tmp211 $tmp205 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp203 $tmp211 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp203 742 742 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 747 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out7.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out7.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:269
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(1.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out8);
	assign		tiledimage1_out_blur_vector4_out8.x $const3 	%line{269} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:270
#     vector4 tiledimage1_out_blur_vector4_out9 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp214.x $const13 	%line{270} %argrw{"wr"}
	assign		$tmp214.y $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 765 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp213.x blur_vector4_out_sample_size.x $tmp214.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp213.y blur_vector4_out_sample_size.y $tmp214.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 768 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp212.x geomprop_UV0_out1.x $tmp213.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp212.y geomprop_UV0_out1.y $tmp213.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:270
#     vector4 tiledimage1_out_blur_vector4_out9 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 837 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{270} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 772 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp212.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp212.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 775 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 778 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 781 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 833 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp215 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp216 $tmp215 $const11 	%argrw{"wrr"}
	if		$tmp216 789 802 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp217 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp218 $tmp217 $const11 	%argrw{"wrr"}
	if		$tmp218 800 800 	%argrw{"r"}
	lt		$tmp219 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp220 $tmp219 $const11 	%argrw{"wrr"}
	if		$tmp220 795 798 	%argrw{"r"}
	gt		$tmp221 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp222 $tmp221 $const11 	%argrw{"wrr"}
	assign		$tmp220 $tmp222 	%argrw{"wr"}
	neq		$tmp223 $tmp220 $const11 	%argrw{"wrr"}
	assign		$tmp218 $tmp223 	%argrw{"wr"}
	neq		$tmp224 $tmp218 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp216 $tmp224 	%line{25} %argrw{"wr"}
	neq		$tmp225 $tmp216 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp225 804 817 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp226 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp227 $tmp226 $const11 	%argrw{"wrr"}
	if		$tmp227 815 815 	%argrw{"r"}
	lt		$tmp228 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp229 $tmp228 $const11 	%argrw{"wrr"}
	if		$tmp229 810 813 	%argrw{"r"}
	gt		$tmp230 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp231 $tmp230 $const11 	%argrw{"wrr"}
	assign		$tmp229 $tmp231 	%argrw{"wr"}
	neq		$tmp232 $tmp229 $const11 	%argrw{"wrr"}
	assign		$tmp227 $tmp232 	%argrw{"wr"}
	neq		$tmp233 $tmp227 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp225 $tmp233 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp225 823 823 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 828 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out8.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out8.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:271
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(2.000000,-1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out9);
	assign		tiledimage1_out_blur_vector4_out9.x $const3 	%line{271} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:272
#     vector4 tiledimage1_out_blur_vector4_out10 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp236.x $const30 	%line{272} %argrw{"wr"}
	assign		$tmp236.y $const29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 846 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp235.x blur_vector4_out_sample_size.x $tmp236.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp235.y blur_vector4_out_sample_size.y $tmp236.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 849 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp234.x geomprop_UV0_out1.x $tmp235.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp234.y geomprop_UV0_out1.y $tmp235.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:272
#     vector4 tiledimage1_out_blur_vector4_out10 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 918 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{272} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 853 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp234.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp234.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 856 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 859 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 862 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 914 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp237 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp238 $tmp237 $const11 	%argrw{"wrr"}
	if		$tmp238 870 883 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp239 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp240 $tmp239 $const11 	%argrw{"wrr"}
	if		$tmp240 881 881 	%argrw{"r"}
	lt		$tmp241 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp242 $tmp241 $const11 	%argrw{"wrr"}
	if		$tmp242 876 879 	%argrw{"r"}
	gt		$tmp243 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp244 $tmp243 $const11 	%argrw{"wrr"}
	assign		$tmp242 $tmp244 	%argrw{"wr"}
	neq		$tmp245 $tmp242 $const11 	%argrw{"wrr"}
	assign		$tmp240 $tmp245 	%argrw{"wr"}
	neq		$tmp246 $tmp240 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp238 $tmp246 	%line{25} %argrw{"wr"}
	neq		$tmp247 $tmp238 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp247 885 898 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp248 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp249 $tmp248 $const11 	%argrw{"wrr"}
	if		$tmp249 896 896 	%argrw{"r"}
	lt		$tmp250 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp251 $tmp250 $const11 	%argrw{"wrr"}
	if		$tmp251 891 894 	%argrw{"r"}
	gt		$tmp252 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp253 $tmp252 $const11 	%argrw{"wrr"}
	assign		$tmp251 $tmp253 	%argrw{"wr"}
	neq		$tmp254 $tmp251 $const11 	%argrw{"wrr"}
	assign		$tmp249 $tmp254 	%argrw{"wr"}
	neq		$tmp255 $tmp249 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp247 $tmp255 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp247 904 904 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 909 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out9.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out9.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:273
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-2.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out10);
	assign		tiledimage1_out_blur_vector4_out10.x $const3 	%line{273} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:274
#     vector4 tiledimage1_out_blur_vector4_out11 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp258.x $const27 	%line{274} %argrw{"wr"}
	assign		$tmp258.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 927 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp257.x blur_vector4_out_sample_size.x $tmp258.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp257.y blur_vector4_out_sample_size.y $tmp258.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 930 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp256.x geomprop_UV0_out1.x $tmp257.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp256.y geomprop_UV0_out1.y $tmp257.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:274
#     vector4 tiledimage1_out_blur_vector4_out11 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 999 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 934 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp256.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp256.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 937 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 940 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 943 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 995 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp259 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp260 $tmp259 $const11 	%argrw{"wrr"}
	if		$tmp260 951 964 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp261 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp262 $tmp261 $const11 	%argrw{"wrr"}
	if		$tmp262 962 962 	%argrw{"r"}
	lt		$tmp263 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp264 $tmp263 $const11 	%argrw{"wrr"}
	if		$tmp264 957 960 	%argrw{"r"}
	gt		$tmp265 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp266 $tmp265 $const11 	%argrw{"wrr"}
	assign		$tmp264 $tmp266 	%argrw{"wr"}
	neq		$tmp267 $tmp264 $const11 	%argrw{"wrr"}
	assign		$tmp262 $tmp267 	%argrw{"wr"}
	neq		$tmp268 $tmp262 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp260 $tmp268 	%line{25} %argrw{"wr"}
	neq		$tmp269 $tmp260 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp269 966 979 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp270 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp271 $tmp270 $const11 	%argrw{"wrr"}
	if		$tmp271 977 977 	%argrw{"r"}
	lt		$tmp272 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp273 $tmp272 $const11 	%argrw{"wrr"}
	if		$tmp273 972 975 	%argrw{"r"}
	gt		$tmp274 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp275 $tmp274 $const11 	%argrw{"wrr"}
	assign		$tmp273 $tmp275 	%argrw{"wr"}
	neq		$tmp276 $tmp273 $const11 	%argrw{"wrr"}
	assign		$tmp271 $tmp276 	%argrw{"wr"}
	neq		$tmp277 $tmp271 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp269 $tmp277 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp269 985 985 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 990 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out10.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out10.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:275
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-1.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out11);
	assign		tiledimage1_out_blur_vector4_out11.x $const3 	%line{275} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:276
#     vector4 tiledimage1_out_blur_vector4_out12 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp280.x $const29 	%line{276} %argrw{"wr"}
	assign		$tmp280.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1008 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp279.x blur_vector4_out_sample_size.x $tmp280.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp279.y blur_vector4_out_sample_size.y $tmp280.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1011 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp278.x geomprop_UV0_out1.x $tmp279.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp278.y geomprop_UV0_out1.y $tmp279.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:276
#     vector4 tiledimage1_out_blur_vector4_out12 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1080 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{276} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1015 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp278.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp278.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1018 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1021 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1024 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1076 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp281 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp282 $tmp281 $const11 	%argrw{"wrr"}
	if		$tmp282 1032 1045 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp283 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp284 $tmp283 $const11 	%argrw{"wrr"}
	if		$tmp284 1043 1043 	%argrw{"r"}
	lt		$tmp285 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp286 $tmp285 $const11 	%argrw{"wrr"}
	if		$tmp286 1038 1041 	%argrw{"r"}
	gt		$tmp287 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp288 $tmp287 $const11 	%argrw{"wrr"}
	assign		$tmp286 $tmp288 	%argrw{"wr"}
	neq		$tmp289 $tmp286 $const11 	%argrw{"wrr"}
	assign		$tmp284 $tmp289 	%argrw{"wr"}
	neq		$tmp290 $tmp284 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp282 $tmp290 	%line{25} %argrw{"wr"}
	neq		$tmp291 $tmp282 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp291 1047 1060 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp292 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp293 $tmp292 $const11 	%argrw{"wrr"}
	if		$tmp293 1058 1058 	%argrw{"r"}
	lt		$tmp294 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp295 $tmp294 $const11 	%argrw{"wrr"}
	if		$tmp295 1053 1056 	%argrw{"r"}
	gt		$tmp296 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp297 $tmp296 $const11 	%argrw{"wrr"}
	assign		$tmp295 $tmp297 	%argrw{"wr"}
	neq		$tmp298 $tmp295 $const11 	%argrw{"wrr"}
	assign		$tmp293 $tmp298 	%argrw{"wr"}
	neq		$tmp299 $tmp293 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp291 $tmp299 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp291 1066 1066 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1071 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out11.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out11.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:277
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(0.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out12);
	assign		tiledimage1_out_blur_vector4_out12.x $const3 	%line{277} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:278
#     vector4 tiledimage1_out_blur_vector4_out13 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp302.x $const3 	%line{278} %argrw{"wr"}
	assign		$tmp302.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1089 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp301.x blur_vector4_out_sample_size.x $tmp302.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp301.y blur_vector4_out_sample_size.y $tmp302.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1092 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp300.x geomprop_UV0_out1.x $tmp301.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp300.y geomprop_UV0_out1.y $tmp301.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:278
#     vector4 tiledimage1_out_blur_vector4_out13 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1161 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{278} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1096 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp300.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp300.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1099 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1102 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1105 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1157 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp303 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp304 $tmp303 $const11 	%argrw{"wrr"}
	if		$tmp304 1113 1126 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp305 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp306 $tmp305 $const11 	%argrw{"wrr"}
	if		$tmp306 1124 1124 	%argrw{"r"}
	lt		$tmp307 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp308 $tmp307 $const11 	%argrw{"wrr"}
	if		$tmp308 1119 1122 	%argrw{"r"}
	gt		$tmp309 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp310 $tmp309 $const11 	%argrw{"wrr"}
	assign		$tmp308 $tmp310 	%argrw{"wr"}
	neq		$tmp311 $tmp308 $const11 	%argrw{"wrr"}
	assign		$tmp306 $tmp311 	%argrw{"wr"}
	neq		$tmp312 $tmp306 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp304 $tmp312 	%line{25} %argrw{"wr"}
	neq		$tmp313 $tmp304 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp313 1128 1141 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp314 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp315 $tmp314 $const11 	%argrw{"wrr"}
	if		$tmp315 1139 1139 	%argrw{"r"}
	lt		$tmp316 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp317 $tmp316 $const11 	%argrw{"wrr"}
	if		$tmp317 1134 1137 	%argrw{"r"}
	gt		$tmp318 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp319 $tmp318 $const11 	%argrw{"wrr"}
	assign		$tmp317 $tmp319 	%argrw{"wr"}
	neq		$tmp320 $tmp317 $const11 	%argrw{"wrr"}
	assign		$tmp315 $tmp320 	%argrw{"wr"}
	neq		$tmp321 $tmp315 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp313 $tmp321 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp313 1147 1147 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1152 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out12.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out12.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:279
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(1.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out13);
	assign		tiledimage1_out_blur_vector4_out13.x $const3 	%line{279} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:280
#     vector4 tiledimage1_out_blur_vector4_out14 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp324.x $const13 	%line{280} %argrw{"wr"}
	assign		$tmp324.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1170 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp323.x blur_vector4_out_sample_size.x $tmp324.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp323.y blur_vector4_out_sample_size.y $tmp324.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1173 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp322.x geomprop_UV0_out1.x $tmp323.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp322.y geomprop_UV0_out1.y $tmp323.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:280
#     vector4 tiledimage1_out_blur_vector4_out14 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1242 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{280} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1177 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp322.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp322.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1180 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1183 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1186 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1238 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp325 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp326 $tmp325 $const11 	%argrw{"wrr"}
	if		$tmp326 1194 1207 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp327 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp328 $tmp327 $const11 	%argrw{"wrr"}
	if		$tmp328 1205 1205 	%argrw{"r"}
	lt		$tmp329 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp330 $tmp329 $const11 	%argrw{"wrr"}
	if		$tmp330 1200 1203 	%argrw{"r"}
	gt		$tmp331 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp332 $tmp331 $const11 	%argrw{"wrr"}
	assign		$tmp330 $tmp332 	%argrw{"wr"}
	neq		$tmp333 $tmp330 $const11 	%argrw{"wrr"}
	assign		$tmp328 $tmp333 	%argrw{"wr"}
	neq		$tmp334 $tmp328 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp326 $tmp334 	%line{25} %argrw{"wr"}
	neq		$tmp335 $tmp326 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp335 1209 1222 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp336 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp337 $tmp336 $const11 	%argrw{"wrr"}
	if		$tmp337 1220 1220 	%argrw{"r"}
	lt		$tmp338 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp339 $tmp338 $const11 	%argrw{"wrr"}
	if		$tmp339 1215 1218 	%argrw{"r"}
	gt		$tmp340 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp341 $tmp340 $const11 	%argrw{"wrr"}
	assign		$tmp339 $tmp341 	%argrw{"wr"}
	neq		$tmp342 $tmp339 $const11 	%argrw{"wrr"}
	assign		$tmp337 $tmp342 	%argrw{"wr"}
	neq		$tmp343 $tmp337 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp335 $tmp343 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp335 1228 1228 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1233 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out13.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out13.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:281
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(2.000000,0.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out14);
	assign		tiledimage1_out_blur_vector4_out14.x $const3 	%line{281} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:282
#     vector4 tiledimage1_out_blur_vector4_out15 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp346.x $const30 	%line{282} %argrw{"wr"}
	assign		$tmp346.y $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1251 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp345.x blur_vector4_out_sample_size.x $tmp346.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp345.y blur_vector4_out_sample_size.y $tmp346.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1254 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp344.x geomprop_UV0_out1.x $tmp345.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp344.y geomprop_UV0_out1.y $tmp345.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:282
#     vector4 tiledimage1_out_blur_vector4_out15 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1323 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{282} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1258 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp344.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp344.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1261 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1264 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1267 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1319 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp347 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp348 $tmp347 $const11 	%argrw{"wrr"}
	if		$tmp348 1275 1288 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp349 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp350 $tmp349 $const11 	%argrw{"wrr"}
	if		$tmp350 1286 1286 	%argrw{"r"}
	lt		$tmp351 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp352 $tmp351 $const11 	%argrw{"wrr"}
	if		$tmp352 1281 1284 	%argrw{"r"}
	gt		$tmp353 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp354 $tmp353 $const11 	%argrw{"wrr"}
	assign		$tmp352 $tmp354 	%argrw{"wr"}
	neq		$tmp355 $tmp352 $const11 	%argrw{"wrr"}
	assign		$tmp350 $tmp355 	%argrw{"wr"}
	neq		$tmp356 $tmp350 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp348 $tmp356 	%line{25} %argrw{"wr"}
	neq		$tmp357 $tmp348 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp357 1290 1303 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp358 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp359 $tmp358 $const11 	%argrw{"wrr"}
	if		$tmp359 1301 1301 	%argrw{"r"}
	lt		$tmp360 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp361 $tmp360 $const11 	%argrw{"wrr"}
	if		$tmp361 1296 1299 	%argrw{"r"}
	gt		$tmp362 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp363 $tmp362 $const11 	%argrw{"wrr"}
	assign		$tmp361 $tmp363 	%argrw{"wr"}
	neq		$tmp364 $tmp361 $const11 	%argrw{"wrr"}
	assign		$tmp359 $tmp364 	%argrw{"wr"}
	neq		$tmp365 $tmp359 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp357 $tmp365 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp357 1309 1309 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1314 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out14.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out14.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:283
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-2.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out15);
	assign		tiledimage1_out_blur_vector4_out15.x $const3 	%line{283} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:284
#     vector4 tiledimage1_out_blur_vector4_out16 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp368.x $const27 	%line{284} %argrw{"wr"}
	assign		$tmp368.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1332 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp367.x blur_vector4_out_sample_size.x $tmp368.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp367.y blur_vector4_out_sample_size.y $tmp368.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1335 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp366.x geomprop_UV0_out1.x $tmp367.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp366.y geomprop_UV0_out1.y $tmp367.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:284
#     vector4 tiledimage1_out_blur_vector4_out16 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1404 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{284} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1339 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp366.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp366.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1342 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1345 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1348 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1400 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp369 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp370 $tmp369 $const11 	%argrw{"wrr"}
	if		$tmp370 1356 1369 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp371 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp372 $tmp371 $const11 	%argrw{"wrr"}
	if		$tmp372 1367 1367 	%argrw{"r"}
	lt		$tmp373 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp374 $tmp373 $const11 	%argrw{"wrr"}
	if		$tmp374 1362 1365 	%argrw{"r"}
	gt		$tmp375 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp376 $tmp375 $const11 	%argrw{"wrr"}
	assign		$tmp374 $tmp376 	%argrw{"wr"}
	neq		$tmp377 $tmp374 $const11 	%argrw{"wrr"}
	assign		$tmp372 $tmp377 	%argrw{"wr"}
	neq		$tmp378 $tmp372 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp370 $tmp378 	%line{25} %argrw{"wr"}
	neq		$tmp379 $tmp370 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp379 1371 1384 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp380 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp381 $tmp380 $const11 	%argrw{"wrr"}
	if		$tmp381 1382 1382 	%argrw{"r"}
	lt		$tmp382 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp383 $tmp382 $const11 	%argrw{"wrr"}
	if		$tmp383 1377 1380 	%argrw{"r"}
	gt		$tmp384 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp385 $tmp384 $const11 	%argrw{"wrr"}
	assign		$tmp383 $tmp385 	%argrw{"wr"}
	neq		$tmp386 $tmp383 $const11 	%argrw{"wrr"}
	assign		$tmp381 $tmp386 	%argrw{"wr"}
	neq		$tmp387 $tmp381 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp379 $tmp387 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp379 1390 1390 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1395 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out15.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out15.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:285
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-1.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out16);
	assign		tiledimage1_out_blur_vector4_out16.x $const3 	%line{285} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:286
#     vector4 tiledimage1_out_blur_vector4_out17 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp390.x $const29 	%line{286} %argrw{"wr"}
	assign		$tmp390.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1413 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp389.x blur_vector4_out_sample_size.x $tmp390.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp389.y blur_vector4_out_sample_size.y $tmp390.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1416 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp388.x geomprop_UV0_out1.x $tmp389.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp388.y geomprop_UV0_out1.y $tmp389.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:286
#     vector4 tiledimage1_out_blur_vector4_out17 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1485 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{286} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1420 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp388.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp388.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1423 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1426 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1429 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1481 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp391 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp392 $tmp391 $const11 	%argrw{"wrr"}
	if		$tmp392 1437 1450 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp393 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp394 $tmp393 $const11 	%argrw{"wrr"}
	if		$tmp394 1448 1448 	%argrw{"r"}
	lt		$tmp395 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp396 $tmp395 $const11 	%argrw{"wrr"}
	if		$tmp396 1443 1446 	%argrw{"r"}
	gt		$tmp397 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp398 $tmp397 $const11 	%argrw{"wrr"}
	assign		$tmp396 $tmp398 	%argrw{"wr"}
	neq		$tmp399 $tmp396 $const11 	%argrw{"wrr"}
	assign		$tmp394 $tmp399 	%argrw{"wr"}
	neq		$tmp400 $tmp394 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp392 $tmp400 	%line{25} %argrw{"wr"}
	neq		$tmp401 $tmp392 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp401 1452 1465 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp402 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp403 $tmp402 $const11 	%argrw{"wrr"}
	if		$tmp403 1463 1463 	%argrw{"r"}
	lt		$tmp404 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp405 $tmp404 $const11 	%argrw{"wrr"}
	if		$tmp405 1458 1461 	%argrw{"r"}
	gt		$tmp406 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp407 $tmp406 $const11 	%argrw{"wrr"}
	assign		$tmp405 $tmp407 	%argrw{"wr"}
	neq		$tmp408 $tmp405 $const11 	%argrw{"wrr"}
	assign		$tmp403 $tmp408 	%argrw{"wr"}
	neq		$tmp409 $tmp403 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp401 $tmp409 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp401 1471 1471 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1476 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out16.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out16.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:287
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(0.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out17);
	assign		tiledimage1_out_blur_vector4_out17.x $const3 	%line{287} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:288
#     vector4 tiledimage1_out_blur_vector4_out18 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp412.x $const3 	%line{288} %argrw{"wr"}
	assign		$tmp412.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1494 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp411.x blur_vector4_out_sample_size.x $tmp412.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp411.y blur_vector4_out_sample_size.y $tmp412.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1497 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp410.x geomprop_UV0_out1.x $tmp411.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp410.y geomprop_UV0_out1.y $tmp411.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:288
#     vector4 tiledimage1_out_blur_vector4_out18 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1566 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{288} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1501 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp410.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp410.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1504 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1507 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1510 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1562 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp413 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp414 $tmp413 $const11 	%argrw{"wrr"}
	if		$tmp414 1518 1531 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp415 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp416 $tmp415 $const11 	%argrw{"wrr"}
	if		$tmp416 1529 1529 	%argrw{"r"}
	lt		$tmp417 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp418 $tmp417 $const11 	%argrw{"wrr"}
	if		$tmp418 1524 1527 	%argrw{"r"}
	gt		$tmp419 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp420 $tmp419 $const11 	%argrw{"wrr"}
	assign		$tmp418 $tmp420 	%argrw{"wr"}
	neq		$tmp421 $tmp418 $const11 	%argrw{"wrr"}
	assign		$tmp416 $tmp421 	%argrw{"wr"}
	neq		$tmp422 $tmp416 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp414 $tmp422 	%line{25} %argrw{"wr"}
	neq		$tmp423 $tmp414 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp423 1533 1546 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp424 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp425 $tmp424 $const11 	%argrw{"wrr"}
	if		$tmp425 1544 1544 	%argrw{"r"}
	lt		$tmp426 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp427 $tmp426 $const11 	%argrw{"wrr"}
	if		$tmp427 1539 1542 	%argrw{"r"}
	gt		$tmp428 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp429 $tmp428 $const11 	%argrw{"wrr"}
	assign		$tmp427 $tmp429 	%argrw{"wr"}
	neq		$tmp430 $tmp427 $const11 	%argrw{"wrr"}
	assign		$tmp425 $tmp430 	%argrw{"wr"}
	neq		$tmp431 $tmp425 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp423 $tmp431 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp423 1552 1552 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1557 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out17.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out17.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:289
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(1.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out18);
	assign		tiledimage1_out_blur_vector4_out18.x $const3 	%line{289} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:290
#     vector4 tiledimage1_out_blur_vector4_out19 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp434.x $const13 	%line{290} %argrw{"wr"}
	assign		$tmp434.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1575 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp433.x blur_vector4_out_sample_size.x $tmp434.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp433.y blur_vector4_out_sample_size.y $tmp434.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1578 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp432.x geomprop_UV0_out1.x $tmp433.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp432.y geomprop_UV0_out1.y $tmp433.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:290
#     vector4 tiledimage1_out_blur_vector4_out19 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1647 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{290} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1582 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp432.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp432.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1585 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1588 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1591 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1643 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp435 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp436 $tmp435 $const11 	%argrw{"wrr"}
	if		$tmp436 1599 1612 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp437 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp438 $tmp437 $const11 	%argrw{"wrr"}
	if		$tmp438 1610 1610 	%argrw{"r"}
	lt		$tmp439 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp440 $tmp439 $const11 	%argrw{"wrr"}
	if		$tmp440 1605 1608 	%argrw{"r"}
	gt		$tmp441 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp442 $tmp441 $const11 	%argrw{"wrr"}
	assign		$tmp440 $tmp442 	%argrw{"wr"}
	neq		$tmp443 $tmp440 $const11 	%argrw{"wrr"}
	assign		$tmp438 $tmp443 	%argrw{"wr"}
	neq		$tmp444 $tmp438 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp436 $tmp444 	%line{25} %argrw{"wr"}
	neq		$tmp445 $tmp436 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp445 1614 1627 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp446 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp447 $tmp446 $const11 	%argrw{"wrr"}
	if		$tmp447 1625 1625 	%argrw{"r"}
	lt		$tmp448 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp449 $tmp448 $const11 	%argrw{"wrr"}
	if		$tmp449 1620 1623 	%argrw{"r"}
	gt		$tmp450 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp451 $tmp450 $const11 	%argrw{"wrr"}
	assign		$tmp449 $tmp451 	%argrw{"wr"}
	neq		$tmp452 $tmp449 $const11 	%argrw{"wrr"}
	assign		$tmp447 $tmp452 	%argrw{"wr"}
	neq		$tmp453 $tmp447 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp445 $tmp453 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp445 1633 1633 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1638 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out18.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out18.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:291
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(2.000000,1.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out19);
	assign		tiledimage1_out_blur_vector4_out19.x $const3 	%line{291} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:292
#     vector4 tiledimage1_out_blur_vector4_out20 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp456.x $const30 	%line{292} %argrw{"wr"}
	assign		$tmp456.y $const13 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1656 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp455.x blur_vector4_out_sample_size.x $tmp456.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp455.y blur_vector4_out_sample_size.y $tmp456.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1659 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp454.x geomprop_UV0_out1.x $tmp455.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp454.y geomprop_UV0_out1.y $tmp455.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:292
#     vector4 tiledimage1_out_blur_vector4_out20 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1728 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{292} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1663 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp454.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp454.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1666 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1669 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1672 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1724 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp457 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp458 $tmp457 $const11 	%argrw{"wrr"}
	if		$tmp458 1680 1693 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp459 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp460 $tmp459 $const11 	%argrw{"wrr"}
	if		$tmp460 1691 1691 	%argrw{"r"}
	lt		$tmp461 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp462 $tmp461 $const11 	%argrw{"wrr"}
	if		$tmp462 1686 1689 	%argrw{"r"}
	gt		$tmp463 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp464 $tmp463 $const11 	%argrw{"wrr"}
	assign		$tmp462 $tmp464 	%argrw{"wr"}
	neq		$tmp465 $tmp462 $const11 	%argrw{"wrr"}
	assign		$tmp460 $tmp465 	%argrw{"wr"}
	neq		$tmp466 $tmp460 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp458 $tmp466 	%line{25} %argrw{"wr"}
	neq		$tmp467 $tmp458 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp467 1695 1708 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp468 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp469 $tmp468 $const11 	%argrw{"wrr"}
	if		$tmp469 1706 1706 	%argrw{"r"}
	lt		$tmp470 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp471 $tmp470 $const11 	%argrw{"wrr"}
	if		$tmp471 1701 1704 	%argrw{"r"}
	gt		$tmp472 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp473 $tmp472 $const11 	%argrw{"wrr"}
	assign		$tmp471 $tmp473 	%argrw{"wr"}
	neq		$tmp474 $tmp471 $const11 	%argrw{"wrr"}
	assign		$tmp469 $tmp474 	%argrw{"wr"}
	neq		$tmp475 $tmp469 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp467 $tmp475 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp467 1714 1714 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1719 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out19.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out19.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:293
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-2.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out20);
	assign		tiledimage1_out_blur_vector4_out20.x $const3 	%line{293} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:294
#     vector4 tiledimage1_out_blur_vector4_out21 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp478.x $const27 	%line{294} %argrw{"wr"}
	assign		$tmp478.y $const30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1737 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp477.x blur_vector4_out_sample_size.x $tmp478.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp477.y blur_vector4_out_sample_size.y $tmp478.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1740 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp476.x geomprop_UV0_out1.x $tmp477.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp476.y geomprop_UV0_out1.y $tmp477.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:294
#     vector4 tiledimage1_out_blur_vector4_out21 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1809 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{294} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1744 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp476.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp476.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1747 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1750 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1753 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1805 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp479 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp480 $tmp479 $const11 	%argrw{"wrr"}
	if		$tmp480 1761 1774 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp481 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp482 $tmp481 $const11 	%argrw{"wrr"}
	if		$tmp482 1772 1772 	%argrw{"r"}
	lt		$tmp483 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp484 $tmp483 $const11 	%argrw{"wrr"}
	if		$tmp484 1767 1770 	%argrw{"r"}
	gt		$tmp485 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp486 $tmp485 $const11 	%argrw{"wrr"}
	assign		$tmp484 $tmp486 	%argrw{"wr"}
	neq		$tmp487 $tmp484 $const11 	%argrw{"wrr"}
	assign		$tmp482 $tmp487 	%argrw{"wr"}
	neq		$tmp488 $tmp482 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp480 $tmp488 	%line{25} %argrw{"wr"}
	neq		$tmp489 $tmp480 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp489 1776 1789 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp490 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp491 $tmp490 $const11 	%argrw{"wrr"}
	if		$tmp491 1787 1787 	%argrw{"r"}
	lt		$tmp492 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp493 $tmp492 $const11 	%argrw{"wrr"}
	if		$tmp493 1782 1785 	%argrw{"r"}
	gt		$tmp494 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp495 $tmp494 $const11 	%argrw{"wrr"}
	assign		$tmp493 $tmp495 	%argrw{"wr"}
	neq		$tmp496 $tmp493 $const11 	%argrw{"wrr"}
	assign		$tmp491 $tmp496 	%argrw{"wr"}
	neq		$tmp497 $tmp491 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp489 $tmp497 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp489 1795 1795 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1800 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out20.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out20.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:295
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(-1.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out21);
	assign		tiledimage1_out_blur_vector4_out21.x $const3 	%line{295} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:296
#     vector4 tiledimage1_out_blur_vector4_out22 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp500.x $const29 	%line{296} %argrw{"wr"}
	assign		$tmp500.y $const30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1818 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp499.x blur_vector4_out_sample_size.x $tmp500.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp499.y blur_vector4_out_sample_size.y $tmp500.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1821 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp498.x geomprop_UV0_out1.x $tmp499.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp498.y geomprop_UV0_out1.y $tmp499.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:296
#     vector4 tiledimage1_out_blur_vector4_out22 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1890 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{296} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1825 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp498.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp498.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1828 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1831 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1834 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1886 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp501 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp502 $tmp501 $const11 	%argrw{"wrr"}
	if		$tmp502 1842 1855 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp503 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp504 $tmp503 $const11 	%argrw{"wrr"}
	if		$tmp504 1853 1853 	%argrw{"r"}
	lt		$tmp505 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp506 $tmp505 $const11 	%argrw{"wrr"}
	if		$tmp506 1848 1851 	%argrw{"r"}
	gt		$tmp507 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp508 $tmp507 $const11 	%argrw{"wrr"}
	assign		$tmp506 $tmp508 	%argrw{"wr"}
	neq		$tmp509 $tmp506 $const11 	%argrw{"wrr"}
	assign		$tmp504 $tmp509 	%argrw{"wr"}
	neq		$tmp510 $tmp504 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp502 $tmp510 	%line{25} %argrw{"wr"}
	neq		$tmp511 $tmp502 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp511 1857 1870 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp512 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp513 $tmp512 $const11 	%argrw{"wrr"}
	if		$tmp513 1868 1868 	%argrw{"r"}
	lt		$tmp514 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp515 $tmp514 $const11 	%argrw{"wrr"}
	if		$tmp515 1863 1866 	%argrw{"r"}
	gt		$tmp516 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp517 $tmp516 $const11 	%argrw{"wrr"}
	assign		$tmp515 $tmp517 	%argrw{"wr"}
	neq		$tmp518 $tmp515 $const11 	%argrw{"wrr"}
	assign		$tmp513 $tmp518 	%argrw{"wr"}
	neq		$tmp519 $tmp513 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp511 $tmp519 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp511 1876 1876 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1881 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out21.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out21.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:297
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(0.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out22);
	assign		tiledimage1_out_blur_vector4_out22.x $const3 	%line{297} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:298
#     vector4 tiledimage1_out_blur_vector4_out23 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp522.x $const3 	%line{298} %argrw{"wr"}
	assign		$tmp522.y $const30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1899 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp521.x blur_vector4_out_sample_size.x $tmp522.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp521.y blur_vector4_out_sample_size.y $tmp522.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1902 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp520.x geomprop_UV0_out1.x $tmp521.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp520.y geomprop_UV0_out1.y $tmp521.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:298
#     vector4 tiledimage1_out_blur_vector4_out23 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 1971 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{298} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1906 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp520.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp520.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1909 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1912 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1915 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 1967 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp523 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp524 $tmp523 $const11 	%argrw{"wrr"}
	if		$tmp524 1923 1936 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp525 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp526 $tmp525 $const11 	%argrw{"wrr"}
	if		$tmp526 1934 1934 	%argrw{"r"}
	lt		$tmp527 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp528 $tmp527 $const11 	%argrw{"wrr"}
	if		$tmp528 1929 1932 	%argrw{"r"}
	gt		$tmp529 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp530 $tmp529 $const11 	%argrw{"wrr"}
	assign		$tmp528 $tmp530 	%argrw{"wr"}
	neq		$tmp531 $tmp528 $const11 	%argrw{"wrr"}
	assign		$tmp526 $tmp531 	%argrw{"wr"}
	neq		$tmp532 $tmp526 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp524 $tmp532 	%line{25} %argrw{"wr"}
	neq		$tmp533 $tmp524 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp533 1938 1951 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp534 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp535 $tmp534 $const11 	%argrw{"wrr"}
	if		$tmp535 1949 1949 	%argrw{"r"}
	lt		$tmp536 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp537 $tmp536 $const11 	%argrw{"wrr"}
	if		$tmp537 1944 1947 	%argrw{"r"}
	gt		$tmp538 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp539 $tmp538 $const11 	%argrw{"wrr"}
	assign		$tmp537 $tmp539 	%argrw{"wr"}
	neq		$tmp540 $tmp537 $const11 	%argrw{"wrr"}
	assign		$tmp535 $tmp540 	%argrw{"wr"}
	neq		$tmp541 $tmp535 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp533 $tmp541 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp533 1957 1957 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 1962 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out22.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out22.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:299
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(1.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out23);
	assign		tiledimage1_out_blur_vector4_out23.x $const3 	%line{299} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:300
#     vector4 tiledimage1_out_blur_vector4_out24 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		$tmp544.x $const13 	%line{300} %argrw{"wr"}
	assign		$tmp544.y $const30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1980 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp543.x blur_vector4_out_sample_size.x $tmp544.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp543.y blur_vector4_out_sample_size.y $tmp544.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 1983 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp542.x geomprop_UV0_out1.x $tmp543.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp542.y geomprop_UV0_out1.y $tmp543.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:300
#     vector4 tiledimage1_out_blur_vector4_out24 = vector4(0.0, 0.0, 0.0, 0.0);
	functioncall	$const4 2052 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{300} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1987 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp542.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp542.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 1990 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 1993 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 1996 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 2048 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp545 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp546 $tmp545 $const11 	%argrw{"wrr"}
	if		$tmp546 2004 2017 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp547 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp548 $tmp547 $const11 	%argrw{"wrr"}
	if		$tmp548 2015 2015 	%argrw{"r"}
	lt		$tmp549 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp550 $tmp549 $const11 	%argrw{"wrr"}
	if		$tmp550 2010 2013 	%argrw{"r"}
	gt		$tmp551 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp552 $tmp551 $const11 	%argrw{"wrr"}
	assign		$tmp550 $tmp552 	%argrw{"wr"}
	neq		$tmp553 $tmp550 $const11 	%argrw{"wrr"}
	assign		$tmp548 $tmp553 	%argrw{"wr"}
	neq		$tmp554 $tmp548 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp546 $tmp554 	%line{25} %argrw{"wr"}
	neq		$tmp555 $tmp546 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp555 2019 2032 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp556 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp557 $tmp556 $const11 	%argrw{"wrr"}
	if		$tmp557 2030 2030 	%argrw{"r"}
	lt		$tmp558 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp559 $tmp558 $const11 	%argrw{"wrr"}
	if		$tmp559 2025 2028 	%argrw{"r"}
	gt		$tmp560 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp561 $tmp560 $const11 	%argrw{"wrr"}
	assign		$tmp559 $tmp561 	%argrw{"wr"}
	neq		$tmp562 $tmp559 $const11 	%argrw{"wrr"}
	assign		$tmp557 $tmp562 	%argrw{"wr"}
	neq		$tmp563 $tmp557 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp555 $tmp563 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp555 2038 2038 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 2043 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out23.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out23.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:301
#     NG_tiledimage_vector4(tiledimage1_file_, tiledimage1_default, geomprop_UV0_out1 + blur_vector4_out_sample_size * vector2(2.000000,2.000000), tiledimage1_uvtiling, tiledimage1_uvoffset, tiledimage1_realworldimagesize, tiledimage1_realworldtilesize, tiledimage1_filtertype, tiledimage1_framerange, tiledimage1_frameoffset, tiledimage1_frameendaction, tiledimage1_out_blur_vector4_out24);
	assign		tiledimage1_out_blur_vector4_out24.x $const3 	%line{301} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.y $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.z $const3 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:302
#     vector4 blur_vector4_out_samples[MX_MAX_SAMPLE_COUNT];
	assign		$tmp566.x $const30 	%line{302} %argrw{"wr"}
	assign		$tmp566.y $const30 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2061 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp565.x blur_vector4_out_sample_size.x $tmp566.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		$tmp565.y blur_vector4_out_sample_size.y $tmp566.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 2064 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp564.x geomprop_UV0_out1.x $tmp565.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{28} %argrw{"wrr"}
	add		$tmp564.y geomprop_UV0_out1.y $tmp565.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:302
#     vector4 blur_vector4_out_samples[MX_MAX_SAMPLE_COUNT];
	functioncall	$const4 2133 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{302} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2068 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_vector4_out.x $tmp564.x tiledimage1_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_vector4_out.y $tmp564.y tiledimage1_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const6 2071 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_vector4_out.x ___672_N_mult_vector4_out.x tiledimage1_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_vector4_out.y ___672_N_mult_vector4_out.y tiledimage1_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const7 2074 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_vector4_out.x ___672_N_sub_vector4_out.x tiledimage1_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_vector4_out.y ___672_N_sub_vector4_out.y tiledimage1_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2077 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_vector4_out.x ___672_N_divtilesize_vector4_out.x tiledimage1_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_vector4_out.y ___672_N_divtilesize_vector4_out.y tiledimage1_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:51
#     mx_image_vector4(file, "", default1, N_multtilesize_vector4_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_vector4_out);
	assign		___672_N_img_vector4_out.x $const3 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{51} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z $const3 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:52
#     out = N_img_vector4_out;
	functioncall	$const10 2129 	%line{52} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp567 tiledimage1_file_.filename $const8 	%line{25} %argrw{"wrr"}
	neq		$tmp568 $tmp567 $const11 	%argrw{"wrr"}
	if		$tmp568 2085 2098 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp569 $const9 $const12 	%line{26} %argrw{"wrr"}
	neq		$tmp570 $tmp569 $const11 	%argrw{"wrr"}
	if		$tmp570 2096 2096 	%argrw{"r"}
	lt		$tmp571 ___672_N_multtilesize_vector4_out.x $const3 	%argrw{"wrr"}
	neq		$tmp572 $tmp571 $const11 	%argrw{"wrr"}
	if		$tmp572 2091 2094 	%argrw{"r"}
	gt		$tmp573 ___672_N_multtilesize_vector4_out.x $const13 	%argrw{"wrr"}
	neq		$tmp574 $tmp573 $const11 	%argrw{"wrr"}
	assign		$tmp572 $tmp574 	%argrw{"wr"}
	neq		$tmp575 $tmp572 $const11 	%argrw{"wrr"}
	assign		$tmp570 $tmp575 	%argrw{"wr"}
	neq		$tmp576 $tmp570 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp568 $tmp576 	%line{25} %argrw{"wr"}
	neq		$tmp577 $tmp568 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp577 2100 2113 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:27
#     {
	eq		$tmp578 $const9 $const12 	%line{27} %argrw{"wrr"}
	neq		$tmp579 $tmp578 $const11 	%argrw{"wrr"}
	if		$tmp579 2111 2111 	%argrw{"r"}
	lt		$tmp580 ___672_N_multtilesize_vector4_out.y $const3 	%argrw{"wrr"}
	neq		$tmp581 $tmp580 $const11 	%argrw{"wrr"}
	if		$tmp581 2106 2109 	%argrw{"r"}
	gt		$tmp582 ___672_N_multtilesize_vector4_out.y $const13 	%argrw{"wrr"}
	neq		$tmp583 $tmp582 $const11 	%argrw{"wrr"}
	assign		$tmp581 $tmp583 	%argrw{"wr"}
	neq		$tmp584 $tmp581 $const11 	%argrw{"wrr"}
	assign		$tmp579 $tmp584 	%argrw{"wr"}
	neq		$tmp585 $tmp579 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp577 $tmp585 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp577 2119 2119 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:29
#         return;
	assign		___672_N_img_vector4_out.x tiledimage1_default.x 	%line{29} %argrw{"wr"}
	assign		___672_N_img_vector4_out.y tiledimage1_default.y 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.z tiledimage1_default.z 	%argrw{"wr"}
	assign		___672_N_img_vector4_out.w tiledimage1_default.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:33
#     float missingAlpha = default_value.w;
	color		___670_missingColor tiledimage1_default.x tiledimage1_default.y tiledimage1_default.z 	%line{33} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:34
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingAlpha tiledimage1_default.w 	%line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:35
#     float alpha;
	functioncall	$const14 2124 	%line{35} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_vector4_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_vector4_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:37
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb tiledimage1_file_.filename ___670_st.x ___670_st.y $const15 ___670_alpha $const16 $const8 $const17 tiledimage1_filtertype $const18 ___670_missingColor $const19 ___670_missingAlpha $const20 $const9 $const21 $const9 	%line{37} %argrw{"wrrrrwrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:42
# }
	compref		___672_N_img_vector4_out.x ___670_rgb $const11 	%line{42} %argrw{"wrr"}
	compref		___672_N_img_vector4_out.y ___670_rgb $const22 	%argrw{"wrr"}
	compref		___672_N_img_vector4_out.z ___670_rgb $const23 	%argrw{"wrr"}
	assign		___672_N_img_vector4_out.w ___670_alpha 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:53
# }
	assign		tiledimage1_out_blur_vector4_out24.x ___672_N_img_vector4_out.x 	%line{53} %argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.y ___672_N_img_vector4_out.y 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.z ___672_N_img_vector4_out.z 	%argrw{"wr"}
	assign		tiledimage1_out_blur_vector4_out24.w ___672_N_img_vector4_out.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:304
#     blur_vector4_out_samples[1] = tiledimage1_out_blur_vector4_out1;
	aassign		blur_vector4_out_samples.x $const11 tiledimage1_out_blur_vector4_out0.x 	%line{304} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const11 tiledimage1_out_blur_vector4_out0.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const11 tiledimage1_out_blur_vector4_out0.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const11 tiledimage1_out_blur_vector4_out0.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:305
#     blur_vector4_out_samples[2] = tiledimage1_out_blur_vector4_out2;
	aassign		blur_vector4_out_samples.x $const22 tiledimage1_out_blur_vector4_out1.x 	%line{305} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const22 tiledimage1_out_blur_vector4_out1.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const22 tiledimage1_out_blur_vector4_out1.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const22 tiledimage1_out_blur_vector4_out1.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:306
#     blur_vector4_out_samples[3] = tiledimage1_out_blur_vector4_out3;
	aassign		blur_vector4_out_samples.x $const23 tiledimage1_out_blur_vector4_out2.x 	%line{306} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const23 tiledimage1_out_blur_vector4_out2.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const23 tiledimage1_out_blur_vector4_out2.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const23 tiledimage1_out_blur_vector4_out2.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:307
#     blur_vector4_out_samples[4] = tiledimage1_out_blur_vector4_out4;
	aassign		blur_vector4_out_samples.x $const31 tiledimage1_out_blur_vector4_out3.x 	%line{307} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const31 tiledimage1_out_blur_vector4_out3.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const31 tiledimage1_out_blur_vector4_out3.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const31 tiledimage1_out_blur_vector4_out3.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:308
#     blur_vector4_out_samples[5] = tiledimage1_out_blur_vector4_out5;
	aassign		blur_vector4_out_samples.x $const32 tiledimage1_out_blur_vector4_out4.x 	%line{308} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const32 tiledimage1_out_blur_vector4_out4.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const32 tiledimage1_out_blur_vector4_out4.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const32 tiledimage1_out_blur_vector4_out4.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:309
#     blur_vector4_out_samples[6] = tiledimage1_out_blur_vector4_out6;
	aassign		blur_vector4_out_samples.x $const33 tiledimage1_out_blur_vector4_out5.x 	%line{309} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const33 tiledimage1_out_blur_vector4_out5.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const33 tiledimage1_out_blur_vector4_out5.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const33 tiledimage1_out_blur_vector4_out5.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:310
#     blur_vector4_out_samples[7] = tiledimage1_out_blur_vector4_out7;
	aassign		blur_vector4_out_samples.x $const34 tiledimage1_out_blur_vector4_out6.x 	%line{310} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const34 tiledimage1_out_blur_vector4_out6.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const34 tiledimage1_out_blur_vector4_out6.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const34 tiledimage1_out_blur_vector4_out6.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:311
#     blur_vector4_out_samples[8] = tiledimage1_out_blur_vector4_out8;
	aassign		blur_vector4_out_samples.x $const35 tiledimage1_out_blur_vector4_out7.x 	%line{311} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const35 tiledimage1_out_blur_vector4_out7.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const35 tiledimage1_out_blur_vector4_out7.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const35 tiledimage1_out_blur_vector4_out7.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:312
#     blur_vector4_out_samples[9] = tiledimage1_out_blur_vector4_out9;
	aassign		blur_vector4_out_samples.x $const36 tiledimage1_out_blur_vector4_out8.x 	%line{312} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const36 tiledimage1_out_blur_vector4_out8.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const36 tiledimage1_out_blur_vector4_out8.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const36 tiledimage1_out_blur_vector4_out8.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:313
#     blur_vector4_out_samples[10] = tiledimage1_out_blur_vector4_out10;
	aassign		blur_vector4_out_samples.x $const37 tiledimage1_out_blur_vector4_out9.x 	%line{313} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const37 tiledimage1_out_blur_vector4_out9.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const37 tiledimage1_out_blur_vector4_out9.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const37 tiledimage1_out_blur_vector4_out9.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:314
#     blur_vector4_out_samples[11] = tiledimage1_out_blur_vector4_out11;
	aassign		blur_vector4_out_samples.x $const38 tiledimage1_out_blur_vector4_out10.x 	%line{314} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const38 tiledimage1_out_blur_vector4_out10.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const38 tiledimage1_out_blur_vector4_out10.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const38 tiledimage1_out_blur_vector4_out10.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:315
#     blur_vector4_out_samples[12] = tiledimage1_out_blur_vector4_out12;
	aassign		blur_vector4_out_samples.x $const39 tiledimage1_out_blur_vector4_out11.x 	%line{315} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const39 tiledimage1_out_blur_vector4_out11.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const39 tiledimage1_out_blur_vector4_out11.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const39 tiledimage1_out_blur_vector4_out11.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:316
#     blur_vector4_out_samples[13] = tiledimage1_out_blur_vector4_out13;
	aassign		blur_vector4_out_samples.x $const40 tiledimage1_out_blur_vector4_out12.x 	%line{316} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const40 tiledimage1_out_blur_vector4_out12.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const40 tiledimage1_out_blur_vector4_out12.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const40 tiledimage1_out_blur_vector4_out12.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:317
#     blur_vector4_out_samples[14] = tiledimage1_out_blur_vector4_out14;
	aassign		blur_vector4_out_samples.x $const41 tiledimage1_out_blur_vector4_out13.x 	%line{317} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const41 tiledimage1_out_blur_vector4_out13.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const41 tiledimage1_out_blur_vector4_out13.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const41 tiledimage1_out_blur_vector4_out13.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:318
#     blur_vector4_out_samples[15] = tiledimage1_out_blur_vector4_out15;
	aassign		blur_vector4_out_samples.x $const42 tiledimage1_out_blur_vector4_out14.x 	%line{318} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const42 tiledimage1_out_blur_vector4_out14.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const42 tiledimage1_out_blur_vector4_out14.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const42 tiledimage1_out_blur_vector4_out14.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:319
#     blur_vector4_out_samples[16] = tiledimage1_out_blur_vector4_out16;
	aassign		blur_vector4_out_samples.x $const43 tiledimage1_out_blur_vector4_out15.x 	%line{319} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const43 tiledimage1_out_blur_vector4_out15.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const43 tiledimage1_out_blur_vector4_out15.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const43 tiledimage1_out_blur_vector4_out15.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:320
#     blur_vector4_out_samples[17] = tiledimage1_out_blur_vector4_out17;
	aassign		blur_vector4_out_samples.x $const44 tiledimage1_out_blur_vector4_out16.x 	%line{320} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const44 tiledimage1_out_blur_vector4_out16.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const44 tiledimage1_out_blur_vector4_out16.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const44 tiledimage1_out_blur_vector4_out16.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:321
#     blur_vector4_out_samples[18] = tiledimage1_out_blur_vector4_out18;
	aassign		blur_vector4_out_samples.x $const45 tiledimage1_out_blur_vector4_out17.x 	%line{321} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const45 tiledimage1_out_blur_vector4_out17.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const45 tiledimage1_out_blur_vector4_out17.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const45 tiledimage1_out_blur_vector4_out17.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:322
#     blur_vector4_out_samples[19] = tiledimage1_out_blur_vector4_out19;
	aassign		blur_vector4_out_samples.x $const46 tiledimage1_out_blur_vector4_out18.x 	%line{322} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const46 tiledimage1_out_blur_vector4_out18.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const46 tiledimage1_out_blur_vector4_out18.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const46 tiledimage1_out_blur_vector4_out18.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:323
#     blur_vector4_out_samples[20] = tiledimage1_out_blur_vector4_out20;
	aassign		blur_vector4_out_samples.x $const47 tiledimage1_out_blur_vector4_out19.x 	%line{323} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const47 tiledimage1_out_blur_vector4_out19.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const47 tiledimage1_out_blur_vector4_out19.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const47 tiledimage1_out_blur_vector4_out19.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:324
#     blur_vector4_out_samples[21] = tiledimage1_out_blur_vector4_out21;
	aassign		blur_vector4_out_samples.x $const48 tiledimage1_out_blur_vector4_out20.x 	%line{324} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const48 tiledimage1_out_blur_vector4_out20.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const48 tiledimage1_out_blur_vector4_out20.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const48 tiledimage1_out_blur_vector4_out20.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:325
#     blur_vector4_out_samples[22] = tiledimage1_out_blur_vector4_out22;
	aassign		blur_vector4_out_samples.x $const49 tiledimage1_out_blur_vector4_out21.x 	%line{325} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const49 tiledimage1_out_blur_vector4_out21.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const49 tiledimage1_out_blur_vector4_out21.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const49 tiledimage1_out_blur_vector4_out21.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:326
#     blur_vector4_out_samples[23] = tiledimage1_out_blur_vector4_out23;
	aassign		blur_vector4_out_samples.x $const50 tiledimage1_out_blur_vector4_out22.x 	%line{326} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const50 tiledimage1_out_blur_vector4_out22.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const50 tiledimage1_out_blur_vector4_out22.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const50 tiledimage1_out_blur_vector4_out22.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:327
#     blur_vector4_out_samples[24] = tiledimage1_out_blur_vector4_out24;
	aassign		blur_vector4_out_samples.x $const51 tiledimage1_out_blur_vector4_out23.x 	%line{327} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const51 tiledimage1_out_blur_vector4_out23.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const51 tiledimage1_out_blur_vector4_out23.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const51 tiledimage1_out_blur_vector4_out23.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:328
#     vector4 blur_vector4_out;
	aassign		blur_vector4_out_samples.x $const52 tiledimage1_out_blur_vector4_out24.x 	%line{328} %argrw{"wrr"}
	aassign		blur_vector4_out_samples.y $const52 tiledimage1_out_blur_vector4_out24.y 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.z $const52 tiledimage1_out_blur_vector4_out24.z 	%argrw{"wrr"}
	aassign		blur_vector4_out_samples.w $const52 tiledimage1_out_blur_vector4_out24.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:330
#     {
	eq		$tmp586 blur_vector4_filtertype $const53 	%line{330} %argrw{"wrr"}
	if		$tmp586 2271 2307 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:332
#     }
	functioncall	$const55 2271 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:171
#     for (int i=0;  i<sampleCount; i++)
	assign		___691_result.x $const3 	%line{171} %argrw{"wr"}
	assign		___691_result.y $const3 	%argrw{"wr"}
	assign		___691_result.z $const3 	%argrw{"wr"}
	assign		___691_result.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:172
#     {
	for		$tmp588 2242 2244 2265 2267 	%line{172} %argrw{"r"}
	assign		___692_i $const11 	%argrw{"wr"}
	lt		$tmp587 ___692_i $const54 	%argrw{"wrr"}
	neq		$tmp588 $tmp587 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:174
#     }
	aref		$tmp590.x blur_vector4_out_samples.x ___692_i 	%line{174} %argrw{"wrr"}
	aref		$tmp590.y blur_vector4_out_samples.y ___692_i 	%argrw{"wrr"}
	aref		$tmp590.z blur_vector4_out_samples.z ___692_i 	%argrw{"wrr"}
	aref		$tmp590.w blur_vector4_out_samples.w ___692_i 	%argrw{"wrr"}
	add		$tmp591 ___692_i $const38 	%argrw{"wrr"}
	aref		$tmp592 c_gaussian_filter_weights $tmp591 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2260 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp593.x $tmp592 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp593.y $tmp592 	%argrw{"wr"}
	assign		$tmp593.z $tmp592 	%argrw{"wr"}
	assign		$tmp593.w $tmp592 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2260 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp589.x $tmp590.x $tmp593.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp589.y $tmp590.y $tmp593.y 	%argrw{"wrr"}
	mul		$tmp589.z $tmp590.z $tmp593.z 	%argrw{"wrr"}
	mul		$tmp589.w $tmp590.w $tmp593.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 2265 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___691_result.x ___691_result.x $tmp589.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{31} %argrw{"wrr"}
	add		___691_result.y ___691_result.y $tmp589.y 	%argrw{"wrr"}
	add		___691_result.z ___691_result.z $tmp589.z 	%argrw{"wrr"}
	add		___691_result.w ___691_result.w $tmp589.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:172
#     {
	assign		$tmp594 ___692_i 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{172} %argrw{"wr"}
	add		___692_i ___692_i $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:176
# }
	assign		blur_vector4_out.x ___691_result.x 	%line{176} %argrw{"wr"}
	assign		blur_vector4_out.y ___691_result.y 	%argrw{"wr"}
	assign		blur_vector4_out.z ___691_result.z 	%argrw{"wr"}
	assign		blur_vector4_out.w ___691_result.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:336
#     }
	functioncall	$const55 2307 	%line{336} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:171
#     for (int i=0;  i<sampleCount; i++)
	assign		___691_result.x $const3 	%line{171} %argrw{"wr"}
	assign		___691_result.y $const3 	%argrw{"wr"}
	assign		___691_result.z $const3 	%argrw{"wr"}
	assign		___691_result.w $const3 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:172
#     {
	for		$tmp596 2278 2280 2301 2303 	%line{172} %argrw{"r"}
	assign		___692_i $const11 	%argrw{"wr"}
	lt		$tmp595 ___692_i $const54 	%argrw{"wrr"}
	neq		$tmp596 $tmp595 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:174
#     }
	aref		$tmp598.x blur_vector4_out_samples.x ___692_i 	%line{174} %argrw{"wrr"}
	aref		$tmp598.y blur_vector4_out_samples.y ___692_i 	%argrw{"wrr"}
	aref		$tmp598.z blur_vector4_out_samples.z ___692_i 	%argrw{"wrr"}
	aref		$tmp598.w blur_vector4_out_samples.w ___692_i 	%argrw{"wrr"}
	add		$tmp599 ___692_i $const38 	%argrw{"wrr"}
	aref		$tmp600 c_box_filter_weights $tmp599 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2296 	%line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp601.x $tmp600 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp601.y $tmp600 	%argrw{"wr"}
	assign		$tmp601.z $tmp600 	%argrw{"wr"}
	assign		$tmp601.w $tmp600 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const5 2296 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp597.x $tmp598.x $tmp601.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp597.y $tmp598.y $tmp601.y 	%argrw{"wrr"}
	mul		$tmp597.z $tmp598.z $tmp601.z 	%argrw{"wrr"}
	mul		$tmp597.w $tmp598.w $tmp601.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:340
# 
	functioncall	$const28 2301 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{340} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___691_result.x ___691_result.x $tmp597.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{31} %argrw{"wrr"}
	add		___691_result.y ___691_result.y $tmp597.y 	%argrw{"wrr"}
	add		___691_result.z ___691_result.z $tmp597.z 	%argrw{"wrr"}
	add		___691_result.w ___691_result.w $tmp597.w 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:172
#     {
	assign		$tmp602 ___692_i 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl"} %line{172} %argrw{"wr"}
	add		___692_i ___692_i $const22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:176
# }
	assign		blur_vector4_out.x ___691_result.x 	%line{176} %argrw{"wr"}
	assign		blur_vector4_out.y ___691_result.y 	%argrw{"wr"}
	assign		blur_vector4_out.z ___691_result.z 	%argrw{"wr"}
	assign		blur_vector4_out.w ___691_result.w 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\blur\\blur_vector4_out.osl:338
# }
	assign		out.x blur_vector4_out.x 	%line{338} %argrw{"wr"}
	assign		out.y blur_vector4_out.y 	%argrw{"wr"}
	assign		out.z blur_vector4_out.z 	%argrw{"wr"}
	assign		out.w blur_vector4_out.w 	%argrw{"wr"}
	end
