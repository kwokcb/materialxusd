OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\convolution\heighttonormal\heighttonormal_surface2_out.oso
surface heighttonormal_surface2_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"surface2_out"} 
param	string	file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/plain_heightmap.png"		%meta{string,widget,"filename"}  %read{1,1} %write{2147483647,-1} %derivs
param	string	file_colorspace	""		%meta{string,widget,"colorspace"}  %read{2,2} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	tiledimage_default	0		%meta{string,widget,"number"}  %read{53,55} %write{2147483647,-1} %derivs
param	struct vector2	tiledimage_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvtiling.x	10		%read{8,8} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage_uvtiling.y	10		%read{9,9} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvoffset.x	0		%read{11,11} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage_uvoffset.y	0		%read{12,12} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldimagesize.x	1		%read{14,14} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldimagesize.y	1		%read{15,15} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldtilesize.x	1		%read{17,17} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldtilesize.y	1		%read{18,18} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{1} %derivs
param	string	tiledimage_filtertype	"linear"		%read{59,59} %write{2147483647,-1} %derivs
param	string	tiledimage_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	heighttonormal_scale	0.200000003		%meta{string,widget,"number"}  %read{67,67} %write{2147483647,-1}
param	float	scale_in2	2		%meta{string,widget,"number"}  %read{79,79} %write{2147483647,-1}
param	vector	bias_in2	-1 -1 -1		%read{80,80} %write{2147483647,-1}
param	color	UsdPreviewSurface_diffuseColor	0.180000007 0.180000007 0.180000007		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Diffuse Color"}  %read{167,350} %write{2147483647,-1}
param	color	UsdPreviewSurface_emissiveColor	0 0 0		%meta{color,min,0,0,0} %meta{color,slidermax,1,1,1} %meta{string,label,"Emissive Color"}  %read{402,402} %write{2147483647,-1}
param	int	UsdPreviewSurface_useSpecularWorkflow	0		%meta{int,min,0} %meta{int,max,1} %meta{int,sensitivity,1} %meta{string,label,"Use Specular Workflow"} %meta{string,widget,"number"}  %read{150,150} %write{2147483647,-1}
param	color	UsdPreviewSurface_specularColor	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"}  %read{347,347} %write{2147483647,-1}
param	float	UsdPreviewSurface_metallic	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metallic"} %meta{string,widget,"number"}  %read{149,394} %write{2147483647,-1}
param	float	UsdPreviewSurface_roughness	0.5		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Roughness"} %meta{string,widget,"number"}  %read{130,130} %write{2147483647,-1}
param	float	UsdPreviewSurface_clearcoat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat"} %meta{string,widget,"number"}  %read{336,336} %write{2147483647,-1}
param	float	UsdPreviewSurface_clearcoatRoughness	0.00999999978		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Clearcoat Roughness"} %meta{string,widget,"number"}  %read{98,98} %write{2147483647,-1}
param	float	UsdPreviewSurface_opacity	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity"} %meta{string,widget,"number"}  %read{159,206} %write{2147483647,-1}
param	int	UsdPreviewSurface_opacityMode	0		%meta{string,label,"Opacity Mode"} %meta{string,widget,"number"}  %read{239,311} %write{2147483647,-1}
param	float	UsdPreviewSurface_opacityThreshold	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Opacity Threshold"} %meta{string,widget,"number"}  %read{154,192} %write{2147483647,-1}
param	float	UsdPreviewSurface_ior	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,widget,"number"}  %read{92,364} %write{2147483647,-1}
param	float	UsdPreviewSurface_displacement	0		%meta{string,label,"Displacement"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	UsdPreviewSurface_occlusion	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Occlusion"} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	surface2_out			%read{2147483647,-1} %write{424,424}
global	normal	N	%read{86,123} %write{2147483647,-1}
global	float	u	%read{3,3} %write{2147483647,-1} %derivs
global	float	v	%read{4,4} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{59,59} %write{55,55} %derivs
local	float	___670_st.x	%read{59,59} %write{57,57} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{59,59} %write{58,58} %mystruct{___670_st} %mystructfield{1} %derivs
local	color	___670_rgb	%read{60,60} %write{59,59} %derivs
local	float	___672_N_mult_float_out.x	%read{11,11} %write{8,8} %mystruct{___672_N_mult_float_out} %mystructfield{0} %derivs
local	float	___672_N_mult_float_out.y	%read{12,12} %write{9,9} %mystruct{___672_N_mult_float_out} %mystructfield{1} %derivs
local	float	___672_N_sub_float_out.x	%read{14,14} %write{11,11} %mystruct{___672_N_sub_float_out} %mystructfield{0} %derivs
local	float	___672_N_sub_float_out.y	%read{15,15} %write{12,12} %mystruct{___672_N_sub_float_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_float_out.x	%read{17,17} %write{14,14} %mystruct{___672_N_divtilesize_float_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_float_out.y	%read{18,18} %write{15,15} %mystruct{___672_N_divtilesize_float_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_float_out.x	%read{27,57} %write{17,17} %mystruct{___672_N_multtilesize_float_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_float_out.y	%read{42,58} %write{18,18} %mystruct{___672_N_multtilesize_float_out} %mystructfield{1} %derivs
local	float	___672_N_img_float_out	%read{61,61} %write{19,60} %derivs
local	float	___673_dx	%read{68,75} %write{65,65}
local	float	___673_dy	%read{70,75} %write{66,66}
local	float	___673_dz	%read{75,75} %write{74,74}
local	vector	___673_dir	%read{77,77} %write{76,76}
local	float	___674_roughness_sqr	%read{109,147} %write{101,133}
local	float	___675_aspect	%read{109,144} %write{108,140}
local	color	___677_r	%read{169,183} %write{168,168}
local	color	___677_r_sqrt	%read{173,174} %write{169,169}
local	color	___677_n_min	%read{176,176} %write{172,172}
local	color	___677_n_max	%read{176,176} %write{175,175}
local	color	___677_np1	%read{179,179} %write{177,177}
local	color	___677_nm1	%read{181,181} %write{178,178}
local	color	___677_k2	%read{186,187} %write{184,186}
local	vector	___678_decodedValue	%read{224,231} %write{221,223}
local	int	___682_ifgreater_10_value1_tmp	%read{239,239} %write{237,237}
local	float	___682_ifgreater_10_in2_tmp	%read{244,244} %write{238,238}
local	float	___682_ifgreater_10_out	%read{252,252} %write{242,244}
local	int	___682_ifgreater_9_value1_tmp	%read{247,247} %write{246,246}
local	float	___682_ifgreater_9_out	%read{260,260} %write{250,252}
local	int	___682_ifgreater_8_value1_tmp	%read{255,255} %write{254,254}
local	float	___682_ifgreater_8_out	%read{268,268} %write{258,260}
local	int	___682_ifgreater_7_value1_tmp	%read{263,263} %write{262,262}
local	float	___682_ifgreater_7_out	%read{276,276} %write{266,268}
local	int	___682_ifgreater_6_value1_tmp	%read{271,271} %write{270,270}
local	float	___682_ifgreater_6_out	%read{284,284} %write{274,276}
local	int	___682_ifgreater_5_value1_tmp	%read{279,279} %write{278,278}
local	float	___682_ifgreater_5_out	%read{292,292} %write{282,284}
local	int	___682_ifgreater_4_value1_tmp	%read{287,287} %write{286,286}
local	float	___682_ifgreater_4_out	%read{300,300} %write{290,292}
local	int	___682_ifgreater_3_value1_tmp	%read{295,295} %write{294,294}
local	float	___682_ifgreater_3_out	%read{308,308} %write{298,300}
local	int	___682_ifgreater_2_value1_tmp	%read{303,303} %write{302,302}
local	float	___682_ifgreater_2_out	%read{316,316} %write{306,308}
local	int	___682_ifgreater_1_value1_tmp	%read{311,311} %write{310,310}
local	float	___682_ifgreater_1_out	%read{318,318} %write{314,316}
local	color	___683_combine_out	%read{322,322} %write{321,321}
local	color	___684_reflection_tint	%read{335,388} %write{329,383}
local	color	___684_transmission_tint	%read{335,388} %write{333,387}
local	color	___685_reflection_tint	%read{364,364} %write{358,359}
local	color	___685_transmission_tint	%read{364,364} %write{362,363}
local	closure color	___687_null_closure	%read{325,404} %write{85,85}
local	vector	___687_geomprop_Tworld_out1	%read{225,388} %write{90,90}
local	float	___687_one_minus_ior_in1_tmp	%read{92,92} %write{91,91}
local	float	___687_one_minus_ior_out	%read{199,199} %write{92,92}
local	float	___687_one_plus_ior_in1_tmp	%read{94,94} %write{93,93}
local	float	___687_one_plus_ior_out	%read{199,199} %write{94,94}
local	float	___687_coat_roughness_out.x	%read{111,335} %write{95,114} %mystruct{___687_coat_roughness_out} %mystructfield{0}
local	float	___687_coat_roughness_out.y	%read{113,335} %write{96,115} %mystruct{___687_coat_roughness_out} %mystructfield{1}
local	string	___687_geomprop_Nworld_space_tmp	%read{118,118} %write{116,116}
local	vector	___687_geomprop_Nworld_out1	%read{232,232} %write{118,118}
local	vector	___687_geomprop_Bworld_out1	%read{228,228} %write{124,124}
local	float	___687_scale_normal_in2_tmp	%read{126,126} %write{125,125}
local	vector	___687_scale_normal_out	%read{201,201} %write{126,126}
local	float	___687_specular_roughness_out.x	%read{143,388} %write{127,146} %mystruct{___687_specular_roughness_out} %mystructfield{0}
local	float	___687_specular_roughness_out.y	%read{145,388} %write{128,147} %mystruct{___687_specular_roughness_out} %mystructfield{1}
local	float	___687_inverse_metalness_in1_tmp	%read{149,149} %write{148,148}
local	float	___687_inverse_metalness_out	%read{203,203} %write{149,149}
local	float	___687_use_specular_workflow_float_out	%read{203,399} %write{151,151}
local	float	___687_transmission_mix_amount_value2_tmp	%read{154,154} %write{152,152}
local	float	___687_transmission_mix_amount_in1_tmp	%read{157,157} %write{153,153}
local	float	___687_transmission_mix_amount_out	%read{367,369} %write{157,159}
local	color	___687_artistic_ior_ior	%read{177,376} %write{161,176}
local	color	___687_artistic_ior_extinction	%read{376,376} %write{162,187}
local	color	___687_specular_color_metallic_bg_tmp	%read{189,189} %write{188,188}
local	color	___687_specular_color_metallic_out	%read{323,388} %write{189,189}
local	float	___687_cutout_opacity_in1_tmp	%read{195,195} %write{190,190}
local	float	___687_cutout_opacity_in2_tmp	%read{197,197} %write{191,191}
local	float	___687_cutout_opacity_out	%read{211,314} %write{195,197}
local	float	___687_R_out	%read{213,213} %write{199,199}
local	float	___687_bias_normal_in2_tmp	%read{201,201} %write{200,200}
local	vector	___687_bias_normal_out	%read{219,222} %write{201,201}
local	float	___687_diffuse_bsdf_weight_fg_tmp	%read{203,203} %write{202,202}
local	float	___687_diffuse_bsdf_weight_out	%read{351,351} %write{203,203}
local	float	___687_opacity_presence_value2_tmp	%read{206,206} %write{204,204}
local	float	___687_opacity_presence_in1_tmp	%read{209,209} %write{205,205}
local	float	___687_opacity_presence_out	%read{306,306} %write{209,211}
local	float	___687_R_sq_out	%read{321,323} %write{213,213}
local	vector	___687_surface_normal_out	%read{335,388} %write{214,234}
local	float	___687_opacity_switch_out	%read{410,410} %write{235,318}
local	color	___687_coat_F0_out	%read{335,335} %write{319,322}
local	color	___687_specular_color_metallic_R_sq_out	%read{324,324} %write{323,323}
local	color	___687_F0_out	%read{388,388} %write{324,324}
local	closure color	___687_coat_dielectric_bsdf_out	%read{401,401} %write{325,336}
local	closure color	___687_specular_bsdf1_out	%read{371,371} %write{337,348}
local	float	___687_diffuse_bsdf_roughness_tmp	%read{350,350} %write{349,349}
local	closure color	___687_diffuse_bsdf_out	%read{369,369} %write{351,351}
local	closure color	___687_transmission_bsdf_out	%read{368,368} %write{352,365}
local	closure color	___687_transmission_mix_out	%read{371,390} %write{370,370}
local	closure color	___687_specular_workflow_bsdf_out	%read{399,399} %write{371,371}
local	float	___687_metalness_metal_bsdf_weight_tmp	%read{377,377} %write{372,372}
local	string	___687_metalness_metal_bsdf_distribution_tmp	%read{376,376} %write{373,373}
local	float	___687_metalness_metal_bsdf_thinfilm_thickness_tmp	%read{376,376} %write{374,374}
local	float	___687_metalness_metal_bsdf_thinfilm_ior_tmp	%read{376,376} %write{375,375}
local	closure color	___687_metalness_metal_bsdf_out	%read{394,394} %write{377,377}
local	closure color	___687_specular_bsdf2_out	%read{390,390} %write{378,389}
local	closure color	___687_metalness_specular_bsdf_out	%read{393,393} %write{390,390}
local	closure color	___687_metalness_workflow_bsdf_out	%read{398,398} %write{395,395}
local	closure color	___687_workflow_selector_bsdf_out	%read{401,401} %write{400,400}
local	closure color	___687_coat_bsdf_out	%read{407,407} %write{401,401}
local	closure color	___687_emission_edf_out	%read{408,408} %write{402,402}
local	closure color	___687_surface_constructor_out.bsdf	%read{413,413} %write{403,407} %mystruct{___687_surface_constructor_out} %mystructfield{0}
local	closure color	___687_surface_constructor_out.edf	%read{414,414} %write{404,408} %mystruct{___687_surface_constructor_out} %mystructfield{1}
local	float	___687_surface_constructor_out.opacity	%read{412,415} %write{405,412} %mystruct{___687_surface_constructor_out} %mystructfield{2}
local	closure color	null_closure	%read{81,82} %write{0,0}
local	string	file_.filename	%read{21,59} %write{1,1} %mystruct{file_} %mystructfield{0} %derivs
local	string	file_.colorspace	%read{2147483647,-1} %write{2,2} %mystruct{file_} %mystructfield{1}
local	float	geomprop_UV0_out1.x	%read{8,8} %write{3,3} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{9,9} %write{4,4} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage_out	%read{64,66} %write{5,61} %derivs
local	vector	heighttonormal_out	%read{79,79} %write{62,78}
local	vector	scale_out	%read{80,80} %write{79,79}
local	vector	bias_out	%read{126,126} %write{80,80}
local	closure color	UsdPreviewSurface_out.bsdf	%read{419,419} %write{81,413} %mystruct{UsdPreviewSurface_out} %mystructfield{0}
local	closure color	UsdPreviewSurface_out.edf	%read{419,419} %write{82,414} %mystruct{UsdPreviewSurface_out} %mystructfield{1}
local	float	UsdPreviewSurface_out.opacity	%read{417,417} %write{83,415} %mystruct{UsdPreviewSurface_out} %mystructfield{2}
local	float	___688_opacity_weight	%read{420,422} %write{418,418}
const	int	$const1	0		%read{0,224} %write{2147483647,-1}
const	float	$const2	0		%read{5,418} %write{2147483647,-1}
const	string	$const3	"NG_tiledimage_float"		%read{6,6} %write{2147483647,-1}
const	string	$const4	"__operator__mul__"		%read{7,16} %write{2147483647,-1}
const	string	$const5	"__operator__sub__"		%read{10,10} %write{2147483647,-1}
const	string	$const6	"__operator__div__"		%read{13,13} %write{2147483647,-1}
const	string	$const7	""		%read{21,59} %write{2147483647,-1}
const	string	$const8	"periodic"		%read{24,59} %write{2147483647,-1}
const	string	$const9	"mx_image_float"		%read{20,20} %write{2147483647,-1}
temp	int	$tmp1	%read{22,22} %write{21,21}
temp	int	$tmp2	%read{23,37} %write{22,36}
const	string	$const10	"constant"		%read{24,39} %write{2147483647,-1}
temp	int	$tmp3	%read{25,25} %write{24,24}
temp	int	$tmp4	%read{26,35} %write{25,34}
temp	int	$tmp5	%read{28,28} %write{27,27}
temp	int	$tmp6	%read{29,33} %write{28,32}
const	float	$const11	1		%read{30,422} %write{2147483647,-1}
temp	int	$tmp7	%read{31,31} %write{30,30}
temp	int	$tmp8	%read{32,32} %write{31,31}
temp	int	$tmp9	%read{34,34} %write{33,33}
temp	int	$tmp10	%read{36,36} %write{35,35}
temp	int	$tmp11	%read{38,52} %write{37,51}
temp	int	$tmp12	%read{40,40} %write{39,39}
temp	int	$tmp13	%read{41,50} %write{40,49}
temp	int	$tmp14	%read{43,43} %write{42,42}
temp	int	$tmp15	%read{44,48} %write{43,47}
temp	int	$tmp16	%read{46,46} %write{45,45}
temp	int	$tmp17	%read{47,47} %write{46,46}
temp	int	$tmp18	%read{49,49} %write{48,48}
temp	int	$tmp19	%read{51,51} %write{50,50}
const	string	$const12	"mx_transform_uv"		%read{56,56} %write{2147483647,-1}
const	string	$const13	"subimage"		%read{59,59} %write{2147483647,-1}
const	string	$const14	"interp"		%read{59,59} %write{2147483647,-1}
const	string	$const15	"missingcolor"		%read{59,59} %write{2147483647,-1}
const	string	$const16	"swrap"		%read{59,59} %write{2147483647,-1}
const	string	$const17	"twrap"		%read{59,59} %write{2147483647,-1}
const	vector	$const18	0 0 0		%read{62,219} %write{2147483647,-1}
const	string	$const19	"mx_heighttonormal_vector3"		%read{63,63} %write{2147483647,-1}
temp	float	$tmp20	%read{65,65} %write{64,64}
temp	float	$tmp21	%read{74,74} %write{67,67}
const	float	$const20	1e-05		%read{67,72} %write{2147483647,-1}
temp	float	$tmp22	%read{74,74} %write{73,73}
temp	float	$tmp23	%read{73,73} %write{72,72}
temp	float	$tmp24	%read{69,69} %write{68,68}
temp	float	$tmp25	%read{71,71} %write{69,69}
temp	float	$tmp26	%read{71,71} %write{70,70}
temp	float	$tmp27	%read{72,72} %write{71,71}
temp	vector	$tmp28	%read{76,76} %write{75,75}
const	vector	$const21	0.5 0.5 0.5		%read{77,78} %write{2147483647,-1}
temp	vector	$tmp30	%read{78,78} %write{77,77}
const	string	$const22	"IMP_UsdPreviewSurface_surfaceshader"		%read{84,84} %write{2147483647,-1}
temp	vector	$tmp32	%read{90,90} %write{89,89}
const	int	$const23	2		%read{86,302} %write{2147483647,-1}
temp	float	$tmp33	%read{89,89} %write{86,86}
temp	float	$tmp34	%read{88,88} %write{87,87}
temp	float	$tmp35	%read{89,89} %write{88,88}
const	string	$const24	"mx_roughness_anisotropy"		%read{97,129} %write{2147483647,-1}
temp	float	$tmp36	%read{100,100} %write{98,98}
const	float	$const25	1e-08		%read{101,133} %write{2147483647,-1}
const	string	$const26	"clamp"		%read{99,416} %write{2147483647,-1}
temp	float	$tmp37	%read{101,101} %write{100,100}
temp	int	$tmp38	%read{103,103} %write{102,102}
temp	float	$tmp39	%read{107,107} %write{106,106}
const	float	$const27	0.98		%read{105,137} %write{2147483647,-1}
temp	float	$tmp40	%read{106,106} %write{105,105}
temp	float	$tmp41	%read{108,108} %write{107,107}
temp	float	$tmp42	%read{110,110} %write{109,109}
const	string	$const28	"world"		%read{116,116} %write{2147483647,-1}
const	string	$const29	"transform"		%read{117,117} %write{2147483647,-1}
const	string	$const30	"common"		%read{118,118} %write{2147483647,-1}
temp	vector	$tmp43	%read{124,124} %write{123,123}
temp	vector	$tmp44	%read{123,123} %write{122,122}
temp	float	$tmp45	%read{122,122} %write{119,119}
temp	float	$tmp46	%read{121,121} %write{120,120}
temp	float	$tmp47	%read{122,122} %write{121,121}
const	float	$const31	0.5		%read{125,200} %write{2147483647,-1}
temp	float	$tmp48	%read{132,132} %write{130,130}
temp	float	$tmp49	%read{133,133} %write{132,132}
temp	int	$tmp50	%read{135,135} %write{134,134}
temp	float	$tmp51	%read{139,139} %write{138,138}
temp	float	$tmp52	%read{138,138} %write{137,137}
temp	float	$tmp53	%read{140,140} %write{139,139}
temp	float	$tmp54	%read{142,142} %write{141,141}
temp	float	$tmp55	%read{151,151} %write{150,150}
temp	int	$tmp56	%read{156,156} %write{154,154}
const	string	$const32	"mx_ternary"		%read{155,312} %write{2147483647,-1}
const	color	$const33	0 0 0		%read{161,386} %write{2147483647,-1}
const	string	$const34	"mx_artistic_ior"		%read{163,163} %write{2147483647,-1}
temp	color	$tmp57	%read{168,168} %write{164,164}
const	float	$const35	0.99		%read{165,165} %write{2147483647,-1}
temp	color	$tmp58	%read{167,167} %write{165,165}
temp	color	$tmp59	%read{168,168} %write{167,167}
temp	color	$tmp60	%read{172,172} %write{170,170}
temp	color	$tmp61	%read{172,172} %write{171,171}
temp	color	$tmp62	%read{175,175} %write{173,173}
temp	color	$tmp63	%read{175,175} %write{174,174}
temp	color	$tmp64	%read{180,180} %write{179,179}
temp	color	$tmp65	%read{182,182} %write{180,180}
temp	color	$tmp66	%read{182,182} %write{181,181}
temp	color	$tmp67	%read{184,184} %write{182,182}
temp	color	$tmp68	%read{184,184} %write{183,183}
temp	color	$tmp69	%read{186,186} %write{185,185}
const	color	$const36	1 1 1		%read{188,387} %write{2147483647,-1}
temp	int	$tmp70	%read{194,194} %write{192,192}
temp	int	$tmp71	%read{208,208} %write{206,206}
const	string	$const37	"mx_normalmap_float"		%read{215,215} %write{2147483647,-1}
temp	float	$tmp72.x	%read{226,226} %write{216,216}
temp	float	$tmp72.y	%read{229,229} %write{217,217}
const	string	$const38	"mx_normalmap_vector2"		%read{218,218} %write{2147483647,-1}
temp	int	$tmp74	%read{220,220} %write{219,219}
const	vector	$const39	0 0 1		%read{221,221} %write{2147483647,-1}
const	float	$const40	2		%read{222,222} %write{2147483647,-1}
temp	vector	$tmp75	%read{223,223} %write{222,222}
temp	float	$tmp76	%read{225,225} %write{224,224}
temp	vector	$tmp77	%read{226,226} %write{225,225}
temp	vector	$tmp78	%read{230,230} %write{226,226}
const	int	$const41	1		%read{227,310} %write{2147483647,-1}
temp	float	$tmp79	%read{228,228} %write{227,227}
temp	vector	$tmp80	%read{229,229} %write{228,228}
temp	vector	$tmp81	%read{230,230} %write{229,229}
temp	vector	$tmp82	%read{233,233} %write{230,230}
temp	float	$tmp83	%read{232,232} %write{231,231}
temp	vector	$tmp84	%read{233,233} %write{232,232}
temp	vector	$tmp85	%read{234,234} %write{233,233}
const	string	$const42	"NG_switch_floatI"		%read{236,236} %write{2147483647,-1}
const	int	$const43	10		%read{237,237} %write{2147483647,-1}
temp	int	$tmp86	%read{241,241} %write{239,239}
const	int	$const44	9		%read{246,246} %write{2147483647,-1}
temp	int	$tmp87	%read{249,249} %write{247,247}
const	int	$const45	8		%read{254,254} %write{2147483647,-1}
temp	int	$tmp88	%read{257,257} %write{255,255}
const	int	$const46	7		%read{262,262} %write{2147483647,-1}
temp	int	$tmp89	%read{265,265} %write{263,263}
const	int	$const47	6		%read{270,270} %write{2147483647,-1}
temp	int	$tmp90	%read{273,273} %write{271,271}
const	int	$const48	5		%read{278,278} %write{2147483647,-1}
temp	int	$tmp91	%read{281,281} %write{279,279}
const	int	$const49	4		%read{286,286} %write{2147483647,-1}
temp	int	$tmp92	%read{289,289} %write{287,287}
const	int	$const50	3		%read{294,294} %write{2147483647,-1}
temp	int	$tmp93	%read{297,297} %write{295,295}
temp	int	$tmp94	%read{305,305} %write{303,303}
temp	int	$tmp95	%read{313,313} %write{311,311}
const	string	$const51	"NG_convert_float_color3"		%read{320,320} %write{2147483647,-1}
const	float	$const52	5		%read{335,388} %write{2147483647,-1}
const	float	$const53	1.5		%read{335,388} %write{2147483647,-1}
const	string	$const54	"ggx"		%read{335,388} %write{2147483647,-1}
const	string	$const55	"R"		%read{327,384} %write{2147483647,-1}
const	string	$const56	"mx_generalized_schlick_bsdf"		%read{326,379} %write{2147483647,-1}
const	string	$const57	"T"		%read{327,380} %write{2147483647,-1}
temp	int	$tmp98	%read{328,328} %write{327,327}
temp	int	$tmp99	%read{332,332} %write{331,331}
temp	closure color	$tmp100	%read{336,336} %write{335,335}
const	string	$const58	"thinfilm_thickness"		%read{335,388} %write{2147483647,-1}
const	string	$const59	"thinfilm_ior"		%read{335,388} %write{2147483647,-1}
const	string	$const60	"generalized_schlick_bsdf"		%read{335,388} %write{2147483647,-1}
temp	int	$tmp103	%read{340,340} %write{339,339}
temp	int	$tmp104	%read{344,344} %write{343,343}
temp	closure color	$tmp105	%read{348,348} %write{347,347}
temp	closure color	$tmp106	%read{351,351} %write{350,350}
const	string	$const61	"oren_nayar_diffuse_bsdf"		%read{350,350} %write{2147483647,-1}
temp	float	$tmp108.x	%read{364,364} %write{353,353}
temp	float	$tmp108.y	%read{364,364} %write{354,354}
const	string	$const62	"mx_dielectric_bsdf"		%read{355,355} %write{2147483647,-1}
temp	int	$tmp109	%read{357,357} %write{356,356}
temp	int	$tmp110	%read{361,361} %write{360,360}
temp	closure color	$tmp111	%read{365,365} %write{364,364}
const	string	$const63	"dielectric_bsdf"		%read{364,364} %write{2147483647,-1}
const	string	$const64	"mix"		%read{366,396} %write{2147483647,-1}
temp	float	$tmp112	%read{368,368} %write{367,367}
temp	closure color	$tmp113	%read{370,370} %write{368,368}
temp	closure color	$tmp114	%read{370,370} %write{369,369}
const	string	$const65	"layer"		%read{371,401} %write{2147483647,-1}
temp	closure color	$tmp115	%read{377,377} %write{376,376}
const	string	$const66	"conductor_bsdf"		%read{376,376} %write{2147483647,-1}
temp	int	$tmp117	%read{381,381} %write{380,380}
temp	int	$tmp118	%read{385,385} %write{384,384}
temp	closure color	$tmp119	%read{389,389} %write{388,388}
temp	float	$tmp120	%read{393,393} %write{392,392}
temp	closure color	$tmp121	%read{395,395} %write{393,393}
temp	closure color	$tmp122	%read{395,395} %write{394,394}
temp	float	$tmp123	%read{398,398} %write{397,397}
temp	closure color	$tmp124	%read{400,400} %write{398,398}
temp	closure color	$tmp125	%read{400,400} %write{399,399}
const	string	$const67	"uniform_edf"		%read{402,402} %write{2147483647,-1}
const	string	$const68	"mx_surface"		%read{406,406} %write{2147483647,-1}
temp	float	$tmp126	%read{411,411} %write{410,410}
temp	float	$tmp127	%read{418,418} %write{417,417}
temp	closure color	$tmp128	%read{420,420} %write{419,419}
temp	closure color	$tmp129	%read{424,424} %write{420,420}
temp	closure color	$tmp130	%read{423,423} %write{421,421}
const	string	$const69	"transparent"		%read{421,421} %write{2147483647,-1}
temp	float	$tmp131	%read{423,423} %write{422,422}
temp	closure color	$tmp132	%read{424,424} %write{423,423}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:382
#     textureresource file_ = {file, file_colorspace};
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{382} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:383
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	assign		file_.filename file 	%line{383} %argrw{"wr"}
	assign		file_.colorspace file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:384
#     float tiledimage_out = 0.0;
	assign		geomprop_UV0_out1.x u 	%line{384} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:385
#     NG_tiledimage_float(file_, tiledimage_default, geomprop_UV0_out1, tiledimage_uvtiling, tiledimage_uvoffset, tiledimage_realworldimagesize, tiledimage_realworldtilesize, tiledimage_filtertype, tiledimage_framerange, tiledimage_frameoffset, tiledimage_frameendaction, tiledimage_out);
	assign		tiledimage_out $const2 	%line{385} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:386
#     vector heighttonormal_out = vector(0.0);
	functioncall	$const3 62 	%line{386} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:398
# 
	functioncall	$const4 10 	%line{398} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_float_out.x geomprop_UV0_out1.x tiledimage_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_float_out.y geomprop_UV0_out1.y tiledimage_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:398
# 
	functioncall	$const5 13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{398} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_float_out.x ___672_N_mult_float_out.x tiledimage_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_float_out.y ___672_N_mult_float_out.y tiledimage_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:398
# 
	functioncall	$const6 16 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{398} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_float_out.x ___672_N_sub_float_out.x tiledimage_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_float_out.y ___672_N_sub_float_out.y tiledimage_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:398
# 
	functioncall	$const4 19 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{398} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_float_out.x ___672_N_divtilesize_float_out.x tiledimage_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_float_out.y ___672_N_divtilesize_float_out.y tiledimage_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:48
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___672_N_img_float_out $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:49
#     out = N_img_float_out;
	functioncall	$const9 61 	%line{49} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp1 file_.filename $const7 	%line{25} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp2 24 37 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp3 $const8 $const10 	%line{26} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const1 	%argrw{"wrr"}
	if		$tmp4 35 35 	%argrw{"r"}
	lt		$tmp5 ___672_N_multtilesize_float_out.x $const2 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 30 33 	%argrw{"r"}
	gt		$tmp7 ___672_N_multtilesize_float_out.x $const11 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	neq		$tmp9 $tmp6 $const1 	%argrw{"wrr"}
	assign		$tmp4 $tmp9 	%argrw{"wr"}
	neq		$tmp10 $tmp4 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp2 $tmp10 	%line{25} %argrw{"wr"}
	neq		$tmp11 $tmp2 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp11 39 52 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:27
#     {
	eq		$tmp12 $const8 $const10 	%line{27} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp13 50 50 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_float_out.y $const2 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const1 	%argrw{"wrr"}
	if		$tmp15 45 48 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_float_out.y $const11 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp11 $tmp19 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp11 55 55 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:29
#         return;
	assign		___672_N_img_float_out tiledimage_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tiledimage_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const12 59 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_float_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb file_.filename ___670_st.x ___670_st.y $const13 $const7 $const14 tiledimage_filtertype $const15 ___670_missingColor $const16 $const8 $const17 $const8 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:39
# }
	compref		___672_N_img_float_out ___670_rgb $const1 	%line{39} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:50
# }
	assign		tiledimage_out ___672_N_img_float_out 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:387
#     mx_heighttonormal_vector3(tiledimage_out, heighttonormal_scale, heighttonormal_out);
	assign		heighttonormal_out $const18 	%line{387} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:388
#     vector scale_out = heighttonormal_out * scale_in2;
	functioncall	$const19 79 	%line{388} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:55
#     float dy = Dy(in);
	Dx		$tmp20 tiledimage_out 	%line{55} %argrw{"wr"} %argderivs{1}
	neg		___673_dx $tmp20 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:56
#     float dz = max(scale, 1.0E-05) * sqrt(max(1.0 - dx*dx - dy*dy, 1.0E-05));
	Dy		___673_dy tiledimage_out 	%line{56} %argrw{"wr"} %argderivs{1}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:57
#     vector dir = normalize(vector(dx, dy, dz));
	max		$tmp21 heighttonormal_scale $const20 	%line{57} %argrw{"wrr"}
	mul		$tmp24 ___673_dx ___673_dx 	%argrw{"wrr"}
	sub		$tmp25 $const11 $tmp24 	%argrw{"wrr"}
	mul		$tmp26 ___673_dy ___673_dy 	%argrw{"wrr"}
	sub		$tmp27 $tmp25 $tmp26 	%argrw{"wrr"}
	max		$tmp23 $tmp27 $const20 	%argrw{"wrr"}
	sqrt		$tmp22 $tmp23 	%argrw{"wr"}
	mul		___673_dz $tmp21 $tmp22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:58
#     result = dir * vector(0.5) + vector(0.5);
	vector		$tmp28 ___673_dx ___673_dy ___673_dz 	%line{58} %argrw{"wrrr"}
	normalize	___673_dir $tmp28 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:59
# }
	mul		$tmp30 ___673_dir $const21 	%line{59} %argrw{"wrr"}
	add		heighttonormal_out $tmp30 $const21 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:389
#     vector bias_out = scale_out + bias_in2;
	mul		scale_out heighttonormal_out scale_in2 	%line{389} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:390
#     surfaceshader UsdPreviewSurface_out = surfaceshader(null_closure, null_closure, 1.0);
	add		bias_out scale_out bias_in2 	%line{390} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:391
#     IMP_UsdPreviewSurface_surfaceshader(UsdPreviewSurface_diffuseColor, UsdPreviewSurface_emissiveColor, UsdPreviewSurface_useSpecularWorkflow, UsdPreviewSurface_specularColor, UsdPreviewSurface_metallic, UsdPreviewSurface_roughness, UsdPreviewSurface_clearcoat, UsdPreviewSurface_clearcoatRoughness, UsdPreviewSurface_opacity, UsdPreviewSurface_opacityMode, UsdPreviewSurface_opacityThreshold, UsdPreviewSurface_ior, bias_out, UsdPreviewSurface_displacement, UsdPreviewSurface_occlusion, UsdPreviewSurface_out);
	assign		UsdPreviewSurface_out.bsdf null_closure 	%line{391} %argrw{"wr"}
	assign		UsdPreviewSurface_out.edf null_closure 	%argrw{"wr"}
	assign		UsdPreviewSurface_out.opacity $const11 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:392
#     {
	functioncall	$const22 416 	%line{392} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:171
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	assign		___687_null_closure $const1 	%line{171} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:172
#     float one_minus_ior_in1_tmp = 1.000000;
	compref		$tmp33 N $const23 	%line{172} %argrw{"wrr"}
	compref		$tmp34 N $const1 	%argrw{"wrr"}
	neg		$tmp35 $tmp34 	%argrw{"wr"}
	vector		$tmp32 $tmp33 $const2 $tmp35 	%argrw{"wrrr"}
	normalize	___687_geomprop_Tworld_out1 $tmp32 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:173
#     float one_minus_ior_out = one_minus_ior_in1_tmp - ior;
	assign		___687_one_minus_ior_in1_tmp $const11 	%line{173} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:174
#     float one_plus_ior_in1_tmp = 1.000000;
	sub		___687_one_minus_ior_out ___687_one_minus_ior_in1_tmp UsdPreviewSurface_ior 	%line{174} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:175
#     float one_plus_ior_out = one_plus_ior_in1_tmp + ior;
	assign		___687_one_plus_ior_in1_tmp $const11 	%line{175} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:176
#     vector2 coat_roughness_out = vector2(0.0, 0.0);
	add		___687_one_plus_ior_out ___687_one_plus_ior_in1_tmp UsdPreviewSurface_ior 	%line{176} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:177
#     mx_roughness_anisotropy(clearcoatRoughness, 0.000000, coat_roughness_out);
	assign		___687_coat_roughness_out.x $const2 	%line{177} %argrw{"wr"}
	assign		___687_coat_roughness_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:178
#     string geomprop_Nworld_space_tmp = "world";
	functioncall	$const24 116 	%line{178} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:64
#     if (anisotropy > 0.0)
	mul		$tmp36 UsdPreviewSurface_clearcoatRoughness UsdPreviewSurface_clearcoatRoughness 	%line{64} %argrw{"wrr"}
	functioncall	$const26 102 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp37 $tmp36 $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp37 $const25 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:65
#     {
	gt		$tmp38 $const2 $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{65} %argrw{"wrr"}
	if		$tmp38 114 116 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:67
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const26 107 	%line{67} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 $const2 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp39 $tmp40 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:67
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp41 $const11 $tmp39 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{67} %argrw{"wrr"}
	sqrt		___675_aspect $tmp41 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:68
#         result.y = roughness_sqr * aspect;
	div		$tmp42 ___674_roughness_sqr ___675_aspect 	%line{68} %argrw{"wrr"}
	min		___687_coat_roughness_out.x $tmp42 $const11 	%argrw{"wrr"}
	assign		___687_coat_roughness_out.x ___687_coat_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:69
#     }
	mul		___687_coat_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{69} %argrw{"wrr"}
	assign		___687_coat_roughness_out.y ___687_coat_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:73
#         result.y = roughness_sqr;
	assign		___687_coat_roughness_out.x ___674_roughness_sqr 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:74
#     }
	assign		___687_coat_roughness_out.y ___674_roughness_sqr 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:179
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space_tmp, N);
	assign		___687_geomprop_Nworld_space_tmp $const28 	%line{179} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:180
#     vector geomprop_Bworld_out1 = normalize(cross(N, vector(N[2], 0, -N[0])));
	functioncall	$const29 119 	%line{180} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	___687_geomprop_Nworld_out1 $const30 ___687_geomprop_Nworld_space_tmp N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:181
#     float scale_normal_in2_tmp = 0.500000;
	compref		$tmp45 N $const23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{181} %argrw{"wrr"}
	compref		$tmp46 N $const1 	%argrw{"wrr"}
	neg		$tmp47 $tmp46 	%argrw{"wr"}
	vector		$tmp44 $tmp45 $const2 $tmp47 	%argrw{"wrrr"}
	cross		$tmp43 N $tmp44 	%argrw{"wrr"}
	normalize	___687_geomprop_Bworld_out1 $tmp43 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:182
#     vector scale_normal_out = normal1 * scale_normal_in2_tmp;
	assign		___687_scale_normal_in2_tmp $const31 	%line{182} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:183
#     vector2 specular_roughness_out = vector2(0.0, 0.0);
	mul		___687_scale_normal_out bias_out ___687_scale_normal_in2_tmp 	%line{183} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:184
#     mx_roughness_anisotropy(roughness, 0.000000, specular_roughness_out);
	assign		___687_specular_roughness_out.x $const2 	%line{184} %argrw{"wr"}
	assign		___687_specular_roughness_out.y $const2 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:185
#     float inverse_metalness_in1_tmp = 1.000000;
	functioncall	$const24 148 	%line{185} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:64
#     if (anisotropy > 0.0)
	mul		$tmp48 UsdPreviewSurface_roughness UsdPreviewSurface_roughness 	%line{64} %argrw{"wrr"}
	functioncall	$const26 134 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp49 $tmp48 $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp49 $const25 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:65
#     {
	gt		$tmp50 $const2 $const2 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{65} %argrw{"wrr"}
	if		$tmp50 146 148 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:67
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const26 139 	%line{67} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp52 $const2 $const27 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp51 $tmp52 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:67
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp53 $const11 $tmp51 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{67} %argrw{"wrr"}
	sqrt		___675_aspect $tmp53 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:68
#         result.y = roughness_sqr * aspect;
	div		$tmp54 ___674_roughness_sqr ___675_aspect 	%line{68} %argrw{"wrr"}
	min		___687_specular_roughness_out.x $tmp54 $const11 	%argrw{"wrr"}
	assign		___687_specular_roughness_out.x ___687_specular_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:69
#     }
	mul		___687_specular_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{69} %argrw{"wrr"}
	assign		___687_specular_roughness_out.y ___687_specular_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:73
#         result.y = roughness_sqr;
	assign		___687_specular_roughness_out.x ___674_roughness_sqr 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:74
#     }
	assign		___687_specular_roughness_out.y ___674_roughness_sqr 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:186
#     float inverse_metalness_out = inverse_metalness_in1_tmp - metallic;
	assign		___687_inverse_metalness_in1_tmp $const11 	%line{186} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:187
#     float use_specular_workflow_float_out = float(useSpecularWorkflow);
	sub		___687_inverse_metalness_out ___687_inverse_metalness_in1_tmp UsdPreviewSurface_metallic 	%line{187} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:188
#     float transmission_mix_amount_value2_tmp = 0.000000;
	assign		$tmp55 UsdPreviewSurface_useSpecularWorkflow 	%line{188} %argrw{"wr"}
	assign		___687_use_specular_workflow_float_out $tmp55 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:189
#     float transmission_mix_amount_in1_tmp = 1.000000;
	assign		___687_transmission_mix_amount_value2_tmp $const2 	%line{189} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:190
#     float transmission_mix_amount_out = mx_ternary(opacityThreshold > transmission_mix_amount_value2_tmp, transmission_mix_amount_in1_tmp, opacity);
	assign		___687_transmission_mix_amount_in1_tmp $const11 	%line{190} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:191
#     color artistic_ior_ior = color(0.0);
	gt		$tmp56 UsdPreviewSurface_opacityThreshold ___687_transmission_mix_amount_value2_tmp 	%line{191} %argrw{"wrr"}
	functioncall	$const32 161 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp56 159 161 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___687_transmission_mix_amount_out ___687_transmission_mix_amount_in1_tmp 	%argrw{"wr"}
	return
	assign		___687_transmission_mix_amount_out UsdPreviewSurface_opacity 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:192
#     color artistic_ior_extinction = color(0.0);
	assign		___687_artistic_ior_ior $const33 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{192} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:193
#     mx_artistic_ior(diffuseColor, diffuseColor, artistic_ior_ior, artistic_ior_extinction);
	assign		___687_artistic_ior_extinction $const33 	%line{193} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:194
#     color specular_color_metallic_bg_tmp = color(1.000000, 1.000000, 1.000000);
	functioncall	$const34 188 	%line{194} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:83
#     color r_sqrt = sqrt(r);
	assign		$tmp57 $const2 	%line{83} %argrw{"wr"}
	assign		$tmp58 $const35 	%argrw{"wr"}
	functioncall	$const26 169 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp59 UsdPreviewSurface_diffuseColor $tmp58 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___677_r $tmp59 $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:84
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___677_r_sqrt ___677_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:85
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp60 $const11 ___677_r 	%line{85} %argrw{"wrr"}
	add		$tmp61 $const11 ___677_r 	%argrw{"wrr"}
	div		___677_n_min $tmp60 $tmp61 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:86
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp62 $const11 ___677_r_sqrt 	%line{86} %argrw{"wrr"}
	sub		$tmp63 $const11 ___677_r_sqrt 	%argrw{"wrr"}
	div		___677_n_max $tmp62 $tmp63 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:87
# 
	mix		___687_artistic_ior_ior ___677_n_max ___677_n_min UsdPreviewSurface_diffuseColor 	%line{87} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:89
#     color nm1 = ior - 1.0;
	add		___677_np1 ___687_artistic_ior_ior $const11 	%line{89} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:90
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___677_nm1 ___687_artistic_ior_ior $const11 	%line{90} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:91
#     k2 = max(k2, 0.0);
	mul		$tmp64 ___677_np1 ___677_np1 	%line{91} %argrw{"wrr"}
	mul		$tmp65 $tmp64 ___677_r 	%argrw{"wrr"}
	mul		$tmp66 ___677_nm1 ___677_nm1 	%argrw{"wrr"}
	sub		$tmp67 $tmp65 $tmp66 	%argrw{"wrr"}
	sub		$tmp68 $const11 ___677_r 	%argrw{"wrr"}
	div		___677_k2 $tmp67 $tmp68 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:92
#     extinction = sqrt(k2);
	assign		$tmp69 $const2 	%line{92} %argrw{"wr"}
	max		___677_k2 ___677_k2 $tmp69 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:93
# }
	sqrt		___687_artistic_ior_extinction ___677_k2 	%line{93} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:195
#     color specular_color_metallic_out = mix(specular_color_metallic_bg_tmp, diffuseColor, metallic);
	assign		___687_specular_color_metallic_bg_tmp $const36 	%line{195} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:196
#     float cutout_opacity_in1_tmp = 1.000000;
	mix		___687_specular_color_metallic_out ___687_specular_color_metallic_bg_tmp UsdPreviewSurface_diffuseColor UsdPreviewSurface_metallic 	%line{196} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:197
#     float cutout_opacity_in2_tmp = 0.000000;
	assign		___687_cutout_opacity_in1_tmp $const11 	%line{197} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:198
#     float cutout_opacity_out = mx_ternary(opacity >= opacityThreshold, cutout_opacity_in1_tmp, cutout_opacity_in2_tmp);
	assign		___687_cutout_opacity_in2_tmp $const2 	%line{198} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:199
#     float R_out = one_minus_ior_out / one_plus_ior_out;
	ge		$tmp70 UsdPreviewSurface_opacity UsdPreviewSurface_opacityThreshold 	%line{199} %argrw{"wrr"}
	functioncall	$const32 199 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp70 197 199 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___687_cutout_opacity_out ___687_cutout_opacity_in1_tmp 	%argrw{"wr"}
	return
	assign		___687_cutout_opacity_out ___687_cutout_opacity_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:200
#     float bias_normal_in2_tmp = 0.500000;
	div		___687_R_out ___687_one_minus_ior_out ___687_one_plus_ior_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{200} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:201
#     vector bias_normal_out = scale_normal_out + bias_normal_in2_tmp;
	assign		___687_bias_normal_in2_tmp $const31 	%line{201} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:202
#     float diffuse_bsdf_weight_fg_tmp = 1.000000;
	add		___687_bias_normal_out ___687_scale_normal_out ___687_bias_normal_in2_tmp 	%line{202} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:203
#     float diffuse_bsdf_weight_out = mix(inverse_metalness_out, diffuse_bsdf_weight_fg_tmp, use_specular_workflow_float_out);
	assign		___687_diffuse_bsdf_weight_fg_tmp $const11 	%line{203} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:204
#     float opacity_presence_value2_tmp = 0.000000;
	mix		___687_diffuse_bsdf_weight_out ___687_inverse_metalness_out ___687_diffuse_bsdf_weight_fg_tmp ___687_use_specular_workflow_float_out 	%line{204} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:205
#     float opacity_presence_in1_tmp = 0.000000;
	assign		___687_opacity_presence_value2_tmp $const2 	%line{205} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:206
#     float opacity_presence_out = mx_ternary(opacity == opacity_presence_value2_tmp, opacity_presence_in1_tmp, cutout_opacity_out);
	assign		___687_opacity_presence_in1_tmp $const2 	%line{206} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:207
#     float R_sq_out = R_out * R_out;
	eq		$tmp71 UsdPreviewSurface_opacity ___687_opacity_presence_value2_tmp 	%line{207} %argrw{"wrr"}
	functioncall	$const32 213 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp71 211 213 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___687_opacity_presence_out ___687_opacity_presence_in1_tmp 	%argrw{"wr"}
	return
	assign		___687_opacity_presence_out ___687_cutout_opacity_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:208
#     vector surface_normal_out = vector(0.0);
	mul		___687_R_sq_out ___687_R_out ___687_R_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{208} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:209
#     mx_normalmap_float(bias_normal_out, 1.000000, geomprop_Nworld_out1, geomprop_Tworld_out1, geomprop_Bworld_out1, surface_normal_out);
	assign		___687_surface_normal_out $const18 	%line{209} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:210
#     float opacity_switch_out = 0.0;
	functioncall	$const37 235 	%line{210} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:113
# }
	assign		$tmp72.x $const11 	%line{113} %argrw{"wr"}
	assign		$tmp72.y $const11 	%argrw{"wr"}
	functioncall	$const38 235 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:99
#     {
	eq		$tmp74 ___687_bias_normal_out $const18 	%line{99} %argrw{"wrr"}
	if		$tmp74 222 224 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:101
#     }
	assign		___678_decodedValue $const39 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:105
#     }
	mul		$tmp75 ___687_bias_normal_out $const40 	%line{105} %argrw{"wrr"}
	sub		___678_decodedValue $tmp75 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:108
# }
	compref		$tmp76 ___678_decodedValue $const1 	%line{108} %argrw{"wrr"}
	mul		$tmp77 ___687_geomprop_Tworld_out1 $tmp76 	%argrw{"wrr"}
	mul		$tmp78 $tmp77 $tmp72.x 	%argrw{"wrr"}
	compref		$tmp79 ___678_decodedValue $const41 	%argrw{"wrr"}
	mul		$tmp80 ___687_geomprop_Bworld_out1 $tmp79 	%argrw{"wrr"}
	mul		$tmp81 $tmp80 $tmp72.y 	%argrw{"wrr"}
	add		$tmp82 $tmp78 $tmp81 	%argrw{"wrr"}
	compref		$tmp83 ___678_decodedValue $const23 	%argrw{"wrr"}
	mul		$tmp84 ___687_geomprop_Nworld_out1 $tmp83 	%argrw{"wrr"}
	add		$tmp85 $tmp82 $tmp84 	%argrw{"wrr"}
	normalize	___687_surface_normal_out $tmp85 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:211
#     NG_switch_floatI(cutout_opacity_out, opacity_presence_out, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, opacityMode, opacity_switch_out);
	assign		___687_opacity_switch_out $const2 	%line{211} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:212
#     color coat_F0_out = color(0.0);
	functioncall	$const42 319 	%line{212} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:118
#     float ifgreater_10_in2_tmp = 0.000000;
	assign		___682_ifgreater_10_value1_tmp $const43 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:119
#     float ifgreater_10_out = mx_ternary(ifgreater_10_value1_tmp > which, in10, ifgreater_10_in2_tmp);
	assign		___682_ifgreater_10_in2_tmp $const2 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:120
#     int ifgreater_9_value1_tmp = 9;
	gt		$tmp86 ___682_ifgreater_10_value1_tmp UsdPreviewSurface_opacityMode 	%line{120} %argrw{"wrr"}
	functioncall	$const32 246 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp86 244 246 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_10_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_10_out ___682_ifgreater_10_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:121
#     float ifgreater_9_out = mx_ternary(ifgreater_9_value1_tmp > which, in9, ifgreater_10_out);
	assign		___682_ifgreater_9_value1_tmp $const44 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{121} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:122
#     int ifgreater_8_value1_tmp = 8;
	gt		$tmp87 ___682_ifgreater_9_value1_tmp UsdPreviewSurface_opacityMode 	%line{122} %argrw{"wrr"}
	functioncall	$const32 254 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp87 252 254 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_9_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_9_out ___682_ifgreater_10_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:123
#     float ifgreater_8_out = mx_ternary(ifgreater_8_value1_tmp > which, in8, ifgreater_9_out);
	assign		___682_ifgreater_8_value1_tmp $const45 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{123} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:124
#     int ifgreater_7_value1_tmp = 7;
	gt		$tmp88 ___682_ifgreater_8_value1_tmp UsdPreviewSurface_opacityMode 	%line{124} %argrw{"wrr"}
	functioncall	$const32 262 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp88 260 262 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_8_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_8_out ___682_ifgreater_9_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:125
#     float ifgreater_7_out = mx_ternary(ifgreater_7_value1_tmp > which, in7, ifgreater_8_out);
	assign		___682_ifgreater_7_value1_tmp $const46 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:126
#     int ifgreater_6_value1_tmp = 6;
	gt		$tmp89 ___682_ifgreater_7_value1_tmp UsdPreviewSurface_opacityMode 	%line{126} %argrw{"wrr"}
	functioncall	$const32 270 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp89 268 270 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_7_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_7_out ___682_ifgreater_8_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:127
#     float ifgreater_6_out = mx_ternary(ifgreater_6_value1_tmp > which, in6, ifgreater_7_out);
	assign		___682_ifgreater_6_value1_tmp $const47 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:128
#     int ifgreater_5_value1_tmp = 5;
	gt		$tmp90 ___682_ifgreater_6_value1_tmp UsdPreviewSurface_opacityMode 	%line{128} %argrw{"wrr"}
	functioncall	$const32 278 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp90 276 278 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_6_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_6_out ___682_ifgreater_7_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:129
#     float ifgreater_5_out = mx_ternary(ifgreater_5_value1_tmp > which, in5, ifgreater_6_out);
	assign		___682_ifgreater_5_value1_tmp $const48 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:130
#     int ifgreater_4_value1_tmp = 4;
	gt		$tmp91 ___682_ifgreater_5_value1_tmp UsdPreviewSurface_opacityMode 	%line{130} %argrw{"wrr"}
	functioncall	$const32 286 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp91 284 286 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_5_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_5_out ___682_ifgreater_6_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:131
#     float ifgreater_4_out = mx_ternary(ifgreater_4_value1_tmp > which, in4, ifgreater_5_out);
	assign		___682_ifgreater_4_value1_tmp $const49 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:132
#     int ifgreater_3_value1_tmp = 3;
	gt		$tmp92 ___682_ifgreater_4_value1_tmp UsdPreviewSurface_opacityMode 	%line{132} %argrw{"wrr"}
	functioncall	$const32 294 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp92 292 294 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_4_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_4_out ___682_ifgreater_5_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:133
#     float ifgreater_3_out = mx_ternary(ifgreater_3_value1_tmp > which, in3, ifgreater_4_out);
	assign		___682_ifgreater_3_value1_tmp $const50 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{133} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:134
#     int ifgreater_2_value1_tmp = 2;
	gt		$tmp93 ___682_ifgreater_3_value1_tmp UsdPreviewSurface_opacityMode 	%line{134} %argrw{"wrr"}
	functioncall	$const32 302 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp93 300 302 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_3_out $const2 	%argrw{"wr"}
	return
	assign		___682_ifgreater_3_out ___682_ifgreater_4_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:135
#     float ifgreater_2_out = mx_ternary(ifgreater_2_value1_tmp > which, in2, ifgreater_3_out);
	assign		___682_ifgreater_2_value1_tmp $const23 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{135} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:136
#     int ifgreater_1_value1_tmp = 1;
	gt		$tmp94 ___682_ifgreater_2_value1_tmp UsdPreviewSurface_opacityMode 	%line{136} %argrw{"wrr"}
	functioncall	$const32 310 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp94 308 310 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_2_out ___687_opacity_presence_out 	%argrw{"wr"}
	return
	assign		___682_ifgreater_2_out ___682_ifgreater_3_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:137
#     float ifgreater_1_out = mx_ternary(ifgreater_1_value1_tmp > which, in1, ifgreater_2_out);
	assign		___682_ifgreater_1_value1_tmp $const41 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{137} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:138
#     out = ifgreater_1_out;
	gt		$tmp95 ___682_ifgreater_1_value1_tmp UsdPreviewSurface_opacityMode 	%line{138} %argrw{"wrr"}
	functioncall	$const32 318 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp95 316 318 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___682_ifgreater_1_out ___687_cutout_opacity_out 	%argrw{"wr"}
	return
	assign		___682_ifgreater_1_out ___682_ifgreater_2_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:139
# }
	assign		___687_opacity_switch_out ___682_ifgreater_1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{139} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:213
#     NG_convert_float_color3(R_sq_out, coat_F0_out);
	assign		___687_coat_F0_out $const33 	%line{213} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:214
#     color specular_color_metallic_R_sq_out = specular_color_metallic_out * R_sq_out;
	functioncall	$const51 323 	%line{214} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:144
#     out = combine_out;
	color		___683_combine_out ___687_R_sq_out ___687_R_sq_out ___687_R_sq_out 	%line{144} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:145
# }
	assign		___687_coat_F0_out ___683_combine_out 	%line{145} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:215
#     color F0_out = mix(specular_color_metallic_R_sq_out, specular_color_metallic_out, metallic);
	mul		___687_specular_color_metallic_R_sq_out ___687_specular_color_metallic_out ___687_R_sq_out 	%line{215} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:216
#     BSDF coat_dielectric_bsdf_out = null_closure;
	mix		___687_F0_out ___687_specular_color_metallic_R_sq_out ___687_specular_color_metallic_out UsdPreviewSurface_metallic 	%line{216} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:217
#     mx_generalized_schlick_bsdf(clearcoat, coat_F0_out, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, coat_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", coat_dielectric_bsdf_out);
	assign		___687_coat_dielectric_bsdf_out ___687_null_closure 	%line{217} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:218
#     BSDF specular_bsdf1_out = null_closure;
	functioncall	$const56 337 	%line{218} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:150
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp98 $const55 $const57 	%line{150} %argrw{"wrr"}
	if		$tmp98 330 331 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:151
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp99 $const55 $const55 	%line{151} %argrw{"wrr"}
	if		$tmp99 334 335 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:152
# }
	closure		$tmp100 $const60 ___687_surface_normal_out ___687_geomprop_Tworld_out1 ___684_reflection_tint ___684_transmission_tint ___687_coat_roughness_out.x ___687_coat_roughness_out.y ___687_coat_F0_out $const36 $const52 $const54 $const58 $const2 $const59 $const53 	%line{152} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___687_coat_dielectric_bsdf_out $tmp100 UsdPreviewSurface_clearcoat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:219
#     mx_generalized_schlick_bsdf(1.000000, specularColor, color(1.000000, 1.000000, 1.000000), color(1.000000, 1.000000, 1.000000), 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf1_out);
	assign		___687_specular_bsdf1_out ___687_null_closure 	%line{219} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:220
#     float diffuse_bsdf_roughness_tmp = 0.000000;
	functioncall	$const56 349 	%line{220} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:150
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp103 $const55 $const57 	%line{150} %argrw{"wrr"}
	if		$tmp103 342 343 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:151
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp104 $const55 $const55 	%line{151} %argrw{"wrr"}
	if		$tmp104 346 347 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:152
# }
	closure		$tmp105 $const60 ___687_surface_normal_out ___687_geomprop_Tworld_out1 ___684_reflection_tint ___684_transmission_tint ___687_specular_roughness_out.x ___687_specular_roughness_out.y UsdPreviewSurface_specularColor $const36 $const52 $const54 $const58 $const2 $const59 $const53 	%line{152} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___687_specular_bsdf1_out $tmp105 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:221
#     BSDF diffuse_bsdf_out = diffuse_bsdf_weight_out * oren_nayar_diffuse_bsdf(surface_normal_out, diffuseColor, diffuse_bsdf_roughness_tmp);
	assign		___687_diffuse_bsdf_roughness_tmp $const2 	%line{221} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:222
#     BSDF transmission_bsdf_out = null_closure;
	closure		$tmp106 $const61 ___687_surface_normal_out UsdPreviewSurface_diffuseColor ___687_diffuse_bsdf_roughness_tmp 	%line{222} %argrw{"wrrrr"}
	mul		___687_diffuse_bsdf_out $tmp106 ___687_diffuse_bsdf_weight_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:223
#     mx_dielectric_bsdf(1.000000, color(1.000000, 1.000000, 1.000000), ior, vector2(0.000000, 0.000000), 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "T", transmission_bsdf_out);
	assign		___687_transmission_bsdf_out ___687_null_closure 	%line{223} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:224
#     BSDF transmission_mix_out = mix(transmission_bsdf_out, diffuse_bsdf_out, transmission_mix_amount_out);
	assign		$tmp108.x $const2 	%line{224} %argrw{"wr"}
	assign		$tmp108.y $const2 	%argrw{"wr"}
	functioncall	$const62 366 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:157
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp109 $const57 $const57 	%line{157} %argrw{"wrr"}
	if		$tmp109 359 360 	%argrw{"r"}
	assign		___685_reflection_tint $const33 	%argrw{"wr"}
	assign		___685_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:158
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp110 $const57 $const55 	%line{158} %argrw{"wrr"}
	if		$tmp110 363 364 	%argrw{"r"}
	assign		___685_transmission_tint $const33 	%argrw{"wr"}
	assign		___685_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:159
# }
	closure		$tmp111 $const63 ___687_surface_normal_out ___687_geomprop_Tworld_out1 ___685_reflection_tint ___685_transmission_tint $tmp108.x $tmp108.y UsdPreviewSurface_ior $const54 $const58 $const2 $const59 $const53 	%line{159} %argrw{"wrrrrrrrrrrrrr"}
	mul		___687_transmission_bsdf_out $tmp111 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:225
#     BSDF specular_workflow_bsdf_out = layer(specular_bsdf1_out, transmission_mix_out);
	functioncall	$const64 371 	%line{225} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp112 $const11 ___687_transmission_mix_amount_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp113 ___687_transmission_bsdf_out $tmp112 	%argrw{"wrr"}
	mul		$tmp114 ___687_diffuse_bsdf_out ___687_transmission_mix_amount_out 	%argrw{"wrr"}
	add		___687_transmission_mix_out $tmp113 $tmp114 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:226
#     float metalness_metal_bsdf_weight_tmp = 1.000000;
	closure		___687_specular_workflow_bsdf_out $const65 ___687_specular_bsdf1_out ___687_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{226} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:227
#     string metalness_metal_bsdf_distribution_tmp = "ggx";
	assign		___687_metalness_metal_bsdf_weight_tmp $const11 	%line{227} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:228
#     float metalness_metal_bsdf_thinfilm_thickness_tmp = 0.000000;
	assign		___687_metalness_metal_bsdf_distribution_tmp $const54 	%line{228} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:229
#     float metalness_metal_bsdf_thinfilm_ior_tmp = 1.500000;
	assign		___687_metalness_metal_bsdf_thinfilm_thickness_tmp $const2 	%line{229} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:230
#     BSDF metalness_metal_bsdf_out = metalness_metal_bsdf_weight_tmp * conductor_bsdf(surface_normal_out, geomprop_Tworld_out1, specular_roughness_out.x, specular_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metalness_metal_bsdf_distribution_tmp, "thinfilm_thickness", metalness_metal_bsdf_thinfilm_thickness_tmp, "thinfilm_ior", metalness_metal_bsdf_thinfilm_ior_tmp);
	assign		___687_metalness_metal_bsdf_thinfilm_ior_tmp $const53 	%line{230} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:231
#     BSDF specular_bsdf2_out = null_closure;
	closure		$tmp115 $const66 ___687_surface_normal_out ___687_geomprop_Tworld_out1 ___687_specular_roughness_out.x ___687_specular_roughness_out.y ___687_artistic_ior_ior ___687_artistic_ior_extinction ___687_metalness_metal_bsdf_distribution_tmp $const58 ___687_metalness_metal_bsdf_thinfilm_thickness_tmp $const59 ___687_metalness_metal_bsdf_thinfilm_ior_tmp 	%line{231} %argrw{"wrrrrrrrrrrrr"}
	mul		___687_metalness_metal_bsdf_out $tmp115 ___687_metalness_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:232
#     mx_generalized_schlick_bsdf(1.000000, F0_out, color(1.000000, 1.000000, 1.000000), specular_color_metallic_out, 5.000000, specular_roughness_out, 0.000000, 1.500000, surface_normal_out, geomprop_Tworld_out1, "ggx", "R", specular_bsdf2_out);
	assign		___687_specular_bsdf2_out ___687_null_closure 	%line{232} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:233
#     BSDF metalness_specular_bsdf_out = layer(specular_bsdf2_out, transmission_mix_out);
	functioncall	$const56 390 	%line{233} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:150
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : color(1.0);
	eq		$tmp117 $const55 $const57 	%line{150} %argrw{"wrr"}
	if		$tmp117 383 384 	%argrw{"r"}
	assign		___684_reflection_tint $const33 	%argrw{"wr"}
	assign		___684_reflection_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:151
#     bsdf = weight * generalized_schlick_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, color0, color90, exponent, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp118 $const55 $const55 	%line{151} %argrw{"wrr"}
	if		$tmp118 387 388 	%argrw{"r"}
	assign		___684_transmission_tint $const33 	%argrw{"wr"}
	assign		___684_transmission_tint $const36 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:152
# }
	closure		$tmp119 $const60 ___687_surface_normal_out ___687_geomprop_Tworld_out1 ___684_reflection_tint ___684_transmission_tint ___687_specular_roughness_out.x ___687_specular_roughness_out.y ___687_F0_out ___687_specular_color_metallic_out $const52 $const54 $const58 $const2 $const59 $const53 	%line{152} %argrw{"wrrrrrrrrrrrrrrr"}
	mul		___687_specular_bsdf2_out $tmp119 $const11 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:234
#     BSDF metalness_workflow_bsdf_out = mix(metalness_specular_bsdf_out, metalness_metal_bsdf_out, metallic);
	closure		___687_metalness_specular_bsdf_out $const65 ___687_specular_bsdf2_out ___687_transmission_mix_out 	%line{234} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:235
#     BSDF workflow_selector_bsdf_out = mix(metalness_workflow_bsdf_out, specular_workflow_bsdf_out, use_specular_workflow_float_out);
	functioncall	$const64 396 	%line{235} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp120 $const11 UsdPreviewSurface_metallic 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp121 ___687_metalness_specular_bsdf_out $tmp120 	%argrw{"wrr"}
	mul		$tmp122 ___687_metalness_metal_bsdf_out UsdPreviewSurface_metallic 	%argrw{"wrr"}
	add		___687_metalness_workflow_bsdf_out $tmp121 $tmp122 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:236
#     BSDF coat_bsdf_out = layer(coat_dielectric_bsdf_out, workflow_selector_bsdf_out);
	functioncall	$const64 401 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{236} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp123 $const11 ___687_use_specular_workflow_float_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp124 ___687_metalness_workflow_bsdf_out $tmp123 	%argrw{"wrr"}
	mul		$tmp125 ___687_specular_workflow_bsdf_out ___687_use_specular_workflow_float_out 	%argrw{"wrr"}
	add		___687_workflow_selector_bsdf_out $tmp124 $tmp125 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:237
#     EDF emission_edf_out = uniform_edf(emissiveColor);
	closure		___687_coat_bsdf_out $const65 ___687_coat_dielectric_bsdf_out ___687_workflow_selector_bsdf_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{237} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:238
#     surfaceshader surface_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	closure		___687_emission_edf_out $const67 UsdPreviewSurface_emissiveColor 	%line{238} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:239
#     mx_surface(coat_bsdf_out, emission_edf_out, opacity_switch_out, 0, surface_constructor_out);
	assign		___687_surface_constructor_out.bsdf ___687_null_closure 	%line{239} %argrw{"wr"}
	assign		___687_surface_constructor_out.edf ___687_null_closure 	%argrw{"wr"}
	assign		___687_surface_constructor_out.opacity $const11 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:240
#     out = surface_constructor_out;
	functioncall	$const68 413 	%line{240} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:164
#     result.edf     = edf;
	assign		___687_surface_constructor_out.bsdf ___687_coat_bsdf_out 	%line{164} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:165
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___687_surface_constructor_out.edf ___687_emission_edf_out 	%line{165} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:166
# }
	functioncall	$const26 412 	%line{166} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp126 ___687_opacity_switch_out $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___687_surface_constructor_out.opacity $tmp126 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:166
# }
	assign		___687_surface_constructor_out.opacity ___687_surface_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{166} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:241
# }
	assign		UsdPreviewSurface_out.bsdf ___687_surface_constructor_out.bsdf 	%line{241} %argrw{"wr"}
	assign		UsdPreviewSurface_out.edf ___687_surface_constructor_out.edf 	%argrw{"wr"}
	assign		UsdPreviewSurface_out.opacity ___687_surface_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:394
#         surface2_out = (UsdPreviewSurface_out.bsdf + UsdPreviewSurface_out.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const26 419 	%line{394} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp127 UsdPreviewSurface_out.opacity $const11 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___688_opacity_weight $tmp127 $const2 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl:395
#     }
	add		$tmp128 UsdPreviewSurface_out.bsdf UsdPreviewSurface_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_surface2_out.osl"} %line{395} %argrw{"wrr"}
	mul		$tmp129 $tmp128 ___688_opacity_weight 	%argrw{"wrr"}
	closure		$tmp130 $const69 	%argrw{"wr"}
	sub		$tmp131 $const11 ___688_opacity_weight 	%argrw{"wrr"}
	mul		$tmp132 $tmp130 $tmp131 	%argrw{"wrr"}
	add		surface2_out $tmp129 $tmp132 	%argrw{"wrr"}
	end
