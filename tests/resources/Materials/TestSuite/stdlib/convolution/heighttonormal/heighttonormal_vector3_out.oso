OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\convolution\heighttonormal\heighttonormal_vector3_out.oso
shader heighttonormal_vector3_out	%meta{string,mtlx_category,"output"} %meta{string,mtlx_name,"vector3_out"} 
param	string	file	"D:/Work/materialx/bernard_MaterialX_3/build/bin/resources/Images/plain_heightmap.png"		%meta{string,widget,"filename"}  %read{0,0} %write{2147483647,-1} %derivs
param	string	file_colorspace	""		%meta{string,widget,"colorspace"}  %read{1,1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	tiledimage_default	0		%meta{string,widget,"number"}  %read{52,54} %write{2147483647,-1} %derivs
param	struct vector2	tiledimage_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvtiling.x	10		%read{7,7} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{0} %derivs
param	float	tiledimage_uvtiling.y	10		%read{8,8} %write{2147483647,-1} %mystruct{tiledimage_uvtiling} %mystructfield{1} %derivs
param	struct vector2	tiledimage_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_uvoffset.x	0		%read{10,10} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{0} %derivs
param	float	tiledimage_uvoffset.y	0		%read{11,11} %write{2147483647,-1} %mystruct{tiledimage_uvoffset} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldimagesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldimagesize.x	1		%read{13,13} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldimagesize.y	1		%read{14,14} %write{2147483647,-1} %mystruct{tiledimage_realworldimagesize} %mystructfield{1} %derivs
param	struct vector2	tiledimage_realworldtilesize			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledimage_realworldtilesize.x	1		%read{16,16} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{0} %derivs
param	float	tiledimage_realworldtilesize.y	1		%read{17,17} %write{2147483647,-1} %mystruct{tiledimage_realworldtilesize} %mystructfield{1} %derivs
param	string	tiledimage_filtertype	"linear"		%read{58,58} %write{2147483647,-1} %derivs
param	string	tiledimage_framerange	""		%read{2147483647,-1} %write{2147483647,-1}
param	int	tiledimage_frameoffset	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	string	tiledimage_frameendaction	"constant"		%read{2147483647,-1} %write{2147483647,-1}
param	float	heighttonormal_scale	0.200000003		%meta{string,widget,"number"}  %read{66,66} %write{2147483647,-1}
oparam	vector	vector3_out	0 0 0		%read{2147483647,-1} %write{78,78}
global	float	u	%read{2,2} %write{2147483647,-1} %derivs
global	float	v	%read{3,3} %write{2147483647,-1} %derivs
local	color	___670_missingColor	%read{58,58} %write{54,54} %derivs
local	float	___670_st.x	%read{58,58} %write{56,56} %mystruct{___670_st} %mystructfield{0} %derivs
local	float	___670_st.y	%read{58,58} %write{57,57} %mystruct{___670_st} %mystructfield{1} %derivs
local	color	___670_rgb	%read{59,59} %write{58,58} %derivs
local	float	___672_N_mult_float_out.x	%read{10,10} %write{7,7} %mystruct{___672_N_mult_float_out} %mystructfield{0} %derivs
local	float	___672_N_mult_float_out.y	%read{11,11} %write{8,8} %mystruct{___672_N_mult_float_out} %mystructfield{1} %derivs
local	float	___672_N_sub_float_out.x	%read{13,13} %write{10,10} %mystruct{___672_N_sub_float_out} %mystructfield{0} %derivs
local	float	___672_N_sub_float_out.y	%read{14,14} %write{11,11} %mystruct{___672_N_sub_float_out} %mystructfield{1} %derivs
local	float	___672_N_divtilesize_float_out.x	%read{16,16} %write{13,13} %mystruct{___672_N_divtilesize_float_out} %mystructfield{0} %derivs
local	float	___672_N_divtilesize_float_out.y	%read{17,17} %write{14,14} %mystruct{___672_N_divtilesize_float_out} %mystructfield{1} %derivs
local	float	___672_N_multtilesize_float_out.x	%read{26,56} %write{16,16} %mystruct{___672_N_multtilesize_float_out} %mystructfield{0} %derivs
local	float	___672_N_multtilesize_float_out.y	%read{41,57} %write{17,17} %mystruct{___672_N_multtilesize_float_out} %mystructfield{1} %derivs
local	float	___672_N_img_float_out	%read{60,60} %write{18,59} %derivs
local	float	___673_dx	%read{67,74} %write{64,64}
local	float	___673_dy	%read{69,74} %write{65,65}
local	float	___673_dz	%read{74,74} %write{73,73}
local	vector	___673_dir	%read{76,76} %write{75,75}
local	string	file_.filename	%read{20,58} %write{0,0} %mystruct{file_} %mystructfield{0} %derivs
local	string	file_.colorspace	%read{2147483647,-1} %write{1,1} %mystruct{file_} %mystructfield{1}
local	float	geomprop_UV0_out1.x	%read{7,7} %write{2,2} %mystruct{geomprop_UV0_out1} %mystructfield{0} %derivs
local	float	geomprop_UV0_out1.y	%read{8,8} %write{3,3} %mystruct{geomprop_UV0_out1} %mystructfield{1} %derivs
local	float	tiledimage_out	%read{63,65} %write{4,60} %derivs
local	vector	heighttonormal_out	%read{78,78} %write{61,77}
const	float	$const1	0		%read{4,41} %write{2147483647,-1}
const	string	$const2	"NG_tiledimage_float"		%read{5,5} %write{2147483647,-1}
const	string	$const3	"__operator__mul__"		%read{6,15} %write{2147483647,-1}
const	string	$const4	"__operator__sub__"		%read{9,9} %write{2147483647,-1}
const	string	$const5	"__operator__div__"		%read{12,12} %write{2147483647,-1}
const	string	$const6	""		%read{20,58} %write{2147483647,-1}
const	string	$const7	"periodic"		%read{23,58} %write{2147483647,-1}
const	string	$const8	"mx_image_float"		%read{19,19} %write{2147483647,-1}
temp	int	$tmp1	%read{21,21} %write{20,20}
temp	int	$tmp2	%read{22,36} %write{21,35}
const	int	$const9	0		%read{21,59} %write{2147483647,-1}
const	string	$const10	"constant"		%read{23,38} %write{2147483647,-1}
temp	int	$tmp3	%read{24,24} %write{23,23}
temp	int	$tmp4	%read{25,34} %write{24,33}
temp	int	$tmp5	%read{27,27} %write{26,26}
temp	int	$tmp6	%read{28,32} %write{27,31}
const	float	$const11	1		%read{29,68} %write{2147483647,-1}
temp	int	$tmp7	%read{30,30} %write{29,29}
temp	int	$tmp8	%read{31,31} %write{30,30}
temp	int	$tmp9	%read{33,33} %write{32,32}
temp	int	$tmp10	%read{35,35} %write{34,34}
temp	int	$tmp11	%read{37,51} %write{36,50}
temp	int	$tmp12	%read{39,39} %write{38,38}
temp	int	$tmp13	%read{40,49} %write{39,48}
temp	int	$tmp14	%read{42,42} %write{41,41}
temp	int	$tmp15	%read{43,47} %write{42,46}
temp	int	$tmp16	%read{45,45} %write{44,44}
temp	int	$tmp17	%read{46,46} %write{45,45}
temp	int	$tmp18	%read{48,48} %write{47,47}
temp	int	$tmp19	%read{50,50} %write{49,49}
const	string	$const12	"mx_transform_uv"		%read{55,55} %write{2147483647,-1}
const	string	$const13	"subimage"		%read{58,58} %write{2147483647,-1}
const	string	$const14	"interp"		%read{58,58} %write{2147483647,-1}
const	string	$const15	"missingcolor"		%read{58,58} %write{2147483647,-1}
const	string	$const16	"swrap"		%read{58,58} %write{2147483647,-1}
const	string	$const17	"twrap"		%read{58,58} %write{2147483647,-1}
const	vector	$const18	0 0 0		%read{61,61} %write{2147483647,-1}
const	string	$const19	"mx_heighttonormal_vector3"		%read{62,62} %write{2147483647,-1}
temp	float	$tmp20	%read{64,64} %write{63,63}
temp	float	$tmp21	%read{73,73} %write{66,66}
const	float	$const20	1e-05		%read{66,71} %write{2147483647,-1}
temp	float	$tmp22	%read{73,73} %write{72,72}
temp	float	$tmp23	%read{72,72} %write{71,71}
temp	float	$tmp24	%read{68,68} %write{67,67}
temp	float	$tmp25	%read{70,70} %write{68,68}
temp	float	$tmp26	%read{70,70} %write{69,69}
temp	float	$tmp27	%read{71,71} %write{70,70}
temp	vector	$tmp28	%read{75,75} %write{74,74}
const	vector	$const21	0.5 0.5 0.5		%read{76,77} %write{2147483647,-1}
temp	vector	$tmp30	%read{77,77} %write{76,76}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:102
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	assign		file_.filename file 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl"} %line{102} %argrw{"wr"}
	assign		file_.colorspace file_colorspace 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:103
#     float tiledimage_out = 0.0;
	assign		geomprop_UV0_out1.x u 	%line{103} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:104
#     NG_tiledimage_float(file_, tiledimage_default, geomprop_UV0_out1, tiledimage_uvtiling, tiledimage_uvoffset, tiledimage_realworldimagesize, tiledimage_realworldtilesize, tiledimage_filtertype, tiledimage_framerange, tiledimage_frameoffset, tiledimage_frameendaction, tiledimage_out);
	assign		tiledimage_out $const1 	%line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:105
#     vector heighttonormal_out = vector(0.0);
	functioncall	$const2 61 	%line{105} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:110
# 
	functioncall	$const3 9 	%line{110} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_mult_float_out.x geomprop_UV0_out1.x tiledimage_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_mult_float_out.y geomprop_UV0_out1.y tiledimage_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:110
# 
	functioncall	$const4 12 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl"} %line{110} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_sub_float_out.x ___672_N_mult_float_out.x tiledimage_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_sub_float_out.y ___672_N_mult_float_out.y tiledimage_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:110
# 
	functioncall	$const5 15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl"} %line{110} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___672_N_divtilesize_float_out.x ___672_N_sub_float_out.x tiledimage_realworldimagesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{103} %argrw{"wrr"}
	div		___672_N_divtilesize_float_out.y ___672_N_sub_float_out.y tiledimage_realworldimagesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:110
# 
	functioncall	$const3 18 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl"} %line{110} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___672_N_multtilesize_float_out.x ___672_N_divtilesize_float_out.x tiledimage_realworldtilesize.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___672_N_multtilesize_float_out.y ___672_N_divtilesize_float_out.y tiledimage_realworldtilesize.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:48
#     mx_image_float(file, "", default1, N_multtilesize_float_out, "periodic", "periodic", filtertype, framerange, frameoffset, frameendaction, N_img_float_out);
	assign		___672_N_img_float_out $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl"} %line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:49
#     out = N_img_float_out;
	functioncall	$const8 60 	%line{49} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	eq		$tmp1 file_.filename $const6 	%line{25} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const9 	%argrw{"wrr"}
	if		$tmp2 23 36 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	eq		$tmp3 $const7 $const10 	%line{26} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const9 	%argrw{"wrr"}
	if		$tmp4 34 34 	%argrw{"r"}
	lt		$tmp5 ___672_N_multtilesize_float_out.x $const1 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const9 	%argrw{"wrr"}
	if		$tmp6 29 32 	%argrw{"r"}
	gt		$tmp7 ___672_N_multtilesize_float_out.x $const11 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const9 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	neq		$tmp9 $tmp6 $const9 	%argrw{"wrr"}
	assign		$tmp4 $tmp9 	%argrw{"wr"}
	neq		$tmp10 $tmp4 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	assign		$tmp2 $tmp10 	%line{25} %argrw{"wr"}
	neq		$tmp11 $tmp2 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	if		$tmp11 38 51 	%line{26} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:27
#     {
	eq		$tmp12 $const7 $const10 	%line{27} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const9 	%argrw{"wrr"}
	if		$tmp13 49 49 	%argrw{"r"}
	lt		$tmp14 ___672_N_multtilesize_float_out.y $const1 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const9 	%argrw{"wrr"}
	if		$tmp15 44 47 	%argrw{"r"}
	gt		$tmp16 ___672_N_multtilesize_float_out.y $const11 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const9 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	neq		$tmp18 $tmp15 $const9 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:26
#         (vaddressmode == "constant" && (texcoord.y<0.0 || texcoord.y>1.0)))
	assign		$tmp11 $tmp19 	%line{26} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:25
#         (uaddressmode == "constant" && (texcoord.x<0.0 || texcoord.x>1.0)) ||
	if		$tmp11 54 54 	%line{25} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:29
#         return;
	assign		___672_N_img_float_out tiledimage_default 	%line{29} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:30
#     }
	return	%line{30}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:33
#     vector2 st = mx_transform_uv(texcoord);
	assign		___670_missingColor tiledimage_default 	%line{33} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:34
#     color rgb = texture(file.filename, st.x, st.y,
	functioncall	$const12 58 	%line{34} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:20
# }
	assign		___670_st.x ___672_N_multtilesize_float_out.x 	%line{20} %argrw{"wr"}
	assign		___670_st.y ___672_N_multtilesize_float_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:35
#                         "subimage", layer, "interp", filtertype,
	texture		___670_rgb file_.filename ___670_st.x ___670_st.y $const13 $const6 $const14 tiledimage_filtertype $const15 ___670_missingColor $const16 $const7 $const17 $const7 	%line{35} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:39
# }
	compref		___672_N_img_float_out ___670_rgb $const9 	%line{39} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:50
# }
	assign		tiledimage_out ___672_N_img_float_out 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:106
#     mx_heighttonormal_vector3(tiledimage_out, heighttonormal_scale, heighttonormal_out);
	assign		heighttonormal_out $const18 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:107
#     vector3_out = heighttonormal_out;
	functioncall	$const19 78 	%line{107} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:55
#     float dy = Dy(in);
	Dx		$tmp20 tiledimage_out 	%line{55} %argrw{"wr"} %argderivs{1}
	neg		___673_dx $tmp20 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:56
#     float dz = max(scale, 1.0E-05) * sqrt(max(1.0 - dx*dx - dy*dy, 1.0E-05));
	Dy		___673_dy tiledimage_out 	%line{56} %argrw{"wr"} %argderivs{1}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:57
#     vector dir = normalize(vector(dx, dy, dz));
	max		$tmp21 heighttonormal_scale $const20 	%line{57} %argrw{"wrr"}
	mul		$tmp24 ___673_dx ___673_dx 	%argrw{"wrr"}
	sub		$tmp25 $const11 $tmp24 	%argrw{"wrr"}
	mul		$tmp26 ___673_dy ___673_dy 	%argrw{"wrr"}
	sub		$tmp27 $tmp25 $tmp26 	%argrw{"wrr"}
	max		$tmp23 $tmp27 $const20 	%argrw{"wrr"}
	sqrt		$tmp22 $tmp23 	%argrw{"wr"}
	mul		___673_dz $tmp21 $tmp22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:58
#     result = dir * vector(0.5) + vector(0.5);
	vector		$tmp28 ___673_dx ___673_dy ___673_dz 	%line{58} %argrw{"wrrr"}
	normalize	___673_dir $tmp28 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:59
# }
	mul		$tmp30 ___673_dir $const21 	%line{59} %argrw{"wrr"}
	add		heighttonormal_out $tmp30 $const21 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\convolution\\heighttonormal\\heighttonormal_vector3_out.osl:108
# }
	assign		vector3_out heighttonormal_out 	%line{108} %argrw{"wr"}
	end
