OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\procedural\linepattern\test_crosshatch.oso
shader test_crosshatch	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"test_crosshatch"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	crosshatch_color3_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	crosshatch_color3_uvtiling.x	29		%read{13,13} %write{2147483647,-1} %mystruct{crosshatch_color3_uvtiling} %mystructfield{0}
param	float	crosshatch_color3_uvtiling.y	29		%read{14,14} %write{2147483647,-1} %mystruct{crosshatch_color3_uvtiling} %mystructfield{1}
param	struct vector2	crosshatch_color3_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	crosshatch_color3_uvoffset.x	0		%read{16,16} %write{2147483647,-1} %mystruct{crosshatch_color3_uvoffset} %mystructfield{0}
param	float	crosshatch_color3_uvoffset.y	0		%read{17,17} %write{2147483647,-1} %mystruct{crosshatch_color3_uvoffset} %mystructfield{1}
param	float	crosshatch_color3_thickness	0.0500000007		%meta{string,widget,"number"}  %read{137,196} %write{2147483647,-1}
param	int	crosshatch_color3_staggered	0		%meta{string,widget,"checkBox"}  %read{67,67} %write{2147483647,-1}
param	float	SR_test_crosshatch_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{239,674} %write{2147483647,-1}
param	float	SR_test_crosshatch_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{673,673} %write{2147483647,-1}
param	float	SR_test_crosshatch_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{688,690} %write{2147483647,-1}
param	float	SR_test_crosshatch_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{240,646} %write{2147483647,-1}
param	color	SR_test_crosshatch_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{240,644} %write{2147483647,-1}
param	float	SR_test_crosshatch_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{244,546} %write{2147483647,-1}
param	float	SR_test_crosshatch_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{645,657} %write{2147483647,-1}
param	float	SR_test_crosshatch_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{568,600} %write{2147483647,-1}
param	float	SR_test_crosshatch_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{243,243} %write{2147483647,-1}
param	float	SR_test_crosshatch_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{682,684} %write{2147483647,-1}
param	color	SR_test_crosshatch_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{652,656} %write{2147483647,-1}
param	float	SR_test_crosshatch_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_test_crosshatch_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_crosshatch_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_crosshatch_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_crosshatch_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{244,244} %write{2147483647,-1}
param	float	SR_test_crosshatch_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{676,678} %write{2147483647,-1}
param	color	SR_test_crosshatch_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{247,247} %write{2147483647,-1}
param	color	SR_test_crosshatch_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{253,253} %write{2147483647,-1}
param	float	SR_test_crosshatch_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{253,253} %write{2147483647,-1}
param	float	SR_test_crosshatch_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{667,667} %write{2147483647,-1}
param	float	SR_test_crosshatch_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{660,660} %write{2147483647,-1}
param	color	SR_test_crosshatch_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{659,659} %write{2147483647,-1}
param	float	SR_test_crosshatch_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{659,659} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{241,712} %write{2147483647,-1}
param	color	SR_test_crosshatch_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{260,695} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{219,415} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{223,554} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{238,238} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{262,629} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{539,539} %write{2147483647,-1}
param	float	SR_test_crosshatch_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{241,241} %write{2147483647,-1}
param	float	SR_test_crosshatch_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{633,645} %write{2147483647,-1}
param	float	SR_test_crosshatch_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{633,645} %write{2147483647,-1}
param	float	SR_test_crosshatch_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{265,265} %write{2147483647,-1}
param	color	SR_test_crosshatch_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{265,265} %write{2147483647,-1}
param	color	SR_test_crosshatch_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{268,268} %write{2147483647,-1}
param	int	SR_test_crosshatch_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{254,254} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{737,737}
global	vector	I	%read{698,698} %write{2147483647,-1}
global	normal	N	%read{2,699} %write{2147483647,-1}
global	float	u	%read{8,8} %write{2147483647,-1}
global	float	v	%read{9,9} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{23,23} %write{21,21}
local	float	___669_N_extract_0_out	%read{37,37} %write{25,27}
local	int	___669_N_extract_1_index_tmp	%read{31,31} %write{29,29}
local	float	___669_N_extract_1_out	%read{38,38} %write{33,35}
local	float	___670_N_mtlxsubtract_out.x	%read{130,189} %write{126,185} %mystruct{___670_N_mtlxsubtract_out} %mystructfield{0}
local	float	___670_N_mtlxsubtract_out.y	%read{131,190} %write{127,186} %mystruct{___670_N_mtlxsubtract_out} %mystructfield{1}
local	float	___670_N_mtlxmagnitude_out	%read{134,193} %write{133,192}
local	float	___671_delta_out.x	%read{101,160} %write{95,154} %mystruct{___671_delta_out} %mystructfield{0}
local	float	___671_delta_out.y	%read{102,161} %write{96,155} %mystruct{___671_delta_out} %mystructfield{1}
local	float	___671_b_a_out.x	%read{104,180} %write{98,157} %mystruct{___671_b_a_out} %mystructfield{0}
local	float	___671_b_a_out.y	%read{105,181} %write{99,158} %mystruct{___671_b_a_out} %mystructfield{1}
local	float	___671_p_a_out.x	%read{108,185} %write{101,160} %mystruct{___671_p_a_out} %mystructfield{0}
local	float	___671_p_a_out.y	%read{109,186} %write{102,161} %mystruct{___671_p_a_out} %mystructfield{1}
local	float	___671_dot_ba_ba_out	%read{111,170} %write{106,165}
local	float	___671_dot_pa_ba_out	%read{111,170} %write{110,169}
local	float	___671_divide_dots_out	%read{115,174} %write{111,170}
local	float	___671_clamp_low_tmp	%read{116,175} %write{112,171}
local	float	___671_clamp_high_tmp	%read{115,174} %write{113,172}
local	float	___671_clamp_out	%read{118,178} %write{116,175}
local	float	___671_multiply_clamp_ba_out.x	%read{126,185} %write{121,180} %mystruct{___671_multiply_clamp_ba_out} %mystructfield{0}
local	float	___671_multiply_clamp_ba_out.y	%read{127,186} %write{122,181} %mystruct{___671_multiply_clamp_ba_out} %mystructfield{1}
local	float	___671_distance_out	%read{137,196} %write{123,193}
local	float	___671_dist_comp_in1_tmp	%read{140,199} %write{135,194}
local	float	___671_dist_comp_in2_tmp	%read{142,201} %write{136,195}
local	float	___671_dist_comp_out	%read{144,203} %write{140,201}
local	color	___672_combine_out	%read{209,618} %write{208,617}
local	float	___673_texcoord_scale_out.x	%read{16,16} %write{13,13} %mystruct{___673_texcoord_scale_out} %mystructfield{0}
local	float	___673_texcoord_scale_out.y	%read{17,17} %write{14,14} %mystruct{___673_texcoord_scale_out} %mystructfield{1}
local	float	___673_texcoord_bias_out.x	%read{25,33} %write{16,16} %mystruct{___673_texcoord_bias_out} %mystructfield{0}
local	float	___673_texcoord_bias_out.y	%read{27,35} %write{17,17} %mystruct{___673_texcoord_bias_out} %mystructfield{1}
local	float	___673_texcoord_bias_separate_outx	%read{63,72} %write{18,37}
local	float	___673_texcoord_bias_separate_outy	%read{41,50} %write{19,38}
local	float	___673_mod_Y_row_in2_tmp	%read{41,43} %write{39,39}
local	float	___673_mod_Y_row_out	%read{54,54} %write{44,44}
local	float	___673_mod_Y_in2_tmp	%read{47,49} %write{45,45}
local	float	___673_mod_Y_out	%read{62,62} %write{50,50}
local	float	___673_alt_rows_shift_value2_tmp	%read{54,54} %write{51,51}
local	float	___673_alt_rows_shift_in1_tmp	%read{57,57} %write{52,52}
local	float	___673_alt_rows_shift_in2_tmp	%read{59,59} %write{53,53}
local	float	___673_alt_rows_shift_out	%read{63,63} %write{57,59}
local	float	___673_mody_2_in2_tmp	%read{62,62} %write{61,61}
local	float	___673_mody_2_out	%read{65,65} %write{62,62}
local	float	___673_shift_X_out	%read{70,70} %write{63,63}
local	float	___673_subY_1_in2_tmp	%read{65,65} %write{64,64}
local	float	___673_subY_1_out	%read{85,85} %write{65,65}
local	int	___673_stagger_selection_value2_tmp	%read{67,67} %write{66,66}
local	float	___673_stagger_selection_out	%read{76,79} %write{70,72}
local	float	___673_mod_X_in2_tmp	%read{76,78} %write{74,74}
local	float	___673_mod_X_out	%read{81,81} %write{79,79}
local	float	___673_modx_2_in2_tmp	%read{81,81} %write{80,80}
local	float	___673_modx_2_out	%read{83,83} %write{81,81}
local	float	___673_subX_1_in2_tmp	%read{83,83} %write{82,82}
local	float	___673_subX_1_out	%read{84,84} %write{83,83}
local	float	___673_sample_vec_out.x	%read{95,154} %write{84,84} %mystruct{___673_sample_vec_out} %mystructfield{0}
local	float	___673_sample_vec_out.y	%read{96,155} %write{85,85} %mystruct{___673_sample_vec_out} %mystructfield{1}
local	float	___673_line_diag1_out	%read{204,204} %write{86,144}
local	float	___673_line_diag2_out	%read{204,204} %write{145,203}
local	float	___673_composite_diags_out	%read{205,205} %write{204,204}
local	float	___673_max_out	%read{208,208} %write{205,205}
local	color	___673_to_rgb_out	%read{210,210} %write{206,209}
local	float	___674_roughness_sqr	%read{230,610} %write{222,596}
local	float	___675_aspect	%read{230,607} %write{229,603}
local	vector	___678_nAxis	%read{280,480} %write{276,422}
local	float	___678_s	%read{290,476} %write{277,423}
local	float	___678_c	%read{279,482} %write{278,424}
local	float	___678_oc	%read{281,479} %write{279,425}
local	float	___679_rotationRadians	%read{277,424} %write{274,420}
local	matrix	___679_m	%read{343,530} %write{337,483}
local	float	___679_trans.x	%read{387,533} %write{353,499} %mystruct{___679_trans} %mystructfield{0}
local	float	___679_trans.y	%read{387,533} %write{364,510} %mystruct{___679_trans} %mystructfield{1}
local	float	___679_trans.z	%read{387,533} %write{375,521} %mystruct{___679_trans} %mystructfield{2}
local	float	___679_trans.w	%read{2147483647,-1} %write{386,532} %mystruct{___679_trans} %mystructfield{3}
local	color	___680_r	%read{396,410} %write{395,395}
local	color	___680_r_sqrt	%read{400,401} %write{396,396}
local	color	___680_n_min	%read{403,403} %write{399,399}
local	color	___680_n_max	%read{403,403} %write{402,402}
local	color	___680_np1	%read{406,406} %write{404,404}
local	color	___680_nm1	%read{408,408} %write{405,405}
local	color	___680_k2	%read{413,414} %write{411,413}
local	color	___681_reflection_tint	%read{629,657} %write{623,652}
local	color	___681_transmission_tint	%read{629,657} %write{627,656}
local	float	___694_x	%read{706,706} %write{705,705}
local	float	___695_NdotV	%read{702,702} %write{700,700}
local	color	___695_f	%read{708,708} %write{707,707}
local	closure color	___697_null_closure	%read{619,715} %write{215,215}
local	float	___697_coat_roughness_vector_out.x	%read{232,629} %write{216,235} %mystruct{___697_coat_roughness_vector_out} %mystructfield{0}
local	float	___697_coat_roughness_vector_out.y	%read{234,629} %write{217,236} %mystruct{___697_coat_roughness_vector_out} %mystructfield{1}
local	float	___697_coat_tangent_rotate_degree_in2_tmp	%read{238,238} %write{237,237}
local	float	___697_coat_tangent_rotate_degree_out	%read{274,274} %write{238,238}
local	color	___697_metal_reflectivity_out	%read{394,394} %write{239,239}
local	color	___697_metal_edgecolor_out	%read{403,403} %write{240,240}
local	float	___697_coat_affect_roughness_multiply1_out	%read{415,415} %write{241,241}
local	float	___697_tangent_rotate_degree_in2_tmp	%read{243,243} %write{242,242}
local	float	___697_tangent_rotate_degree_out	%read{420,420} %write{243,243}
local	float	___697_transmission_roughness_add_out	%read{537,537} %write{244,244}
local	float	___697_subsurface_color_nonnegative_in2_tmp	%read{246,246} %write{245,245}
local	color	___697_subsurface_color_nonnegative_out	%read{611,611} %write{247,247}
local	float	___697_coat_clamped_low_tmp	%read{252,252} %write{248,248}
local	float	___697_coat_clamped_high_tmp	%read{251,251} %write{249,249}
local	float	___697_coat_clamped_out	%read{539,539} %write{252,252}
local	color	___697_subsurface_radius_scaled_out	%read{667,667} %write{253,253}
local	float	___697_subsurface_selector_out	%read{669,671} %write{255,255}
local	float	___697_base_color_nonnegative_in2_tmp	%read{257,257} %write{256,256}
local	color	___697_base_color_nonnegative_out	%read{612,612} %write{258,258}
local	color	___697_coat_attenuation_bg_tmp	%read{260,260} %write{259,259}
local	color	___697_coat_attenuation_out	%read{692,692} %write{260,260}
local	float	___697_one_minus_coat_ior_in1_tmp	%read{262,262} %write{261,261}
local	float	___697_one_minus_coat_ior_out	%read{540,540} %write{262,262}
local	float	___697_one_plus_coat_ior_in1_tmp	%read{264,264} %write{263,263}
local	float	___697_one_plus_coat_ior_out	%read{540,540} %write{264,264}
local	color	___697_emission_weight_out	%read{694,694} %write{265,265}
local	color	___697_opacity_luminance_out	%read{543,543} %write{266,269}
local	vector	___697_coat_tangent_rotate_out	%read{544,544} %write{270,387}
local	color	___697_artistic_ior_ior	%read{404,633} %write{388,403}
local	color	___697_artistic_ior_extinction	%read{633,633} %write{389,414}
local	float	___697_coat_affect_roughness_multiply2_out	%read{546,549} %write{415,415}
local	vector	___697_tangent_rotate_out	%read{547,547} %write{416,533}
local	float	___697_transmission_roughness_clamped_low_tmp	%read{538,538} %write{534,534}
local	float	___697_transmission_roughness_clamped_high_tmp	%read{537,537} %write{535,535}
local	float	___697_transmission_roughness_clamped_out	%read{549,549} %write{538,538}
local	float	___697_coat_gamma_multiply_out	%read{551,551} %write{539,539}
local	float	___697_coat_ior_to_F0_sqrt_out	%read{552,552} %write{540,540}
local	int	___697_opacity_luminance_float_index_tmp	%read{543,543} %write{541,541}
local	float	___697_opacity_luminance_float_out	%read{721,721} %write{543,543}
local	vector	___697_coat_tangent_rotate_normalize_out	%read{557,557} %write{544,544}
local	float	___697_coat_affected_roughness_fg_tmp	%read{546,546} %write{545,545}
local	float	___697_coat_affected_roughness_out	%read{564,564} %write{546,546}
local	vector	___697_tangent_rotate_normalize_out	%read{586,586} %write{547,547}
local	float	___697_coat_affected_transmission_roughness_fg_tmp	%read{549,549} %write{548,548}
local	float	___697_coat_affected_transmission_roughness_out	%read{593,593} %write{549,549}
local	float	___697_coat_gamma_in2_tmp	%read{551,551} %write{550,550}
local	float	___697_coat_gamma_out	%read{611,612} %write{551,551}
local	float	___697_coat_ior_to_F0_out	%read{614,614} %write{552,552}
local	float	___697_coat_tangent_value2_tmp	%read{554,554} %write{553,553}
local	vector	___697_coat_tangent_out	%read{629,629} %write{557,559}
local	float	___697_main_roughness_out.x	%read{577,645} %write{561,580} %mystruct{___697_main_roughness_out} %mystructfield{0}
local	float	___697_main_roughness_out.y	%read{579,645} %write{562,581} %mystruct{___697_main_roughness_out} %mystructfield{1}
local	float	___697_main_tangent_value2_tmp	%read{583,583} %write{582,582}
local	vector	___697_main_tangent_out	%read{633,657} %write{586,588}
local	float	___697_transmission_roughness_out.x	%read{606,657} %write{590,609} %mystruct{___697_transmission_roughness_out} %mystructfield{0}
local	float	___697_transmission_roughness_out.y	%read{608,657} %write{591,610} %mystruct{___697_transmission_roughness_out} %mystructfield{1}
local	color	___697_coat_affected_subsurface_color_out	%read{662,666} %write{611,611}
local	color	___697_coat_affected_diffuse_color_out	%read{673,673} %write{612,612}
local	float	___697_one_minus_coat_ior_to_F0_in1_tmp	%read{614,614} %write{613,613}
local	float	___697_one_minus_coat_ior_to_F0_out	%read{617,617} %write{614,614}
local	color	___697_emission_color0_out	%read{707,707} %write{615,618}
local	closure color	___697_coat_bsdf_out	%read{693,693} %write{619,630}
local	float	___697_metal_bsdf_weight_tmp	%read{634,634} %write{631,631}
local	string	___697_metal_bsdf_distribution_tmp	%read{633,633} %write{632,632}
local	closure color	___697_metal_bsdf_out	%read{690,690} %write{634,634}
local	closure color	___697_specular_bsdf_out	%read{686,686} %write{635,646}
local	closure color	___697_transmission_bsdf_out	%read{684,684} %write{647,658}
local	closure color	___697_sheen_bsdf_out	%read{680,680} %write{660,660}
local	float	___697_translucent_bsdf_weight_tmp	%read{663,663} %write{661,661}
local	closure color	___697_translucent_bsdf_out	%read{671,671} %write{663,663}
local	closure color	___697_subsurface_bsdf_out	%read{670,670} %write{664,667}
local	closure color	___697_selected_subsurface_bsdf_out	%read{678,678} %write{672,672}
local	closure color	___697_diffuse_bsdf_out	%read{677,677} %write{674,674}
local	closure color	___697_subsurface_mix_out	%read{680,680} %write{679,679}
local	closure color	___697_sheen_layer_out	%read{683,683} %write{680,680}
local	closure color	___697_transmission_mix_out	%read{686,686} %write{685,685}
local	closure color	___697_specular_layer_out	%read{689,689} %write{686,686}
local	closure color	___697_metalness_mix_out	%read{692,692} %write{691,691}
local	closure color	___697_thin_film_layer_attenuated_out	%read{693,693} %write{692,692}
local	closure color	___697_coat_layer_out	%read{718,718} %write{693,693}
local	closure color	___697_emission_edf_out	%read{695,711} %write{694,694}
local	closure color	___697_coat_tinted_emission_edf_out	%read{708,708} %write{695,695}
local	closure color	___697_coat_emission_edf_out	%read{712,712} %write{696,708}
local	closure color	___697_blended_coat_emission_edf_out	%read{719,719} %write{713,713}
local	closure color	___697_shader_constructor_out.bsdf	%read{724,724} %write{714,718} %mystruct{___697_shader_constructor_out} %mystructfield{0}
local	closure color	___697_shader_constructor_out.edf	%read{725,725} %write{715,719} %mystruct{___697_shader_constructor_out} %mystructfield{1}
local	float	___697_shader_constructor_out.opacity	%read{723,726} %write{716,723} %mystruct{___697_shader_constructor_out} %mystructfield{2}
local	float	___698_opacity_weight	%read{732,734} %write{730,730}
local	closure color	null_closure	%read{211,212} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{276,673} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{338,588} %write{7,7}
local	float	geomprop_UV0_out1.x	%read{13,13} %write{8,8} %mystruct{geomprop_UV0_out1} %mystructfield{0}
local	float	geomprop_UV0_out1.y	%read{14,14} %write{9,9} %mystruct{geomprop_UV0_out1} %mystructfield{1}
local	color	crosshatch_color3_out	%read{239,258} %write{10,210}
local	closure color	SR_test_crosshatch_out.bsdf	%read{731,731} %write{211,724} %mystruct{SR_test_crosshatch_out} %mystructfield{0}
local	closure color	SR_test_crosshatch_out.edf	%read{731,731} %write{212,725} %mystruct{SR_test_crosshatch_out} %mystructfield{1}
local	float	SR_test_crosshatch_out.opacity	%read{729,729} %write{213,726} %mystruct{SR_test_crosshatch_out} %mystructfield{2}
local	closure color	test_crosshatch_out	%read{737,737} %write{736,736}
const	int	$const1	0		%read{0,541} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,488} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,527} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,730} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	color	$const6	0 0 0		%read{10,707} %write{2147483647,-1}
const	string	$const7	"NG_crosshatch_color3"		%read{11,11} %write{2147483647,-1}
const	string	$const8	"__operator__mul__"		%read{12,179} %write{2147483647,-1}
const	string	$const9	"__operator__sub__"		%read{15,184} %write{2147483647,-1}
const	string	$const10	"NG_separate2_vector2"		%read{20,20} %write{2147483647,-1}
const	string	$const11	"mx_extract"		%read{22,542} %write{2147483647,-1}
temp	int	$tmp5	%read{24,24} %write{23,23}
const	int	$const12	1		%read{29,524} %write{2147483647,-1}
temp	int	$tmp6	%read{32,32} %write{31,31}
const	float	$const13	2		%read{39,80} %write{2147483647,-1}
const	string	$const14	"mod"		%read{40,75} %write{2147483647,-1}
temp	float	$tmp7	%read{43,43} %write{42,42}
temp	float	$tmp8	%read{42,42} %write{41,41}
temp	float	$tmp9	%read{44,44} %write{43,43}
const	float	$const15	1		%read{45,734} %write{2147483647,-1}
temp	float	$tmp10	%read{49,49} %write{48,48}
temp	float	$tmp11	%read{48,48} %write{47,47}
temp	float	$tmp12	%read{50,50} %write{49,49}
const	float	$const16	0.5		%read{52,52} %write{2147483647,-1}
temp	int	$tmp13	%read{56,56} %write{54,54}
const	string	$const17	"mx_ternary"		%read{55,584} %write{2147483647,-1}
temp	int	$tmp14	%read{69,69} %write{67,67}
temp	float	$tmp15	%read{78,78} %write{77,77}
temp	float	$tmp16	%read{77,77} %write{76,76}
temp	float	$tmp17	%read{79,79} %write{78,78}
temp	float	$tmp18.x	%read{95,95} %write{87,87}
temp	float	$tmp18.y	%read{96,96} %write{88,88}
temp	float	$tmp19.x	%read{98,101} %write{89,89}
temp	float	$tmp19.y	%read{99,102} %write{90,90}
temp	float	$tmp20.x	%read{98,98} %write{91,91}
temp	float	$tmp20.y	%read{99,99} %write{92,92}
const	float	$const18	-1		%read{91,151} %write{2147483647,-1}
const	string	$const19	"NG_line_float"		%read{93,152} %write{2147483647,-1}
const	string	$const20	"dot"		%read{103,166} %write{2147483647,-1}
temp	float	$tmp21	%read{106,106} %write{104,104}
temp	float	$tmp22	%read{106,106} %write{105,105}
temp	float	$tmp23	%read{110,110} %write{108,108}
temp	float	$tmp24	%read{110,110} %write{109,109}
const	string	$const21	"clamp"		%read{114,728} %write{2147483647,-1}
temp	float	$tmp25	%read{116,116} %write{115,115}
temp	float	$tmp26.x	%read{121,121} %write{118,118}
temp	float	$tmp26.y	%read{122,122} %write{119,119}
const	string	$const22	"NG_distance_vector2"		%read{124,183} %write{2147483647,-1}
const	string	$const23	"length"		%read{128,187} %write{2147483647,-1}
const	string	$const24	"hypot"		%read{129,188} %write{2147483647,-1}
temp	float	$tmp27	%read{132,132} %write{130,130}
temp	float	$tmp28	%read{132,132} %write{131,131}
temp	float	$tmp29	%read{133,133} %write{132,132}
temp	int	$tmp30	%read{139,139} %write{137,137}
temp	float	$tmp31.x	%read{154,154} %write{146,146}
temp	float	$tmp31.y	%read{155,155} %write{147,147}
temp	float	$tmp32.x	%read{157,160} %write{148,148}
temp	float	$tmp32.y	%read{158,161} %write{149,149}
temp	float	$tmp33.x	%read{157,157} %write{150,150}
temp	float	$tmp33.y	%read{158,158} %write{151,151}
temp	float	$tmp34	%read{165,165} %write{163,163}
temp	float	$tmp35	%read{165,165} %write{164,164}
temp	float	$tmp36	%read{169,169} %write{167,167}
temp	float	$tmp37	%read{169,169} %write{168,168}
temp	float	$tmp38	%read{175,175} %write{174,174}
temp	float	$tmp39.x	%read{180,180} %write{177,177}
temp	float	$tmp39.y	%read{181,181} %write{178,178}
temp	float	$tmp40	%read{191,191} %write{189,189}
temp	float	$tmp41	%read{191,191} %write{190,190}
temp	float	$tmp42	%read{192,192} %write{191,191}
temp	int	$tmp43	%read{198,198} %write{196,196}
const	string	$const25	"NG_convert_float_color3"		%read{207,616} %write{2147483647,-1}
const	string	$const26	"NG_standard_surface_surfaceshader_100"		%read{214,214} %write{2147483647,-1}
const	string	$const27	"mx_roughness_anisotropy"		%read{218,592} %write{2147483647,-1}
temp	float	$tmp44	%read{221,221} %write{219,219}
const	float	$const28	1e-08		%read{222,596} %write{2147483647,-1}
temp	float	$tmp45	%read{222,222} %write{221,221}
temp	int	$tmp46	%read{224,224} %write{223,223}
temp	float	$tmp47	%read{228,228} %write{227,227}
const	float	$const29	0.98		%read{226,600} %write{2147483647,-1}
temp	float	$tmp48	%read{227,227} %write{226,226}
temp	float	$tmp49	%read{229,229} %write{228,228}
temp	float	$tmp50	%read{231,231} %write{230,230}
const	float	$const30	360		%read{237,242} %write{2147483647,-1}
temp	color	$tmp51	%read{247,247} %write{246,246}
temp	float	$tmp52	%read{252,252} %write{251,251}
temp	float	$tmp53	%read{255,255} %write{254,254}
temp	color	$tmp54	%read{258,258} %write{257,257}
const	color	$const31	1 1 1		%read{259,628} %write{2147483647,-1}
const	color	$const32	0.272229 0.674082 0.053689		%read{268,268} %write{2147483647,-1}
const	string	$const33	"mx_luminance_color3"		%read{267,267} %write{2147483647,-1}
temp	float	$tmp56	%read{269,269} %write{268,268}
const	vector	$const34	0 0 0		%read{270,416} %write{2147483647,-1}
const	string	$const35	"mx_rotate_vector3"		%read{271,417} %write{2147483647,-1}
const	string	$const36	"radians"		%read{272,418} %write{2147483647,-1}
const	float	$const37	3.1415927		%read{273,419} %write{2147483647,-1}
const	float	$const38	180		%read{273,419} %write{2147483647,-1}
temp	float	$tmp57	%read{274,274} %write{273,273}
const	string	$const39	"rotationMatrix"		%read{275,421} %write{2147483647,-1}
temp	float	$tmp58	%read{281,281} %write{280,280}
temp	float	$tmp59	%read{283,283} %write{281,281}
temp	float	$tmp60	%read{283,283} %write{282,282}
temp	float	$tmp61	%read{284,284} %write{283,283}
temp	float	$tmp62	%read{337,337} %write{284,284}
temp	float	$tmp63	%read{286,286} %write{285,285}
temp	float	$tmp64	%read{288,288} %write{286,286}
temp	float	$tmp65	%read{288,288} %write{287,287}
temp	float	$tmp66	%read{291,291} %write{288,288}
temp	float	$tmp67	%read{290,290} %write{289,289}
temp	float	$tmp68	%read{291,291} %write{290,290}
temp	float	$tmp69	%read{337,337} %write{291,291}
temp	float	$tmp70	%read{293,293} %write{292,292}
temp	float	$tmp71	%read{295,295} %write{293,293}
temp	float	$tmp72	%read{295,295} %write{294,294}
temp	float	$tmp73	%read{298,298} %write{295,295}
temp	float	$tmp74	%read{297,297} %write{296,296}
temp	float	$tmp75	%read{298,298} %write{297,297}
temp	float	$tmp76	%read{337,337} %write{298,298}
temp	float	$tmp77	%read{300,300} %write{299,299}
temp	float	$tmp78	%read{302,302} %write{300,300}
temp	float	$tmp79	%read{302,302} %write{301,301}
temp	float	$tmp80	%read{305,305} %write{302,302}
temp	float	$tmp81	%read{304,304} %write{303,303}
temp	float	$tmp82	%read{305,305} %write{304,304}
temp	float	$tmp83	%read{337,337} %write{305,305}
temp	float	$tmp84	%read{307,307} %write{306,306}
temp	float	$tmp85	%read{309,309} %write{307,307}
temp	float	$tmp86	%read{309,309} %write{308,308}
temp	float	$tmp87	%read{310,310} %write{309,309}
temp	float	$tmp88	%read{337,337} %write{310,310}
temp	float	$tmp89	%read{312,312} %write{311,311}
temp	float	$tmp90	%read{314,314} %write{312,312}
temp	float	$tmp91	%read{314,314} %write{313,313}
temp	float	$tmp92	%read{317,317} %write{314,314}
temp	float	$tmp93	%read{316,316} %write{315,315}
temp	float	$tmp94	%read{317,317} %write{316,316}
temp	float	$tmp95	%read{337,337} %write{317,317}
temp	float	$tmp96	%read{319,319} %write{318,318}
temp	float	$tmp97	%read{321,321} %write{319,319}
temp	float	$tmp98	%read{321,321} %write{320,320}
temp	float	$tmp99	%read{324,324} %write{321,321}
temp	float	$tmp100	%read{323,323} %write{322,322}
temp	float	$tmp101	%read{324,324} %write{323,323}
temp	float	$tmp102	%read{337,337} %write{324,324}
temp	float	$tmp103	%read{326,326} %write{325,325}
temp	float	$tmp104	%read{328,328} %write{326,326}
temp	float	$tmp105	%read{328,328} %write{327,327}
temp	float	$tmp106	%read{331,331} %write{328,328}
temp	float	$tmp107	%read{330,330} %write{329,329}
temp	float	$tmp108	%read{331,331} %write{330,330}
temp	float	$tmp109	%read{337,337} %write{331,331}
temp	float	$tmp110	%read{333,333} %write{332,332}
temp	float	$tmp111	%read{335,335} %write{333,333}
temp	float	$tmp112	%read{335,335} %write{334,334}
temp	float	$tmp113	%read{336,336} %write{335,335}
temp	float	$tmp114	%read{337,337} %write{336,336}
temp	float	$tmp115.x	%read{344,377} %write{338,338}
temp	float	$tmp115.y	%read{346,379} %write{339,339}
temp	float	$tmp115.z	%read{349,382} %write{340,340}
temp	float	$tmp115.w	%read{352,385} %write{341,341}
temp	float	$tmp116	%read{344,344} %write{343,343}
temp	float	$tmp117	%read{347,347} %write{344,344}
temp	float	$tmp118	%read{346,346} %write{345,345}
temp	float	$tmp119	%read{347,347} %write{346,346}
temp	float	$tmp120	%read{350,350} %write{347,347}
temp	float	$tmp121	%read{349,349} %write{348,348}
temp	float	$tmp122	%read{350,350} %write{349,349}
temp	float	$tmp123	%read{353,353} %write{350,350}
const	int	$const40	3		%read{351,530} %write{2147483647,-1}
temp	float	$tmp124	%read{352,352} %write{351,351}
temp	float	$tmp125	%read{353,353} %write{352,352}
temp	float	$tmp126	%read{355,355} %write{354,354}
temp	float	$tmp127	%read{358,358} %write{355,355}
temp	float	$tmp128	%read{357,357} %write{356,356}
temp	float	$tmp129	%read{358,358} %write{357,357}
temp	float	$tmp130	%read{361,361} %write{358,358}
temp	float	$tmp131	%read{360,360} %write{359,359}
temp	float	$tmp132	%read{361,361} %write{360,360}
temp	float	$tmp133	%read{364,364} %write{361,361}
temp	float	$tmp134	%read{363,363} %write{362,362}
temp	float	$tmp135	%read{364,364} %write{363,363}
temp	float	$tmp136	%read{366,366} %write{365,365}
temp	float	$tmp137	%read{369,369} %write{366,366}
temp	float	$tmp138	%read{368,368} %write{367,367}
temp	float	$tmp139	%read{369,369} %write{368,368}
temp	float	$tmp140	%read{372,372} %write{369,369}
temp	float	$tmp141	%read{371,371} %write{370,370}
temp	float	$tmp142	%read{372,372} %write{371,371}
temp	float	$tmp143	%read{375,375} %write{372,372}
temp	float	$tmp144	%read{374,374} %write{373,373}
temp	float	$tmp145	%read{375,375} %write{374,374}
temp	float	$tmp146	%read{377,377} %write{376,376}
temp	float	$tmp147	%read{380,380} %write{377,377}
temp	float	$tmp148	%read{379,379} %write{378,378}
temp	float	$tmp149	%read{380,380} %write{379,379}
temp	float	$tmp150	%read{383,383} %write{380,380}
temp	float	$tmp151	%read{382,382} %write{381,381}
temp	float	$tmp152	%read{383,383} %write{382,382}
temp	float	$tmp153	%read{386,386} %write{383,383}
temp	float	$tmp154	%read{385,385} %write{384,384}
temp	float	$tmp155	%read{386,386} %write{385,385}
const	string	$const41	"mx_artistic_ior"		%read{390,390} %write{2147483647,-1}
temp	color	$tmp156	%read{395,395} %write{391,391}
const	float	$const42	0.99		%read{392,392} %write{2147483647,-1}
temp	color	$tmp157	%read{394,394} %write{392,392}
temp	color	$tmp158	%read{395,395} %write{394,394}
temp	color	$tmp159	%read{399,399} %write{397,397}
temp	color	$tmp160	%read{399,399} %write{398,398}
temp	color	$tmp161	%read{402,402} %write{400,400}
temp	color	$tmp162	%read{402,402} %write{401,401}
temp	color	$tmp163	%read{407,407} %write{406,406}
temp	color	$tmp164	%read{409,409} %write{407,407}
temp	color	$tmp165	%read{409,409} %write{408,408}
temp	color	$tmp166	%read{411,411} %write{409,409}
temp	color	$tmp167	%read{411,411} %write{410,410}
temp	color	$tmp168	%read{413,413} %write{412,412}
temp	float	$tmp169	%read{420,420} %write{419,419}
temp	float	$tmp170	%read{427,427} %write{426,426}
temp	float	$tmp171	%read{429,429} %write{427,427}
temp	float	$tmp172	%read{429,429} %write{428,428}
temp	float	$tmp173	%read{430,430} %write{429,429}
temp	float	$tmp174	%read{483,483} %write{430,430}
temp	float	$tmp175	%read{432,432} %write{431,431}
temp	float	$tmp176	%read{434,434} %write{432,432}
temp	float	$tmp177	%read{434,434} %write{433,433}
temp	float	$tmp178	%read{437,437} %write{434,434}
temp	float	$tmp179	%read{436,436} %write{435,435}
temp	float	$tmp180	%read{437,437} %write{436,436}
temp	float	$tmp181	%read{483,483} %write{437,437}
temp	float	$tmp182	%read{439,439} %write{438,438}
temp	float	$tmp183	%read{441,441} %write{439,439}
temp	float	$tmp184	%read{441,441} %write{440,440}
temp	float	$tmp185	%read{444,444} %write{441,441}
temp	float	$tmp186	%read{443,443} %write{442,442}
temp	float	$tmp187	%read{444,444} %write{443,443}
temp	float	$tmp188	%read{483,483} %write{444,444}
temp	float	$tmp189	%read{446,446} %write{445,445}
temp	float	$tmp190	%read{448,448} %write{446,446}
temp	float	$tmp191	%read{448,448} %write{447,447}
temp	float	$tmp192	%read{451,451} %write{448,448}
temp	float	$tmp193	%read{450,450} %write{449,449}
temp	float	$tmp194	%read{451,451} %write{450,450}
temp	float	$tmp195	%read{483,483} %write{451,451}
temp	float	$tmp196	%read{453,453} %write{452,452}
temp	float	$tmp197	%read{455,455} %write{453,453}
temp	float	$tmp198	%read{455,455} %write{454,454}
temp	float	$tmp199	%read{456,456} %write{455,455}
temp	float	$tmp200	%read{483,483} %write{456,456}
temp	float	$tmp201	%read{458,458} %write{457,457}
temp	float	$tmp202	%read{460,460} %write{458,458}
temp	float	$tmp203	%read{460,460} %write{459,459}
temp	float	$tmp204	%read{463,463} %write{460,460}
temp	float	$tmp205	%read{462,462} %write{461,461}
temp	float	$tmp206	%read{463,463} %write{462,462}
temp	float	$tmp207	%read{483,483} %write{463,463}
temp	float	$tmp208	%read{465,465} %write{464,464}
temp	float	$tmp209	%read{467,467} %write{465,465}
temp	float	$tmp210	%read{467,467} %write{466,466}
temp	float	$tmp211	%read{470,470} %write{467,467}
temp	float	$tmp212	%read{469,469} %write{468,468}
temp	float	$tmp213	%read{470,470} %write{469,469}
temp	float	$tmp214	%read{483,483} %write{470,470}
temp	float	$tmp215	%read{472,472} %write{471,471}
temp	float	$tmp216	%read{474,474} %write{472,472}
temp	float	$tmp217	%read{474,474} %write{473,473}
temp	float	$tmp218	%read{477,477} %write{474,474}
temp	float	$tmp219	%read{476,476} %write{475,475}
temp	float	$tmp220	%read{477,477} %write{476,476}
temp	float	$tmp221	%read{483,483} %write{477,477}
temp	float	$tmp222	%read{479,479} %write{478,478}
temp	float	$tmp223	%read{481,481} %write{479,479}
temp	float	$tmp224	%read{481,481} %write{480,480}
temp	float	$tmp225	%read{482,482} %write{481,481}
temp	float	$tmp226	%read{483,483} %write{482,482}
temp	float	$tmp227.x	%read{490,523} %write{484,484}
temp	float	$tmp227.y	%read{492,525} %write{485,485}
temp	float	$tmp227.z	%read{495,528} %write{486,486}
temp	float	$tmp227.w	%read{498,531} %write{487,487}
temp	float	$tmp228	%read{490,490} %write{489,489}
temp	float	$tmp229	%read{493,493} %write{490,490}
temp	float	$tmp230	%read{492,492} %write{491,491}
temp	float	$tmp231	%read{493,493} %write{492,492}
temp	float	$tmp232	%read{496,496} %write{493,493}
temp	float	$tmp233	%read{495,495} %write{494,494}
temp	float	$tmp234	%read{496,496} %write{495,495}
temp	float	$tmp235	%read{499,499} %write{496,496}
temp	float	$tmp236	%read{498,498} %write{497,497}
temp	float	$tmp237	%read{499,499} %write{498,498}
temp	float	$tmp238	%read{501,501} %write{500,500}
temp	float	$tmp239	%read{504,504} %write{501,501}
temp	float	$tmp240	%read{503,503} %write{502,502}
temp	float	$tmp241	%read{504,504} %write{503,503}
temp	float	$tmp242	%read{507,507} %write{504,504}
temp	float	$tmp243	%read{506,506} %write{505,505}
temp	float	$tmp244	%read{507,507} %write{506,506}
temp	float	$tmp245	%read{510,510} %write{507,507}
temp	float	$tmp246	%read{509,509} %write{508,508}
temp	float	$tmp247	%read{510,510} %write{509,509}
temp	float	$tmp248	%read{512,512} %write{511,511}
temp	float	$tmp249	%read{515,515} %write{512,512}
temp	float	$tmp250	%read{514,514} %write{513,513}
temp	float	$tmp251	%read{515,515} %write{514,514}
temp	float	$tmp252	%read{518,518} %write{515,515}
temp	float	$tmp253	%read{517,517} %write{516,516}
temp	float	$tmp254	%read{518,518} %write{517,517}
temp	float	$tmp255	%read{521,521} %write{518,518}
temp	float	$tmp256	%read{520,520} %write{519,519}
temp	float	$tmp257	%read{521,521} %write{520,520}
temp	float	$tmp258	%read{523,523} %write{522,522}
temp	float	$tmp259	%read{526,526} %write{523,523}
temp	float	$tmp260	%read{525,525} %write{524,524}
temp	float	$tmp261	%read{526,526} %write{525,525}
temp	float	$tmp262	%read{529,529} %write{526,526}
temp	float	$tmp263	%read{528,528} %write{527,527}
temp	float	$tmp264	%read{529,529} %write{528,528}
temp	float	$tmp265	%read{532,532} %write{529,529}
temp	float	$tmp266	%read{531,531} %write{530,530}
temp	float	$tmp267	%read{532,532} %write{531,531}
temp	float	$tmp268	%read{538,538} %write{537,537}
temp	int	$tmp269	%read{556,556} %write{554,554}
temp	float	$tmp270	%read{566,566} %write{564,564}
temp	float	$tmp271	%read{567,567} %write{566,566}
temp	int	$tmp272	%read{569,569} %write{568,568}
temp	float	$tmp273	%read{573,573} %write{572,572}
temp	float	$tmp274	%read{572,572} %write{571,571}
temp	float	$tmp275	%read{574,574} %write{573,573}
temp	float	$tmp276	%read{576,576} %write{575,575}
temp	int	$tmp277	%read{585,585} %write{583,583}
temp	float	$tmp278	%read{595,595} %write{593,593}
temp	float	$tmp279	%read{596,596} %write{595,595}
temp	int	$tmp280	%read{598,598} %write{597,597}
temp	float	$tmp281	%read{602,602} %write{601,601}
temp	float	$tmp282	%read{601,601} %write{600,600}
temp	float	$tmp283	%read{603,603} %write{602,602}
temp	float	$tmp284	%read{605,605} %write{604,604}
const	float	$const43	1.5		%read{629,657} %write{2147483647,-1}
const	string	$const44	"ggx"		%read{629,657} %write{2147483647,-1}
const	string	$const45	"R"		%read{621,653} %write{2147483647,-1}
const	string	$const46	"mx_dielectric_bsdf"		%read{620,648} %write{2147483647,-1}
const	string	$const47	"T"		%read{621,653} %write{2147483647,-1}
temp	int	$tmp286	%read{622,622} %write{621,621}
temp	int	$tmp287	%read{626,626} %write{625,625}
temp	closure color	$tmp288	%read{630,630} %write{629,629}
const	string	$const48	"thinfilm_thickness"		%read{629,657} %write{2147483647,-1}
const	string	$const49	"thinfilm_ior"		%read{629,657} %write{2147483647,-1}
const	string	$const50	"dielectric_bsdf"		%read{629,657} %write{2147483647,-1}
temp	closure color	$tmp289	%read{634,634} %write{633,633}
const	string	$const51	"conductor_bsdf"		%read{633,633} %write{2147483647,-1}
temp	int	$tmp290	%read{638,638} %write{637,637}
temp	int	$tmp291	%read{642,642} %write{641,641}
temp	closure color	$tmp292	%read{646,646} %write{645,645}
temp	int	$tmp293	%read{650,650} %write{649,649}
temp	int	$tmp294	%read{654,654} %write{653,653}
temp	closure color	$tmp295	%read{658,658} %write{657,657}
temp	closure color	$tmp296	%read{660,660} %write{659,659}
const	string	$const52	"sheen_bsdf"		%read{659,659} %write{2147483647,-1}
temp	closure color	$tmp297	%read{663,663} %write{662,662}
const	string	$const53	"translucent_bsdf"		%read{662,662} %write{2147483647,-1}
const	string	$const54	"mx_subsurface_bsdf"		%read{665,665} %write{2147483647,-1}
temp	color	$tmp298	%read{667,667} %write{666,666}
const	string	$const55	"subsurface_bssrdf"		%read{667,667} %write{2147483647,-1}
const	string	$const56	"mix"		%read{668,709} %write{2147483647,-1}
temp	float	$tmp299	%read{670,670} %write{669,669}
temp	closure color	$tmp300	%read{672,672} %write{670,670}
temp	closure color	$tmp301	%read{672,672} %write{671,671}
temp	closure color	$tmp302	%read{674,674} %write{673,673}
const	string	$const57	"oren_nayar_diffuse_bsdf"		%read{673,673} %write{2147483647,-1}
temp	float	$tmp303	%read{677,677} %write{676,676}
temp	closure color	$tmp304	%read{679,679} %write{677,677}
temp	closure color	$tmp305	%read{679,679} %write{678,678}
const	string	$const58	"layer"		%read{680,693} %write{2147483647,-1}
temp	float	$tmp306	%read{683,683} %write{682,682}
temp	closure color	$tmp307	%read{685,685} %write{683,683}
temp	closure color	$tmp308	%read{685,685} %write{684,684}
temp	float	$tmp309	%read{689,689} %write{688,688}
temp	closure color	$tmp310	%read{691,691} %write{689,689}
temp	closure color	$tmp311	%read{691,691} %write{690,690}
const	string	$const59	"uniform_edf"		%read{694,694} %write{2147483647,-1}
const	float	$const60	5		%read{706,706} %write{2147483647,-1}
const	string	$const61	"mx_generalized_schlick_edf"		%read{697,697} %write{2147483647,-1}
temp	float	$tmp313	%read{700,700} %write{699,699}
temp	vector	$tmp314	%read{699,699} %write{698,698}
const	string	$const62	"mx_fresnel_schlick"		%read{701,701} %write{2147483647,-1}
temp	float	$tmp315	%read{704,704} %write{702,702}
temp	float	$tmp316	%read{705,705} %write{704,704}
temp	float	$tmp317	%read{707,707} %write{706,706}
temp	float	$tmp318	%read{711,711} %write{710,710}
temp	closure color	$tmp319	%read{713,713} %write{711,711}
temp	closure color	$tmp320	%read{713,713} %write{712,712}
const	string	$const63	"mx_surface"		%read{717,717} %write{2147483647,-1}
temp	float	$tmp321	%read{722,722} %write{721,721}
const	string	$const64	"mx_surfacematerial"		%read{727,727} %write{2147483647,-1}
temp	float	$tmp322	%read{730,730} %write{729,729}
temp	closure color	$tmp323	%read{732,732} %write{731,731}
temp	closure color	$tmp324	%read{736,736} %write{732,732}
temp	closure color	$tmp325	%read{735,735} %write{733,733}
const	string	$const65	"transparent"		%read{733,733} %write{2147483647,-1}
temp	float	$tmp326	%read{735,735} %write{734,734}
temp	closure color	$tmp327	%read{736,736} %write{735,735}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:769
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{769} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:770
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{770} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:771
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{771} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:772
#     color crosshatch_color3_out = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{772} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:773
#     NG_crosshatch_color3(geomprop_UV0_out1, crosshatch_color3_uvtiling, crosshatch_color3_uvoffset, crosshatch_color3_thickness, crosshatch_color3_staggered, crosshatch_color3_out);
	assign		crosshatch_color3_out $const6 	%line{773} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:774
#     surfaceshader SR_test_crosshatch_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const7 211 	%line{774} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const8 15 	%line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___673_texcoord_scale_out.x geomprop_UV0_out1.x crosshatch_color3_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___673_texcoord_scale_out.y geomprop_UV0_out1.y crosshatch_color3_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 18 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_texcoord_bias_out.x ___673_texcoord_scale_out.x crosshatch_color3_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_texcoord_bias_out.y ___673_texcoord_scale_out.y crosshatch_color3_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:65
#     float texcoord_bias_separate_outy = 0.0;
	assign		___673_texcoord_bias_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:66
#     NG_separate2_vector2(texcoord_bias_out, texcoord_bias_separate_outx, texcoord_bias_separate_outy);
	assign		___673_texcoord_bias_separate_outy $const5 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:67
#     float mod_Y_row_in2_tmp = 2.000000;
	functioncall	$const10 39 	%line{67} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const11 29 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp5 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp5 27 29 	%argrw{"r"}
	assign		___669_N_extract_0_out ___673_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___673_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const12 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:23
#     outx = N_extract_0_out;
	functioncall	$const11 37 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp6 35 37 	%argrw{"r"}
	assign		___669_N_extract_1_out ___673_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___673_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:24
#     outy = N_extract_1_out;
	assign		___673_texcoord_bias_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:25
# }
	assign		___673_texcoord_bias_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:68
#     float mod_Y_row_out = mod(texcoord_bias_separate_outy, mod_Y_row_in2_tmp);
	assign		___673_mod_Y_row_in2_tmp $const13 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:69
#     float mod_Y_in2_tmp = 1.000000;
	functioncall	$const14 45 	%line{69} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp8 ___673_texcoord_bias_separate_outy ___673_mod_Y_row_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 ___673_mod_Y_row_in2_tmp $tmp7 	%argrw{"wrr"}
	sub		___673_mod_Y_row_out ___673_texcoord_bias_separate_outy $tmp9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:70
#     float mod_Y_out = mod(texcoord_bias_separate_outy, mod_Y_in2_tmp);
	assign		___673_mod_Y_in2_tmp $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:71
#     float alt_rows_shift_value2_tmp = 1.000000;
	functioncall	$const14 51 	%line{71} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp11 ___673_texcoord_bias_separate_outy ___673_mod_Y_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 ___673_mod_Y_in2_tmp $tmp10 	%argrw{"wrr"}
	sub		___673_mod_Y_out ___673_texcoord_bias_separate_outy $tmp12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:72
#     float alt_rows_shift_in1_tmp = 0.500000;
	assign		___673_alt_rows_shift_value2_tmp $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:73
#     float alt_rows_shift_in2_tmp = 0.000000;
	assign		___673_alt_rows_shift_in1_tmp $const16 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:74
#     float alt_rows_shift_out = mx_ternary(mod_Y_row_out > alt_rows_shift_value2_tmp, alt_rows_shift_in1_tmp, alt_rows_shift_in2_tmp);
	assign		___673_alt_rows_shift_in2_tmp $const5 	%line{74} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:75
#     float mody_2_in2_tmp = 2.000000;
	gt		$tmp13 ___673_mod_Y_row_out ___673_alt_rows_shift_value2_tmp 	%line{75} %argrw{"wrr"}
	functioncall	$const17 61 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp13 59 61 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_alt_rows_shift_out ___673_alt_rows_shift_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_alt_rows_shift_out ___673_alt_rows_shift_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:76
#     float mody_2_out = mod_Y_out * mody_2_in2_tmp;
	assign		___673_mody_2_in2_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{76} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:77
#     float shift_X_out = texcoord_bias_separate_outx + alt_rows_shift_out;
	mul		___673_mody_2_out ___673_mod_Y_out ___673_mody_2_in2_tmp 	%line{77} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:78
#     float subY_1_in2_tmp = 1.000000;
	add		___673_shift_X_out ___673_texcoord_bias_separate_outx ___673_alt_rows_shift_out 	%line{78} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:79
#     float subY_1_out = mody_2_out - subY_1_in2_tmp;
	assign		___673_subY_1_in2_tmp $const15 	%line{79} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:80
#     int stagger_selection_value2_tmp = 1;
	sub		___673_subY_1_out ___673_mody_2_out ___673_subY_1_in2_tmp 	%line{80} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:81
#     float stagger_selection_out = mx_ternary(staggered == stagger_selection_value2_tmp, shift_X_out, texcoord_bias_separate_outx);
	assign		___673_stagger_selection_value2_tmp $const12 	%line{81} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:82
#     float mod_X_in2_tmp = 1.000000;
	eq		$tmp14 crosshatch_color3_staggered ___673_stagger_selection_value2_tmp 	%line{82} %argrw{"wrr"}
	functioncall	$const17 74 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp14 72 74 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_stagger_selection_out ___673_shift_X_out 	%argrw{"wr"}
	return
	assign		___673_stagger_selection_out ___673_texcoord_bias_separate_outx 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:83
#     float mod_X_out = mod(stagger_selection_out, mod_X_in2_tmp);
	assign		___673_mod_X_in2_tmp $const15 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{83} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:84
#     float modx_2_in2_tmp = 2.000000;
	functioncall	$const14 80 	%line{84} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp16 ___673_stagger_selection_out ___673_mod_X_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp15 $tmp16 	%argrw{"wr"}
	mul		$tmp17 ___673_mod_X_in2_tmp $tmp15 	%argrw{"wrr"}
	sub		___673_mod_X_out ___673_stagger_selection_out $tmp17 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:85
#     float modx_2_out = mod_X_out * modx_2_in2_tmp;
	assign		___673_modx_2_in2_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:86
#     float subX_1_in2_tmp = 1.000000;
	mul		___673_modx_2_out ___673_mod_X_out ___673_modx_2_in2_tmp 	%line{86} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:87
#     float subX_1_out = modx_2_out - subX_1_in2_tmp;
	assign		___673_subX_1_in2_tmp $const15 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:88
#     vector2 sample_vec_out = { subX_1_out,subY_1_out };
	sub		___673_subX_1_out ___673_modx_2_out ___673_subX_1_in2_tmp 	%line{88} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:89
#     float line_diag1_out = 0.0;
	assign		___673_sample_vec_out.x ___673_subX_1_out 	%line{89} %argrw{"wr"}
	assign		___673_sample_vec_out.y ___673_subY_1_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:90
#     NG_line_float(sample_vec_out, vector2(0.000000, 0.000000), thickness, vector2(1.000000, 1.000000), vector2(-1.000000, -1.000000), line_diag1_out);
	assign		___673_line_diag1_out $const5 	%line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:91
#     float line_diag2_out = 0.0;
	assign		$tmp18.x $const5 	%line{91} %argrw{"wr"}
	assign		$tmp18.y $const5 	%argrw{"wr"}
	assign		$tmp19.x $const15 	%argrw{"wr"}
	assign		$tmp19.y $const15 	%argrw{"wr"}
	assign		$tmp20.x $const18 	%argrw{"wr"}
	assign		$tmp20.y $const18 	%argrw{"wr"}
	functioncall	$const19 145 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 97 	%line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_sample_vec_out.x $tmp18.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_sample_vec_out.y $tmp18.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 100 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_b_a_out.x $tmp20.x $tmp19.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_b_a_out.y $tmp20.y $tmp19.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 103 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_p_a_out.x ___671_delta_out.x $tmp19.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_p_a_out.y ___671_delta_out.y $tmp19.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:40
#     float dot_pa_ba_out = dot(p_a_out, b_a_out);
	functioncall	$const20 107 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{40} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp21 ___671_b_a_out.x ___671_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp22 ___671_b_a_out.y ___671_b_a_out.y 	%argrw{"wrr"}
	add		___671_dot_ba_ba_out $tmp21 $tmp22 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:41
#     float divide_dots_out = dot_pa_ba_out / dot_ba_ba_out;
	functioncall	$const20 111 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{41} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp23 ___671_p_a_out.x ___671_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp24 ___671_p_a_out.y ___671_b_a_out.y 	%argrw{"wrr"}
	add		___671_dot_pa_ba_out $tmp23 $tmp24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:42
#     float clamp_low_tmp = 0.000000;
	div		___671_divide_dots_out ___671_dot_pa_ba_out ___671_dot_ba_ba_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{42} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:43
#     float clamp_high_tmp = 1.000000;
	assign		___671_clamp_low_tmp $const5 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:44
#     float clamp_out = clamp(divide_dots_out, clamp_low_tmp, clamp_high_tmp);
	assign		___671_clamp_high_tmp $const15 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:45
#     vector2 multiply_clamp_ba_out = b_a_out * clamp_out;
	functioncall	$const21 117 	%line{45} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp25 ___671_divide_dots_out ___671_clamp_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp25 ___671_clamp_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const8 123 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp26.x ___671_clamp_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp26.y ___671_clamp_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const8 123 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_clamp_ba_out.x ___671_b_a_out.x $tmp26.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_clamp_ba_out.y ___671_b_a_out.y $tmp26.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:47
#     NG_distance_vector2(p_a_out, multiply_clamp_ba_out, distance_out);
	assign		___671_distance_out $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:48
#     float dist_comp_in1_tmp = 0.000000;
	functioncall	$const22 135 	%line{48} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 128 	%line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___670_N_mtlxsubtract_out.x ___671_p_a_out.x ___671_multiply_clamp_ba_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___670_N_mtlxsubtract_out.y ___671_p_a_out.y ___671_multiply_clamp_ba_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:31
#     out = N_mtlxmagnitude_out;
	functioncall	$const23 134 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:202
#     return hypot (a.x, a.y);
	functioncall	$const24 134 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{202} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:101
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp27 ___670_N_mtlxsubtract_out.x ___670_N_mtlxsubtract_out.x 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{101} %argrw{"wrr"}
	mul		$tmp28 ___670_N_mtlxsubtract_out.y ___670_N_mtlxsubtract_out.y 	%argrw{"wrr"}
	add		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
	sqrt		___670_N_mtlxmagnitude_out $tmp29 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:32
# }
	assign		___671_distance_out ___670_N_mtlxmagnitude_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:49
#     float dist_comp_in2_tmp = 1.000000;
	assign		___671_dist_comp_in1_tmp $const5 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:50
#     float dist_comp_out = mx_ternary(distance_out > radius, dist_comp_in1_tmp, dist_comp_in2_tmp);
	assign		___671_dist_comp_in2_tmp $const15 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:51
#     out = dist_comp_out;
	gt		$tmp30 ___671_distance_out crosshatch_color3_thickness 	%line{51} %argrw{"wrr"}
	functioncall	$const17 144 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp30 142 144 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_dist_comp_out ___671_dist_comp_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_dist_comp_out ___671_dist_comp_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:52
# }
	assign		___673_line_diag1_out ___671_dist_comp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:92
#     NG_line_float(sample_vec_out, vector2(0.000000, 0.000000), thickness, vector2(-1.000000, 1.000000), vector2(1.000000, -1.000000), line_diag2_out);
	assign		___673_line_diag2_out $const5 	%line{92} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:93
#     float composite_diags_out = max(line_diag1_out, line_diag2_out);
	assign		$tmp31.x $const5 	%line{93} %argrw{"wr"}
	assign		$tmp31.y $const5 	%argrw{"wr"}
	assign		$tmp32.x $const18 	%argrw{"wr"}
	assign		$tmp32.y $const15 	%argrw{"wr"}
	assign		$tmp33.x $const15 	%argrw{"wr"}
	assign		$tmp33.y $const18 	%argrw{"wr"}
	functioncall	$const19 204 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 156 	%line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_sample_vec_out.x $tmp31.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_sample_vec_out.y $tmp31.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 159 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_b_a_out.x $tmp33.x $tmp32.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_b_a_out.y $tmp33.y $tmp32.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 162 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_p_a_out.x ___671_delta_out.x $tmp32.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_p_a_out.y ___671_delta_out.y $tmp32.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:40
#     float dot_pa_ba_out = dot(p_a_out, b_a_out);
	functioncall	$const20 166 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{40} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp34 ___671_b_a_out.x ___671_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp35 ___671_b_a_out.y ___671_b_a_out.y 	%argrw{"wrr"}
	add		___671_dot_ba_ba_out $tmp34 $tmp35 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:41
#     float divide_dots_out = dot_pa_ba_out / dot_ba_ba_out;
	functioncall	$const20 170 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{41} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp36 ___671_p_a_out.x ___671_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp37 ___671_p_a_out.y ___671_b_a_out.y 	%argrw{"wrr"}
	add		___671_dot_pa_ba_out $tmp36 $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:42
#     float clamp_low_tmp = 0.000000;
	div		___671_divide_dots_out ___671_dot_pa_ba_out ___671_dot_ba_ba_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{42} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:43
#     float clamp_high_tmp = 1.000000;
	assign		___671_clamp_low_tmp $const5 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:44
#     float clamp_out = clamp(divide_dots_out, clamp_low_tmp, clamp_high_tmp);
	assign		___671_clamp_high_tmp $const15 	%line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:45
#     vector2 multiply_clamp_ba_out = b_a_out * clamp_out;
	functioncall	$const21 176 	%line{45} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp38 ___671_divide_dots_out ___671_clamp_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp38 ___671_clamp_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const8 182 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp39.x ___671_clamp_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp39.y ___671_clamp_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const8 182 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_clamp_ba_out.x ___671_b_a_out.x $tmp39.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_clamp_ba_out.y ___671_b_a_out.y $tmp39.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:47
#     NG_distance_vector2(p_a_out, multiply_clamp_ba_out, distance_out);
	assign		___671_distance_out $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:48
#     float dist_comp_in1_tmp = 0.000000;
	functioncall	$const22 194 	%line{48} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:780
# 
	functioncall	$const9 187 	%line{780} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___670_N_mtlxsubtract_out.x ___671_p_a_out.x ___671_multiply_clamp_ba_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___670_N_mtlxsubtract_out.y ___671_p_a_out.y ___671_multiply_clamp_ba_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:31
#     out = N_mtlxmagnitude_out;
	functioncall	$const23 193 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:202
#     return hypot (a.x, a.y);
	functioncall	$const24 193 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{202} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:101
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp40 ___670_N_mtlxsubtract_out.x ___670_N_mtlxsubtract_out.x 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{101} %argrw{"wrr"}
	mul		$tmp41 ___670_N_mtlxsubtract_out.y ___670_N_mtlxsubtract_out.y 	%argrw{"wrr"}
	add		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
	sqrt		___670_N_mtlxmagnitude_out $tmp42 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:32
# }
	assign		___671_distance_out ___670_N_mtlxmagnitude_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:49
#     float dist_comp_in2_tmp = 1.000000;
	assign		___671_dist_comp_in1_tmp $const5 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:50
#     float dist_comp_out = mx_ternary(distance_out > radius, dist_comp_in1_tmp, dist_comp_in2_tmp);
	assign		___671_dist_comp_in2_tmp $const15 	%line{50} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:51
#     out = dist_comp_out;
	gt		$tmp43 ___671_distance_out crosshatch_color3_thickness 	%line{51} %argrw{"wrr"}
	functioncall	$const17 203 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp43 201 203 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_dist_comp_out ___671_dist_comp_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_dist_comp_out ___671_dist_comp_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:52
# }
	assign		___673_line_diag2_out ___671_dist_comp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{52} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:94
#     float max_out = max(composite_diags_out, composite_diags_out);
	max		___673_composite_diags_out ___673_line_diag1_out ___673_line_diag2_out 	%line{94} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:95
#     color to_rgb_out = color(0.0);
	max		___673_max_out ___673_composite_diags_out ___673_composite_diags_out 	%line{95} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:96
#     NG_convert_float_color3(max_out, to_rgb_out);
	assign		___673_to_rgb_out $const6 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:97
#     out = to_rgb_out;
	functioncall	$const25 210 	%line{97} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:57
#     out = combine_out;
	color		___672_combine_out ___673_max_out ___673_max_out ___673_max_out 	%line{57} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:58
# }
	assign		___673_to_rgb_out ___672_combine_out 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:98
# }
	assign		crosshatch_color3_out ___673_to_rgb_out 	%line{98} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:775
#     NG_standard_surface_surfaceshader_100(SR_test_crosshatch_base, crosshatch_color3_out, SR_test_crosshatch_diffuse_roughness, SR_test_crosshatch_metalness, SR_test_crosshatch_specular, SR_test_crosshatch_specular_color, SR_test_crosshatch_specular_roughness, SR_test_crosshatch_specular_IOR, SR_test_crosshatch_specular_anisotropy, SR_test_crosshatch_specular_rotation, SR_test_crosshatch_transmission, SR_test_crosshatch_transmission_color, SR_test_crosshatch_transmission_depth, SR_test_crosshatch_transmission_scatter, SR_test_crosshatch_transmission_scatter_anisotropy, SR_test_crosshatch_transmission_dispersion, SR_test_crosshatch_transmission_extra_roughness, SR_test_crosshatch_subsurface, SR_test_crosshatch_subsurface_color, SR_test_crosshatch_subsurface_radius, SR_test_crosshatch_subsurface_scale, SR_test_crosshatch_subsurface_anisotropy, SR_test_crosshatch_sheen, SR_test_crosshatch_sheen_color, SR_test_crosshatch_sheen_roughness, SR_test_crosshatch_coat, SR_test_crosshatch_coat_color, SR_test_crosshatch_coat_roughness, SR_test_crosshatch_coat_anisotropy, SR_test_crosshatch_coat_rotation, SR_test_crosshatch_coat_IOR, geomprop_Nworld_out1, SR_test_crosshatch_coat_affect_color, SR_test_crosshatch_coat_affect_roughness, SR_test_crosshatch_thin_film_thickness, SR_test_crosshatch_thin_film_IOR, SR_test_crosshatch_emission, SR_test_crosshatch_emission_color, SR_test_crosshatch_opacity, SR_test_crosshatch_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_test_crosshatch_out);
	assign		SR_test_crosshatch_out.bsdf null_closure 	%line{775} %argrw{"wr"}
	assign		SR_test_crosshatch_out.edf null_closure 	%argrw{"wr"}
	assign		SR_test_crosshatch_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:776
#     MATERIAL test_crosshatch_out = mx_surfacematerial(SR_test_crosshatch_out, backsurfaceshader, displacementshader1);
	functioncall	$const26 727 	%line{776} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:272
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___697_null_closure $const1 	%line{272} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:273
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___697_coat_roughness_vector_out.x $const5 	%line{273} %argrw{"wr"}
	assign		___697_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:274
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const27 237 	%line{274} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:103
#     if (anisotropy > 0.0)
	mul		$tmp44 SR_test_crosshatch_coat_roughness SR_test_crosshatch_coat_roughness 	%line{103} %argrw{"wrr"}
	functioncall	$const21 223 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp45 $tmp44 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp45 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:104
#     {
	gt		$tmp46 SR_test_crosshatch_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{104} %argrw{"wrr"}
	if		$tmp46 235 237 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const21 228 	%line{106} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp48 SR_test_crosshatch_coat_anisotropy $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp47 $tmp48 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp49 $const15 $tmp47 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{106} %argrw{"wrr"}
	sqrt		___675_aspect $tmp49 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:107
#         result.y = roughness_sqr * aspect;
	div		$tmp50 ___674_roughness_sqr ___675_aspect 	%line{107} %argrw{"wrr"}
	min		___697_coat_roughness_vector_out.x $tmp50 $const15 	%argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:108
#     }
	mul		___697_coat_roughness_vector_out.y ___674_roughness_sqr ___675_aspect 	%line{108} %argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.y ___697_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:112
#         result.y = roughness_sqr;
	assign		___697_coat_roughness_vector_out.x ___674_roughness_sqr 	%line{112} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:113
#     }
	assign		___697_coat_roughness_vector_out.y ___674_roughness_sqr 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:275
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___697_coat_tangent_rotate_degree_in2_tmp $const30 	%line{275} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:276
#     color metal_reflectivity_out = base_color * base;
	mul		___697_coat_tangent_rotate_degree_out SR_test_crosshatch_coat_rotation ___697_coat_tangent_rotate_degree_in2_tmp 	%line{276} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:277
#     color metal_edgecolor_out = specular_color * specular;
	mul		___697_metal_reflectivity_out crosshatch_color3_out SR_test_crosshatch_base 	%line{277} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:278
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___697_metal_edgecolor_out SR_test_crosshatch_specular_color SR_test_crosshatch_specular 	%line{278} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:279
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___697_coat_affect_roughness_multiply1_out SR_test_crosshatch_coat_affect_roughness SR_test_crosshatch_coat 	%line{279} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:280
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___697_tangent_rotate_degree_in2_tmp $const30 	%line{280} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:281
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___697_tangent_rotate_degree_out SR_test_crosshatch_specular_rotation ___697_tangent_rotate_degree_in2_tmp 	%line{281} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:282
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___697_transmission_roughness_add_out SR_test_crosshatch_specular_roughness SR_test_crosshatch_transmission_extra_roughness 	%line{282} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:283
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___697_subsurface_color_nonnegative_in2_tmp $const5 	%line{283} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:284
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp51 ___697_subsurface_color_nonnegative_in2_tmp 	%line{284} %argrw{"wr"}
	max		___697_subsurface_color_nonnegative_out SR_test_crosshatch_subsurface_color $tmp51 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:285
#     float coat_clamped_high_tmp = 1.000000;
	assign		___697_coat_clamped_low_tmp $const5 	%line{285} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:286
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___697_coat_clamped_high_tmp $const15 	%line{286} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:287
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const21 253 	%line{287} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp52 SR_test_crosshatch_coat ___697_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_coat_clamped_out $tmp52 ___697_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:288
#     float subsurface_selector_out = float(thin_walled);
	mul		___697_subsurface_radius_scaled_out SR_test_crosshatch_subsurface_radius SR_test_crosshatch_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{288} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:289
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp53 SR_test_crosshatch_thin_walled 	%line{289} %argrw{"wr"}
	assign		___697_subsurface_selector_out $tmp53 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:290
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___697_base_color_nonnegative_in2_tmp $const5 	%line{290} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:291
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp54 ___697_base_color_nonnegative_in2_tmp 	%line{291} %argrw{"wr"}
	max		___697_base_color_nonnegative_out crosshatch_color3_out $tmp54 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:292
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___697_coat_attenuation_bg_tmp $const31 	%line{292} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:293
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___697_coat_attenuation_out ___697_coat_attenuation_bg_tmp SR_test_crosshatch_coat_color SR_test_crosshatch_coat 	%line{293} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:294
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___697_one_minus_coat_ior_in1_tmp $const15 	%line{294} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:295
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___697_one_minus_coat_ior_out ___697_one_minus_coat_ior_in1_tmp SR_test_crosshatch_coat_IOR 	%line{295} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:296
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___697_one_plus_coat_ior_in1_tmp $const15 	%line{296} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:297
#     color emission_weight_out = emission_color * emission1;
	add		___697_one_plus_coat_ior_out ___697_one_plus_coat_ior_in1_tmp SR_test_crosshatch_coat_IOR 	%line{297} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:298
#     color opacity_luminance_out = color(0.0);
	mul		___697_emission_weight_out SR_test_crosshatch_emission_color SR_test_crosshatch_emission 	%line{298} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:299
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___697_opacity_luminance_out $const6 	%line{299} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:300
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const33 270 	%line{300} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:119
# }
	dot		$tmp56 SR_test_crosshatch_opacity $const32 	%line{119} %argrw{"wrr"}
	assign		___697_opacity_luminance_out $tmp56 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:301
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___697_coat_tangent_rotate_out $const34 	%line{301} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:302
#     color artistic_ior_ior = color(0.0);
	functioncall	$const35 388 	%line{302} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:137
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const36 275 	%line{137} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp57 $const37 $const38 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___697_coat_tangent_rotate_degree_out $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:138
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const39 338 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{138} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:124
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:125
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:126
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:127
# 
	sub		___678_oc $const15 ___678_c 	%line{127} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:129
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp58 ___678_nAxis $const1 	%line{129} %argrw{"wrr"}
	mul		$tmp59 ___678_oc $tmp58 	%argrw{"wrr"}
	compref		$tmp60 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp61 $tmp59 $tmp60 	%argrw{"wrr"}
	add		$tmp62 $tmp61 ___678_c 	%argrw{"wrr"}
	compref		$tmp63 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp64 ___678_oc $tmp63 	%argrw{"wrr"}
	compref		$tmp65 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp66 $tmp64 $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp68 $tmp67 ___678_s 	%argrw{"wrr"}
	sub		$tmp69 $tmp66 $tmp68 	%argrw{"wrr"}
	compref		$tmp70 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp71 ___678_oc $tmp70 	%argrw{"wrr"}
	compref		$tmp72 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp73 $tmp71 $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp75 $tmp74 ___678_s 	%argrw{"wrr"}
	add		$tmp76 $tmp73 $tmp75 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:130
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp77 ___678_nAxis $const1 	%line{130} %argrw{"wrr"}
	mul		$tmp78 ___678_oc $tmp77 	%argrw{"wrr"}
	compref		$tmp79 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	compref		$tmp81 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp82 $tmp81 ___678_s 	%argrw{"wrr"}
	add		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp85 ___678_oc $tmp84 	%argrw{"wrr"}
	compref		$tmp86 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp87 $tmp85 $tmp86 	%argrw{"wrr"}
	add		$tmp88 $tmp87 ___678_c 	%argrw{"wrr"}
	compref		$tmp89 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp90 ___678_oc $tmp89 	%argrw{"wrr"}
	compref		$tmp91 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp92 $tmp90 $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp94 $tmp93 ___678_s 	%argrw{"wrr"}
	sub		$tmp95 $tmp92 $tmp94 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:131
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp96 ___678_nAxis $const4 	%line{131} %argrw{"wrr"}
	mul		$tmp97 ___678_oc $tmp96 	%argrw{"wrr"}
	compref		$tmp98 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp99 $tmp97 $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp101 $tmp100 ___678_s 	%argrw{"wrr"}
	sub		$tmp102 $tmp99 $tmp101 	%argrw{"wrr"}
	compref		$tmp103 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp104 ___678_oc $tmp103 	%argrw{"wrr"}
	compref		$tmp105 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp106 $tmp104 $tmp105 	%argrw{"wrr"}
	compref		$tmp107 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp108 $tmp107 ___678_s 	%argrw{"wrr"}
	add		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
	compref		$tmp110 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp111 ___678_oc $tmp110 	%argrw{"wrr"}
	compref		$tmp112 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp113 $tmp111 $tmp112 	%argrw{"wrr"}
	add		$tmp114 $tmp113 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:129
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp62 $tmp69 $tmp76 $const5 $tmp83 $tmp88 $tmp95 $const5 $tmp102 $tmp109 $tmp114 $const5 $const5 $const5 $const5 $const15 	%line{129} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:139
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp115.x geomprop_Tworld_out1 $const1 	%line{139} %argrw{"wrr"}
	compref		$tmp115.y geomprop_Tworld_out1 $const12 	%argrw{"wrr"}
	compref		$tmp115.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp115.w $const15 	%argrw{"wr"}
	functioncall	$const2 387 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp116 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp117 $tmp116 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp118 ___679_m $const12 $const1 	%argrw{"wrrr"}
	mul		$tmp119 $tmp118 $tmp115.y 	%argrw{"wrr"}
	add		$tmp120 $tmp117 $tmp119 	%argrw{"wrr"}
	mxcompref	$tmp121 ___679_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp122 $tmp121 $tmp115.z 	%argrw{"wrr"}
	add		$tmp123 $tmp120 $tmp122 	%argrw{"wrr"}
	mxcompref	$tmp124 ___679_m $const40 $const1 	%argrw{"wrrr"}
	mul		$tmp125 $tmp124 $tmp115.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp123 $tmp125 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp126 ___679_m $const1 $const12 	%line{416} %argrw{"wrrr"}
	mul		$tmp127 $tmp126 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp128 ___679_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp129 $tmp128 $tmp115.y 	%argrw{"wrr"}
	add		$tmp130 $tmp127 $tmp129 	%argrw{"wrr"}
	mxcompref	$tmp131 ___679_m $const4 $const12 	%argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp115.z 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	mxcompref	$tmp134 ___679_m $const40 $const12 	%argrw{"wrrr"}
	mul		$tmp135 $tmp134 $tmp115.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp133 $tmp135 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp136 ___679_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp138 ___679_m $const12 $const4 	%argrw{"wrrr"}
	mul		$tmp139 $tmp138 $tmp115.y 	%argrw{"wrr"}
	add		$tmp140 $tmp137 $tmp139 	%argrw{"wrr"}
	mxcompref	$tmp141 ___679_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp115.z 	%argrw{"wrr"}
	add		$tmp143 $tmp140 $tmp142 	%argrw{"wrr"}
	mxcompref	$tmp144 ___679_m $const40 $const4 	%argrw{"wrrr"}
	mul		$tmp145 $tmp144 $tmp115.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp143 $tmp145 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp146 ___679_m $const1 $const40 	%line{418} %argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp115.x 	%argrw{"wrr"}
	mxcompref	$tmp148 ___679_m $const12 $const40 	%argrw{"wrrr"}
	mul		$tmp149 $tmp148 $tmp115.y 	%argrw{"wrr"}
	add		$tmp150 $tmp147 $tmp149 	%argrw{"wrr"}
	mxcompref	$tmp151 ___679_m $const4 $const40 	%argrw{"wrrr"}
	mul		$tmp152 $tmp151 $tmp115.z 	%argrw{"wrr"}
	add		$tmp153 $tmp150 $tmp152 	%argrw{"wrr"}
	mxcompref	$tmp154 ___679_m $const40 $const40 	%argrw{"wrrr"}
	mul		$tmp155 $tmp154 $tmp115.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp153 $tmp155 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:140
# }
	vector		___697_coat_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{140} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:303
#     color artistic_ior_extinction = color(0.0);
	assign		___697_artistic_ior_ior $const6 	%line{303} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:304
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___697_artistic_ior_extinction $const6 	%line{304} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:305
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const41 415 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:148
#     color r_sqrt = sqrt(r);
	assign		$tmp156 $const5 	%line{148} %argrw{"wr"}
	assign		$tmp157 $const42 	%argrw{"wr"}
	functioncall	$const21 396 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp158 ___697_metal_reflectivity_out $tmp157 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___680_r $tmp158 $tmp156 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:149
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___680_r_sqrt ___680_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{149} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:150
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp159 $const15 ___680_r 	%line{150} %argrw{"wrr"}
	add		$tmp160 $const15 ___680_r 	%argrw{"wrr"}
	div		___680_n_min $tmp159 $tmp160 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:151
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp161 $const15 ___680_r_sqrt 	%line{151} %argrw{"wrr"}
	sub		$tmp162 $const15 ___680_r_sqrt 	%argrw{"wrr"}
	div		___680_n_max $tmp161 $tmp162 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:152
# 
	mix		___697_artistic_ior_ior ___680_n_max ___680_n_min ___697_metal_edgecolor_out 	%line{152} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:154
#     color nm1 = ior - 1.0;
	add		___680_np1 ___697_artistic_ior_ior $const15 	%line{154} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:155
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___680_nm1 ___697_artistic_ior_ior $const15 	%line{155} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:156
#     k2 = max(k2, 0.0);
	mul		$tmp163 ___680_np1 ___680_np1 	%line{156} %argrw{"wrr"}
	mul		$tmp164 $tmp163 ___680_r 	%argrw{"wrr"}
	mul		$tmp165 ___680_nm1 ___680_nm1 	%argrw{"wrr"}
	sub		$tmp166 $tmp164 $tmp165 	%argrw{"wrr"}
	sub		$tmp167 $const15 ___680_r 	%argrw{"wrr"}
	div		___680_k2 $tmp166 $tmp167 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:157
#     extinction = sqrt(k2);
	assign		$tmp168 $const5 	%line{157} %argrw{"wr"}
	max		___680_k2 ___680_k2 $tmp168 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:158
# }
	sqrt		___697_artistic_ior_extinction ___680_k2 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:306
#     vector tangent_rotate_out = vector(0.0);
	mul		___697_coat_affect_roughness_multiply2_out ___697_coat_affect_roughness_multiply1_out SR_test_crosshatch_coat_roughness 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:307
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___697_tangent_rotate_out $const34 	%line{307} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:308
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const35 534 	%line{308} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:137
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const36 421 	%line{137} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp169 $const37 $const38 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___697_tangent_rotate_degree_out $tmp169 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:138
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const39 484 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{138} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:124
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{124} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:125
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:126
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{126} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:127
# 
	sub		___678_oc $const15 ___678_c 	%line{127} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:129
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp170 ___678_nAxis $const1 	%line{129} %argrw{"wrr"}
	mul		$tmp171 ___678_oc $tmp170 	%argrw{"wrr"}
	compref		$tmp172 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp173 $tmp171 $tmp172 	%argrw{"wrr"}
	add		$tmp174 $tmp173 ___678_c 	%argrw{"wrr"}
	compref		$tmp175 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp176 ___678_oc $tmp175 	%argrw{"wrr"}
	compref		$tmp177 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp178 $tmp176 $tmp177 	%argrw{"wrr"}
	compref		$tmp179 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp180 $tmp179 ___678_s 	%argrw{"wrr"}
	sub		$tmp181 $tmp178 $tmp180 	%argrw{"wrr"}
	compref		$tmp182 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp183 ___678_oc $tmp182 	%argrw{"wrr"}
	compref		$tmp184 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp185 $tmp183 $tmp184 	%argrw{"wrr"}
	compref		$tmp186 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp187 $tmp186 ___678_s 	%argrw{"wrr"}
	add		$tmp188 $tmp185 $tmp187 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:130
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp189 ___678_nAxis $const1 	%line{130} %argrw{"wrr"}
	mul		$tmp190 ___678_oc $tmp189 	%argrw{"wrr"}
	compref		$tmp191 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp192 $tmp190 $tmp191 	%argrw{"wrr"}
	compref		$tmp193 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 ___678_s 	%argrw{"wrr"}
	add		$tmp195 $tmp192 $tmp194 	%argrw{"wrr"}
	compref		$tmp196 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp197 ___678_oc $tmp196 	%argrw{"wrr"}
	compref		$tmp198 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp199 $tmp197 $tmp198 	%argrw{"wrr"}
	add		$tmp200 $tmp199 ___678_c 	%argrw{"wrr"}
	compref		$tmp201 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp202 ___678_oc $tmp201 	%argrw{"wrr"}
	compref		$tmp203 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp204 $tmp202 $tmp203 	%argrw{"wrr"}
	compref		$tmp205 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp206 $tmp205 ___678_s 	%argrw{"wrr"}
	sub		$tmp207 $tmp204 $tmp206 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:131
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp208 ___678_nAxis $const4 	%line{131} %argrw{"wrr"}
	mul		$tmp209 ___678_oc $tmp208 	%argrw{"wrr"}
	compref		$tmp210 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp211 $tmp209 $tmp210 	%argrw{"wrr"}
	compref		$tmp212 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp213 $tmp212 ___678_s 	%argrw{"wrr"}
	sub		$tmp214 $tmp211 $tmp213 	%argrw{"wrr"}
	compref		$tmp215 ___678_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp216 ___678_oc $tmp215 	%argrw{"wrr"}
	compref		$tmp217 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp218 $tmp216 $tmp217 	%argrw{"wrr"}
	compref		$tmp219 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp220 $tmp219 ___678_s 	%argrw{"wrr"}
	add		$tmp221 $tmp218 $tmp220 	%argrw{"wrr"}
	compref		$tmp222 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp223 ___678_oc $tmp222 	%argrw{"wrr"}
	compref		$tmp224 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp225 $tmp223 $tmp224 	%argrw{"wrr"}
	add		$tmp226 $tmp225 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:129
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp174 $tmp181 $tmp188 $const5 $tmp195 $tmp200 $tmp207 $const5 $tmp214 $tmp221 $tmp226 $const5 $const5 $const5 $const5 $const15 	%line{129} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:139
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp227.x geomprop_Tworld_out1 $const1 	%line{139} %argrw{"wrr"}
	compref		$tmp227.y geomprop_Tworld_out1 $const12 	%argrw{"wrr"}
	compref		$tmp227.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp227.w $const15 	%argrw{"wr"}
	functioncall	$const2 533 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp228 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp229 $tmp228 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp230 ___679_m $const12 $const1 	%argrw{"wrrr"}
	mul		$tmp231 $tmp230 $tmp227.y 	%argrw{"wrr"}
	add		$tmp232 $tmp229 $tmp231 	%argrw{"wrr"}
	mxcompref	$tmp233 ___679_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp234 $tmp233 $tmp227.z 	%argrw{"wrr"}
	add		$tmp235 $tmp232 $tmp234 	%argrw{"wrr"}
	mxcompref	$tmp236 ___679_m $const40 $const1 	%argrw{"wrrr"}
	mul		$tmp237 $tmp236 $tmp227.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp235 $tmp237 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp238 ___679_m $const1 $const12 	%line{416} %argrw{"wrrr"}
	mul		$tmp239 $tmp238 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp240 ___679_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp241 $tmp240 $tmp227.y 	%argrw{"wrr"}
	add		$tmp242 $tmp239 $tmp241 	%argrw{"wrr"}
	mxcompref	$tmp243 ___679_m $const4 $const12 	%argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp227.z 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	mxcompref	$tmp246 ___679_m $const40 $const12 	%argrw{"wrrr"}
	mul		$tmp247 $tmp246 $tmp227.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp245 $tmp247 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp248 ___679_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp250 ___679_m $const12 $const4 	%argrw{"wrrr"}
	mul		$tmp251 $tmp250 $tmp227.y 	%argrw{"wrr"}
	add		$tmp252 $tmp249 $tmp251 	%argrw{"wrr"}
	mxcompref	$tmp253 ___679_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp227.z 	%argrw{"wrr"}
	add		$tmp255 $tmp252 $tmp254 	%argrw{"wrr"}
	mxcompref	$tmp256 ___679_m $const40 $const4 	%argrw{"wrrr"}
	mul		$tmp257 $tmp256 $tmp227.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp255 $tmp257 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp258 ___679_m $const1 $const40 	%line{418} %argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp227.x 	%argrw{"wrr"}
	mxcompref	$tmp260 ___679_m $const12 $const40 	%argrw{"wrrr"}
	mul		$tmp261 $tmp260 $tmp227.y 	%argrw{"wrr"}
	add		$tmp262 $tmp259 $tmp261 	%argrw{"wrr"}
	mxcompref	$tmp263 ___679_m $const4 $const40 	%argrw{"wrrr"}
	mul		$tmp264 $tmp263 $tmp227.z 	%argrw{"wrr"}
	add		$tmp265 $tmp262 $tmp264 	%argrw{"wrr"}
	mxcompref	$tmp266 ___679_m $const40 $const40 	%argrw{"wrrr"}
	mul		$tmp267 $tmp266 $tmp227.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp265 $tmp267 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:140
# }
	vector		___697_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{140} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:309
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___697_transmission_roughness_clamped_low_tmp $const5 	%line{309} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:310
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___697_transmission_roughness_clamped_high_tmp $const15 	%line{310} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:311
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const21 539 	%line{311} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp268 ___697_transmission_roughness_add_out ___697_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_transmission_roughness_clamped_out $tmp268 ___697_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:312
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___697_coat_gamma_multiply_out ___697_coat_clamped_out SR_test_crosshatch_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{312} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:313
#     int opacity_luminance_float_index_tmp = 0;
	div		___697_coat_ior_to_F0_sqrt_out ___697_one_minus_coat_ior_out ___697_one_plus_coat_ior_out 	%line{313} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:314
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___697_opacity_luminance_float_index_tmp $const1 	%line{314} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:315
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const11 544 	%line{315} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___697_opacity_luminance_float_out ___697_opacity_luminance_out ___697_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:316
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___697_coat_tangent_rotate_normalize_out ___697_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:317
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_roughness_fg_tmp $const15 	%line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:318
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___697_coat_affected_roughness_out SR_test_crosshatch_specular_roughness ___697_coat_affected_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{318} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:319
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___697_tangent_rotate_normalize_out ___697_tangent_rotate_out 	%line{319} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:320
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_transmission_roughness_fg_tmp $const15 	%line{320} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:321
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___697_coat_affected_transmission_roughness_out ___697_transmission_roughness_clamped_out ___697_coat_affected_transmission_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{321} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:322
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___697_coat_gamma_in2_tmp $const15 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:323
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___697_coat_gamma_out ___697_coat_gamma_multiply_out ___697_coat_gamma_in2_tmp 	%line{323} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:324
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___697_coat_ior_to_F0_out ___697_coat_ior_to_F0_sqrt_out ___697_coat_ior_to_F0_sqrt_out 	%line{324} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:325
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___697_coat_tangent_value2_tmp $const5 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:326
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp269 SR_test_crosshatch_coat_anisotropy ___697_coat_tangent_value2_tmp 	%line{326} %argrw{"wrr"}
	functioncall	$const17 561 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp269 559 561 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_coat_tangent_out ___697_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:327
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___697_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{327} %argrw{"wr"}
	assign		___697_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:328
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const27 582 	%line{328} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:103
#     if (anisotropy > 0.0)
	mul		$tmp270 ___697_coat_affected_roughness_out ___697_coat_affected_roughness_out 	%line{103} %argrw{"wrr"}
	functioncall	$const21 568 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp271 $tmp270 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp271 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:104
#     {
	gt		$tmp272 SR_test_crosshatch_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{104} %argrw{"wrr"}
	if		$tmp272 580 582 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const21 573 	%line{106} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp274 SR_test_crosshatch_specular_anisotropy $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp273 $tmp274 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp275 $const15 $tmp273 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{106} %argrw{"wrr"}
	sqrt		___675_aspect $tmp275 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:107
#         result.y = roughness_sqr * aspect;
	div		$tmp276 ___674_roughness_sqr ___675_aspect 	%line{107} %argrw{"wrr"}
	min		___697_main_roughness_out.x $tmp276 $const15 	%argrw{"wrr"}
	assign		___697_main_roughness_out.x ___697_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:108
#     }
	mul		___697_main_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{108} %argrw{"wrr"}
	assign		___697_main_roughness_out.y ___697_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:112
#         result.y = roughness_sqr;
	assign		___697_main_roughness_out.x ___674_roughness_sqr 	%line{112} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:113
#     }
	assign		___697_main_roughness_out.y ___674_roughness_sqr 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:329
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___697_main_tangent_value2_tmp $const5 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:330
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp277 SR_test_crosshatch_specular_anisotropy ___697_main_tangent_value2_tmp 	%line{330} %argrw{"wrr"}
	functioncall	$const17 590 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp277 588 590 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_main_tangent_out ___697_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:331
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___697_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{331} %argrw{"wr"}
	assign		___697_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:332
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const27 611 	%line{332} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:103
#     if (anisotropy > 0.0)
	mul		$tmp278 ___697_coat_affected_transmission_roughness_out ___697_coat_affected_transmission_roughness_out 	%line{103} %argrw{"wrr"}
	functioncall	$const21 597 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp279 $tmp278 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp279 $const28 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:104
#     {
	gt		$tmp280 SR_test_crosshatch_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{104} %argrw{"wrr"}
	if		$tmp280 609 611 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const21 602 	%line{106} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp282 SR_test_crosshatch_specular_anisotropy $const29 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp281 $tmp282 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:106
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp283 $const15 $tmp281 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{106} %argrw{"wrr"}
	sqrt		___675_aspect $tmp283 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:107
#         result.y = roughness_sqr * aspect;
	div		$tmp284 ___674_roughness_sqr ___675_aspect 	%line{107} %argrw{"wrr"}
	min		___697_transmission_roughness_out.x $tmp284 $const15 	%argrw{"wrr"}
	assign		___697_transmission_roughness_out.x ___697_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:108
#     }
	mul		___697_transmission_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{108} %argrw{"wrr"}
	assign		___697_transmission_roughness_out.y ___697_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:112
#         result.y = roughness_sqr;
	assign		___697_transmission_roughness_out.x ___674_roughness_sqr 	%line{112} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:113
#     }
	assign		___697_transmission_roughness_out.y ___674_roughness_sqr 	%line{113} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:333
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___697_coat_affected_subsurface_color_out ___697_subsurface_color_nonnegative_out ___697_coat_gamma_out 	%line{333} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:334
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___697_coat_affected_diffuse_color_out ___697_base_color_nonnegative_out ___697_coat_gamma_out 	%line{334} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:335
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___697_one_minus_coat_ior_to_F0_in1_tmp $const15 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:336
#     color emission_color0_out = color(0.0);
	sub		___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_in1_tmp ___697_coat_ior_to_F0_out 	%line{336} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:337
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___697_emission_color0_out $const6 	%line{337} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:338
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const25 619 	%line{338} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:57
#     out = combine_out;
	color		___672_combine_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out 	%line{57} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:58
# }
	assign		___697_emission_color0_out ___672_combine_out 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:339
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___697_coat_bsdf_out ___697_null_closure 	%line{339} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:340
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const46 631 	%line{340} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:163
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp286 $const45 $const47 	%line{163} %argrw{"wrr"}
	if		$tmp286 624 625 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint $const31 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:164
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp287 $const45 $const45 	%line{164} %argrw{"wrr"}
	if		$tmp287 628 629 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint $const31 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:165
# }
	closure		$tmp288 $const50 geomprop_Nworld_out1 ___697_coat_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.y SR_test_crosshatch_coat_IOR $const44 $const48 $const5 $const49 $const43 	%line{165} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_coat_bsdf_out $tmp288 SR_test_crosshatch_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:341
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___697_metal_bsdf_weight_tmp $const15 	%line{341} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:342
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___697_metal_bsdf_distribution_tmp $const44 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:343
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp289 $const51 geomprop_Nworld_out1 ___697_main_tangent_out ___697_main_roughness_out.x ___697_main_roughness_out.y ___697_artistic_ior_ior ___697_artistic_ior_extinction ___697_metal_bsdf_distribution_tmp $const48 SR_test_crosshatch_thin_film_thickness $const49 SR_test_crosshatch_thin_film_IOR 	%line{343} %argrw{"wrrrrrrrrrrrr"}
	mul		___697_metal_bsdf_out $tmp289 ___697_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:344
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___697_specular_bsdf_out ___697_null_closure 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:345
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const46 647 	%line{345} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:163
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp290 $const45 $const47 	%line{163} %argrw{"wrr"}
	if		$tmp290 640 641 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint SR_test_crosshatch_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:164
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp291 $const45 $const45 	%line{164} %argrw{"wrr"}
	if		$tmp291 644 645 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint SR_test_crosshatch_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:165
# }
	closure		$tmp292 $const50 geomprop_Nworld_out1 ___697_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_main_roughness_out.x ___697_main_roughness_out.y SR_test_crosshatch_specular_IOR $const44 $const48 SR_test_crosshatch_thin_film_thickness $const49 SR_test_crosshatch_thin_film_IOR 	%line{165} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_specular_bsdf_out $tmp292 SR_test_crosshatch_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:346
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___697_transmission_bsdf_out ___697_null_closure 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:347
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const46 659 	%line{347} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:163
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp293 $const47 $const47 	%line{163} %argrw{"wrr"}
	if		$tmp293 652 653 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint SR_test_crosshatch_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:164
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp294 $const47 $const45 	%line{164} %argrw{"wrr"}
	if		$tmp294 656 657 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint SR_test_crosshatch_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:165
# }
	closure		$tmp295 $const50 geomprop_Nworld_out1 ___697_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_transmission_roughness_out.x ___697_transmission_roughness_out.y SR_test_crosshatch_specular_IOR $const44 $const48 $const5 $const49 $const43 	%line{165} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_transmission_bsdf_out $tmp295 $const15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:348
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp296 $const52 geomprop_Nworld_out1 SR_test_crosshatch_sheen_color SR_test_crosshatch_sheen_roughness 	%line{348} %argrw{"wrrrr"}
	mul		___697_sheen_bsdf_out $tmp296 SR_test_crosshatch_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:349
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___697_translucent_bsdf_weight_tmp $const15 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:350
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp297 $const53 geomprop_Nworld_out1 ___697_coat_affected_subsurface_color_out 	%line{350} %argrw{"wrrr"}
	mul		___697_translucent_bsdf_out $tmp297 ___697_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:351
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___697_subsurface_bsdf_out ___697_null_closure 	%line{351} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:352
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const54 668 	%line{352} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:173
# #endif
	mul		$tmp298 $const15 ___697_coat_affected_subsurface_color_out 	%line{173} %argrw{"wrr"}
	closure		___697_subsurface_bsdf_out $const55 geomprop_Nworld_out1 $tmp298 $const15 ___697_subsurface_radius_scaled_out SR_test_crosshatch_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:353
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const56 673 	%line{353} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp299 $const15 ___697_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp300 ___697_subsurface_bsdf_out $tmp299 	%argrw{"wrr"}
	mul		$tmp301 ___697_translucent_bsdf_out ___697_subsurface_selector_out 	%argrw{"wrr"}
	add		___697_selected_subsurface_bsdf_out $tmp300 $tmp301 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:354
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp302 $const57 geomprop_Nworld_out1 ___697_coat_affected_diffuse_color_out SR_test_crosshatch_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{354} %argrw{"wrrrr"}
	mul		___697_diffuse_bsdf_out $tmp302 SR_test_crosshatch_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:355
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const56 680 	%line{355} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp303 $const15 SR_test_crosshatch_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp304 ___697_diffuse_bsdf_out $tmp303 	%argrw{"wrr"}
	mul		$tmp305 ___697_selected_subsurface_bsdf_out SR_test_crosshatch_subsurface 	%argrw{"wrr"}
	add		___697_subsurface_mix_out $tmp304 $tmp305 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:356
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___697_sheen_layer_out $const58 ___697_sheen_bsdf_out ___697_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{356} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:357
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const56 686 	%line{357} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp306 $const15 SR_test_crosshatch_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp307 ___697_sheen_layer_out $tmp306 	%argrw{"wrr"}
	mul		$tmp308 ___697_transmission_bsdf_out SR_test_crosshatch_transmission 	%argrw{"wrr"}
	add		___697_transmission_mix_out $tmp307 $tmp308 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:358
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___697_specular_layer_out $const58 ___697_specular_bsdf_out ___697_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{358} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:359
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const56 692 	%line{359} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp309 $const15 SR_test_crosshatch_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp310 ___697_specular_layer_out $tmp309 	%argrw{"wrr"}
	mul		$tmp311 ___697_metal_bsdf_out SR_test_crosshatch_metalness 	%argrw{"wrr"}
	add		___697_metalness_mix_out $tmp310 $tmp311 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:360
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___697_thin_film_layer_attenuated_out ___697_metalness_mix_out ___697_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{360} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:361
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___697_coat_layer_out $const58 ___697_coat_bsdf_out ___697_thin_film_layer_attenuated_out 	%line{361} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:362
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___697_emission_edf_out $const59 ___697_emission_weight_out 	%line{362} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:363
#     EDF coat_emission_edf_out = null_closure;
	mul		___697_coat_tinted_emission_edf_out ___697_emission_edf_out SR_test_crosshatch_coat_color 	%line{363} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:364
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___697_coat_emission_edf_out ___697_null_closure 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:365
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const61 709 	%line{365} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:258
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp314 I 	%line{258} %argrw{"wr"}
	dot		$tmp313 N $tmp314 	%argrw{"wrr"}
	fabs		___695_NdotV $tmp313 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:259
#     result = base * f;
	functioncall	$const62 708 	%line{259} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:252
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp315 $const15 ___695_NdotV 	%line{252} %argrw{"wrr"}
	functioncall	$const21 706 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp316 $tmp315 $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_x $tmp316 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:253
# }
	pow		$tmp317 ___694_x $const60 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{253} %argrw{"wrr"}
	mix		___695_f ___697_emission_color0_out $const6 $tmp317 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:260
# }
	mul		___697_coat_emission_edf_out ___697_coat_tinted_emission_edf_out ___695_f 	%line{260} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:366
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const56 714 	%line{366} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp318 $const15 SR_test_crosshatch_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp319 ___697_emission_edf_out $tmp318 	%argrw{"wrr"}
	mul		$tmp320 ___697_coat_emission_edf_out SR_test_crosshatch_coat 	%argrw{"wrr"}
	add		___697_blended_coat_emission_edf_out $tmp319 $tmp320 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:367
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___697_shader_constructor_out.bsdf ___697_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{367} %argrw{"wr"}
	assign		___697_shader_constructor_out.edf ___697_null_closure 	%argrw{"wr"}
	assign		___697_shader_constructor_out.opacity $const15 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:368
#     out = shader_constructor_out;
	functioncall	$const63 724 	%line{368} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:265
#     result.edf     = edf;
	assign		___697_shader_constructor_out.bsdf ___697_coat_layer_out 	%line{265} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:266
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___697_shader_constructor_out.edf ___697_blended_coat_emission_edf_out 	%line{266} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:267
# }
	functioncall	$const21 723 	%line{267} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp321 ___697_opacity_luminance_float_out $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_shader_constructor_out.opacity $tmp321 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:267
# }
	assign		___697_shader_constructor_out.opacity ___697_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{267} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:369
# }
	assign		SR_test_crosshatch_out.bsdf ___697_shader_constructor_out.bsdf 	%line{369} %argrw{"wr"}
	assign		SR_test_crosshatch_out.edf ___697_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_test_crosshatch_out.opacity ___697_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:777
#     out = test_crosshatch_out;
	functioncall	$const64 737 	%line{777} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:374
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const21 731 	%line{374} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp322 SR_test_crosshatch_out.opacity $const15 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_opacity_weight $tmp322 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:375
# }
	add		$tmp323 SR_test_crosshatch_out.bsdf SR_test_crosshatch_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl"} %line{375} %argrw{"wrr"}
	mul		$tmp324 $tmp323 ___698_opacity_weight 	%argrw{"wrr"}
	closure		$tmp325 $const65 	%argrw{"wr"}
	sub		$tmp326 $const15 ___698_opacity_weight 	%argrw{"wrr"}
	mul		$tmp327 $tmp325 $tmp326 	%argrw{"wrr"}
	add		test_crosshatch_out $tmp324 $tmp327 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_crosshatch.osl:778
# }
	assign		out test_crosshatch_out 	%line{778} %argrw{"wr"}
	end
