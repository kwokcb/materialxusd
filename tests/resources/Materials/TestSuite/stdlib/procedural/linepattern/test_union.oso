OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\procedural\linepattern\test_union.oso
shader test_union	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"test_union"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	grid_color3_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	grid_color3_uvtiling.x	58		%read{13,13} %write{2147483647,-1} %mystruct{grid_color3_uvtiling} %mystructfield{0}
param	float	grid_color3_uvtiling.y	58		%read{14,14} %write{2147483647,-1} %mystruct{grid_color3_uvtiling} %mystructfield{1}
param	struct vector2	grid_color3_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	grid_color3_uvoffset.x	0		%read{18,18} %write{2147483647,-1} %mystruct{grid_color3_uvoffset} %mystructfield{0}
param	float	grid_color3_uvoffset.y	0		%read{19,19} %write{2147483647,-1} %mystruct{grid_color3_uvoffset} %mystructfield{1}
param	float	grid_color3_thickness	0.100000001		%meta{string,widget,"number"}  %read{16,16} %write{2147483647,-1}
param	int	grid_color3_staggered	0		%meta{string,widget,"checkBox"}  %read{69,69} %write{2147483647,-1}
param	struct vector2	crosshatch_color3_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	crosshatch_color3_uvtiling.x	29		%read{117,117} %write{2147483647,-1} %mystruct{crosshatch_color3_uvtiling} %mystructfield{0}
param	float	crosshatch_color3_uvtiling.y	29		%read{118,118} %write{2147483647,-1} %mystruct{crosshatch_color3_uvtiling} %mystructfield{1}
param	struct vector2	crosshatch_color3_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	crosshatch_color3_uvoffset.x	0		%read{120,120} %write{2147483647,-1} %mystruct{crosshatch_color3_uvoffset} %mystructfield{0}
param	float	crosshatch_color3_uvoffset.y	0		%read{121,121} %write{2147483647,-1} %mystruct{crosshatch_color3_uvoffset} %mystructfield{1}
param	float	crosshatch_color3_thickness	0.0500000007		%meta{string,widget,"number"}  %read{241,300} %write{2147483647,-1}
param	int	crosshatch_color3_staggered	0		%meta{string,widget,"checkBox"}  %read{171,171} %write{2147483647,-1}
param	float	SR_test_union_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{344,779} %write{2147483647,-1}
param	float	SR_test_union_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{778,778} %write{2147483647,-1}
param	float	SR_test_union_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{793,795} %write{2147483647,-1}
param	float	SR_test_union_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{345,751} %write{2147483647,-1}
param	color	SR_test_union_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{345,749} %write{2147483647,-1}
param	float	SR_test_union_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{349,651} %write{2147483647,-1}
param	float	SR_test_union_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{750,762} %write{2147483647,-1}
param	float	SR_test_union_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{673,705} %write{2147483647,-1}
param	float	SR_test_union_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{348,348} %write{2147483647,-1}
param	float	SR_test_union_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{787,789} %write{2147483647,-1}
param	color	SR_test_union_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{757,761} %write{2147483647,-1}
param	float	SR_test_union_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_test_union_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_union_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_union_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_union_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{349,349} %write{2147483647,-1}
param	float	SR_test_union_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{781,783} %write{2147483647,-1}
param	color	SR_test_union_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{352,352} %write{2147483647,-1}
param	color	SR_test_union_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{358,358} %write{2147483647,-1}
param	float	SR_test_union_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{358,358} %write{2147483647,-1}
param	float	SR_test_union_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{772,772} %write{2147483647,-1}
param	float	SR_test_union_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{765,765} %write{2147483647,-1}
param	color	SR_test_union_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{764,764} %write{2147483647,-1}
param	float	SR_test_union_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{764,764} %write{2147483647,-1}
param	float	SR_test_union_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{346,817} %write{2147483647,-1}
param	color	SR_test_union_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{365,800} %write{2147483647,-1}
param	float	SR_test_union_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{324,520} %write{2147483647,-1}
param	float	SR_test_union_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{328,659} %write{2147483647,-1}
param	float	SR_test_union_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{343,343} %write{2147483647,-1}
param	float	SR_test_union_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{367,734} %write{2147483647,-1}
param	float	SR_test_union_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{644,644} %write{2147483647,-1}
param	float	SR_test_union_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{346,346} %write{2147483647,-1}
param	float	SR_test_union_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{738,750} %write{2147483647,-1}
param	float	SR_test_union_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{738,750} %write{2147483647,-1}
param	float	SR_test_union_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{370,370} %write{2147483647,-1}
param	color	SR_test_union_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{370,370} %write{2147483647,-1}
param	color	SR_test_union_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{373,373} %write{2147483647,-1}
param	int	SR_test_union_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{359,359} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{842,842}
global	vector	I	%read{803,803} %write{2147483647,-1}
global	normal	N	%read{2,804} %write{2147483647,-1}
global	float	u	%read{8,8} %write{2147483647,-1}
global	float	v	%read{9,9} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{25,127} %write{23,125}
local	float	___669_N_extract_0_out	%read{39,141} %write{27,131}
local	int	___669_N_extract_1_index_tmp	%read{33,135} %write{31,133}
local	float	___669_N_extract_1_out	%read{40,142} %write{35,139}
local	color	___670_combine_out	%read{112,723} %write{111,722}
local	float	___671_texcoord_scale_out.x	%read{18,18} %write{13,13} %mystruct{___671_texcoord_scale_out} %mystructfield{0}
local	float	___671_texcoord_scale_out.y	%read{19,19} %write{14,14} %mystruct{___671_texcoord_scale_out} %mystructfield{1}
local	float	___671_thick_to_size_in1_tmp	%read{16,16} %write{15,15}
local	float	___671_thick_to_size_out	%read{85,99} %write{16,16}
local	float	___671_texcoord_bias_out.x	%read{27,35} %write{18,18} %mystruct{___671_texcoord_bias_out} %mystructfield{0}
local	float	___671_texcoord_bias_out.y	%read{29,37} %write{19,19} %mystruct{___671_texcoord_bias_out} %mystructfield{1}
local	float	___671_texcoord_bias_separate_outx	%read{65,74} %write{20,39}
local	float	___671_texcoord_bias_separate_outy	%read{43,52} %write{21,40}
local	float	___671_mod_Y_row_in2_tmp	%read{43,45} %write{41,41}
local	float	___671_mod_Y_row_out	%read{56,56} %write{46,46}
local	float	___671_mod_Y_in2_tmp	%read{49,51} %write{47,47}
local	float	___671_mod_Y_out	%read{64,64} %write{52,52}
local	float	___671_alt_rows_shift_value2_tmp	%read{56,56} %write{53,53}
local	float	___671_alt_rows_shift_in1_tmp	%read{59,59} %write{54,54}
local	float	___671_alt_rows_shift_in2_tmp	%read{61,61} %write{55,55}
local	float	___671_alt_rows_shift_out	%read{65,65} %write{59,61}
local	float	___671_mody_2_in2_tmp	%read{64,64} %write{63,63}
local	float	___671_mody_2_out	%read{67,67} %write{64,64}
local	float	___671_shift_X_out	%read{72,72} %write{65,65}
local	float	___671_subY_1_in2_tmp	%read{67,67} %write{66,66}
local	float	___671_subY_1_out	%read{76,76} %write{67,67}
local	int	___671_stagger_selection_value2_tmp	%read{69,69} %write{68,68}
local	float	___671_stagger_selection_out	%read{79,82} %write{72,74}
local	float	___671_abs_Y_out	%read{85,85} %write{76,76}
local	float	___671_mod_X_in2_tmp	%read{79,81} %write{77,77}
local	float	___671_mod_X_out	%read{93,93} %write{82,82}
local	float	___671_Y_detect_in1_tmp	%read{88,88} %write{83,83}
local	float	___671_Y_detect_in2_tmp	%read{90,90} %write{84,84}
local	float	___671_Y_detect_out	%read{106,106} %write{88,90}
local	float	___671_modx_2_in2_tmp	%read{93,93} %write{92,92}
local	float	___671_modx_2_out	%read{95,95} %write{93,93}
local	float	___671_subX_1_in2_tmp	%read{95,95} %write{94,94}
local	float	___671_subX_1_out	%read{96,96} %write{95,95}
local	float	___671_abs_X_out	%read{99,99} %write{96,96}
local	float	___671_X_detect_in1_tmp	%read{102,102} %write{97,97}
local	float	___671_X_detect_in2_tmp	%read{104,104} %write{98,98}
local	float	___671_X_detect_out	%read{106,106} %write{102,104}
local	float	___671_min_out	%read{108,108} %write{106,106}
local	float	___671_inv_result_in1_tmp	%read{108,108} %write{107,107}
local	float	___671_inv_result_out	%read{111,111} %write{108,108}
local	color	___671_to_rgb_out	%read{113,113} %write{109,112}
local	float	___672_N_mtlxsubtract_out.x	%read{234,293} %write{230,289} %mystruct{___672_N_mtlxsubtract_out} %mystructfield{0}
local	float	___672_N_mtlxsubtract_out.y	%read{235,294} %write{231,290} %mystruct{___672_N_mtlxsubtract_out} %mystructfield{1}
local	float	___672_N_mtlxmagnitude_out	%read{238,297} %write{237,296}
local	float	___673_delta_out.x	%read{205,264} %write{199,258} %mystruct{___673_delta_out} %mystructfield{0}
local	float	___673_delta_out.y	%read{206,265} %write{200,259} %mystruct{___673_delta_out} %mystructfield{1}
local	float	___673_b_a_out.x	%read{208,284} %write{202,261} %mystruct{___673_b_a_out} %mystructfield{0}
local	float	___673_b_a_out.y	%read{209,285} %write{203,262} %mystruct{___673_b_a_out} %mystructfield{1}
local	float	___673_p_a_out.x	%read{212,289} %write{205,264} %mystruct{___673_p_a_out} %mystructfield{0}
local	float	___673_p_a_out.y	%read{213,290} %write{206,265} %mystruct{___673_p_a_out} %mystructfield{1}
local	float	___673_dot_ba_ba_out	%read{215,274} %write{210,269}
local	float	___673_dot_pa_ba_out	%read{215,274} %write{214,273}
local	float	___673_divide_dots_out	%read{219,278} %write{215,274}
local	float	___673_clamp_low_tmp	%read{220,279} %write{216,275}
local	float	___673_clamp_high_tmp	%read{219,278} %write{217,276}
local	float	___673_clamp_out	%read{222,282} %write{220,279}
local	float	___673_multiply_clamp_ba_out.x	%read{230,289} %write{225,284} %mystruct{___673_multiply_clamp_ba_out} %mystructfield{0}
local	float	___673_multiply_clamp_ba_out.y	%read{231,290} %write{226,285} %mystruct{___673_multiply_clamp_ba_out} %mystructfield{1}
local	float	___673_distance_out	%read{241,300} %write{227,297}
local	float	___673_dist_comp_in1_tmp	%read{244,303} %write{239,298}
local	float	___673_dist_comp_in2_tmp	%read{246,305} %write{240,299}
local	float	___673_dist_comp_out	%read{248,307} %write{244,305}
local	float	___674_texcoord_scale_out.x	%read{120,120} %write{117,117} %mystruct{___674_texcoord_scale_out} %mystructfield{0}
local	float	___674_texcoord_scale_out.y	%read{121,121} %write{118,118} %mystruct{___674_texcoord_scale_out} %mystructfield{1}
local	float	___674_texcoord_bias_out.x	%read{129,137} %write{120,120} %mystruct{___674_texcoord_bias_out} %mystructfield{0}
local	float	___674_texcoord_bias_out.y	%read{131,139} %write{121,121} %mystruct{___674_texcoord_bias_out} %mystructfield{1}
local	float	___674_texcoord_bias_separate_outx	%read{167,176} %write{122,141}
local	float	___674_texcoord_bias_separate_outy	%read{145,154} %write{123,142}
local	float	___674_mod_Y_row_in2_tmp	%read{145,147} %write{143,143}
local	float	___674_mod_Y_row_out	%read{158,158} %write{148,148}
local	float	___674_mod_Y_in2_tmp	%read{151,153} %write{149,149}
local	float	___674_mod_Y_out	%read{166,166} %write{154,154}
local	float	___674_alt_rows_shift_value2_tmp	%read{158,158} %write{155,155}
local	float	___674_alt_rows_shift_in1_tmp	%read{161,161} %write{156,156}
local	float	___674_alt_rows_shift_in2_tmp	%read{163,163} %write{157,157}
local	float	___674_alt_rows_shift_out	%read{167,167} %write{161,163}
local	float	___674_mody_2_in2_tmp	%read{166,166} %write{165,165}
local	float	___674_mody_2_out	%read{169,169} %write{166,166}
local	float	___674_shift_X_out	%read{174,174} %write{167,167}
local	float	___674_subY_1_in2_tmp	%read{169,169} %write{168,168}
local	float	___674_subY_1_out	%read{189,189} %write{169,169}
local	int	___674_stagger_selection_value2_tmp	%read{171,171} %write{170,170}
local	float	___674_stagger_selection_out	%read{180,183} %write{174,176}
local	float	___674_mod_X_in2_tmp	%read{180,182} %write{178,178}
local	float	___674_mod_X_out	%read{185,185} %write{183,183}
local	float	___674_modx_2_in2_tmp	%read{185,185} %write{184,184}
local	float	___674_modx_2_out	%read{187,187} %write{185,185}
local	float	___674_subX_1_in2_tmp	%read{187,187} %write{186,186}
local	float	___674_subX_1_out	%read{188,188} %write{187,187}
local	float	___674_sample_vec_out.x	%read{199,258} %write{188,188} %mystruct{___674_sample_vec_out} %mystructfield{0}
local	float	___674_sample_vec_out.y	%read{200,259} %write{189,189} %mystruct{___674_sample_vec_out} %mystructfield{1}
local	float	___674_line_diag1_out	%read{308,308} %write{190,248}
local	float	___674_line_diag2_out	%read{308,308} %write{249,307}
local	float	___674_composite_diags_out	%read{309,309} %write{308,308}
local	float	___674_max_out	%read{312,312} %write{309,309}
local	color	___674_to_rgb_out	%read{314,314} %write{310,313}
local	float	___675_roughness_sqr	%read{335,715} %write{327,701}
local	float	___676_aspect	%read{335,712} %write{334,708}
local	vector	___679_nAxis	%read{385,585} %write{381,527}
local	float	___679_s	%read{395,581} %write{382,528}
local	float	___679_c	%read{384,587} %write{383,529}
local	float	___679_oc	%read{386,584} %write{384,530}
local	float	___680_rotationRadians	%read{382,529} %write{379,525}
local	matrix	___680_m	%read{448,635} %write{442,588}
local	float	___680_trans.x	%read{492,638} %write{458,604} %mystruct{___680_trans} %mystructfield{0}
local	float	___680_trans.y	%read{492,638} %write{469,615} %mystruct{___680_trans} %mystructfield{1}
local	float	___680_trans.z	%read{492,638} %write{480,626} %mystruct{___680_trans} %mystructfield{2}
local	float	___680_trans.w	%read{2147483647,-1} %write{491,637} %mystruct{___680_trans} %mystructfield{3}
local	color	___681_r	%read{501,515} %write{500,500}
local	color	___681_r_sqrt	%read{505,506} %write{501,501}
local	color	___681_n_min	%read{508,508} %write{504,504}
local	color	___681_n_max	%read{508,508} %write{507,507}
local	color	___681_np1	%read{511,511} %write{509,509}
local	color	___681_nm1	%read{513,513} %write{510,510}
local	color	___681_k2	%read{518,519} %write{516,518}
local	color	___682_reflection_tint	%read{734,762} %write{728,757}
local	color	___682_transmission_tint	%read{734,762} %write{732,761}
local	float	___695_x	%read{811,811} %write{810,810}
local	float	___696_NdotV	%read{807,807} %write{805,805}
local	color	___696_f	%read{813,813} %write{812,812}
local	closure color	___698_null_closure	%read{724,820} %write{320,320}
local	float	___698_coat_roughness_vector_out.x	%read{337,734} %write{321,340} %mystruct{___698_coat_roughness_vector_out} %mystructfield{0}
local	float	___698_coat_roughness_vector_out.y	%read{339,734} %write{322,341} %mystruct{___698_coat_roughness_vector_out} %mystructfield{1}
local	float	___698_coat_tangent_rotate_degree_in2_tmp	%read{343,343} %write{342,342}
local	float	___698_coat_tangent_rotate_degree_out	%read{379,379} %write{343,343}
local	color	___698_metal_reflectivity_out	%read{499,499} %write{344,344}
local	color	___698_metal_edgecolor_out	%read{508,508} %write{345,345}
local	float	___698_coat_affect_roughness_multiply1_out	%read{520,520} %write{346,346}
local	float	___698_tangent_rotate_degree_in2_tmp	%read{348,348} %write{347,347}
local	float	___698_tangent_rotate_degree_out	%read{525,525} %write{348,348}
local	float	___698_transmission_roughness_add_out	%read{642,642} %write{349,349}
local	float	___698_subsurface_color_nonnegative_in2_tmp	%read{351,351} %write{350,350}
local	color	___698_subsurface_color_nonnegative_out	%read{716,716} %write{352,352}
local	float	___698_coat_clamped_low_tmp	%read{357,357} %write{353,353}
local	float	___698_coat_clamped_high_tmp	%read{356,356} %write{354,354}
local	float	___698_coat_clamped_out	%read{644,644} %write{357,357}
local	color	___698_subsurface_radius_scaled_out	%read{772,772} %write{358,358}
local	float	___698_subsurface_selector_out	%read{774,776} %write{360,360}
local	float	___698_base_color_nonnegative_in2_tmp	%read{362,362} %write{361,361}
local	color	___698_base_color_nonnegative_out	%read{717,717} %write{363,363}
local	color	___698_coat_attenuation_bg_tmp	%read{365,365} %write{364,364}
local	color	___698_coat_attenuation_out	%read{797,797} %write{365,365}
local	float	___698_one_minus_coat_ior_in1_tmp	%read{367,367} %write{366,366}
local	float	___698_one_minus_coat_ior_out	%read{645,645} %write{367,367}
local	float	___698_one_plus_coat_ior_in1_tmp	%read{369,369} %write{368,368}
local	float	___698_one_plus_coat_ior_out	%read{645,645} %write{369,369}
local	color	___698_emission_weight_out	%read{799,799} %write{370,370}
local	color	___698_opacity_luminance_out	%read{648,648} %write{371,374}
local	vector	___698_coat_tangent_rotate_out	%read{649,649} %write{375,492}
local	color	___698_artistic_ior_ior	%read{509,738} %write{493,508}
local	color	___698_artistic_ior_extinction	%read{738,738} %write{494,519}
local	float	___698_coat_affect_roughness_multiply2_out	%read{651,654} %write{520,520}
local	vector	___698_tangent_rotate_out	%read{652,652} %write{521,638}
local	float	___698_transmission_roughness_clamped_low_tmp	%read{643,643} %write{639,639}
local	float	___698_transmission_roughness_clamped_high_tmp	%read{642,642} %write{640,640}
local	float	___698_transmission_roughness_clamped_out	%read{654,654} %write{643,643}
local	float	___698_coat_gamma_multiply_out	%read{656,656} %write{644,644}
local	float	___698_coat_ior_to_F0_sqrt_out	%read{657,657} %write{645,645}
local	int	___698_opacity_luminance_float_index_tmp	%read{648,648} %write{646,646}
local	float	___698_opacity_luminance_float_out	%read{826,826} %write{648,648}
local	vector	___698_coat_tangent_rotate_normalize_out	%read{662,662} %write{649,649}
local	float	___698_coat_affected_roughness_fg_tmp	%read{651,651} %write{650,650}
local	float	___698_coat_affected_roughness_out	%read{669,669} %write{651,651}
local	vector	___698_tangent_rotate_normalize_out	%read{691,691} %write{652,652}
local	float	___698_coat_affected_transmission_roughness_fg_tmp	%read{654,654} %write{653,653}
local	float	___698_coat_affected_transmission_roughness_out	%read{698,698} %write{654,654}
local	float	___698_coat_gamma_in2_tmp	%read{656,656} %write{655,655}
local	float	___698_coat_gamma_out	%read{716,717} %write{656,656}
local	float	___698_coat_ior_to_F0_out	%read{719,719} %write{657,657}
local	float	___698_coat_tangent_value2_tmp	%read{659,659} %write{658,658}
local	vector	___698_coat_tangent_out	%read{734,734} %write{662,664}
local	float	___698_main_roughness_out.x	%read{682,750} %write{666,685} %mystruct{___698_main_roughness_out} %mystructfield{0}
local	float	___698_main_roughness_out.y	%read{684,750} %write{667,686} %mystruct{___698_main_roughness_out} %mystructfield{1}
local	float	___698_main_tangent_value2_tmp	%read{688,688} %write{687,687}
local	vector	___698_main_tangent_out	%read{738,762} %write{691,693}
local	float	___698_transmission_roughness_out.x	%read{711,762} %write{695,714} %mystruct{___698_transmission_roughness_out} %mystructfield{0}
local	float	___698_transmission_roughness_out.y	%read{713,762} %write{696,715} %mystruct{___698_transmission_roughness_out} %mystructfield{1}
local	color	___698_coat_affected_subsurface_color_out	%read{767,771} %write{716,716}
local	color	___698_coat_affected_diffuse_color_out	%read{778,778} %write{717,717}
local	float	___698_one_minus_coat_ior_to_F0_in1_tmp	%read{719,719} %write{718,718}
local	float	___698_one_minus_coat_ior_to_F0_out	%read{722,722} %write{719,719}
local	color	___698_emission_color0_out	%read{812,812} %write{720,723}
local	closure color	___698_coat_bsdf_out	%read{798,798} %write{724,735}
local	float	___698_metal_bsdf_weight_tmp	%read{739,739} %write{736,736}
local	string	___698_metal_bsdf_distribution_tmp	%read{738,738} %write{737,737}
local	closure color	___698_metal_bsdf_out	%read{795,795} %write{739,739}
local	closure color	___698_specular_bsdf_out	%read{791,791} %write{740,751}
local	closure color	___698_transmission_bsdf_out	%read{789,789} %write{752,763}
local	closure color	___698_sheen_bsdf_out	%read{785,785} %write{765,765}
local	float	___698_translucent_bsdf_weight_tmp	%read{768,768} %write{766,766}
local	closure color	___698_translucent_bsdf_out	%read{776,776} %write{768,768}
local	closure color	___698_subsurface_bsdf_out	%read{775,775} %write{769,772}
local	closure color	___698_selected_subsurface_bsdf_out	%read{783,783} %write{777,777}
local	closure color	___698_diffuse_bsdf_out	%read{782,782} %write{779,779}
local	closure color	___698_subsurface_mix_out	%read{785,785} %write{784,784}
local	closure color	___698_sheen_layer_out	%read{788,788} %write{785,785}
local	closure color	___698_transmission_mix_out	%read{791,791} %write{790,790}
local	closure color	___698_specular_layer_out	%read{794,794} %write{791,791}
local	closure color	___698_metalness_mix_out	%read{797,797} %write{796,796}
local	closure color	___698_thin_film_layer_attenuated_out	%read{798,798} %write{797,797}
local	closure color	___698_coat_layer_out	%read{823,823} %write{798,798}
local	closure color	___698_emission_edf_out	%read{800,816} %write{799,799}
local	closure color	___698_coat_tinted_emission_edf_out	%read{813,813} %write{800,800}
local	closure color	___698_coat_emission_edf_out	%read{817,817} %write{801,813}
local	closure color	___698_blended_coat_emission_edf_out	%read{824,824} %write{818,818}
local	closure color	___698_shader_constructor_out.bsdf	%read{829,829} %write{819,823} %mystruct{___698_shader_constructor_out} %mystructfield{0}
local	closure color	___698_shader_constructor_out.edf	%read{830,830} %write{820,824} %mystruct{___698_shader_constructor_out} %mystructfield{1}
local	float	___698_shader_constructor_out.opacity	%read{828,831} %write{821,828} %mystruct{___698_shader_constructor_out} %mystructfield{2}
local	float	___699_opacity_weight	%read{837,839} %write{835,835}
local	closure color	null_closure	%read{316,317} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{381,778} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{443,693} %write{7,7}
local	float	geomprop_UV0_out1.x	%read{13,117} %write{8,8} %mystruct{geomprop_UV0_out1} %mystructfield{0}
local	float	geomprop_UV0_out1.y	%read{14,118} %write{9,9} %mystruct{geomprop_UV0_out1} %mystructfield{1}
local	color	grid_color3_out	%read{315,315} %write{10,113}
local	color	crosshatch_color3_out	%read{315,315} %write{114,314}
local	color	union_color3_out	%read{344,363} %write{315,315}
local	closure color	SR_test_union_out.bsdf	%read{836,836} %write{316,829} %mystruct{SR_test_union_out} %mystructfield{0}
local	closure color	SR_test_union_out.edf	%read{836,836} %write{317,830} %mystruct{SR_test_union_out} %mystructfield{1}
local	float	SR_test_union_out.opacity	%read{834,834} %write{318,831} %mystruct{SR_test_union_out} %mystructfield{2}
local	closure color	test_union_out	%read{842,842} %write{841,841}
const	int	$const1	0		%read{0,646} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,593} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,632} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,835} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	color	$const6	0 0 0		%read{10,812} %write{2147483647,-1}
const	string	$const7	"NG_grid_color3"		%read{11,11} %write{2147483647,-1}
const	string	$const8	"__operator__mul__"		%read{12,283} %write{2147483647,-1}
const	float	$const9	1		%read{15,839} %write{2147483647,-1}
const	string	$const10	"__operator__sub__"		%read{17,288} %write{2147483647,-1}
const	string	$const11	"NG_separate2_vector2"		%read{22,124} %write{2147483647,-1}
const	string	$const12	"mx_extract"		%read{24,647} %write{2147483647,-1}
temp	int	$tmp5	%read{26,26} %write{25,25}
const	int	$const13	1		%read{31,629} %write{2147483647,-1}
temp	int	$tmp6	%read{34,34} %write{33,33}
const	float	$const14	2		%read{41,184} %write{2147483647,-1}
const	string	$const15	"mod"		%read{42,179} %write{2147483647,-1}
temp	float	$tmp7	%read{45,45} %write{44,44}
temp	float	$tmp8	%read{44,44} %write{43,43}
temp	float	$tmp9	%read{46,46} %write{45,45}
temp	float	$tmp10	%read{51,51} %write{50,50}
temp	float	$tmp11	%read{50,50} %write{49,49}
temp	float	$tmp12	%read{52,52} %write{51,51}
const	float	$const16	0.5		%read{54,156} %write{2147483647,-1}
temp	int	$tmp13	%read{58,58} %write{56,56}
const	string	$const17	"mx_ternary"		%read{57,689} %write{2147483647,-1}
temp	int	$tmp14	%read{71,71} %write{69,69}
temp	float	$tmp15	%read{81,81} %write{80,80}
temp	float	$tmp16	%read{80,80} %write{79,79}
temp	float	$tmp17	%read{82,82} %write{81,81}
temp	int	$tmp18	%read{87,87} %write{85,85}
temp	int	$tmp19	%read{101,101} %write{99,99}
const	string	$const18	"NG_convert_float_color3"		%read{110,721} %write{2147483647,-1}
const	string	$const19	"NG_crosshatch_color3"		%read{115,115} %write{2147483647,-1}
temp	int	$tmp20	%read{128,128} %write{127,127}
temp	int	$tmp21	%read{136,136} %write{135,135}
temp	float	$tmp22	%read{147,147} %write{146,146}
temp	float	$tmp23	%read{146,146} %write{145,145}
temp	float	$tmp24	%read{148,148} %write{147,147}
temp	float	$tmp25	%read{153,153} %write{152,152}
temp	float	$tmp26	%read{152,152} %write{151,151}
temp	float	$tmp27	%read{154,154} %write{153,153}
temp	int	$tmp28	%read{160,160} %write{158,158}
temp	int	$tmp29	%read{173,173} %write{171,171}
temp	float	$tmp30	%read{182,182} %write{181,181}
temp	float	$tmp31	%read{181,181} %write{180,180}
temp	float	$tmp32	%read{183,183} %write{182,182}
temp	float	$tmp33.x	%read{199,199} %write{191,191}
temp	float	$tmp33.y	%read{200,200} %write{192,192}
temp	float	$tmp34.x	%read{202,205} %write{193,193}
temp	float	$tmp34.y	%read{203,206} %write{194,194}
temp	float	$tmp35.x	%read{202,202} %write{195,195}
temp	float	$tmp35.y	%read{203,203} %write{196,196}
const	float	$const20	-1		%read{195,255} %write{2147483647,-1}
const	string	$const21	"NG_line_float"		%read{197,256} %write{2147483647,-1}
const	string	$const22	"dot"		%read{207,270} %write{2147483647,-1}
temp	float	$tmp36	%read{210,210} %write{208,208}
temp	float	$tmp37	%read{210,210} %write{209,209}
temp	float	$tmp38	%read{214,214} %write{212,212}
temp	float	$tmp39	%read{214,214} %write{213,213}
const	string	$const23	"clamp"		%read{218,833} %write{2147483647,-1}
temp	float	$tmp40	%read{220,220} %write{219,219}
temp	float	$tmp41.x	%read{225,225} %write{222,222}
temp	float	$tmp41.y	%read{226,226} %write{223,223}
const	string	$const24	"NG_distance_vector2"		%read{228,287} %write{2147483647,-1}
const	string	$const25	"length"		%read{232,291} %write{2147483647,-1}
const	string	$const26	"hypot"		%read{233,292} %write{2147483647,-1}
temp	float	$tmp42	%read{236,236} %write{234,234}
temp	float	$tmp43	%read{236,236} %write{235,235}
temp	float	$tmp44	%read{237,237} %write{236,236}
temp	int	$tmp45	%read{243,243} %write{241,241}
temp	float	$tmp46.x	%read{258,258} %write{250,250}
temp	float	$tmp46.y	%read{259,259} %write{251,251}
temp	float	$tmp47.x	%read{261,264} %write{252,252}
temp	float	$tmp47.y	%read{262,265} %write{253,253}
temp	float	$tmp48.x	%read{261,261} %write{254,254}
temp	float	$tmp48.y	%read{262,262} %write{255,255}
temp	float	$tmp49	%read{269,269} %write{267,267}
temp	float	$tmp50	%read{269,269} %write{268,268}
temp	float	$tmp51	%read{273,273} %write{271,271}
temp	float	$tmp52	%read{273,273} %write{272,272}
temp	float	$tmp53	%read{279,279} %write{278,278}
temp	float	$tmp54.x	%read{284,284} %write{281,281}
temp	float	$tmp54.y	%read{285,285} %write{282,282}
temp	float	$tmp55	%read{295,295} %write{293,293}
temp	float	$tmp56	%read{295,295} %write{294,294}
temp	float	$tmp57	%read{296,296} %write{295,295}
temp	int	$tmp58	%read{302,302} %write{300,300}
const	string	$const27	"NG_standard_surface_surfaceshader_100"		%read{319,319} %write{2147483647,-1}
const	string	$const28	"mx_roughness_anisotropy"		%read{323,697} %write{2147483647,-1}
temp	float	$tmp59	%read{326,326} %write{324,324}
const	float	$const29	1e-08		%read{327,701} %write{2147483647,-1}
temp	float	$tmp60	%read{327,327} %write{326,326}
temp	int	$tmp61	%read{329,329} %write{328,328}
temp	float	$tmp62	%read{333,333} %write{332,332}
const	float	$const30	0.98		%read{331,705} %write{2147483647,-1}
temp	float	$tmp63	%read{332,332} %write{331,331}
temp	float	$tmp64	%read{334,334} %write{333,333}
temp	float	$tmp65	%read{336,336} %write{335,335}
const	float	$const31	360		%read{342,347} %write{2147483647,-1}
temp	color	$tmp66	%read{352,352} %write{351,351}
temp	float	$tmp67	%read{357,357} %write{356,356}
temp	float	$tmp68	%read{360,360} %write{359,359}
temp	color	$tmp69	%read{363,363} %write{362,362}
const	color	$const32	1 1 1		%read{364,733} %write{2147483647,-1}
const	color	$const33	0.272229 0.674082 0.053689		%read{373,373} %write{2147483647,-1}
const	string	$const34	"mx_luminance_color3"		%read{372,372} %write{2147483647,-1}
temp	float	$tmp71	%read{374,374} %write{373,373}
const	vector	$const35	0 0 0		%read{375,521} %write{2147483647,-1}
const	string	$const36	"mx_rotate_vector3"		%read{376,522} %write{2147483647,-1}
const	string	$const37	"radians"		%read{377,523} %write{2147483647,-1}
const	float	$const38	3.1415927		%read{378,524} %write{2147483647,-1}
const	float	$const39	180		%read{378,524} %write{2147483647,-1}
temp	float	$tmp72	%read{379,379} %write{378,378}
const	string	$const40	"rotationMatrix"		%read{380,526} %write{2147483647,-1}
temp	float	$tmp73	%read{386,386} %write{385,385}
temp	float	$tmp74	%read{388,388} %write{386,386}
temp	float	$tmp75	%read{388,388} %write{387,387}
temp	float	$tmp76	%read{389,389} %write{388,388}
temp	float	$tmp77	%read{442,442} %write{389,389}
temp	float	$tmp78	%read{391,391} %write{390,390}
temp	float	$tmp79	%read{393,393} %write{391,391}
temp	float	$tmp80	%read{393,393} %write{392,392}
temp	float	$tmp81	%read{396,396} %write{393,393}
temp	float	$tmp82	%read{395,395} %write{394,394}
temp	float	$tmp83	%read{396,396} %write{395,395}
temp	float	$tmp84	%read{442,442} %write{396,396}
temp	float	$tmp85	%read{398,398} %write{397,397}
temp	float	$tmp86	%read{400,400} %write{398,398}
temp	float	$tmp87	%read{400,400} %write{399,399}
temp	float	$tmp88	%read{403,403} %write{400,400}
temp	float	$tmp89	%read{402,402} %write{401,401}
temp	float	$tmp90	%read{403,403} %write{402,402}
temp	float	$tmp91	%read{442,442} %write{403,403}
temp	float	$tmp92	%read{405,405} %write{404,404}
temp	float	$tmp93	%read{407,407} %write{405,405}
temp	float	$tmp94	%read{407,407} %write{406,406}
temp	float	$tmp95	%read{410,410} %write{407,407}
temp	float	$tmp96	%read{409,409} %write{408,408}
temp	float	$tmp97	%read{410,410} %write{409,409}
temp	float	$tmp98	%read{442,442} %write{410,410}
temp	float	$tmp99	%read{412,412} %write{411,411}
temp	float	$tmp100	%read{414,414} %write{412,412}
temp	float	$tmp101	%read{414,414} %write{413,413}
temp	float	$tmp102	%read{415,415} %write{414,414}
temp	float	$tmp103	%read{442,442} %write{415,415}
temp	float	$tmp104	%read{417,417} %write{416,416}
temp	float	$tmp105	%read{419,419} %write{417,417}
temp	float	$tmp106	%read{419,419} %write{418,418}
temp	float	$tmp107	%read{422,422} %write{419,419}
temp	float	$tmp108	%read{421,421} %write{420,420}
temp	float	$tmp109	%read{422,422} %write{421,421}
temp	float	$tmp110	%read{442,442} %write{422,422}
temp	float	$tmp111	%read{424,424} %write{423,423}
temp	float	$tmp112	%read{426,426} %write{424,424}
temp	float	$tmp113	%read{426,426} %write{425,425}
temp	float	$tmp114	%read{429,429} %write{426,426}
temp	float	$tmp115	%read{428,428} %write{427,427}
temp	float	$tmp116	%read{429,429} %write{428,428}
temp	float	$tmp117	%read{442,442} %write{429,429}
temp	float	$tmp118	%read{431,431} %write{430,430}
temp	float	$tmp119	%read{433,433} %write{431,431}
temp	float	$tmp120	%read{433,433} %write{432,432}
temp	float	$tmp121	%read{436,436} %write{433,433}
temp	float	$tmp122	%read{435,435} %write{434,434}
temp	float	$tmp123	%read{436,436} %write{435,435}
temp	float	$tmp124	%read{442,442} %write{436,436}
temp	float	$tmp125	%read{438,438} %write{437,437}
temp	float	$tmp126	%read{440,440} %write{438,438}
temp	float	$tmp127	%read{440,440} %write{439,439}
temp	float	$tmp128	%read{441,441} %write{440,440}
temp	float	$tmp129	%read{442,442} %write{441,441}
temp	float	$tmp130.x	%read{449,482} %write{443,443}
temp	float	$tmp130.y	%read{451,484} %write{444,444}
temp	float	$tmp130.z	%read{454,487} %write{445,445}
temp	float	$tmp130.w	%read{457,490} %write{446,446}
temp	float	$tmp131	%read{449,449} %write{448,448}
temp	float	$tmp132	%read{452,452} %write{449,449}
temp	float	$tmp133	%read{451,451} %write{450,450}
temp	float	$tmp134	%read{452,452} %write{451,451}
temp	float	$tmp135	%read{455,455} %write{452,452}
temp	float	$tmp136	%read{454,454} %write{453,453}
temp	float	$tmp137	%read{455,455} %write{454,454}
temp	float	$tmp138	%read{458,458} %write{455,455}
const	int	$const41	3		%read{456,635} %write{2147483647,-1}
temp	float	$tmp139	%read{457,457} %write{456,456}
temp	float	$tmp140	%read{458,458} %write{457,457}
temp	float	$tmp141	%read{460,460} %write{459,459}
temp	float	$tmp142	%read{463,463} %write{460,460}
temp	float	$tmp143	%read{462,462} %write{461,461}
temp	float	$tmp144	%read{463,463} %write{462,462}
temp	float	$tmp145	%read{466,466} %write{463,463}
temp	float	$tmp146	%read{465,465} %write{464,464}
temp	float	$tmp147	%read{466,466} %write{465,465}
temp	float	$tmp148	%read{469,469} %write{466,466}
temp	float	$tmp149	%read{468,468} %write{467,467}
temp	float	$tmp150	%read{469,469} %write{468,468}
temp	float	$tmp151	%read{471,471} %write{470,470}
temp	float	$tmp152	%read{474,474} %write{471,471}
temp	float	$tmp153	%read{473,473} %write{472,472}
temp	float	$tmp154	%read{474,474} %write{473,473}
temp	float	$tmp155	%read{477,477} %write{474,474}
temp	float	$tmp156	%read{476,476} %write{475,475}
temp	float	$tmp157	%read{477,477} %write{476,476}
temp	float	$tmp158	%read{480,480} %write{477,477}
temp	float	$tmp159	%read{479,479} %write{478,478}
temp	float	$tmp160	%read{480,480} %write{479,479}
temp	float	$tmp161	%read{482,482} %write{481,481}
temp	float	$tmp162	%read{485,485} %write{482,482}
temp	float	$tmp163	%read{484,484} %write{483,483}
temp	float	$tmp164	%read{485,485} %write{484,484}
temp	float	$tmp165	%read{488,488} %write{485,485}
temp	float	$tmp166	%read{487,487} %write{486,486}
temp	float	$tmp167	%read{488,488} %write{487,487}
temp	float	$tmp168	%read{491,491} %write{488,488}
temp	float	$tmp169	%read{490,490} %write{489,489}
temp	float	$tmp170	%read{491,491} %write{490,490}
const	string	$const42	"mx_artistic_ior"		%read{495,495} %write{2147483647,-1}
temp	color	$tmp171	%read{500,500} %write{496,496}
const	float	$const43	0.99		%read{497,497} %write{2147483647,-1}
temp	color	$tmp172	%read{499,499} %write{497,497}
temp	color	$tmp173	%read{500,500} %write{499,499}
temp	color	$tmp174	%read{504,504} %write{502,502}
temp	color	$tmp175	%read{504,504} %write{503,503}
temp	color	$tmp176	%read{507,507} %write{505,505}
temp	color	$tmp177	%read{507,507} %write{506,506}
temp	color	$tmp178	%read{512,512} %write{511,511}
temp	color	$tmp179	%read{514,514} %write{512,512}
temp	color	$tmp180	%read{514,514} %write{513,513}
temp	color	$tmp181	%read{516,516} %write{514,514}
temp	color	$tmp182	%read{516,516} %write{515,515}
temp	color	$tmp183	%read{518,518} %write{517,517}
temp	float	$tmp184	%read{525,525} %write{524,524}
temp	float	$tmp185	%read{532,532} %write{531,531}
temp	float	$tmp186	%read{534,534} %write{532,532}
temp	float	$tmp187	%read{534,534} %write{533,533}
temp	float	$tmp188	%read{535,535} %write{534,534}
temp	float	$tmp189	%read{588,588} %write{535,535}
temp	float	$tmp190	%read{537,537} %write{536,536}
temp	float	$tmp191	%read{539,539} %write{537,537}
temp	float	$tmp192	%read{539,539} %write{538,538}
temp	float	$tmp193	%read{542,542} %write{539,539}
temp	float	$tmp194	%read{541,541} %write{540,540}
temp	float	$tmp195	%read{542,542} %write{541,541}
temp	float	$tmp196	%read{588,588} %write{542,542}
temp	float	$tmp197	%read{544,544} %write{543,543}
temp	float	$tmp198	%read{546,546} %write{544,544}
temp	float	$tmp199	%read{546,546} %write{545,545}
temp	float	$tmp200	%read{549,549} %write{546,546}
temp	float	$tmp201	%read{548,548} %write{547,547}
temp	float	$tmp202	%read{549,549} %write{548,548}
temp	float	$tmp203	%read{588,588} %write{549,549}
temp	float	$tmp204	%read{551,551} %write{550,550}
temp	float	$tmp205	%read{553,553} %write{551,551}
temp	float	$tmp206	%read{553,553} %write{552,552}
temp	float	$tmp207	%read{556,556} %write{553,553}
temp	float	$tmp208	%read{555,555} %write{554,554}
temp	float	$tmp209	%read{556,556} %write{555,555}
temp	float	$tmp210	%read{588,588} %write{556,556}
temp	float	$tmp211	%read{558,558} %write{557,557}
temp	float	$tmp212	%read{560,560} %write{558,558}
temp	float	$tmp213	%read{560,560} %write{559,559}
temp	float	$tmp214	%read{561,561} %write{560,560}
temp	float	$tmp215	%read{588,588} %write{561,561}
temp	float	$tmp216	%read{563,563} %write{562,562}
temp	float	$tmp217	%read{565,565} %write{563,563}
temp	float	$tmp218	%read{565,565} %write{564,564}
temp	float	$tmp219	%read{568,568} %write{565,565}
temp	float	$tmp220	%read{567,567} %write{566,566}
temp	float	$tmp221	%read{568,568} %write{567,567}
temp	float	$tmp222	%read{588,588} %write{568,568}
temp	float	$tmp223	%read{570,570} %write{569,569}
temp	float	$tmp224	%read{572,572} %write{570,570}
temp	float	$tmp225	%read{572,572} %write{571,571}
temp	float	$tmp226	%read{575,575} %write{572,572}
temp	float	$tmp227	%read{574,574} %write{573,573}
temp	float	$tmp228	%read{575,575} %write{574,574}
temp	float	$tmp229	%read{588,588} %write{575,575}
temp	float	$tmp230	%read{577,577} %write{576,576}
temp	float	$tmp231	%read{579,579} %write{577,577}
temp	float	$tmp232	%read{579,579} %write{578,578}
temp	float	$tmp233	%read{582,582} %write{579,579}
temp	float	$tmp234	%read{581,581} %write{580,580}
temp	float	$tmp235	%read{582,582} %write{581,581}
temp	float	$tmp236	%read{588,588} %write{582,582}
temp	float	$tmp237	%read{584,584} %write{583,583}
temp	float	$tmp238	%read{586,586} %write{584,584}
temp	float	$tmp239	%read{586,586} %write{585,585}
temp	float	$tmp240	%read{587,587} %write{586,586}
temp	float	$tmp241	%read{588,588} %write{587,587}
temp	float	$tmp242.x	%read{595,628} %write{589,589}
temp	float	$tmp242.y	%read{597,630} %write{590,590}
temp	float	$tmp242.z	%read{600,633} %write{591,591}
temp	float	$tmp242.w	%read{603,636} %write{592,592}
temp	float	$tmp243	%read{595,595} %write{594,594}
temp	float	$tmp244	%read{598,598} %write{595,595}
temp	float	$tmp245	%read{597,597} %write{596,596}
temp	float	$tmp246	%read{598,598} %write{597,597}
temp	float	$tmp247	%read{601,601} %write{598,598}
temp	float	$tmp248	%read{600,600} %write{599,599}
temp	float	$tmp249	%read{601,601} %write{600,600}
temp	float	$tmp250	%read{604,604} %write{601,601}
temp	float	$tmp251	%read{603,603} %write{602,602}
temp	float	$tmp252	%read{604,604} %write{603,603}
temp	float	$tmp253	%read{606,606} %write{605,605}
temp	float	$tmp254	%read{609,609} %write{606,606}
temp	float	$tmp255	%read{608,608} %write{607,607}
temp	float	$tmp256	%read{609,609} %write{608,608}
temp	float	$tmp257	%read{612,612} %write{609,609}
temp	float	$tmp258	%read{611,611} %write{610,610}
temp	float	$tmp259	%read{612,612} %write{611,611}
temp	float	$tmp260	%read{615,615} %write{612,612}
temp	float	$tmp261	%read{614,614} %write{613,613}
temp	float	$tmp262	%read{615,615} %write{614,614}
temp	float	$tmp263	%read{617,617} %write{616,616}
temp	float	$tmp264	%read{620,620} %write{617,617}
temp	float	$tmp265	%read{619,619} %write{618,618}
temp	float	$tmp266	%read{620,620} %write{619,619}
temp	float	$tmp267	%read{623,623} %write{620,620}
temp	float	$tmp268	%read{622,622} %write{621,621}
temp	float	$tmp269	%read{623,623} %write{622,622}
temp	float	$tmp270	%read{626,626} %write{623,623}
temp	float	$tmp271	%read{625,625} %write{624,624}
temp	float	$tmp272	%read{626,626} %write{625,625}
temp	float	$tmp273	%read{628,628} %write{627,627}
temp	float	$tmp274	%read{631,631} %write{628,628}
temp	float	$tmp275	%read{630,630} %write{629,629}
temp	float	$tmp276	%read{631,631} %write{630,630}
temp	float	$tmp277	%read{634,634} %write{631,631}
temp	float	$tmp278	%read{633,633} %write{632,632}
temp	float	$tmp279	%read{634,634} %write{633,633}
temp	float	$tmp280	%read{637,637} %write{634,634}
temp	float	$tmp281	%read{636,636} %write{635,635}
temp	float	$tmp282	%read{637,637} %write{636,636}
temp	float	$tmp283	%read{643,643} %write{642,642}
temp	int	$tmp284	%read{661,661} %write{659,659}
temp	float	$tmp285	%read{671,671} %write{669,669}
temp	float	$tmp286	%read{672,672} %write{671,671}
temp	int	$tmp287	%read{674,674} %write{673,673}
temp	float	$tmp288	%read{678,678} %write{677,677}
temp	float	$tmp289	%read{677,677} %write{676,676}
temp	float	$tmp290	%read{679,679} %write{678,678}
temp	float	$tmp291	%read{681,681} %write{680,680}
temp	int	$tmp292	%read{690,690} %write{688,688}
temp	float	$tmp293	%read{700,700} %write{698,698}
temp	float	$tmp294	%read{701,701} %write{700,700}
temp	int	$tmp295	%read{703,703} %write{702,702}
temp	float	$tmp296	%read{707,707} %write{706,706}
temp	float	$tmp297	%read{706,706} %write{705,705}
temp	float	$tmp298	%read{708,708} %write{707,707}
temp	float	$tmp299	%read{710,710} %write{709,709}
const	float	$const44	1.5		%read{734,762} %write{2147483647,-1}
const	string	$const45	"ggx"		%read{734,762} %write{2147483647,-1}
const	string	$const46	"R"		%read{726,758} %write{2147483647,-1}
const	string	$const47	"mx_dielectric_bsdf"		%read{725,753} %write{2147483647,-1}
const	string	$const48	"T"		%read{726,758} %write{2147483647,-1}
temp	int	$tmp301	%read{727,727} %write{726,726}
temp	int	$tmp302	%read{731,731} %write{730,730}
temp	closure color	$tmp303	%read{735,735} %write{734,734}
const	string	$const49	"thinfilm_thickness"		%read{734,762} %write{2147483647,-1}
const	string	$const50	"thinfilm_ior"		%read{734,762} %write{2147483647,-1}
const	string	$const51	"dielectric_bsdf"		%read{734,762} %write{2147483647,-1}
temp	closure color	$tmp304	%read{739,739} %write{738,738}
const	string	$const52	"conductor_bsdf"		%read{738,738} %write{2147483647,-1}
temp	int	$tmp305	%read{743,743} %write{742,742}
temp	int	$tmp306	%read{747,747} %write{746,746}
temp	closure color	$tmp307	%read{751,751} %write{750,750}
temp	int	$tmp308	%read{755,755} %write{754,754}
temp	int	$tmp309	%read{759,759} %write{758,758}
temp	closure color	$tmp310	%read{763,763} %write{762,762}
temp	closure color	$tmp311	%read{765,765} %write{764,764}
const	string	$const53	"sheen_bsdf"		%read{764,764} %write{2147483647,-1}
temp	closure color	$tmp312	%read{768,768} %write{767,767}
const	string	$const54	"translucent_bsdf"		%read{767,767} %write{2147483647,-1}
const	string	$const55	"mx_subsurface_bsdf"		%read{770,770} %write{2147483647,-1}
temp	color	$tmp313	%read{772,772} %write{771,771}
const	string	$const56	"subsurface_bssrdf"		%read{772,772} %write{2147483647,-1}
const	string	$const57	"mix"		%read{773,814} %write{2147483647,-1}
temp	float	$tmp314	%read{775,775} %write{774,774}
temp	closure color	$tmp315	%read{777,777} %write{775,775}
temp	closure color	$tmp316	%read{777,777} %write{776,776}
temp	closure color	$tmp317	%read{779,779} %write{778,778}
const	string	$const58	"oren_nayar_diffuse_bsdf"		%read{778,778} %write{2147483647,-1}
temp	float	$tmp318	%read{782,782} %write{781,781}
temp	closure color	$tmp319	%read{784,784} %write{782,782}
temp	closure color	$tmp320	%read{784,784} %write{783,783}
const	string	$const59	"layer"		%read{785,798} %write{2147483647,-1}
temp	float	$tmp321	%read{788,788} %write{787,787}
temp	closure color	$tmp322	%read{790,790} %write{788,788}
temp	closure color	$tmp323	%read{790,790} %write{789,789}
temp	float	$tmp324	%read{794,794} %write{793,793}
temp	closure color	$tmp325	%read{796,796} %write{794,794}
temp	closure color	$tmp326	%read{796,796} %write{795,795}
const	string	$const60	"uniform_edf"		%read{799,799} %write{2147483647,-1}
const	float	$const61	5		%read{811,811} %write{2147483647,-1}
const	string	$const62	"mx_generalized_schlick_edf"		%read{802,802} %write{2147483647,-1}
temp	float	$tmp328	%read{805,805} %write{804,804}
temp	vector	$tmp329	%read{804,804} %write{803,803}
const	string	$const63	"mx_fresnel_schlick"		%read{806,806} %write{2147483647,-1}
temp	float	$tmp330	%read{809,809} %write{807,807}
temp	float	$tmp331	%read{810,810} %write{809,809}
temp	float	$tmp332	%read{812,812} %write{811,811}
temp	float	$tmp333	%read{816,816} %write{815,815}
temp	closure color	$tmp334	%read{818,818} %write{816,816}
temp	closure color	$tmp335	%read{818,818} %write{817,817}
const	string	$const64	"mx_surface"		%read{822,822} %write{2147483647,-1}
temp	float	$tmp336	%read{827,827} %write{826,826}
const	string	$const65	"mx_surfacematerial"		%read{832,832} %write{2147483647,-1}
temp	float	$tmp337	%read{835,835} %write{834,834}
temp	closure color	$tmp338	%read{837,837} %write{836,836}
temp	closure color	$tmp339	%read{841,841} %write{837,837}
temp	closure color	$tmp340	%read{840,840} %write{838,838}
const	string	$const66	"transparent"		%read{838,838} %write{2147483647,-1}
temp	float	$tmp341	%read{840,840} %write{839,839}
temp	closure color	$tmp342	%read{841,841} %write{840,840}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:825
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{825} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:826
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{826} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:827
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{827} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:828
#     color grid_color3_out = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{828} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:829
#     NG_grid_color3(geomprop_UV0_out1, grid_color3_uvtiling, grid_color3_uvoffset, grid_color3_thickness, grid_color3_staggered, grid_color3_out);
	assign		grid_color3_out $const6 	%line{829} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:830
#     color crosshatch_color3_out = color(0.0);
	functioncall	$const7 114 	%line{830} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 15 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_texcoord_scale_out.x geomprop_UV0_out1.x grid_color3_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_texcoord_scale_out.y geomprop_UV0_out1.y grid_color3_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:37
#     float thick_to_size_out = thick_to_size_in1_tmp - thickness;
	assign		___671_thick_to_size_in1_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:38
#     vector2 texcoord_bias_out = texcoord_scale_out - uvoffset;
	sub		___671_thick_to_size_out ___671_thick_to_size_in1_tmp grid_color3_thickness 	%line{38} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 20 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_texcoord_bias_out.x ___671_texcoord_scale_out.x grid_color3_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_texcoord_bias_out.y ___671_texcoord_scale_out.y grid_color3_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:40
#     float texcoord_bias_separate_outy = 0.0;
	assign		___671_texcoord_bias_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{40} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:41
#     NG_separate2_vector2(texcoord_bias_out, texcoord_bias_separate_outx, texcoord_bias_separate_outy);
	assign		___671_texcoord_bias_separate_outy $const5 	%line{41} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:42
#     float mod_Y_row_in2_tmp = 2.000000;
	functioncall	$const11 41 	%line{42} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 31 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp5 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp5 29 31 	%argrw{"r"}
	assign		___669_N_extract_0_out ___671_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___671_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 39 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp6 37 39 	%argrw{"r"}
	assign		___669_N_extract_1_out ___671_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___671_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:24
#     outy = N_extract_1_out;
	assign		___671_texcoord_bias_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:25
# }
	assign		___671_texcoord_bias_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:43
#     float mod_Y_row_out = mod(texcoord_bias_separate_outy, mod_Y_row_in2_tmp);
	assign		___671_mod_Y_row_in2_tmp $const14 	%line{43} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:44
#     float mod_Y_in2_tmp = 1.000000;
	functioncall	$const15 47 	%line{44} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp8 ___671_texcoord_bias_separate_outy ___671_mod_Y_row_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 ___671_mod_Y_row_in2_tmp $tmp7 	%argrw{"wrr"}
	sub		___671_mod_Y_row_out ___671_texcoord_bias_separate_outy $tmp9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:45
#     float mod_Y_out = mod(texcoord_bias_separate_outy, mod_Y_in2_tmp);
	assign		___671_mod_Y_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:46
#     float alt_rows_shift_value2_tmp = 1.000000;
	functioncall	$const15 53 	%line{46} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp11 ___671_texcoord_bias_separate_outy ___671_mod_Y_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 ___671_mod_Y_in2_tmp $tmp10 	%argrw{"wrr"}
	sub		___671_mod_Y_out ___671_texcoord_bias_separate_outy $tmp12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:47
#     float alt_rows_shift_in1_tmp = 0.500000;
	assign		___671_alt_rows_shift_value2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{47} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:48
#     float alt_rows_shift_in2_tmp = 0.000000;
	assign		___671_alt_rows_shift_in1_tmp $const16 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:49
#     float alt_rows_shift_out = mx_ternary(mod_Y_row_out > alt_rows_shift_value2_tmp, alt_rows_shift_in1_tmp, alt_rows_shift_in2_tmp);
	assign		___671_alt_rows_shift_in2_tmp $const5 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:50
#     float mody_2_in2_tmp = 2.000000;
	gt		$tmp13 ___671_mod_Y_row_out ___671_alt_rows_shift_value2_tmp 	%line{50} %argrw{"wrr"}
	functioncall	$const17 63 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp13 61 63 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_alt_rows_shift_out ___671_alt_rows_shift_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_alt_rows_shift_out ___671_alt_rows_shift_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:51
#     float mody_2_out = mod_Y_out * mody_2_in2_tmp;
	assign		___671_mody_2_in2_tmp $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{51} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:52
#     float shift_X_out = texcoord_bias_separate_outx + alt_rows_shift_out;
	mul		___671_mody_2_out ___671_mod_Y_out ___671_mody_2_in2_tmp 	%line{52} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:53
#     float subY_1_in2_tmp = 1.000000;
	add		___671_shift_X_out ___671_texcoord_bias_separate_outx ___671_alt_rows_shift_out 	%line{53} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:54
#     float subY_1_out = mody_2_out - subY_1_in2_tmp;
	assign		___671_subY_1_in2_tmp $const9 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:55
#     int stagger_selection_value2_tmp = 1;
	sub		___671_subY_1_out ___671_mody_2_out ___671_subY_1_in2_tmp 	%line{55} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:56
#     float stagger_selection_out = mx_ternary(staggered == stagger_selection_value2_tmp, shift_X_out, texcoord_bias_separate_outx);
	assign		___671_stagger_selection_value2_tmp $const13 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:57
#     float abs_Y_out = abs(subY_1_out);
	eq		$tmp14 grid_color3_staggered ___671_stagger_selection_value2_tmp 	%line{57} %argrw{"wrr"}
	functioncall	$const17 76 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp14 74 76 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_stagger_selection_out ___671_shift_X_out 	%argrw{"wr"}
	return
	assign		___671_stagger_selection_out ___671_texcoord_bias_separate_outx 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:58
#     float mod_X_in2_tmp = 1.000000;
	abs		___671_abs_Y_out ___671_subY_1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:59
#     float mod_X_out = mod(stagger_selection_out, mod_X_in2_tmp);
	assign		___671_mod_X_in2_tmp $const9 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:60
#     float Y_detect_in1_tmp = 0.000000;
	functioncall	$const15 83 	%line{60} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp16 ___671_stagger_selection_out ___671_mod_X_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp15 $tmp16 	%argrw{"wr"}
	mul		$tmp17 ___671_mod_X_in2_tmp $tmp15 	%argrw{"wrr"}
	sub		___671_mod_X_out ___671_stagger_selection_out $tmp17 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:61
#     float Y_detect_in2_tmp = 1.000000;
	assign		___671_Y_detect_in1_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{61} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:62
#     float Y_detect_out = mx_ternary(abs_Y_out > thick_to_size_out, Y_detect_in1_tmp, Y_detect_in2_tmp);
	assign		___671_Y_detect_in2_tmp $const9 	%line{62} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:63
#     float modx_2_in2_tmp = 2.000000;
	gt		$tmp18 ___671_abs_Y_out ___671_thick_to_size_out 	%line{63} %argrw{"wrr"}
	functioncall	$const17 92 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp18 90 92 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_Y_detect_out ___671_Y_detect_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_Y_detect_out ___671_Y_detect_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:64
#     float modx_2_out = mod_X_out * modx_2_in2_tmp;
	assign		___671_modx_2_in2_tmp $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{64} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:65
#     float subX_1_in2_tmp = 1.000000;
	mul		___671_modx_2_out ___671_mod_X_out ___671_modx_2_in2_tmp 	%line{65} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:66
#     float subX_1_out = modx_2_out - subX_1_in2_tmp;
	assign		___671_subX_1_in2_tmp $const9 	%line{66} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:67
#     float abs_X_out = abs(subX_1_out);
	sub		___671_subX_1_out ___671_modx_2_out ___671_subX_1_in2_tmp 	%line{67} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:68
#     float X_detect_in1_tmp = 0.000000;
	abs		___671_abs_X_out ___671_subX_1_out 	%line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:69
#     float X_detect_in2_tmp = 1.000000;
	assign		___671_X_detect_in1_tmp $const5 	%line{69} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:70
#     float X_detect_out = mx_ternary(abs_X_out > thick_to_size_out, X_detect_in1_tmp, X_detect_in2_tmp);
	assign		___671_X_detect_in2_tmp $const9 	%line{70} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:71
#     float min_out = min(X_detect_out, Y_detect_out);
	gt		$tmp19 ___671_abs_X_out ___671_thick_to_size_out 	%line{71} %argrw{"wrr"}
	functioncall	$const17 106 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp19 104 106 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_X_detect_out ___671_X_detect_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_X_detect_out ___671_X_detect_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:72
#     float inv_result_in1_tmp = 1.000000;
	min		___671_min_out ___671_X_detect_out ___671_Y_detect_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{72} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:73
#     float inv_result_out = inv_result_in1_tmp - min_out;
	assign		___671_inv_result_in1_tmp $const9 	%line{73} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:74
#     color to_rgb_out = color(0.0);
	sub		___671_inv_result_out ___671_inv_result_in1_tmp ___671_min_out 	%line{74} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:75
#     NG_convert_float_color3(inv_result_out, to_rgb_out);
	assign		___671_to_rgb_out $const6 	%line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:76
#     out = to_rgb_out;
	functioncall	$const18 113 	%line{76} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:30
#     out = combine_out;
	color		___670_combine_out ___671_inv_result_out ___671_inv_result_out ___671_inv_result_out 	%line{30} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:31
# }
	assign		___671_to_rgb_out ___670_combine_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:77
# }
	assign		grid_color3_out ___671_to_rgb_out 	%line{77} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:831
#     NG_crosshatch_color3(geomprop_UV0_out1, crosshatch_color3_uvtiling, crosshatch_color3_uvoffset, crosshatch_color3_thickness, crosshatch_color3_staggered, crosshatch_color3_out);
	assign		crosshatch_color3_out $const6 	%line{831} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:832
#     color union_color3_out = max(grid_color3_out, crosshatch_color3_out);
	functioncall	$const19 315 	%line{832} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 119 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___674_texcoord_scale_out.x geomprop_UV0_out1.x crosshatch_color3_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___674_texcoord_scale_out.y geomprop_UV0_out1.y crosshatch_color3_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 122 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___674_texcoord_bias_out.x ___674_texcoord_scale_out.x crosshatch_color3_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___674_texcoord_bias_out.y ___674_texcoord_scale_out.y crosshatch_color3_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:111
#     float texcoord_bias_separate_outy = 0.0;
	assign		___674_texcoord_bias_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{111} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:112
#     NG_separate2_vector2(texcoord_bias_out, texcoord_bias_separate_outx, texcoord_bias_separate_outy);
	assign		___674_texcoord_bias_separate_outy $const5 	%line{112} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:113
#     float mod_Y_row_in2_tmp = 2.000000;
	functioncall	$const11 143 	%line{113} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 133 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp20 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp20 131 133 	%argrw{"r"}
	assign		___669_N_extract_0_out ___674_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___674_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 141 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp21 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp21 139 141 	%argrw{"r"}
	assign		___669_N_extract_1_out ___674_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___674_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:24
#     outy = N_extract_1_out;
	assign		___674_texcoord_bias_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:25
# }
	assign		___674_texcoord_bias_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:114
#     float mod_Y_row_out = mod(texcoord_bias_separate_outy, mod_Y_row_in2_tmp);
	assign		___674_mod_Y_row_in2_tmp $const14 	%line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:115
#     float mod_Y_in2_tmp = 1.000000;
	functioncall	$const15 149 	%line{115} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp23 ___674_texcoord_bias_separate_outy ___674_mod_Y_row_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp22 $tmp23 	%argrw{"wr"}
	mul		$tmp24 ___674_mod_Y_row_in2_tmp $tmp22 	%argrw{"wrr"}
	sub		___674_mod_Y_row_out ___674_texcoord_bias_separate_outy $tmp24 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:116
#     float mod_Y_out = mod(texcoord_bias_separate_outy, mod_Y_in2_tmp);
	assign		___674_mod_Y_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:117
#     float alt_rows_shift_value2_tmp = 1.000000;
	functioncall	$const15 155 	%line{117} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp26 ___674_texcoord_bias_separate_outy ___674_mod_Y_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp25 $tmp26 	%argrw{"wr"}
	mul		$tmp27 ___674_mod_Y_in2_tmp $tmp25 	%argrw{"wrr"}
	sub		___674_mod_Y_out ___674_texcoord_bias_separate_outy $tmp27 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:118
#     float alt_rows_shift_in1_tmp = 0.500000;
	assign		___674_alt_rows_shift_value2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:119
#     float alt_rows_shift_in2_tmp = 0.000000;
	assign		___674_alt_rows_shift_in1_tmp $const16 	%line{119} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:120
#     float alt_rows_shift_out = mx_ternary(mod_Y_row_out > alt_rows_shift_value2_tmp, alt_rows_shift_in1_tmp, alt_rows_shift_in2_tmp);
	assign		___674_alt_rows_shift_in2_tmp $const5 	%line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:121
#     float mody_2_in2_tmp = 2.000000;
	gt		$tmp28 ___674_mod_Y_row_out ___674_alt_rows_shift_value2_tmp 	%line{121} %argrw{"wrr"}
	functioncall	$const17 165 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp28 163 165 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___674_alt_rows_shift_out ___674_alt_rows_shift_in1_tmp 	%argrw{"wr"}
	return
	assign		___674_alt_rows_shift_out ___674_alt_rows_shift_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:122
#     float mody_2_out = mod_Y_out * mody_2_in2_tmp;
	assign		___674_mody_2_in2_tmp $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:123
#     float shift_X_out = texcoord_bias_separate_outx + alt_rows_shift_out;
	mul		___674_mody_2_out ___674_mod_Y_out ___674_mody_2_in2_tmp 	%line{123} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:124
#     float subY_1_in2_tmp = 1.000000;
	add		___674_shift_X_out ___674_texcoord_bias_separate_outx ___674_alt_rows_shift_out 	%line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:125
#     float subY_1_out = mody_2_out - subY_1_in2_tmp;
	assign		___674_subY_1_in2_tmp $const9 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:126
#     int stagger_selection_value2_tmp = 1;
	sub		___674_subY_1_out ___674_mody_2_out ___674_subY_1_in2_tmp 	%line{126} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:127
#     float stagger_selection_out = mx_ternary(staggered == stagger_selection_value2_tmp, shift_X_out, texcoord_bias_separate_outx);
	assign		___674_stagger_selection_value2_tmp $const13 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:128
#     float mod_X_in2_tmp = 1.000000;
	eq		$tmp29 crosshatch_color3_staggered ___674_stagger_selection_value2_tmp 	%line{128} %argrw{"wrr"}
	functioncall	$const17 178 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp29 176 178 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___674_stagger_selection_out ___674_shift_X_out 	%argrw{"wr"}
	return
	assign		___674_stagger_selection_out ___674_texcoord_bias_separate_outx 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:129
#     float mod_X_out = mod(stagger_selection_out, mod_X_in2_tmp);
	assign		___674_mod_X_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{129} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:130
#     float modx_2_in2_tmp = 2.000000;
	functioncall	$const15 184 	%line{130} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp31 ___674_stagger_selection_out ___674_mod_X_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp30 $tmp31 	%argrw{"wr"}
	mul		$tmp32 ___674_mod_X_in2_tmp $tmp30 	%argrw{"wrr"}
	sub		___674_mod_X_out ___674_stagger_selection_out $tmp32 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:131
#     float modx_2_out = mod_X_out * modx_2_in2_tmp;
	assign		___674_modx_2_in2_tmp $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{131} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:132
#     float subX_1_in2_tmp = 1.000000;
	mul		___674_modx_2_out ___674_mod_X_out ___674_modx_2_in2_tmp 	%line{132} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:133
#     float subX_1_out = modx_2_out - subX_1_in2_tmp;
	assign		___674_subX_1_in2_tmp $const9 	%line{133} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:134
#     vector2 sample_vec_out = { subX_1_out,subY_1_out };
	sub		___674_subX_1_out ___674_modx_2_out ___674_subX_1_in2_tmp 	%line{134} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:135
#     float line_diag1_out = 0.0;
	assign		___674_sample_vec_out.x ___674_subX_1_out 	%line{135} %argrw{"wr"}
	assign		___674_sample_vec_out.y ___674_subY_1_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:136
#     NG_line_float(sample_vec_out, vector2(0.000000, 0.000000), thickness, vector2(1.000000, 1.000000), vector2(-1.000000, -1.000000), line_diag1_out);
	assign		___674_line_diag1_out $const5 	%line{136} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:137
#     float line_diag2_out = 0.0;
	assign		$tmp33.x $const5 	%line{137} %argrw{"wr"}
	assign		$tmp33.y $const5 	%argrw{"wr"}
	assign		$tmp34.x $const9 	%argrw{"wr"}
	assign		$tmp34.y $const9 	%argrw{"wr"}
	assign		$tmp35.x $const20 	%argrw{"wr"}
	assign		$tmp35.y $const20 	%argrw{"wr"}
	functioncall	$const21 249 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 201 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_delta_out.x ___674_sample_vec_out.x $tmp33.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_delta_out.y ___674_sample_vec_out.y $tmp33.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 204 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_b_a_out.x $tmp35.x $tmp34.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_b_a_out.y $tmp35.y $tmp34.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 207 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_p_a_out.x ___673_delta_out.x $tmp34.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_p_a_out.y ___673_delta_out.y $tmp34.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:92
#     float dot_pa_ba_out = dot(p_a_out, b_a_out);
	functioncall	$const22 211 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{92} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp36 ___673_b_a_out.x ___673_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp37 ___673_b_a_out.y ___673_b_a_out.y 	%argrw{"wrr"}
	add		___673_dot_ba_ba_out $tmp36 $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:93
#     float divide_dots_out = dot_pa_ba_out / dot_ba_ba_out;
	functioncall	$const22 215 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{93} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp38 ___673_p_a_out.x ___673_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp39 ___673_p_a_out.y ___673_b_a_out.y 	%argrw{"wrr"}
	add		___673_dot_pa_ba_out $tmp38 $tmp39 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:94
#     float clamp_low_tmp = 0.000000;
	div		___673_divide_dots_out ___673_dot_pa_ba_out ___673_dot_ba_ba_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{94} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:95
#     float clamp_high_tmp = 1.000000;
	assign		___673_clamp_low_tmp $const5 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:96
#     float clamp_out = clamp(divide_dots_out, clamp_low_tmp, clamp_high_tmp);
	assign		___673_clamp_high_tmp $const9 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:97
#     vector2 multiply_clamp_ba_out = b_a_out * clamp_out;
	functioncall	$const23 221 	%line{97} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 ___673_divide_dots_out ___673_clamp_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_clamp_out $tmp40 ___673_clamp_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 227 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp41.x ___673_clamp_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp41.y ___673_clamp_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 227 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___673_multiply_clamp_ba_out.x ___673_b_a_out.x $tmp41.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___673_multiply_clamp_ba_out.y ___673_b_a_out.y $tmp41.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:99
#     NG_distance_vector2(p_a_out, multiply_clamp_ba_out, distance_out);
	assign		___673_distance_out $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:100
#     float dist_comp_in1_tmp = 0.000000;
	functioncall	$const24 239 	%line{100} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 232 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_mtlxsubtract_out.x ___673_p_a_out.x ___673_multiply_clamp_ba_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_mtlxsubtract_out.y ___673_p_a_out.y ___673_multiply_clamp_ba_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:83
#     out = N_mtlxmagnitude_out;
	functioncall	$const25 238 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{83} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:202
#     return hypot (a.x, a.y);
	functioncall	$const26 238 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{202} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:101
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp42 ___672_N_mtlxsubtract_out.x ___672_N_mtlxsubtract_out.x 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{101} %argrw{"wrr"}
	mul		$tmp43 ___672_N_mtlxsubtract_out.y ___672_N_mtlxsubtract_out.y 	%argrw{"wrr"}
	add		$tmp44 $tmp42 $tmp43 	%argrw{"wrr"}
	sqrt		___672_N_mtlxmagnitude_out $tmp44 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:84
# }
	assign		___673_distance_out ___672_N_mtlxmagnitude_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:101
#     float dist_comp_in2_tmp = 1.000000;
	assign		___673_dist_comp_in1_tmp $const5 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:102
#     float dist_comp_out = mx_ternary(distance_out > radius, dist_comp_in1_tmp, dist_comp_in2_tmp);
	assign		___673_dist_comp_in2_tmp $const9 	%line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:103
#     out = dist_comp_out;
	gt		$tmp45 ___673_distance_out crosshatch_color3_thickness 	%line{103} %argrw{"wrr"}
	functioncall	$const17 248 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp45 246 248 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_dist_comp_out ___673_dist_comp_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_dist_comp_out ___673_dist_comp_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:104
# }
	assign		___674_line_diag1_out ___673_dist_comp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:138
#     NG_line_float(sample_vec_out, vector2(0.000000, 0.000000), thickness, vector2(-1.000000, 1.000000), vector2(1.000000, -1.000000), line_diag2_out);
	assign		___674_line_diag2_out $const5 	%line{138} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:139
#     float composite_diags_out = max(line_diag1_out, line_diag2_out);
	assign		$tmp46.x $const5 	%line{139} %argrw{"wr"}
	assign		$tmp46.y $const5 	%argrw{"wr"}
	assign		$tmp47.x $const20 	%argrw{"wr"}
	assign		$tmp47.y $const9 	%argrw{"wr"}
	assign		$tmp48.x $const9 	%argrw{"wr"}
	assign		$tmp48.y $const20 	%argrw{"wr"}
	functioncall	$const21 308 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 260 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_delta_out.x ___674_sample_vec_out.x $tmp46.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_delta_out.y ___674_sample_vec_out.y $tmp46.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 263 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_b_a_out.x $tmp48.x $tmp47.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_b_a_out.y $tmp48.y $tmp47.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 266 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_p_a_out.x ___673_delta_out.x $tmp47.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_p_a_out.y ___673_delta_out.y $tmp47.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:92
#     float dot_pa_ba_out = dot(p_a_out, b_a_out);
	functioncall	$const22 270 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{92} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp49 ___673_b_a_out.x ___673_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp50 ___673_b_a_out.y ___673_b_a_out.y 	%argrw{"wrr"}
	add		___673_dot_ba_ba_out $tmp49 $tmp50 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:93
#     float divide_dots_out = dot_pa_ba_out / dot_ba_ba_out;
	functioncall	$const22 274 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{93} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp51 ___673_p_a_out.x ___673_b_a_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp52 ___673_p_a_out.y ___673_b_a_out.y 	%argrw{"wrr"}
	add		___673_dot_pa_ba_out $tmp51 $tmp52 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:94
#     float clamp_low_tmp = 0.000000;
	div		___673_divide_dots_out ___673_dot_pa_ba_out ___673_dot_ba_ba_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{94} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:95
#     float clamp_high_tmp = 1.000000;
	assign		___673_clamp_low_tmp $const5 	%line{95} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:96
#     float clamp_out = clamp(divide_dots_out, clamp_low_tmp, clamp_high_tmp);
	assign		___673_clamp_high_tmp $const9 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:97
#     vector2 multiply_clamp_ba_out = b_a_out * clamp_out;
	functioncall	$const23 280 	%line{97} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp53 ___673_divide_dots_out ___673_clamp_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___673_clamp_out $tmp53 ___673_clamp_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 286 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp54.x ___673_clamp_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp54.y ___673_clamp_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const8 286 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___673_multiply_clamp_ba_out.x ___673_b_a_out.x $tmp54.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___673_multiply_clamp_ba_out.y ___673_b_a_out.y $tmp54.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:99
#     NG_distance_vector2(p_a_out, multiply_clamp_ba_out, distance_out);
	assign		___673_distance_out $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{99} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:100
#     float dist_comp_in1_tmp = 0.000000;
	functioncall	$const24 298 	%line{100} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:839
# 
	functioncall	$const10 291 	%line{839} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___672_N_mtlxsubtract_out.x ___673_p_a_out.x ___673_multiply_clamp_ba_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___672_N_mtlxsubtract_out.y ___673_p_a_out.y ___673_multiply_clamp_ba_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:83
#     out = N_mtlxmagnitude_out;
	functioncall	$const25 297 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{83} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:202
#     return hypot (a.x, a.y);
	functioncall	$const26 297 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{202} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:101
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp55 ___672_N_mtlxsubtract_out.x ___672_N_mtlxsubtract_out.x 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{101} %argrw{"wrr"}
	mul		$tmp56 ___672_N_mtlxsubtract_out.y ___672_N_mtlxsubtract_out.y 	%argrw{"wrr"}
	add		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	sqrt		___672_N_mtlxmagnitude_out $tmp57 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:84
# }
	assign		___673_distance_out ___672_N_mtlxmagnitude_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{84} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:101
#     float dist_comp_in2_tmp = 1.000000;
	assign		___673_dist_comp_in1_tmp $const5 	%line{101} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:102
#     float dist_comp_out = mx_ternary(distance_out > radius, dist_comp_in1_tmp, dist_comp_in2_tmp);
	assign		___673_dist_comp_in2_tmp $const9 	%line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:103
#     out = dist_comp_out;
	gt		$tmp58 ___673_distance_out crosshatch_color3_thickness 	%line{103} %argrw{"wrr"}
	functioncall	$const17 307 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp58 305 307 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_dist_comp_out ___673_dist_comp_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_dist_comp_out ___673_dist_comp_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:104
# }
	assign		___674_line_diag2_out ___673_dist_comp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{104} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:140
#     float max_out = max(composite_diags_out, composite_diags_out);
	max		___674_composite_diags_out ___674_line_diag1_out ___674_line_diag2_out 	%line{140} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:141
#     color to_rgb_out = color(0.0);
	max		___674_max_out ___674_composite_diags_out ___674_composite_diags_out 	%line{141} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:142
#     NG_convert_float_color3(max_out, to_rgb_out);
	assign		___674_to_rgb_out $const6 	%line{142} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:143
#     out = to_rgb_out;
	functioncall	$const18 314 	%line{143} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:30
#     out = combine_out;
	color		___670_combine_out ___674_max_out ___674_max_out ___674_max_out 	%line{30} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:31
# }
	assign		___674_to_rgb_out ___670_combine_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:144
# }
	assign		crosshatch_color3_out ___674_to_rgb_out 	%line{144} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:833
#     surfaceshader SR_test_union_out = surfaceshader(null_closure, null_closure, 1.0);
	max		union_color3_out grid_color3_out crosshatch_color3_out 	%line{833} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:834
#     NG_standard_surface_surfaceshader_100(SR_test_union_base, union_color3_out, SR_test_union_diffuse_roughness, SR_test_union_metalness, SR_test_union_specular, SR_test_union_specular_color, SR_test_union_specular_roughness, SR_test_union_specular_IOR, SR_test_union_specular_anisotropy, SR_test_union_specular_rotation, SR_test_union_transmission, SR_test_union_transmission_color, SR_test_union_transmission_depth, SR_test_union_transmission_scatter, SR_test_union_transmission_scatter_anisotropy, SR_test_union_transmission_dispersion, SR_test_union_transmission_extra_roughness, SR_test_union_subsurface, SR_test_union_subsurface_color, SR_test_union_subsurface_radius, SR_test_union_subsurface_scale, SR_test_union_subsurface_anisotropy, SR_test_union_sheen, SR_test_union_sheen_color, SR_test_union_sheen_roughness, SR_test_union_coat, SR_test_union_coat_color, SR_test_union_coat_roughness, SR_test_union_coat_anisotropy, SR_test_union_coat_rotation, SR_test_union_coat_IOR, geomprop_Nworld_out1, SR_test_union_coat_affect_color, SR_test_union_coat_affect_roughness, SR_test_union_thin_film_thickness, SR_test_union_thin_film_IOR, SR_test_union_emission, SR_test_union_emission_color, SR_test_union_opacity, SR_test_union_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_test_union_out);
	assign		SR_test_union_out.bsdf null_closure 	%line{834} %argrw{"wr"}
	assign		SR_test_union_out.edf null_closure 	%argrw{"wr"}
	assign		SR_test_union_out.opacity $const9 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:835
#     MATERIAL test_union_out = mx_surfacematerial(SR_test_union_out, backsurfaceshader, displacementshader1);
	functioncall	$const27 832 	%line{835} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:318
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___698_null_closure $const1 	%line{318} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:319
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___698_coat_roughness_vector_out.x $const5 	%line{319} %argrw{"wr"}
	assign		___698_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:320
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const28 342 	%line{320} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:149
#     if (anisotropy > 0.0)
	mul		$tmp59 SR_test_union_coat_roughness SR_test_union_coat_roughness 	%line{149} %argrw{"wrr"}
	functioncall	$const23 328 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp60 $tmp59 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp60 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:150
#     {
	gt		$tmp61 SR_test_union_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{150} %argrw{"wrr"}
	if		$tmp61 340 342 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 333 	%line{152} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp63 SR_test_union_coat_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp62 $tmp63 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp64 $const9 $tmp62 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{152} %argrw{"wrr"}
	sqrt		___676_aspect $tmp64 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:153
#         result.y = roughness_sqr * aspect;
	div		$tmp65 ___675_roughness_sqr ___676_aspect 	%line{153} %argrw{"wrr"}
	min		___698_coat_roughness_vector_out.x $tmp65 $const9 	%argrw{"wrr"}
	assign		___698_coat_roughness_vector_out.x ___698_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:154
#     }
	mul		___698_coat_roughness_vector_out.y ___675_roughness_sqr ___676_aspect 	%line{154} %argrw{"wrr"}
	assign		___698_coat_roughness_vector_out.y ___698_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:158
#         result.y = roughness_sqr;
	assign		___698_coat_roughness_vector_out.x ___675_roughness_sqr 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:159
#     }
	assign		___698_coat_roughness_vector_out.y ___675_roughness_sqr 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:321
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___698_coat_tangent_rotate_degree_in2_tmp $const31 	%line{321} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:322
#     color metal_reflectivity_out = base_color * base;
	mul		___698_coat_tangent_rotate_degree_out SR_test_union_coat_rotation ___698_coat_tangent_rotate_degree_in2_tmp 	%line{322} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:323
#     color metal_edgecolor_out = specular_color * specular;
	mul		___698_metal_reflectivity_out union_color3_out SR_test_union_base 	%line{323} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:324
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___698_metal_edgecolor_out SR_test_union_specular_color SR_test_union_specular 	%line{324} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:325
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___698_coat_affect_roughness_multiply1_out SR_test_union_coat_affect_roughness SR_test_union_coat 	%line{325} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:326
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___698_tangent_rotate_degree_in2_tmp $const31 	%line{326} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:327
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___698_tangent_rotate_degree_out SR_test_union_specular_rotation ___698_tangent_rotate_degree_in2_tmp 	%line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:328
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___698_transmission_roughness_add_out SR_test_union_specular_roughness SR_test_union_transmission_extra_roughness 	%line{328} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:329
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___698_subsurface_color_nonnegative_in2_tmp $const5 	%line{329} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:330
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp66 ___698_subsurface_color_nonnegative_in2_tmp 	%line{330} %argrw{"wr"}
	max		___698_subsurface_color_nonnegative_out SR_test_union_subsurface_color $tmp66 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:331
#     float coat_clamped_high_tmp = 1.000000;
	assign		___698_coat_clamped_low_tmp $const5 	%line{331} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:332
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___698_coat_clamped_high_tmp $const9 	%line{332} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:333
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const23 358 	%line{333} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp67 SR_test_union_coat ___698_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_coat_clamped_out $tmp67 ___698_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:334
#     float subsurface_selector_out = float(thin_walled);
	mul		___698_subsurface_radius_scaled_out SR_test_union_subsurface_radius SR_test_union_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{334} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:335
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp68 SR_test_union_thin_walled 	%line{335} %argrw{"wr"}
	assign		___698_subsurface_selector_out $tmp68 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:336
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___698_base_color_nonnegative_in2_tmp $const5 	%line{336} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:337
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp69 ___698_base_color_nonnegative_in2_tmp 	%line{337} %argrw{"wr"}
	max		___698_base_color_nonnegative_out union_color3_out $tmp69 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:338
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___698_coat_attenuation_bg_tmp $const32 	%line{338} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:339
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___698_coat_attenuation_out ___698_coat_attenuation_bg_tmp SR_test_union_coat_color SR_test_union_coat 	%line{339} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:340
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___698_one_minus_coat_ior_in1_tmp $const9 	%line{340} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:341
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___698_one_minus_coat_ior_out ___698_one_minus_coat_ior_in1_tmp SR_test_union_coat_IOR 	%line{341} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:342
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___698_one_plus_coat_ior_in1_tmp $const9 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:343
#     color emission_weight_out = emission_color * emission1;
	add		___698_one_plus_coat_ior_out ___698_one_plus_coat_ior_in1_tmp SR_test_union_coat_IOR 	%line{343} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:344
#     color opacity_luminance_out = color(0.0);
	mul		___698_emission_weight_out SR_test_union_emission_color SR_test_union_emission 	%line{344} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:345
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___698_opacity_luminance_out $const6 	%line{345} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:346
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const34 375 	%line{346} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:165
# }
	dot		$tmp71 SR_test_union_opacity $const33 	%line{165} %argrw{"wrr"}
	assign		___698_opacity_luminance_out $tmp71 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:347
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___698_coat_tangent_rotate_out $const35 	%line{347} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:348
#     color artistic_ior_ior = color(0.0);
	functioncall	$const36 493 	%line{348} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:183
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const37 380 	%line{183} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp72 $const38 $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___680_rotationRadians ___698_coat_tangent_rotate_degree_out $tmp72 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:184
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const40 443 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{184} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:170
#     float s = sin(angle);
	normalize	___679_nAxis geomprop_Nworld_out1 	%line{170} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:171
#     float c = cos(angle);
	sin		___679_s ___680_rotationRadians 	%line{171} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:172
#     float oc = 1.0 - c;
	cos		___679_c ___680_rotationRadians 	%line{172} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:173
# 
	sub		___679_oc $const9 ___679_c 	%line{173} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:175
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp73 ___679_nAxis $const1 	%line{175} %argrw{"wrr"}
	mul		$tmp74 ___679_oc $tmp73 	%argrw{"wrr"}
	compref		$tmp75 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	add		$tmp77 $tmp76 ___679_c 	%argrw{"wrr"}
	compref		$tmp78 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp79 ___679_oc $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp81 $tmp79 $tmp80 	%argrw{"wrr"}
	compref		$tmp82 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp83 $tmp82 ___679_s 	%argrw{"wrr"}
	sub		$tmp84 $tmp81 $tmp83 	%argrw{"wrr"}
	compref		$tmp85 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp86 ___679_oc $tmp85 	%argrw{"wrr"}
	compref		$tmp87 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp90 $tmp89 ___679_s 	%argrw{"wrr"}
	add		$tmp91 $tmp88 $tmp90 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:176
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp92 ___679_nAxis $const1 	%line{176} %argrw{"wrr"}
	mul		$tmp93 ___679_oc $tmp92 	%argrw{"wrr"}
	compref		$tmp94 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp95 $tmp93 $tmp94 	%argrw{"wrr"}
	compref		$tmp96 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp97 $tmp96 ___679_s 	%argrw{"wrr"}
	add		$tmp98 $tmp95 $tmp97 	%argrw{"wrr"}
	compref		$tmp99 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp100 ___679_oc $tmp99 	%argrw{"wrr"}
	compref		$tmp101 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp102 $tmp100 $tmp101 	%argrw{"wrr"}
	add		$tmp103 $tmp102 ___679_c 	%argrw{"wrr"}
	compref		$tmp104 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp105 ___679_oc $tmp104 	%argrw{"wrr"}
	compref		$tmp106 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp107 $tmp105 $tmp106 	%argrw{"wrr"}
	compref		$tmp108 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp109 $tmp108 ___679_s 	%argrw{"wrr"}
	sub		$tmp110 $tmp107 $tmp109 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:177
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp111 ___679_nAxis $const4 	%line{177} %argrw{"wrr"}
	mul		$tmp112 ___679_oc $tmp111 	%argrw{"wrr"}
	compref		$tmp113 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp114 $tmp112 $tmp113 	%argrw{"wrr"}
	compref		$tmp115 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp116 $tmp115 ___679_s 	%argrw{"wrr"}
	sub		$tmp117 $tmp114 $tmp116 	%argrw{"wrr"}
	compref		$tmp118 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp119 ___679_oc $tmp118 	%argrw{"wrr"}
	compref		$tmp120 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp121 $tmp119 $tmp120 	%argrw{"wrr"}
	compref		$tmp122 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp123 $tmp122 ___679_s 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	compref		$tmp125 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp126 ___679_oc $tmp125 	%argrw{"wrr"}
	compref		$tmp127 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp128 $tmp126 $tmp127 	%argrw{"wrr"}
	add		$tmp129 $tmp128 ___679_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:175
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___680_m $tmp77 $tmp84 $tmp91 $const5 $tmp98 $tmp103 $tmp110 $const5 $tmp117 $tmp124 $tmp129 $const5 $const5 $const5 $const5 $const9 	%line{175} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:185
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp130.x geomprop_Tworld_out1 $const1 	%line{185} %argrw{"wrr"}
	compref		$tmp130.y geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	compref		$tmp130.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp130.w $const9 	%argrw{"wr"}
	functioncall	$const2 492 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp131 ___680_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp132 $tmp131 $tmp130.x 	%argrw{"wrr"}
	mxcompref	$tmp133 ___680_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp134 $tmp133 $tmp130.y 	%argrw{"wrr"}
	add		$tmp135 $tmp132 $tmp134 	%argrw{"wrr"}
	mxcompref	$tmp136 ___680_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp137 $tmp136 $tmp130.z 	%argrw{"wrr"}
	add		$tmp138 $tmp135 $tmp137 	%argrw{"wrr"}
	mxcompref	$tmp139 ___680_m $const41 $const1 	%argrw{"wrrr"}
	mul		$tmp140 $tmp139 $tmp130.w 	%argrw{"wrr"}
	add		___680_trans.x $tmp138 $tmp140 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp141 ___680_m $const1 $const13 	%line{416} %argrw{"wrrr"}
	mul		$tmp142 $tmp141 $tmp130.x 	%argrw{"wrr"}
	mxcompref	$tmp143 ___680_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp144 $tmp143 $tmp130.y 	%argrw{"wrr"}
	add		$tmp145 $tmp142 $tmp144 	%argrw{"wrr"}
	mxcompref	$tmp146 ___680_m $const4 $const13 	%argrw{"wrrr"}
	mul		$tmp147 $tmp146 $tmp130.z 	%argrw{"wrr"}
	add		$tmp148 $tmp145 $tmp147 	%argrw{"wrr"}
	mxcompref	$tmp149 ___680_m $const41 $const13 	%argrw{"wrrr"}
	mul		$tmp150 $tmp149 $tmp130.w 	%argrw{"wrr"}
	add		___680_trans.y $tmp148 $tmp150 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp151 ___680_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp152 $tmp151 $tmp130.x 	%argrw{"wrr"}
	mxcompref	$tmp153 ___680_m $const13 $const4 	%argrw{"wrrr"}
	mul		$tmp154 $tmp153 $tmp130.y 	%argrw{"wrr"}
	add		$tmp155 $tmp152 $tmp154 	%argrw{"wrr"}
	mxcompref	$tmp156 ___680_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp157 $tmp156 $tmp130.z 	%argrw{"wrr"}
	add		$tmp158 $tmp155 $tmp157 	%argrw{"wrr"}
	mxcompref	$tmp159 ___680_m $const41 $const4 	%argrw{"wrrr"}
	mul		$tmp160 $tmp159 $tmp130.w 	%argrw{"wrr"}
	add		___680_trans.z $tmp158 $tmp160 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp161 ___680_m $const1 $const41 	%line{418} %argrw{"wrrr"}
	mul		$tmp162 $tmp161 $tmp130.x 	%argrw{"wrr"}
	mxcompref	$tmp163 ___680_m $const13 $const41 	%argrw{"wrrr"}
	mul		$tmp164 $tmp163 $tmp130.y 	%argrw{"wrr"}
	add		$tmp165 $tmp162 $tmp164 	%argrw{"wrr"}
	mxcompref	$tmp166 ___680_m $const4 $const41 	%argrw{"wrrr"}
	mul		$tmp167 $tmp166 $tmp130.z 	%argrw{"wrr"}
	add		$tmp168 $tmp165 $tmp167 	%argrw{"wrr"}
	mxcompref	$tmp169 ___680_m $const41 $const41 	%argrw{"wrrr"}
	mul		$tmp170 $tmp169 $tmp130.w 	%argrw{"wrr"}
	add		___680_trans.w $tmp168 $tmp170 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:186
# }
	vector		___698_coat_tangent_rotate_out ___680_trans.x ___680_trans.y ___680_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{186} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:349
#     color artistic_ior_extinction = color(0.0);
	assign		___698_artistic_ior_ior $const6 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:350
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___698_artistic_ior_extinction $const6 	%line{350} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:351
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const42 520 	%line{351} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:194
#     color r_sqrt = sqrt(r);
	assign		$tmp171 $const5 	%line{194} %argrw{"wr"}
	assign		$tmp172 $const43 	%argrw{"wr"}
	functioncall	$const23 501 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp173 ___698_metal_reflectivity_out $tmp172 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___681_r $tmp173 $tmp171 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:195
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___681_r_sqrt ___681_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{195} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:196
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp174 $const9 ___681_r 	%line{196} %argrw{"wrr"}
	add		$tmp175 $const9 ___681_r 	%argrw{"wrr"}
	div		___681_n_min $tmp174 $tmp175 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:197
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp176 $const9 ___681_r_sqrt 	%line{197} %argrw{"wrr"}
	sub		$tmp177 $const9 ___681_r_sqrt 	%argrw{"wrr"}
	div		___681_n_max $tmp176 $tmp177 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:198
# 
	mix		___698_artistic_ior_ior ___681_n_max ___681_n_min ___698_metal_edgecolor_out 	%line{198} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:200
#     color nm1 = ior - 1.0;
	add		___681_np1 ___698_artistic_ior_ior $const9 	%line{200} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:201
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___681_nm1 ___698_artistic_ior_ior $const9 	%line{201} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:202
#     k2 = max(k2, 0.0);
	mul		$tmp178 ___681_np1 ___681_np1 	%line{202} %argrw{"wrr"}
	mul		$tmp179 $tmp178 ___681_r 	%argrw{"wrr"}
	mul		$tmp180 ___681_nm1 ___681_nm1 	%argrw{"wrr"}
	sub		$tmp181 $tmp179 $tmp180 	%argrw{"wrr"}
	sub		$tmp182 $const9 ___681_r 	%argrw{"wrr"}
	div		___681_k2 $tmp181 $tmp182 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:203
#     extinction = sqrt(k2);
	assign		$tmp183 $const5 	%line{203} %argrw{"wr"}
	max		___681_k2 ___681_k2 $tmp183 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:204
# }
	sqrt		___698_artistic_ior_extinction ___681_k2 	%line{204} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:352
#     vector tangent_rotate_out = vector(0.0);
	mul		___698_coat_affect_roughness_multiply2_out ___698_coat_affect_roughness_multiply1_out SR_test_union_coat_roughness 	%line{352} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:353
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___698_tangent_rotate_out $const35 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:354
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const36 639 	%line{354} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:183
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const37 526 	%line{183} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp184 $const38 $const39 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___680_rotationRadians ___698_tangent_rotate_degree_out $tmp184 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:184
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const40 589 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{184} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:170
#     float s = sin(angle);
	normalize	___679_nAxis geomprop_Nworld_out1 	%line{170} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:171
#     float c = cos(angle);
	sin		___679_s ___680_rotationRadians 	%line{171} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:172
#     float oc = 1.0 - c;
	cos		___679_c ___680_rotationRadians 	%line{172} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:173
# 
	sub		___679_oc $const9 ___679_c 	%line{173} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:175
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp185 ___679_nAxis $const1 	%line{175} %argrw{"wrr"}
	mul		$tmp186 ___679_oc $tmp185 	%argrw{"wrr"}
	compref		$tmp187 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp188 $tmp186 $tmp187 	%argrw{"wrr"}
	add		$tmp189 $tmp188 ___679_c 	%argrw{"wrr"}
	compref		$tmp190 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp191 ___679_oc $tmp190 	%argrw{"wrr"}
	compref		$tmp192 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp193 $tmp191 $tmp192 	%argrw{"wrr"}
	compref		$tmp194 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp195 $tmp194 ___679_s 	%argrw{"wrr"}
	sub		$tmp196 $tmp193 $tmp195 	%argrw{"wrr"}
	compref		$tmp197 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp198 ___679_oc $tmp197 	%argrw{"wrr"}
	compref		$tmp199 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp200 $tmp198 $tmp199 	%argrw{"wrr"}
	compref		$tmp201 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp202 $tmp201 ___679_s 	%argrw{"wrr"}
	add		$tmp203 $tmp200 $tmp202 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:176
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp204 ___679_nAxis $const1 	%line{176} %argrw{"wrr"}
	mul		$tmp205 ___679_oc $tmp204 	%argrw{"wrr"}
	compref		$tmp206 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp207 $tmp205 $tmp206 	%argrw{"wrr"}
	compref		$tmp208 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp209 $tmp208 ___679_s 	%argrw{"wrr"}
	add		$tmp210 $tmp207 $tmp209 	%argrw{"wrr"}
	compref		$tmp211 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp212 ___679_oc $tmp211 	%argrw{"wrr"}
	compref		$tmp213 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp214 $tmp212 $tmp213 	%argrw{"wrr"}
	add		$tmp215 $tmp214 ___679_c 	%argrw{"wrr"}
	compref		$tmp216 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp217 ___679_oc $tmp216 	%argrw{"wrr"}
	compref		$tmp218 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp219 $tmp217 $tmp218 	%argrw{"wrr"}
	compref		$tmp220 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp221 $tmp220 ___679_s 	%argrw{"wrr"}
	sub		$tmp222 $tmp219 $tmp221 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:177
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp223 ___679_nAxis $const4 	%line{177} %argrw{"wrr"}
	mul		$tmp224 ___679_oc $tmp223 	%argrw{"wrr"}
	compref		$tmp225 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp226 $tmp224 $tmp225 	%argrw{"wrr"}
	compref		$tmp227 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp228 $tmp227 ___679_s 	%argrw{"wrr"}
	sub		$tmp229 $tmp226 $tmp228 	%argrw{"wrr"}
	compref		$tmp230 ___679_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp231 ___679_oc $tmp230 	%argrw{"wrr"}
	compref		$tmp232 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp233 $tmp231 $tmp232 	%argrw{"wrr"}
	compref		$tmp234 ___679_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp235 $tmp234 ___679_s 	%argrw{"wrr"}
	add		$tmp236 $tmp233 $tmp235 	%argrw{"wrr"}
	compref		$tmp237 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp238 ___679_oc $tmp237 	%argrw{"wrr"}
	compref		$tmp239 ___679_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp240 $tmp238 $tmp239 	%argrw{"wrr"}
	add		$tmp241 $tmp240 ___679_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:175
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___680_m $tmp189 $tmp196 $tmp203 $const5 $tmp210 $tmp215 $tmp222 $const5 $tmp229 $tmp236 $tmp241 $const5 $const5 $const5 $const5 $const9 	%line{175} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:185
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp242.x geomprop_Tworld_out1 $const1 	%line{185} %argrw{"wrr"}
	compref		$tmp242.y geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	compref		$tmp242.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp242.w $const9 	%argrw{"wr"}
	functioncall	$const2 638 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp243 ___680_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp244 $tmp243 $tmp242.x 	%argrw{"wrr"}
	mxcompref	$tmp245 ___680_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp246 $tmp245 $tmp242.y 	%argrw{"wrr"}
	add		$tmp247 $tmp244 $tmp246 	%argrw{"wrr"}
	mxcompref	$tmp248 ___680_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp249 $tmp248 $tmp242.z 	%argrw{"wrr"}
	add		$tmp250 $tmp247 $tmp249 	%argrw{"wrr"}
	mxcompref	$tmp251 ___680_m $const41 $const1 	%argrw{"wrrr"}
	mul		$tmp252 $tmp251 $tmp242.w 	%argrw{"wrr"}
	add		___680_trans.x $tmp250 $tmp252 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp253 ___680_m $const1 $const13 	%line{416} %argrw{"wrrr"}
	mul		$tmp254 $tmp253 $tmp242.x 	%argrw{"wrr"}
	mxcompref	$tmp255 ___680_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp256 $tmp255 $tmp242.y 	%argrw{"wrr"}
	add		$tmp257 $tmp254 $tmp256 	%argrw{"wrr"}
	mxcompref	$tmp258 ___680_m $const4 $const13 	%argrw{"wrrr"}
	mul		$tmp259 $tmp258 $tmp242.z 	%argrw{"wrr"}
	add		$tmp260 $tmp257 $tmp259 	%argrw{"wrr"}
	mxcompref	$tmp261 ___680_m $const41 $const13 	%argrw{"wrrr"}
	mul		$tmp262 $tmp261 $tmp242.w 	%argrw{"wrr"}
	add		___680_trans.y $tmp260 $tmp262 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp263 ___680_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp264 $tmp263 $tmp242.x 	%argrw{"wrr"}
	mxcompref	$tmp265 ___680_m $const13 $const4 	%argrw{"wrrr"}
	mul		$tmp266 $tmp265 $tmp242.y 	%argrw{"wrr"}
	add		$tmp267 $tmp264 $tmp266 	%argrw{"wrr"}
	mxcompref	$tmp268 ___680_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp269 $tmp268 $tmp242.z 	%argrw{"wrr"}
	add		$tmp270 $tmp267 $tmp269 	%argrw{"wrr"}
	mxcompref	$tmp271 ___680_m $const41 $const4 	%argrw{"wrrr"}
	mul		$tmp272 $tmp271 $tmp242.w 	%argrw{"wrr"}
	add		___680_trans.z $tmp270 $tmp272 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp273 ___680_m $const1 $const41 	%line{418} %argrw{"wrrr"}
	mul		$tmp274 $tmp273 $tmp242.x 	%argrw{"wrr"}
	mxcompref	$tmp275 ___680_m $const13 $const41 	%argrw{"wrrr"}
	mul		$tmp276 $tmp275 $tmp242.y 	%argrw{"wrr"}
	add		$tmp277 $tmp274 $tmp276 	%argrw{"wrr"}
	mxcompref	$tmp278 ___680_m $const4 $const41 	%argrw{"wrrr"}
	mul		$tmp279 $tmp278 $tmp242.z 	%argrw{"wrr"}
	add		$tmp280 $tmp277 $tmp279 	%argrw{"wrr"}
	mxcompref	$tmp281 ___680_m $const41 $const41 	%argrw{"wrrr"}
	mul		$tmp282 $tmp281 $tmp242.w 	%argrw{"wrr"}
	add		___680_trans.w $tmp280 $tmp282 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:186
# }
	vector		___698_tangent_rotate_out ___680_trans.x ___680_trans.y ___680_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{186} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:355
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___698_transmission_roughness_clamped_low_tmp $const5 	%line{355} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:356
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___698_transmission_roughness_clamped_high_tmp $const9 	%line{356} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:357
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const23 644 	%line{357} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp283 ___698_transmission_roughness_add_out ___698_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_transmission_roughness_clamped_out $tmp283 ___698_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:358
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___698_coat_gamma_multiply_out ___698_coat_clamped_out SR_test_union_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{358} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:359
#     int opacity_luminance_float_index_tmp = 0;
	div		___698_coat_ior_to_F0_sqrt_out ___698_one_minus_coat_ior_out ___698_one_plus_coat_ior_out 	%line{359} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:360
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___698_opacity_luminance_float_index_tmp $const1 	%line{360} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:361
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const12 649 	%line{361} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___698_opacity_luminance_float_out ___698_opacity_luminance_out ___698_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:362
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___698_coat_tangent_rotate_normalize_out ___698_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{362} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:363
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___698_coat_affected_roughness_fg_tmp $const9 	%line{363} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:364
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___698_coat_affected_roughness_out SR_test_union_specular_roughness ___698_coat_affected_roughness_fg_tmp ___698_coat_affect_roughness_multiply2_out 	%line{364} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:365
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___698_tangent_rotate_normalize_out ___698_tangent_rotate_out 	%line{365} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:366
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___698_coat_affected_transmission_roughness_fg_tmp $const9 	%line{366} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:367
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___698_coat_affected_transmission_roughness_out ___698_transmission_roughness_clamped_out ___698_coat_affected_transmission_roughness_fg_tmp ___698_coat_affect_roughness_multiply2_out 	%line{367} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:368
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___698_coat_gamma_in2_tmp $const9 	%line{368} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:369
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___698_coat_gamma_out ___698_coat_gamma_multiply_out ___698_coat_gamma_in2_tmp 	%line{369} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:370
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___698_coat_ior_to_F0_out ___698_coat_ior_to_F0_sqrt_out ___698_coat_ior_to_F0_sqrt_out 	%line{370} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:371
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___698_coat_tangent_value2_tmp $const5 	%line{371} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:372
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp284 SR_test_union_coat_anisotropy ___698_coat_tangent_value2_tmp 	%line{372} %argrw{"wrr"}
	functioncall	$const17 666 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp284 664 666 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___698_coat_tangent_out ___698_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___698_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:373
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___698_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{373} %argrw{"wr"}
	assign		___698_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:374
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const28 687 	%line{374} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:149
#     if (anisotropy > 0.0)
	mul		$tmp285 ___698_coat_affected_roughness_out ___698_coat_affected_roughness_out 	%line{149} %argrw{"wrr"}
	functioncall	$const23 673 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp286 $tmp285 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp286 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:150
#     {
	gt		$tmp287 SR_test_union_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{150} %argrw{"wrr"}
	if		$tmp287 685 687 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 678 	%line{152} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp289 SR_test_union_specular_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp288 $tmp289 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp290 $const9 $tmp288 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{152} %argrw{"wrr"}
	sqrt		___676_aspect $tmp290 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:153
#         result.y = roughness_sqr * aspect;
	div		$tmp291 ___675_roughness_sqr ___676_aspect 	%line{153} %argrw{"wrr"}
	min		___698_main_roughness_out.x $tmp291 $const9 	%argrw{"wrr"}
	assign		___698_main_roughness_out.x ___698_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:154
#     }
	mul		___698_main_roughness_out.y ___675_roughness_sqr ___676_aspect 	%line{154} %argrw{"wrr"}
	assign		___698_main_roughness_out.y ___698_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:158
#         result.y = roughness_sqr;
	assign		___698_main_roughness_out.x ___675_roughness_sqr 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:159
#     }
	assign		___698_main_roughness_out.y ___675_roughness_sqr 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:375
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___698_main_tangent_value2_tmp $const5 	%line{375} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:376
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp292 SR_test_union_specular_anisotropy ___698_main_tangent_value2_tmp 	%line{376} %argrw{"wrr"}
	functioncall	$const17 695 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp292 693 695 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___698_main_tangent_out ___698_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___698_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:377
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___698_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{377} %argrw{"wr"}
	assign		___698_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:378
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const28 716 	%line{378} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:149
#     if (anisotropy > 0.0)
	mul		$tmp293 ___698_coat_affected_transmission_roughness_out ___698_coat_affected_transmission_roughness_out 	%line{149} %argrw{"wrr"}
	functioncall	$const23 702 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp294 $tmp293 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___675_roughness_sqr $tmp294 $const29 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:150
#     {
	gt		$tmp295 SR_test_union_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{150} %argrw{"wrr"}
	if		$tmp295 714 716 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const23 707 	%line{152} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp297 SR_test_union_specular_anisotropy $const30 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp296 $tmp297 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:152
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp298 $const9 $tmp296 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{152} %argrw{"wrr"}
	sqrt		___676_aspect $tmp298 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:153
#         result.y = roughness_sqr * aspect;
	div		$tmp299 ___675_roughness_sqr ___676_aspect 	%line{153} %argrw{"wrr"}
	min		___698_transmission_roughness_out.x $tmp299 $const9 	%argrw{"wrr"}
	assign		___698_transmission_roughness_out.x ___698_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:154
#     }
	mul		___698_transmission_roughness_out.y ___675_roughness_sqr ___676_aspect 	%line{154} %argrw{"wrr"}
	assign		___698_transmission_roughness_out.y ___698_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:158
#         result.y = roughness_sqr;
	assign		___698_transmission_roughness_out.x ___675_roughness_sqr 	%line{158} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:159
#     }
	assign		___698_transmission_roughness_out.y ___675_roughness_sqr 	%line{159} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:379
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___698_coat_affected_subsurface_color_out ___698_subsurface_color_nonnegative_out ___698_coat_gamma_out 	%line{379} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:380
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___698_coat_affected_diffuse_color_out ___698_base_color_nonnegative_out ___698_coat_gamma_out 	%line{380} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:381
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___698_one_minus_coat_ior_to_F0_in1_tmp $const9 	%line{381} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:382
#     color emission_color0_out = color(0.0);
	sub		___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_in1_tmp ___698_coat_ior_to_F0_out 	%line{382} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:383
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___698_emission_color0_out $const6 	%line{383} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:384
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const18 724 	%line{384} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:30
#     out = combine_out;
	color		___670_combine_out ___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_out ___698_one_minus_coat_ior_to_F0_out 	%line{30} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:31
# }
	assign		___698_emission_color0_out ___670_combine_out 	%line{31} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:385
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___698_coat_bsdf_out ___698_null_closure 	%line{385} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:386
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const47 736 	%line{386} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:209
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp301 $const46 $const48 	%line{209} %argrw{"wrr"}
	if		$tmp301 729 730 	%argrw{"r"}
	assign		___682_reflection_tint $const6 	%argrw{"wr"}
	assign		___682_reflection_tint $const32 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:210
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp302 $const46 $const46 	%line{210} %argrw{"wrr"}
	if		$tmp302 733 734 	%argrw{"r"}
	assign		___682_transmission_tint $const6 	%argrw{"wr"}
	assign		___682_transmission_tint $const32 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:211
# }
	closure		$tmp303 $const51 geomprop_Nworld_out1 ___698_coat_tangent_out ___682_reflection_tint ___682_transmission_tint ___698_coat_roughness_vector_out.x ___698_coat_roughness_vector_out.y SR_test_union_coat_IOR $const45 $const49 $const5 $const50 $const44 	%line{211} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_coat_bsdf_out $tmp303 SR_test_union_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:387
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___698_metal_bsdf_weight_tmp $const9 	%line{387} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:388
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___698_metal_bsdf_distribution_tmp $const45 	%line{388} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:389
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp304 $const52 geomprop_Nworld_out1 ___698_main_tangent_out ___698_main_roughness_out.x ___698_main_roughness_out.y ___698_artistic_ior_ior ___698_artistic_ior_extinction ___698_metal_bsdf_distribution_tmp $const49 SR_test_union_thin_film_thickness $const50 SR_test_union_thin_film_IOR 	%line{389} %argrw{"wrrrrrrrrrrrr"}
	mul		___698_metal_bsdf_out $tmp304 ___698_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:390
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___698_specular_bsdf_out ___698_null_closure 	%line{390} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:391
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const47 752 	%line{391} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:209
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp305 $const46 $const48 	%line{209} %argrw{"wrr"}
	if		$tmp305 745 746 	%argrw{"r"}
	assign		___682_reflection_tint $const6 	%argrw{"wr"}
	assign		___682_reflection_tint SR_test_union_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:210
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp306 $const46 $const46 	%line{210} %argrw{"wrr"}
	if		$tmp306 749 750 	%argrw{"r"}
	assign		___682_transmission_tint $const6 	%argrw{"wr"}
	assign		___682_transmission_tint SR_test_union_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:211
# }
	closure		$tmp307 $const51 geomprop_Nworld_out1 ___698_main_tangent_out ___682_reflection_tint ___682_transmission_tint ___698_main_roughness_out.x ___698_main_roughness_out.y SR_test_union_specular_IOR $const45 $const49 SR_test_union_thin_film_thickness $const50 SR_test_union_thin_film_IOR 	%line{211} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_specular_bsdf_out $tmp307 SR_test_union_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:392
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___698_transmission_bsdf_out ___698_null_closure 	%line{392} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:393
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const47 764 	%line{393} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:209
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp308 $const48 $const48 	%line{209} %argrw{"wrr"}
	if		$tmp308 757 758 	%argrw{"r"}
	assign		___682_reflection_tint $const6 	%argrw{"wr"}
	assign		___682_reflection_tint SR_test_union_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:210
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp309 $const48 $const46 	%line{210} %argrw{"wrr"}
	if		$tmp309 761 762 	%argrw{"r"}
	assign		___682_transmission_tint $const6 	%argrw{"wr"}
	assign		___682_transmission_tint SR_test_union_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:211
# }
	closure		$tmp310 $const51 geomprop_Nworld_out1 ___698_main_tangent_out ___682_reflection_tint ___682_transmission_tint ___698_transmission_roughness_out.x ___698_transmission_roughness_out.y SR_test_union_specular_IOR $const45 $const49 $const5 $const50 $const44 	%line{211} %argrw{"wrrrrrrrrrrrrr"}
	mul		___698_transmission_bsdf_out $tmp310 $const9 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:394
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp311 $const53 geomprop_Nworld_out1 SR_test_union_sheen_color SR_test_union_sheen_roughness 	%line{394} %argrw{"wrrrr"}
	mul		___698_sheen_bsdf_out $tmp311 SR_test_union_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:395
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___698_translucent_bsdf_weight_tmp $const9 	%line{395} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:396
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp312 $const54 geomprop_Nworld_out1 ___698_coat_affected_subsurface_color_out 	%line{396} %argrw{"wrrr"}
	mul		___698_translucent_bsdf_out $tmp312 ___698_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:397
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___698_subsurface_bsdf_out ___698_null_closure 	%line{397} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:398
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const55 773 	%line{398} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:219
# #endif
	mul		$tmp313 $const9 ___698_coat_affected_subsurface_color_out 	%line{219} %argrw{"wrr"}
	closure		___698_subsurface_bsdf_out $const56 geomprop_Nworld_out1 $tmp313 $const9 ___698_subsurface_radius_scaled_out SR_test_union_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:399
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const57 778 	%line{399} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp314 $const9 ___698_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp315 ___698_subsurface_bsdf_out $tmp314 	%argrw{"wrr"}
	mul		$tmp316 ___698_translucent_bsdf_out ___698_subsurface_selector_out 	%argrw{"wrr"}
	add		___698_selected_subsurface_bsdf_out $tmp315 $tmp316 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:400
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp317 $const58 geomprop_Nworld_out1 ___698_coat_affected_diffuse_color_out SR_test_union_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{400} %argrw{"wrrrr"}
	mul		___698_diffuse_bsdf_out $tmp317 SR_test_union_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:401
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const57 785 	%line{401} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp318 $const9 SR_test_union_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp319 ___698_diffuse_bsdf_out $tmp318 	%argrw{"wrr"}
	mul		$tmp320 ___698_selected_subsurface_bsdf_out SR_test_union_subsurface 	%argrw{"wrr"}
	add		___698_subsurface_mix_out $tmp319 $tmp320 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:402
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___698_sheen_layer_out $const59 ___698_sheen_bsdf_out ___698_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{402} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:403
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const57 791 	%line{403} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp321 $const9 SR_test_union_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp322 ___698_sheen_layer_out $tmp321 	%argrw{"wrr"}
	mul		$tmp323 ___698_transmission_bsdf_out SR_test_union_transmission 	%argrw{"wrr"}
	add		___698_transmission_mix_out $tmp322 $tmp323 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:404
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___698_specular_layer_out $const59 ___698_specular_bsdf_out ___698_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{404} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:405
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const57 797 	%line{405} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp324 $const9 SR_test_union_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp325 ___698_specular_layer_out $tmp324 	%argrw{"wrr"}
	mul		$tmp326 ___698_metal_bsdf_out SR_test_union_metalness 	%argrw{"wrr"}
	add		___698_metalness_mix_out $tmp325 $tmp326 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:406
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___698_thin_film_layer_attenuated_out ___698_metalness_mix_out ___698_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{406} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:407
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___698_coat_layer_out $const59 ___698_coat_bsdf_out ___698_thin_film_layer_attenuated_out 	%line{407} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:408
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___698_emission_edf_out $const60 ___698_emission_weight_out 	%line{408} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:409
#     EDF coat_emission_edf_out = null_closure;
	mul		___698_coat_tinted_emission_edf_out ___698_emission_edf_out SR_test_union_coat_color 	%line{409} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:410
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___698_coat_emission_edf_out ___698_null_closure 	%line{410} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:411
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const62 814 	%line{411} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:304
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp329 I 	%line{304} %argrw{"wr"}
	dot		$tmp328 N $tmp329 	%argrw{"wrr"}
	fabs		___696_NdotV $tmp328 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:305
#     result = base * f;
	functioncall	$const63 813 	%line{305} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:298
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp330 $const9 ___696_NdotV 	%line{298} %argrw{"wrr"}
	functioncall	$const23 811 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp331 $tmp330 $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___695_x $tmp331 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:299
# }
	pow		$tmp332 ___695_x $const61 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{299} %argrw{"wrr"}
	mix		___696_f ___698_emission_color0_out $const6 $tmp332 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:306
# }
	mul		___698_coat_emission_edf_out ___698_coat_tinted_emission_edf_out ___696_f 	%line{306} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:412
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const57 819 	%line{412} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp333 $const9 SR_test_union_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp334 ___698_emission_edf_out $tmp333 	%argrw{"wrr"}
	mul		$tmp335 ___698_coat_emission_edf_out SR_test_union_coat 	%argrw{"wrr"}
	add		___698_blended_coat_emission_edf_out $tmp334 $tmp335 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:413
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___698_shader_constructor_out.bsdf ___698_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{413} %argrw{"wr"}
	assign		___698_shader_constructor_out.edf ___698_null_closure 	%argrw{"wr"}
	assign		___698_shader_constructor_out.opacity $const9 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:414
#     out = shader_constructor_out;
	functioncall	$const64 829 	%line{414} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:311
#     result.edf     = edf;
	assign		___698_shader_constructor_out.bsdf ___698_coat_layer_out 	%line{311} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:312
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___698_shader_constructor_out.edf ___698_blended_coat_emission_edf_out 	%line{312} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:313
# }
	functioncall	$const23 828 	%line{313} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp336 ___698_opacity_luminance_float_out $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_shader_constructor_out.opacity $tmp336 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:313
# }
	assign		___698_shader_constructor_out.opacity ___698_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{313} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:415
# }
	assign		SR_test_union_out.bsdf ___698_shader_constructor_out.bsdf 	%line{415} %argrw{"wr"}
	assign		SR_test_union_out.edf ___698_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_test_union_out.opacity ___698_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:836
#     out = test_union_out;
	functioncall	$const65 842 	%line{836} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:420
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const23 836 	%line{420} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp337 SR_test_union_out.opacity $const9 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___699_opacity_weight $tmp337 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:421
# }
	add		$tmp338 SR_test_union_out.bsdf SR_test_union_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl"} %line{421} %argrw{"wrr"}
	mul		$tmp339 $tmp338 ___699_opacity_weight 	%argrw{"wrr"}
	closure		$tmp340 $const66 	%argrw{"wr"}
	sub		$tmp341 $const9 ___699_opacity_weight 	%argrw{"wrr"}
	mul		$tmp342 $tmp340 $tmp341 	%argrw{"wrr"}
	add		test_union_out $tmp339 $tmp342 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\linepattern\\test_union.osl:837
# }
	assign		out test_union_out 	%line{837} %argrw{"wr"}
	end
