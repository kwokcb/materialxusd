OpenShadingLanguage 1.00
# Compiled by oslc 1.13.3.0dev
# options: -q -ID:\Work\materialx\OSL_ILM\bin\shaders -o D:\Work\materialx\bernard_MaterialX_3\build\bin\resources\Materials\TestSuite\stdlib\procedural\tiledshape\test_tiledhexagons.oso
shader test_tiledhexagons	%meta{string,mtlx_category,"surfacematerial"} %meta{string,mtlx_name,"test_tiledhexagons"} 
param	struct surfaceshader	backsurfaceshader			%read{2147483647,-1} %write{2147483647,-1} %struct{"surfaceshader"} %structfields{bsdf,edf,opacity} %structfieldtypes{"CCf"} %structnfields{3}
param	closure color	backsurfaceshader.bsdf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{0}
param	closure color	backsurfaceshader.edf			%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{1}
param	float	backsurfaceshader.opacity	1		%read{2147483647,-1} %write{2147483647,-1} %mystruct{backsurfaceshader} %mystructfield{2}
param	vector	displacementshader1	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	geomprop_UV0_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	struct vector2	tiledhexagons_color3_uvtiling			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledhexagons_color3_uvtiling.x	29		%read{13,13} %write{2147483647,-1} %mystruct{tiledhexagons_color3_uvtiling} %mystructfield{0}
param	float	tiledhexagons_color3_uvtiling.y	29		%read{14,14} %write{2147483647,-1} %mystruct{tiledhexagons_color3_uvtiling} %mystructfield{1}
param	struct vector2	tiledhexagons_color3_uvoffset			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	tiledhexagons_color3_uvoffset.x	0		%read{18,18} %write{2147483647,-1} %mystruct{tiledhexagons_color3_uvoffset} %mystructfield{0}
param	float	tiledhexagons_color3_uvoffset.y	0		%read{19,19} %write{2147483647,-1} %mystruct{tiledhexagons_color3_uvoffset} %mystructfield{1}
param	float	tiledhexagons_color3_size	0.699999988		%meta{string,widget,"number"}  %read{16,223} %write{2147483647,-1}
param	int	tiledhexagons_color3_staggered	0		%meta{string,widget,"checkBox"}  %read{720,720} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_base	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Base"} %meta{string,page,"Base"} %meta{string,help,"Multiplier on the intensity of the diffuse reflection."} %meta{string,widget,"number"}  %read{760,1195} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_diffuse_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Base"} %meta{int,uiadvanced,1} %meta{string,help,"Roughness of the diffuse reflection. Higher values cause the surface to appear flatter and darker."} %meta{string,widget,"number"}  %read{1194,1194} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_metalness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metalness"} %meta{string,page,"Base"} %meta{string,help,"Specifies how metallic the material appears. At its maximum, the surface behaves like a metal, using fully specular reflection and complex fresnel."} %meta{string,widget,"number"}  %read{1209,1211} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_specular	1		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular"} %meta{string,page,"Specular"} %meta{string,help,"Multiplier on the intensity of the specular reflection."} %meta{string,widget,"number"}  %read{761,1167} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_specular_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"} %meta{string,help,"Color tint on the specular reflection."}  %read{761,1165} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_specular_roughness	0.200000003		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"} %meta{string,help,"The roughness of the specular reflection. Lower numbers produce sharper reflections, higher numbers produce blurrier reflections."} %meta{string,widget,"number"}  %read{765,1067} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_specular_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Index of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"Index of refraction for specular reflection."} %meta{string,widget,"number"}  %read{1166,1178} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_specular_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Anisotropy"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"The directional bias of reflected and transmitted light resulting in materials appearing rougher or glossier in certain directions."} %meta{string,widget,"number"}  %read{1089,1121} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_specular_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Rotation"} %meta{string,page,"Specular"} %meta{int,uiadvanced,1} %meta{string,help,"Rotation of the axis of specular anisotropy around the surface normal."} %meta{string,widget,"number"}  %read{764,764} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_transmission	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Transmission of light through the surface for materials such as glass or water. The greater the value the more transparent the material."} %meta{string,widget,"number"}  %read{1203,1205} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_transmission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Color"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Color tint on the transmitted light."}  %read{1173,1177} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_transmission_depth	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Depth"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Specifies the distance light travels inside the material before its becomes exactly the transmission color according to Beer's law."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_transmission_scatter	0 0 0		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Transmission Scatter"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Scattering coefficient of the interior medium. Suitable for a large body of liquid or one that is fairly thick, such as an ocean, honey, ice, or frosted glass."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_transmission_scatter_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Transmission Anisotropy"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the scattering."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_transmission_dispersion	0		%meta{float,min,0} %meta{float,slidermax,100} %meta{string,label,"Transmission Dispersion"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Dispersion amount, describing how much the index of refraction varies across wavelengths."} %meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_transmission_extra_roughness	0		%meta{float,min,-1} %meta{float,slidermin,0} %meta{float,max,1} %meta{string,label,"Transmission Roughness"} %meta{string,page,"Transmission"} %meta{int,uiadvanced,1} %meta{string,help,"Additional roughness on top of specular roughness. Positive values blur refractions more than reflections, and negative values blur refractions less."} %meta{string,widget,"number"}  %read{765,765} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_subsurface	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The blend between diffuse reflection and subsurface scattering. A value of 1.0 indicates full subsurface scattering and a value 0 for diffuse reflection only."} %meta{string,widget,"number"}  %read{1197,1199} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_subsurface_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Color"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the subsurface scattering effect."}  %read{768,768} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_subsurface_radius	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Subsurface Radius"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The mean free path. The distance which light can travel before being scattered inside the surface."}  %read{774,774} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_subsurface_scale	1		%meta{float,min,0} %meta{float,slidermax,10} %meta{string,label,"Subsurface Scale"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"Scalar weight for the subsurface radius value."} %meta{string,widget,"number"}  %read{774,774} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_subsurface_anisotropy	0		%meta{float,min,-1} %meta{float,max,1} %meta{string,label,"Subsurface Anisotropy"} %meta{string,page,"Subsurface"} %meta{int,uiadvanced,1} %meta{string,help,"The direction of subsurface scattering. 0 scatters light evenly, positive values scatter forward and negative values scatter backward."} %meta{string,widget,"number"}  %read{1188,1188} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_sheen	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The weight of a sheen layer that can be used to approximate microfibers or fabrics such as velvet and satin."} %meta{string,widget,"number"}  %read{1181,1181} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_sheen_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Sheen Color"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The color of the sheen layer."}  %read{1180,1180} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_sheen_roughness	0.300000012		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Roughness"} %meta{string,page,"Sheen"} %meta{int,uiadvanced,1} %meta{string,help,"The roughness of the sheen layer."} %meta{string,widget,"number"}  %read{1180,1180} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat"} %meta{string,page,"Coat"} %meta{string,help,"The weight of a reflective clear-coat layer on top of the material. Use for materials such as car paint or an oily layer."} %meta{string,widget,"number"}  %read{762,1233} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_coat_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Coat Color"} %meta{string,page,"Coat"} %meta{string,help,"The color of the clear-coat layer's transparency."}  %read{781,1216} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_roughness	0.100000001		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Roughness"} %meta{string,page,"Coat"} %meta{string,help,"The roughness of the clear-coat reflections. The lower the value, the sharper the reflection."} %meta{string,widget,"number"}  %read{740,936} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_anisotropy	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Anisotropy"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The amount of directional bias, or anisotropy, of the clear-coat layer."} %meta{string,widget,"number"}  %read{744,1075} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_rotation	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Rotation"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"The rotation of the anisotropic effect of the clear-coat layer."} %meta{string,widget,"number"}  %read{759,759} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Coat Index of Refraction"} %meta{string,page,"Coat"} %meta{string,help,"The index of refraction of the clear-coat layer."} %meta{string,widget,"number"}  %read{783,1150} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_affect_color	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Color"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the saturation of diffuse reflection and subsurface scattering below the clear-coat."} %meta{string,widget,"number"}  %read{1060,1060} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_coat_affect_roughness	0		%meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coat Affect Roughness"} %meta{string,page,"Coat"} %meta{int,uiadvanced,1} %meta{string,help,"Controls the roughness of the specular reflection in the layers below the clear-coat."} %meta{string,widget,"number"}  %read{762,762} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_thin_film_thickness	0		%meta{float,min,0} %meta{float,slidermax,2000} %meta{string,label,"Thin Film Thickness"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The thickness of the thin film layer on a surface. Use for materials such as multitone car paint or soap bubbles (in nanometers)."} %meta{string,widget,"number"}  %read{1154,1166} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_thin_film_IOR	1.5		%meta{float,min,0} %meta{float,slidermin,1} %meta{float,slidermax,3} %meta{string,label,"Thin Film Index of Refraction"} %meta{string,page,"Thin Film"} %meta{int,uiadvanced,1} %meta{string,help,"The index of refraction of the medium surrounding the material."} %meta{string,widget,"number"}  %read{1154,1166} %write{2147483647,-1}
param	float	SR_test_tiledhexagons_emission	0		%meta{float,min,0} %meta{float,slidermax,1} %meta{string,label,"Emission"} %meta{string,page,"Emission"} %meta{string,help,"The amount of emitted incandescent light."} %meta{string,widget,"number"}  %read{786,786} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_emission_color	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Emission Color"} %meta{string,page,"Emission"} %meta{string,help,"The color of the emitted light."}  %read{786,786} %write{2147483647,-1}
param	color	SR_test_tiledhexagons_opacity	1 1 1		%meta{color,min,0,0,0} %meta{color,max,1,1,1} %meta{string,label,"Opacity"} %meta{string,page,"Geometry"} %meta{string,help,"The opacity of the entire material."}  %read{789,789} %write{2147483647,-1}
param	int	SR_test_tiledhexagons_thin_walled	0		%meta{string,label,"Thin Walled"} %meta{string,page,"Geometry"} %meta{int,uiadvanced,1} %meta{string,help,"If true the surface is double-sided and represents an infinitely thin shell. Suitable for thin objects such as tree leaves or paper."} %meta{string,widget,"checkBox"}  %read{775,775} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{1258,1258}
global	vector	I	%read{1219,1219} %write{2147483647,-1}
global	normal	N	%read{2,1220} %write{2147483647,-1}
global	float	u	%read{8,8} %write{2147483647,-1}
global	float	v	%read{9,9} %write{2147483647,-1}
local	int	___669_N_extract_0_index_tmp	%read{25,618} %write{23,616}
local	float	___669_N_extract_0_out	%read{39,632} %write{27,622}
local	int	___669_N_extract_1_index_tmp	%read{33,626} %write{31,624}
local	float	___669_N_extract_1_out	%read{40,633} %write{35,630}
local	int	___670_N_extract_0_index_tmp	%read{106,603} %write{104,601}
local	float	___670_N_extract_0_out	%read{113,610} %write{106,603}
local	int	___670_N_extract_1_index_tmp	%read{109,606} %write{107,604}
local	float	___670_N_extract_1_out	%read{114,611} %write{109,606}
local	int	___670_N_extract_2_index_tmp	%read{112,609} %write{110,607}
local	float	___670_N_extract_2_out	%read{115,612} %write{112,609}
local	float	___671_delta_out.x	%read{120,592} %write{98,570} %mystruct{___671_delta_out} %mystructfield{0}
local	float	___671_delta_out.y	%read{121,593} %write{99,571} %mystruct{___671_delta_out} %mystructfield{1}
local	float	___671_k_separate_outx	%read{122,594} %write{100,585}
local	float	___671_k_separate_outy	%read{123,635} %write{101,586}
local	float	___671_k_separate_outz	%read{124,596} %write{102,587}
local	vector	___671_minus_k_in1_tmp	%read{118,590} %write{116,588}
local	float	___671_minus_k_in2_tmp	%read{118,590} %write{117,589}
local	vector	___671_minus_k_out	%read{131,609} %write{118,590}
local	float	___671_delta_abs_out.x	%read{148,628} %write{120,592} %mystruct{___671_delta_abs_out} %mystructfield{0}
local	float	___671_delta_abs_out.y	%read{150,630} %write{121,593} %mystruct{___671_delta_abs_out} %mystructfield{1}
local	float	___671_kxy_out.x	%read{168,649} %write{122,594} %mystruct{___671_kxy_out} %mystructfield{0}
local	float	___671_kxy_out.y	%read{169,650} %write{123,595} %mystruct{___671_kxy_out} %mystructfield{1}
local	float	___671_kz_r1_out	%read{220,692} %write{124,596}
local	float	___671_minus_k_separate_outx	%read{162,634} %write{125,610}
local	float	___671_minus_k_separate_outy	%read{2147483647,-1} %write{126,611}
local	float	___671_minus_k_separate_outz	%read{164,636} %write{127,612}
local	float	___671_delta_abs_separate_outx	%read{166,638} %write{141,632}
local	float	___671_delta_abs_separate_outy	%read{165,637} %write{142,633}
local	float	___671_combine_mkx_ky_out.x	%read{190,671} %write{162,634} %mystruct{___671_combine_mkx_ky_out} %mystructfield{0}
local	float	___671_combine_mkx_ky_out.y	%read{191,672} %write{163,635} %mystruct{___671_combine_mkx_ky_out} %mystructfield{1}
local	float	___671_minus_kz_r_out	%read{221,693} %write{164,636}
local	float	___671_p_out.x	%read{168,659} %write{165,637} %mystruct{___671_p_out} %mystructfield{0}
local	float	___671_p_out.y	%read{169,660} %write{166,638} %mystruct{___671_p_out} %mystructfield{1}
local	float	___671_dot_kxy_p_out	%read{172,644} %write{170,642}
local	float	___671_min_dotkxyp_p_in2_tmp	%read{172,644} %write{171,643}
local	float	___671_min_dotkxyp_p_out	%read{174,647} %write{172,644}
local	float	___671_multiply_kxy_min_out.x	%read{184,656} %write{177,649} %mystruct{___671_multiply_kxy_min_out} %mystructfield{0}
local	float	___671_multiply_kxy_min_out.y	%read{185,657} %write{178,650} %mystruct{___671_multiply_kxy_min_out} %mystructfield{1}
local	float	___671_multiply2_1_in2_tmp	%read{181,654} %write{179,651}
local	float	___671_multiply2_1_out.x	%read{187,659} %write{184,656} %mystruct{___671_multiply2_1_out} %mystructfield{0}
local	float	___671_multiply2_1_out.y	%read{188,660} %write{185,657} %mystruct{___671_multiply2_1_out} %mystructfield{1}
local	float	___671_new_p1_out.x	%read{190,681} %write{187,659} %mystruct{___671_new_p1_out} %mystructfield{0}
local	float	___671_new_p1_out.y	%read{191,682} %write{188,660} %mystruct{___671_new_p1_out} %mystructfield{1}
local	float	___671_dot_kxy_p1_out	%read{194,666} %write{192,664}
local	float	___671_min_0_in2_tmp	%read{194,666} %write{193,665}
local	float	___671_min_0_out	%read{196,669} %write{194,666}
local	float	___671_multiply_min_comb_out.x	%read{206,678} %write{199,671} %mystruct{___671_multiply_min_comb_out} %mystructfield{0}
local	float	___671_multiply_min_comb_out.y	%read{207,679} %write{200,672} %mystruct{___671_multiply_min_comb_out} %mystructfield{1}
local	float	___671_multiply2_2_in2_tmp	%read{203,676} %write{201,673}
local	float	___671_multiply2_2_out.x	%read{209,681} %write{206,678} %mystruct{___671_multiply2_2_out} %mystructfield{0}
local	float	___671_multiply2_2_out.y	%read{210,682} %write{207,679} %mystruct{___671_multiply2_2_out} %mystructfield{1}
local	float	___671_new_p2_out.x	%read{215,697} %write{209,681} %mystruct{___671_new_p2_out} %mystructfield{0}
local	float	___671_new_p2_out.y	%read{217,698} %write{210,682} %mystruct{___671_new_p2_out} %mystructfield{1}
local	int	___671_new_p2_x_index_tmp	%read{213,685} %write{211,683}
local	float	___671_new_p2_x_out	%read{220,692} %write{215,689}
local	float	___671_clamp_out	%read{222,694} %write{221,693}
local	float	___671_combine_clamp_rad_out.x	%read{225,697} %write{222,694} %mystruct{___671_combine_clamp_rad_out} %mystructfield{0}
local	float	___671_combine_clamp_rad_out.y	%read{226,698} %write{223,695} %mystruct{___671_combine_clamp_rad_out} %mystructfield{1}
local	float	___671_new_p3_out.x	%read{230,702} %write{225,697} %mystruct{___671_new_p3_out} %mystructfield{0}
local	float	___671_new_p3_out.y	%read{231,703} %write{226,698} %mystruct{___671_new_p3_out} %mystructfield{1}
local	float	___671_p3_sum_in2_tmp.x	%read{230,702} %write{227,699} %mystruct{___671_p3_sum_in2_tmp} %mystructfield{0}
local	float	___671_p3_sum_in2_tmp.y	%read{231,703} %write{228,700} %mystruct{___671_p3_sum_in2_tmp} %mystructfield{1}
local	float	___671_p3_sum_out	%read{233,705} %write{232,704}
local	float	___671_p3_sqrt_out	%read{237,709} %write{233,705}
local	float	___671_ifgreater_p3_value2_tmp	%read{237,709} %write{234,706}
local	float	___671_ifgreater_p3_in1_tmp	%read{240,712} %write{235,707}
local	float	___671_ifgreater_p3_in2_tmp	%read{242,714} %write{236,708}
local	float	___671_ifgreater_p3_out	%read{244,716} %write{240,714}
local	color	___672_combine_out	%read{730,1139} %write{729,1138}
local	float	___673_texcoord_scale_out.x	%read{18,18} %write{13,13} %mystruct{___673_texcoord_scale_out} %mystructfield{0}
local	float	___673_texcoord_scale_out.y	%read{19,19} %write{14,14} %mystruct{___673_texcoord_scale_out} %mystructfield{1}
local	float	___673_scale_half_in2_tmp	%read{16,16} %write{15,15}
local	float	___673_scale_half_out	%read{288,695} %write{16,16}
local	float	___673_texcoord_bias_out.x	%read{27,48} %write{18,18} %mystruct{___673_texcoord_bias_out} %mystructfield{0}
local	float	___673_texcoord_bias_out.y	%read{29,53} %write{19,19} %mystruct{___673_texcoord_bias_out} %mystructfield{1}
local	float	___673_texcoord_bias_separate_outx	%read{92,92} %write{20,39}
local	float	___673_texcoord_bias_separate_outy	%read{56,65} %write{21,40}
local	float	___673_mod_texcoord_in2_tmp.x	%read{45,47} %write{41,41} %mystruct{___673_mod_texcoord_in2_tmp} %mystructfield{0}
local	float	___673_mod_texcoord_in2_tmp.y	%read{50,52} %write{42,42} %mystruct{___673_mod_texcoord_in2_tmp} %mystructfield{1}
local	float	___673_mod_texcoord_out.x	%read{71,71} %write{48,48} %mystruct{___673_mod_texcoord_out} %mystructfield{0}
local	float	___673_mod_texcoord_out.y	%read{72,72} %write{53,53} %mystruct{___673_mod_texcoord_out} %mystructfield{1}
local	float	___673_stagg_Y_in2_tmp	%read{56,58} %write{54,54}
local	float	___673_stagg_Y_out	%read{76,76} %write{59,59}
local	float	___673_mod_Y_1_in2_tmp	%read{62,64} %write{60,60}
local	float	___673_mod_Y_1_out	%read{84,410} %write{65,65}
local	float	___673_mod_texcoord_2_in2_tmp	%read{68,69} %write{66,66}
local	float	___673_mod_texcoord_2_out.x	%read{90,90} %write{71,71} %mystruct{___673_mod_texcoord_2_out} %mystructfield{0}
local	float	___673_mod_texcoord_2_out.y	%read{91,91} %write{72,72} %mystruct{___673_mod_texcoord_2_out} %mystructfield{1}
local	float	___673_delta_X_value2_tmp	%read{76,76} %write{73,73}
local	float	___673_delta_X_in1_tmp	%read{79,79} %write{74,74}
local	float	___673_delta_X_in2_tmp	%read{81,81} %write{75,75}
local	float	___673_delta_X_out	%read{92,92} %write{79,81}
local	float	___673_coord_adj_3_in1_tmp	%read{84,84} %write{83,83}
local	float	___673_coord_adj_3_out	%read{412,412} %write{84,84}
local	float	___673_recenter_in2_tmp	%read{87,88} %write{85,85}
local	float	___673_recenter_out.x	%read{98,98} %write{90,90} %mystruct{___673_recenter_out} %mystructfield{0}
local	float	___673_recenter_out.y	%read{99,99} %write{91,91} %mystruct{___673_recenter_out} %mystructfield{1}
local	float	___673_shift_X_out	%read{247,250} %write{92,92}
local	float	___673_hexagon_regular_out	%read{725,725} %write{93,244}
local	float	___673_mod_X_1_in2_tmp	%read{247,249} %write{245,245}
local	float	___673_mod_X_1_out	%read{251,256} %write{250,250}
local	float	___673_coord_circ1_out.x	%read{262,262} %write{251,251} %mystruct{___673_coord_circ1_out} %mystructfield{0}
local	float	___673_coord_circ1_out.y	%read{263,263} %write{252,252} %mystruct{___673_coord_circ1_out} %mystructfield{1}
local	float	___673_coord_adj_1_in1_tmp	%read{254,254} %write{253,253}
local	float	___673_coord_adj_1_out	%read{409,409} %write{254,254}
local	float	___673_coord_adj_2_in2_tmp	%read{256,256} %write{255,255}
local	float	___673_coord_adj_2_out	%read{411,411} %write{256,256}
local	float	___673_hexagon_stagg1_out	%read{717,717} %write{257,408}
local	float	___673_coord_circ2_out.x	%read{418,418} %write{409,409} %mystruct{___673_coord_circ2_out} %mystructfield{0}
local	float	___673_coord_circ2_out.y	%read{419,419} %write{410,410} %mystruct{___673_coord_circ2_out} %mystructfield{1}
local	float	___673_coord_circ3_out.x	%read{570,570} %write{411,411} %mystruct{___673_coord_circ3_out} %mystructfield{0}
local	float	___673_coord_circ3_out.y	%read{571,571} %write{412,412} %mystruct{___673_coord_circ3_out} %mystructfield{1}
local	float	___673_hexagon_stagg2_out	%read{717,717} %write{413,564}
local	float	___673_hexagon_stagg3_out	%read{718,718} %write{565,716}
local	float	___673_max1_out	%read{718,718} %write{717,717}
local	float	___673_max_out	%read{723,723} %write{718,718}
local	int	___673_pattern_selection_value2_tmp	%read{720,720} %write{719,719}
local	float	___673_pattern_selection_out	%read{729,729} %write{723,725}
local	color	___673_to_rgb_out	%read{731,731} %write{727,730}
local	float	___674_roughness_sqr	%read{751,1131} %write{743,1117}
local	float	___675_aspect	%read{751,1128} %write{750,1124}
local	vector	___678_nAxis	%read{801,1001} %write{797,943}
local	float	___678_s	%read{811,997} %write{798,944}
local	float	___678_c	%read{800,1003} %write{799,945}
local	float	___678_oc	%read{802,1000} %write{800,946}
local	float	___679_rotationRadians	%read{798,945} %write{795,941}
local	matrix	___679_m	%read{864,1051} %write{858,1004}
local	float	___679_trans.x	%read{908,1054} %write{874,1020} %mystruct{___679_trans} %mystructfield{0}
local	float	___679_trans.y	%read{908,1054} %write{885,1031} %mystruct{___679_trans} %mystructfield{1}
local	float	___679_trans.z	%read{908,1054} %write{896,1042} %mystruct{___679_trans} %mystructfield{2}
local	float	___679_trans.w	%read{2147483647,-1} %write{907,1053} %mystruct{___679_trans} %mystructfield{3}
local	color	___680_r	%read{917,931} %write{916,916}
local	color	___680_r_sqrt	%read{921,922} %write{917,917}
local	color	___680_n_min	%read{924,924} %write{920,920}
local	color	___680_n_max	%read{924,924} %write{923,923}
local	color	___680_np1	%read{927,927} %write{925,925}
local	color	___680_nm1	%read{929,929} %write{926,926}
local	color	___680_k2	%read{934,935} %write{932,934}
local	color	___681_reflection_tint	%read{1150,1178} %write{1144,1173}
local	color	___681_transmission_tint	%read{1150,1178} %write{1148,1177}
local	float	___694_x	%read{1227,1227} %write{1226,1226}
local	float	___695_NdotV	%read{1223,1223} %write{1221,1221}
local	color	___695_f	%read{1229,1229} %write{1228,1228}
local	closure color	___697_null_closure	%read{1140,1236} %write{736,736}
local	float	___697_coat_roughness_vector_out.x	%read{753,1150} %write{737,756} %mystruct{___697_coat_roughness_vector_out} %mystructfield{0}
local	float	___697_coat_roughness_vector_out.y	%read{755,1150} %write{738,757} %mystruct{___697_coat_roughness_vector_out} %mystructfield{1}
local	float	___697_coat_tangent_rotate_degree_in2_tmp	%read{759,759} %write{758,758}
local	float	___697_coat_tangent_rotate_degree_out	%read{795,795} %write{759,759}
local	color	___697_metal_reflectivity_out	%read{915,915} %write{760,760}
local	color	___697_metal_edgecolor_out	%read{924,924} %write{761,761}
local	float	___697_coat_affect_roughness_multiply1_out	%read{936,936} %write{762,762}
local	float	___697_tangent_rotate_degree_in2_tmp	%read{764,764} %write{763,763}
local	float	___697_tangent_rotate_degree_out	%read{941,941} %write{764,764}
local	float	___697_transmission_roughness_add_out	%read{1058,1058} %write{765,765}
local	float	___697_subsurface_color_nonnegative_in2_tmp	%read{767,767} %write{766,766}
local	color	___697_subsurface_color_nonnegative_out	%read{1132,1132} %write{768,768}
local	float	___697_coat_clamped_low_tmp	%read{773,773} %write{769,769}
local	float	___697_coat_clamped_high_tmp	%read{772,772} %write{770,770}
local	float	___697_coat_clamped_out	%read{1060,1060} %write{773,773}
local	color	___697_subsurface_radius_scaled_out	%read{1188,1188} %write{774,774}
local	float	___697_subsurface_selector_out	%read{1190,1192} %write{776,776}
local	float	___697_base_color_nonnegative_in2_tmp	%read{778,778} %write{777,777}
local	color	___697_base_color_nonnegative_out	%read{1133,1133} %write{779,779}
local	color	___697_coat_attenuation_bg_tmp	%read{781,781} %write{780,780}
local	color	___697_coat_attenuation_out	%read{1213,1213} %write{781,781}
local	float	___697_one_minus_coat_ior_in1_tmp	%read{783,783} %write{782,782}
local	float	___697_one_minus_coat_ior_out	%read{1061,1061} %write{783,783}
local	float	___697_one_plus_coat_ior_in1_tmp	%read{785,785} %write{784,784}
local	float	___697_one_plus_coat_ior_out	%read{1061,1061} %write{785,785}
local	color	___697_emission_weight_out	%read{1215,1215} %write{786,786}
local	color	___697_opacity_luminance_out	%read{1064,1064} %write{787,790}
local	vector	___697_coat_tangent_rotate_out	%read{1065,1065} %write{791,908}
local	color	___697_artistic_ior_ior	%read{925,1154} %write{909,924}
local	color	___697_artistic_ior_extinction	%read{1154,1154} %write{910,935}
local	float	___697_coat_affect_roughness_multiply2_out	%read{1067,1070} %write{936,936}
local	vector	___697_tangent_rotate_out	%read{1068,1068} %write{937,1054}
local	float	___697_transmission_roughness_clamped_low_tmp	%read{1059,1059} %write{1055,1055}
local	float	___697_transmission_roughness_clamped_high_tmp	%read{1058,1058} %write{1056,1056}
local	float	___697_transmission_roughness_clamped_out	%read{1070,1070} %write{1059,1059}
local	float	___697_coat_gamma_multiply_out	%read{1072,1072} %write{1060,1060}
local	float	___697_coat_ior_to_F0_sqrt_out	%read{1073,1073} %write{1061,1061}
local	int	___697_opacity_luminance_float_index_tmp	%read{1064,1064} %write{1062,1062}
local	float	___697_opacity_luminance_float_out	%read{1242,1242} %write{1064,1064}
local	vector	___697_coat_tangent_rotate_normalize_out	%read{1078,1078} %write{1065,1065}
local	float	___697_coat_affected_roughness_fg_tmp	%read{1067,1067} %write{1066,1066}
local	float	___697_coat_affected_roughness_out	%read{1085,1085} %write{1067,1067}
local	vector	___697_tangent_rotate_normalize_out	%read{1107,1107} %write{1068,1068}
local	float	___697_coat_affected_transmission_roughness_fg_tmp	%read{1070,1070} %write{1069,1069}
local	float	___697_coat_affected_transmission_roughness_out	%read{1114,1114} %write{1070,1070}
local	float	___697_coat_gamma_in2_tmp	%read{1072,1072} %write{1071,1071}
local	float	___697_coat_gamma_out	%read{1132,1133} %write{1072,1072}
local	float	___697_coat_ior_to_F0_out	%read{1135,1135} %write{1073,1073}
local	float	___697_coat_tangent_value2_tmp	%read{1075,1075} %write{1074,1074}
local	vector	___697_coat_tangent_out	%read{1150,1150} %write{1078,1080}
local	float	___697_main_roughness_out.x	%read{1098,1166} %write{1082,1101} %mystruct{___697_main_roughness_out} %mystructfield{0}
local	float	___697_main_roughness_out.y	%read{1100,1166} %write{1083,1102} %mystruct{___697_main_roughness_out} %mystructfield{1}
local	float	___697_main_tangent_value2_tmp	%read{1104,1104} %write{1103,1103}
local	vector	___697_main_tangent_out	%read{1154,1178} %write{1107,1109}
local	float	___697_transmission_roughness_out.x	%read{1127,1178} %write{1111,1130} %mystruct{___697_transmission_roughness_out} %mystructfield{0}
local	float	___697_transmission_roughness_out.y	%read{1129,1178} %write{1112,1131} %mystruct{___697_transmission_roughness_out} %mystructfield{1}
local	color	___697_coat_affected_subsurface_color_out	%read{1183,1187} %write{1132,1132}
local	color	___697_coat_affected_diffuse_color_out	%read{1194,1194} %write{1133,1133}
local	float	___697_one_minus_coat_ior_to_F0_in1_tmp	%read{1135,1135} %write{1134,1134}
local	float	___697_one_minus_coat_ior_to_F0_out	%read{1138,1138} %write{1135,1135}
local	color	___697_emission_color0_out	%read{1228,1228} %write{1136,1139}
local	closure color	___697_coat_bsdf_out	%read{1214,1214} %write{1140,1151}
local	float	___697_metal_bsdf_weight_tmp	%read{1155,1155} %write{1152,1152}
local	string	___697_metal_bsdf_distribution_tmp	%read{1154,1154} %write{1153,1153}
local	closure color	___697_metal_bsdf_out	%read{1211,1211} %write{1155,1155}
local	closure color	___697_specular_bsdf_out	%read{1207,1207} %write{1156,1167}
local	closure color	___697_transmission_bsdf_out	%read{1205,1205} %write{1168,1179}
local	closure color	___697_sheen_bsdf_out	%read{1201,1201} %write{1181,1181}
local	float	___697_translucent_bsdf_weight_tmp	%read{1184,1184} %write{1182,1182}
local	closure color	___697_translucent_bsdf_out	%read{1192,1192} %write{1184,1184}
local	closure color	___697_subsurface_bsdf_out	%read{1191,1191} %write{1185,1188}
local	closure color	___697_selected_subsurface_bsdf_out	%read{1199,1199} %write{1193,1193}
local	closure color	___697_diffuse_bsdf_out	%read{1198,1198} %write{1195,1195}
local	closure color	___697_subsurface_mix_out	%read{1201,1201} %write{1200,1200}
local	closure color	___697_sheen_layer_out	%read{1204,1204} %write{1201,1201}
local	closure color	___697_transmission_mix_out	%read{1207,1207} %write{1206,1206}
local	closure color	___697_specular_layer_out	%read{1210,1210} %write{1207,1207}
local	closure color	___697_metalness_mix_out	%read{1213,1213} %write{1212,1212}
local	closure color	___697_thin_film_layer_attenuated_out	%read{1214,1214} %write{1213,1213}
local	closure color	___697_coat_layer_out	%read{1239,1239} %write{1214,1214}
local	closure color	___697_emission_edf_out	%read{1216,1232} %write{1215,1215}
local	closure color	___697_coat_tinted_emission_edf_out	%read{1229,1229} %write{1216,1216}
local	closure color	___697_coat_emission_edf_out	%read{1233,1233} %write{1217,1229}
local	closure color	___697_blended_coat_emission_edf_out	%read{1240,1240} %write{1234,1234}
local	closure color	___697_shader_constructor_out.bsdf	%read{1245,1245} %write{1235,1239} %mystruct{___697_shader_constructor_out} %mystructfield{0}
local	closure color	___697_shader_constructor_out.edf	%read{1246,1246} %write{1236,1240} %mystruct{___697_shader_constructor_out} %mystructfield{1}
local	float	___697_shader_constructor_out.opacity	%read{1244,1247} %write{1237,1244} %mystruct{___697_shader_constructor_out} %mystructfield{2}
local	float	___698_opacity_weight	%read{1253,1255} %write{1251,1251}
local	closure color	null_closure	%read{732,733} %write{0,0}
local	vector	geomprop_Nworld_out1	%read{797,1194} %write{2,2}
local	vector	geomprop_Tworld_out1	%read{859,1109} %write{7,7}
local	float	geomprop_UV0_out1.x	%read{13,13} %write{8,8} %mystruct{geomprop_UV0_out1} %mystructfield{0}
local	float	geomprop_UV0_out1.y	%read{14,14} %write{9,9} %mystruct{geomprop_UV0_out1} %mystructfield{1}
local	color	tiledhexagons_color3_out	%read{760,779} %write{10,731}
local	closure color	SR_test_tiledhexagons_out.bsdf	%read{1252,1252} %write{732,1245} %mystruct{SR_test_tiledhexagons_out} %mystructfield{0}
local	closure color	SR_test_tiledhexagons_out.edf	%read{1252,1252} %write{733,1246} %mystruct{SR_test_tiledhexagons_out} %mystructfield{1}
local	float	SR_test_tiledhexagons_out.opacity	%read{1250,1250} %write{734,1247} %mystruct{SR_test_tiledhexagons_out} %mystructfield{2}
local	closure color	test_tiledhexagons_out	%read{1258,1258} %write{1257,1257}
const	int	$const1	0		%read{0,1062} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,1009} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
temp	vector	$tmp1	%read{7,7} %write{6,6}
const	int	$const4	2		%read{3,1048} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{3,3}
const	float	$const5	0		%read{6,1251} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	color	$const6	0 0 0		%read{10,1228} %write{2147483647,-1}
const	string	$const7	"NG_tiledhexagons_color3"		%read{11,11} %write{2147483647,-1}
const	string	$const8	"__operator__mul__"		%read{12,677} %write{2147483647,-1}
const	float	$const9	2		%read{15,673} %write{2147483647,-1}
const	string	$const10	"__operator__sub__"		%read{17,696} %write{2147483647,-1}
const	string	$const11	"NG_separate2_vector2"		%read{22,615} %write{2147483647,-1}
const	string	$const12	"mx_extract"		%read{24,1063} %write{2147483647,-1}
temp	int	$tmp5	%read{26,26} %write{25,25}
const	int	$const13	1		%read{31,1045} %write{2147483647,-1}
temp	int	$tmp6	%read{34,34} %write{33,33}
const	float	$const14	1		%read{41,1255} %write{2147483647,-1}
const	string	$const15	"mod"		%read{43,246} %write{2147483647,-1}
temp	float	$tmp7	%read{47,47} %write{46,46}
temp	float	$tmp8	%read{46,46} %write{45,45}
temp	float	$tmp9	%read{48,48} %write{47,47}
temp	float	$tmp10	%read{52,52} %write{51,51}
temp	float	$tmp11	%read{51,51} %write{50,50}
temp	float	$tmp12	%read{53,53} %write{52,52}
const	float	$const16	1.73205		%read{54,54} %write{2147483647,-1}
temp	float	$tmp13	%read{58,58} %write{57,57}
temp	float	$tmp14	%read{57,57} %write{56,56}
temp	float	$tmp15	%read{59,59} %write{58,58}
const	float	$const17	0.866025		%read{60,83} %write{2147483647,-1}
temp	float	$tmp16	%read{64,64} %write{63,63}
temp	float	$tmp17	%read{63,63} %write{62,62}
temp	float	$tmp18	%read{65,65} %write{64,64}
temp	float	$tmp19.x	%read{71,71} %write{68,68}
temp	float	$tmp19.y	%read{72,72} %write{69,69}
const	float	$const18	0.5		%read{74,255} %write{2147483647,-1}
temp	int	$tmp20	%read{78,78} %write{76,76}
const	string	$const19	"mx_ternary"		%read{77,1105} %write{2147483647,-1}
temp	float	$tmp21.x	%read{90,90} %write{87,87}
temp	float	$tmp21.y	%read{91,91} %write{88,88}
temp	float	$tmp22.x	%read{98,98} %write{94,94}
temp	float	$tmp22.y	%read{99,99} %write{95,95}
const	string	$const20	"NG_hexagon_float"		%read{96,568} %write{2147483647,-1}
const	vector	$const21	-0.866025 0.5 0.57735		%read{106,588} %write{2147483647,-1}
const	string	$const22	"NG_separate3_vector3"		%read{103,600} %write{2147483647,-1}
const	float	$const23	-1		%read{117,589} %write{2147483647,-1}
const	string	$const24	"abs"		%read{119,591} %write{2147483647,-1}
temp	int	$tmp24	%read{147,147} %write{146,146}
temp	int	$tmp25	%read{155,155} %write{154,154}
const	string	$const25	"dot"		%read{167,701} %write{2147483647,-1}
temp	float	$tmp26	%read{170,170} %write{168,168}
temp	float	$tmp27	%read{170,170} %write{169,169}
temp	float	$tmp28.x	%read{177,177} %write{174,174}
temp	float	$tmp28.y	%read{178,178} %write{175,175}
temp	float	$tmp29.x	%read{184,184} %write{181,181}
temp	float	$tmp29.y	%read{185,185} %write{182,182}
temp	float	$tmp30	%read{192,192} %write{190,190}
temp	float	$tmp31	%read{192,192} %write{191,191}
temp	float	$tmp32.x	%read{199,199} %write{196,196}
temp	float	$tmp32.y	%read{200,200} %write{197,197}
temp	float	$tmp33.x	%read{206,206} %write{203,203}
temp	float	$tmp33.y	%read{207,207} %write{204,204}
temp	int	$tmp34	%read{214,214} %write{213,213}
const	string	$const26	"clamp"		%read{219,1249} %write{2147483647,-1}
temp	float	$tmp35	%read{221,221} %write{220,220}
temp	float	$tmp36	%read{232,232} %write{230,230}
temp	float	$tmp37	%read{232,232} %write{231,231}
temp	int	$tmp38	%read{239,239} %write{237,237}
temp	float	$tmp39	%read{249,249} %write{248,248}
temp	float	$tmp40	%read{248,248} %write{247,247}
temp	float	$tmp41	%read{250,250} %write{249,249}
temp	float	$tmp42.x	%read{262,262} %write{258,258}
temp	float	$tmp42.y	%read{263,263} %write{259,259}
temp	int	$tmp44	%read{311,311} %write{310,310}
temp	int	$tmp45	%read{319,319} %write{318,318}
temp	float	$tmp46	%read{334,334} %write{332,332}
temp	float	$tmp47	%read{334,334} %write{333,333}
temp	float	$tmp48.x	%read{341,341} %write{338,338}
temp	float	$tmp48.y	%read{342,342} %write{339,339}
temp	float	$tmp49.x	%read{348,348} %write{345,345}
temp	float	$tmp49.y	%read{349,349} %write{346,346}
temp	float	$tmp50	%read{356,356} %write{354,354}
temp	float	$tmp51	%read{356,356} %write{355,355}
temp	float	$tmp52.x	%read{363,363} %write{360,360}
temp	float	$tmp52.y	%read{364,364} %write{361,361}
temp	float	$tmp53.x	%read{370,370} %write{367,367}
temp	float	$tmp53.y	%read{371,371} %write{368,368}
temp	int	$tmp54	%read{378,378} %write{377,377}
temp	float	$tmp55	%read{385,385} %write{384,384}
temp	float	$tmp56	%read{396,396} %write{394,394}
temp	float	$tmp57	%read{396,396} %write{395,395}
temp	int	$tmp58	%read{403,403} %write{401,401}
temp	float	$tmp59.x	%read{418,418} %write{414,414}
temp	float	$tmp59.y	%read{419,419} %write{415,415}
temp	int	$tmp61	%read{467,467} %write{466,466}
temp	int	$tmp62	%read{475,475} %write{474,474}
temp	float	$tmp63	%read{490,490} %write{488,488}
temp	float	$tmp64	%read{490,490} %write{489,489}
temp	float	$tmp65.x	%read{497,497} %write{494,494}
temp	float	$tmp65.y	%read{498,498} %write{495,495}
temp	float	$tmp66.x	%read{504,504} %write{501,501}
temp	float	$tmp66.y	%read{505,505} %write{502,502}
temp	float	$tmp67	%read{512,512} %write{510,510}
temp	float	$tmp68	%read{512,512} %write{511,511}
temp	float	$tmp69.x	%read{519,519} %write{516,516}
temp	float	$tmp69.y	%read{520,520} %write{517,517}
temp	float	$tmp70.x	%read{526,526} %write{523,523}
temp	float	$tmp70.y	%read{527,527} %write{524,524}
temp	int	$tmp71	%read{534,534} %write{533,533}
temp	float	$tmp72	%read{541,541} %write{540,540}
temp	float	$tmp73	%read{552,552} %write{550,550}
temp	float	$tmp74	%read{552,552} %write{551,551}
temp	int	$tmp75	%read{559,559} %write{557,557}
temp	float	$tmp76.x	%read{570,570} %write{566,566}
temp	float	$tmp76.y	%read{571,571} %write{567,567}
temp	int	$tmp78	%read{619,619} %write{618,618}
temp	int	$tmp79	%read{627,627} %write{626,626}
temp	float	$tmp80	%read{642,642} %write{640,640}
temp	float	$tmp81	%read{642,642} %write{641,641}
temp	float	$tmp82.x	%read{649,649} %write{646,646}
temp	float	$tmp82.y	%read{650,650} %write{647,647}
temp	float	$tmp83.x	%read{656,656} %write{653,653}
temp	float	$tmp83.y	%read{657,657} %write{654,654}
temp	float	$tmp84	%read{664,664} %write{662,662}
temp	float	$tmp85	%read{664,664} %write{663,663}
temp	float	$tmp86.x	%read{671,671} %write{668,668}
temp	float	$tmp86.y	%read{672,672} %write{669,669}
temp	float	$tmp87.x	%read{678,678} %write{675,675}
temp	float	$tmp87.y	%read{679,679} %write{676,676}
temp	int	$tmp88	%read{686,686} %write{685,685}
temp	float	$tmp89	%read{693,693} %write{692,692}
temp	float	$tmp90	%read{704,704} %write{702,702}
temp	float	$tmp91	%read{704,704} %write{703,703}
temp	int	$tmp92	%read{711,711} %write{709,709}
temp	int	$tmp93	%read{722,722} %write{720,720}
const	string	$const27	"NG_convert_float_color3"		%read{728,1137} %write{2147483647,-1}
const	string	$const28	"NG_standard_surface_surfaceshader_100"		%read{735,735} %write{2147483647,-1}
const	string	$const29	"mx_roughness_anisotropy"		%read{739,1113} %write{2147483647,-1}
temp	float	$tmp94	%read{742,742} %write{740,740}
const	float	$const30	1e-08		%read{743,1117} %write{2147483647,-1}
temp	float	$tmp95	%read{743,743} %write{742,742}
temp	int	$tmp96	%read{745,745} %write{744,744}
temp	float	$tmp97	%read{749,749} %write{748,748}
const	float	$const31	0.98		%read{747,1121} %write{2147483647,-1}
temp	float	$tmp98	%read{748,748} %write{747,747}
temp	float	$tmp99	%read{750,750} %write{749,749}
temp	float	$tmp100	%read{752,752} %write{751,751}
const	float	$const32	360		%read{758,763} %write{2147483647,-1}
temp	color	$tmp101	%read{768,768} %write{767,767}
temp	float	$tmp102	%read{773,773} %write{772,772}
temp	float	$tmp103	%read{776,776} %write{775,775}
temp	color	$tmp104	%read{779,779} %write{778,778}
const	color	$const33	1 1 1		%read{780,1149} %write{2147483647,-1}
const	color	$const34	0.272229 0.674082 0.053689		%read{789,789} %write{2147483647,-1}
const	string	$const35	"mx_luminance_color3"		%read{788,788} %write{2147483647,-1}
temp	float	$tmp106	%read{790,790} %write{789,789}
const	vector	$const36	0 0 0		%read{791,937} %write{2147483647,-1}
const	string	$const37	"mx_rotate_vector3"		%read{792,938} %write{2147483647,-1}
const	string	$const38	"radians"		%read{793,939} %write{2147483647,-1}
const	float	$const39	3.1415927		%read{794,940} %write{2147483647,-1}
const	float	$const40	180		%read{794,940} %write{2147483647,-1}
temp	float	$tmp107	%read{795,795} %write{794,794}
const	string	$const41	"rotationMatrix"		%read{796,942} %write{2147483647,-1}
temp	float	$tmp108	%read{802,802} %write{801,801}
temp	float	$tmp109	%read{804,804} %write{802,802}
temp	float	$tmp110	%read{804,804} %write{803,803}
temp	float	$tmp111	%read{805,805} %write{804,804}
temp	float	$tmp112	%read{858,858} %write{805,805}
temp	float	$tmp113	%read{807,807} %write{806,806}
temp	float	$tmp114	%read{809,809} %write{807,807}
temp	float	$tmp115	%read{809,809} %write{808,808}
temp	float	$tmp116	%read{812,812} %write{809,809}
temp	float	$tmp117	%read{811,811} %write{810,810}
temp	float	$tmp118	%read{812,812} %write{811,811}
temp	float	$tmp119	%read{858,858} %write{812,812}
temp	float	$tmp120	%read{814,814} %write{813,813}
temp	float	$tmp121	%read{816,816} %write{814,814}
temp	float	$tmp122	%read{816,816} %write{815,815}
temp	float	$tmp123	%read{819,819} %write{816,816}
temp	float	$tmp124	%read{818,818} %write{817,817}
temp	float	$tmp125	%read{819,819} %write{818,818}
temp	float	$tmp126	%read{858,858} %write{819,819}
temp	float	$tmp127	%read{821,821} %write{820,820}
temp	float	$tmp128	%read{823,823} %write{821,821}
temp	float	$tmp129	%read{823,823} %write{822,822}
temp	float	$tmp130	%read{826,826} %write{823,823}
temp	float	$tmp131	%read{825,825} %write{824,824}
temp	float	$tmp132	%read{826,826} %write{825,825}
temp	float	$tmp133	%read{858,858} %write{826,826}
temp	float	$tmp134	%read{828,828} %write{827,827}
temp	float	$tmp135	%read{830,830} %write{828,828}
temp	float	$tmp136	%read{830,830} %write{829,829}
temp	float	$tmp137	%read{831,831} %write{830,830}
temp	float	$tmp138	%read{858,858} %write{831,831}
temp	float	$tmp139	%read{833,833} %write{832,832}
temp	float	$tmp140	%read{835,835} %write{833,833}
temp	float	$tmp141	%read{835,835} %write{834,834}
temp	float	$tmp142	%read{838,838} %write{835,835}
temp	float	$tmp143	%read{837,837} %write{836,836}
temp	float	$tmp144	%read{838,838} %write{837,837}
temp	float	$tmp145	%read{858,858} %write{838,838}
temp	float	$tmp146	%read{840,840} %write{839,839}
temp	float	$tmp147	%read{842,842} %write{840,840}
temp	float	$tmp148	%read{842,842} %write{841,841}
temp	float	$tmp149	%read{845,845} %write{842,842}
temp	float	$tmp150	%read{844,844} %write{843,843}
temp	float	$tmp151	%read{845,845} %write{844,844}
temp	float	$tmp152	%read{858,858} %write{845,845}
temp	float	$tmp153	%read{847,847} %write{846,846}
temp	float	$tmp154	%read{849,849} %write{847,847}
temp	float	$tmp155	%read{849,849} %write{848,848}
temp	float	$tmp156	%read{852,852} %write{849,849}
temp	float	$tmp157	%read{851,851} %write{850,850}
temp	float	$tmp158	%read{852,852} %write{851,851}
temp	float	$tmp159	%read{858,858} %write{852,852}
temp	float	$tmp160	%read{854,854} %write{853,853}
temp	float	$tmp161	%read{856,856} %write{854,854}
temp	float	$tmp162	%read{856,856} %write{855,855}
temp	float	$tmp163	%read{857,857} %write{856,856}
temp	float	$tmp164	%read{858,858} %write{857,857}
temp	float	$tmp165.x	%read{865,898} %write{859,859}
temp	float	$tmp165.y	%read{867,900} %write{860,860}
temp	float	$tmp165.z	%read{870,903} %write{861,861}
temp	float	$tmp165.w	%read{873,906} %write{862,862}
temp	float	$tmp166	%read{865,865} %write{864,864}
temp	float	$tmp167	%read{868,868} %write{865,865}
temp	float	$tmp168	%read{867,867} %write{866,866}
temp	float	$tmp169	%read{868,868} %write{867,867}
temp	float	$tmp170	%read{871,871} %write{868,868}
temp	float	$tmp171	%read{870,870} %write{869,869}
temp	float	$tmp172	%read{871,871} %write{870,870}
temp	float	$tmp173	%read{874,874} %write{871,871}
const	int	$const42	3		%read{872,1051} %write{2147483647,-1}
temp	float	$tmp174	%read{873,873} %write{872,872}
temp	float	$tmp175	%read{874,874} %write{873,873}
temp	float	$tmp176	%read{876,876} %write{875,875}
temp	float	$tmp177	%read{879,879} %write{876,876}
temp	float	$tmp178	%read{878,878} %write{877,877}
temp	float	$tmp179	%read{879,879} %write{878,878}
temp	float	$tmp180	%read{882,882} %write{879,879}
temp	float	$tmp181	%read{881,881} %write{880,880}
temp	float	$tmp182	%read{882,882} %write{881,881}
temp	float	$tmp183	%read{885,885} %write{882,882}
temp	float	$tmp184	%read{884,884} %write{883,883}
temp	float	$tmp185	%read{885,885} %write{884,884}
temp	float	$tmp186	%read{887,887} %write{886,886}
temp	float	$tmp187	%read{890,890} %write{887,887}
temp	float	$tmp188	%read{889,889} %write{888,888}
temp	float	$tmp189	%read{890,890} %write{889,889}
temp	float	$tmp190	%read{893,893} %write{890,890}
temp	float	$tmp191	%read{892,892} %write{891,891}
temp	float	$tmp192	%read{893,893} %write{892,892}
temp	float	$tmp193	%read{896,896} %write{893,893}
temp	float	$tmp194	%read{895,895} %write{894,894}
temp	float	$tmp195	%read{896,896} %write{895,895}
temp	float	$tmp196	%read{898,898} %write{897,897}
temp	float	$tmp197	%read{901,901} %write{898,898}
temp	float	$tmp198	%read{900,900} %write{899,899}
temp	float	$tmp199	%read{901,901} %write{900,900}
temp	float	$tmp200	%read{904,904} %write{901,901}
temp	float	$tmp201	%read{903,903} %write{902,902}
temp	float	$tmp202	%read{904,904} %write{903,903}
temp	float	$tmp203	%read{907,907} %write{904,904}
temp	float	$tmp204	%read{906,906} %write{905,905}
temp	float	$tmp205	%read{907,907} %write{906,906}
const	string	$const43	"mx_artistic_ior"		%read{911,911} %write{2147483647,-1}
temp	color	$tmp206	%read{916,916} %write{912,912}
const	float	$const44	0.99		%read{913,913} %write{2147483647,-1}
temp	color	$tmp207	%read{915,915} %write{913,913}
temp	color	$tmp208	%read{916,916} %write{915,915}
temp	color	$tmp209	%read{920,920} %write{918,918}
temp	color	$tmp210	%read{920,920} %write{919,919}
temp	color	$tmp211	%read{923,923} %write{921,921}
temp	color	$tmp212	%read{923,923} %write{922,922}
temp	color	$tmp213	%read{928,928} %write{927,927}
temp	color	$tmp214	%read{930,930} %write{928,928}
temp	color	$tmp215	%read{930,930} %write{929,929}
temp	color	$tmp216	%read{932,932} %write{930,930}
temp	color	$tmp217	%read{932,932} %write{931,931}
temp	color	$tmp218	%read{934,934} %write{933,933}
temp	float	$tmp219	%read{941,941} %write{940,940}
temp	float	$tmp220	%read{948,948} %write{947,947}
temp	float	$tmp221	%read{950,950} %write{948,948}
temp	float	$tmp222	%read{950,950} %write{949,949}
temp	float	$tmp223	%read{951,951} %write{950,950}
temp	float	$tmp224	%read{1004,1004} %write{951,951}
temp	float	$tmp225	%read{953,953} %write{952,952}
temp	float	$tmp226	%read{955,955} %write{953,953}
temp	float	$tmp227	%read{955,955} %write{954,954}
temp	float	$tmp228	%read{958,958} %write{955,955}
temp	float	$tmp229	%read{957,957} %write{956,956}
temp	float	$tmp230	%read{958,958} %write{957,957}
temp	float	$tmp231	%read{1004,1004} %write{958,958}
temp	float	$tmp232	%read{960,960} %write{959,959}
temp	float	$tmp233	%read{962,962} %write{960,960}
temp	float	$tmp234	%read{962,962} %write{961,961}
temp	float	$tmp235	%read{965,965} %write{962,962}
temp	float	$tmp236	%read{964,964} %write{963,963}
temp	float	$tmp237	%read{965,965} %write{964,964}
temp	float	$tmp238	%read{1004,1004} %write{965,965}
temp	float	$tmp239	%read{967,967} %write{966,966}
temp	float	$tmp240	%read{969,969} %write{967,967}
temp	float	$tmp241	%read{969,969} %write{968,968}
temp	float	$tmp242	%read{972,972} %write{969,969}
temp	float	$tmp243	%read{971,971} %write{970,970}
temp	float	$tmp244	%read{972,972} %write{971,971}
temp	float	$tmp245	%read{1004,1004} %write{972,972}
temp	float	$tmp246	%read{974,974} %write{973,973}
temp	float	$tmp247	%read{976,976} %write{974,974}
temp	float	$tmp248	%read{976,976} %write{975,975}
temp	float	$tmp249	%read{977,977} %write{976,976}
temp	float	$tmp250	%read{1004,1004} %write{977,977}
temp	float	$tmp251	%read{979,979} %write{978,978}
temp	float	$tmp252	%read{981,981} %write{979,979}
temp	float	$tmp253	%read{981,981} %write{980,980}
temp	float	$tmp254	%read{984,984} %write{981,981}
temp	float	$tmp255	%read{983,983} %write{982,982}
temp	float	$tmp256	%read{984,984} %write{983,983}
temp	float	$tmp257	%read{1004,1004} %write{984,984}
temp	float	$tmp258	%read{986,986} %write{985,985}
temp	float	$tmp259	%read{988,988} %write{986,986}
temp	float	$tmp260	%read{988,988} %write{987,987}
temp	float	$tmp261	%read{991,991} %write{988,988}
temp	float	$tmp262	%read{990,990} %write{989,989}
temp	float	$tmp263	%read{991,991} %write{990,990}
temp	float	$tmp264	%read{1004,1004} %write{991,991}
temp	float	$tmp265	%read{993,993} %write{992,992}
temp	float	$tmp266	%read{995,995} %write{993,993}
temp	float	$tmp267	%read{995,995} %write{994,994}
temp	float	$tmp268	%read{998,998} %write{995,995}
temp	float	$tmp269	%read{997,997} %write{996,996}
temp	float	$tmp270	%read{998,998} %write{997,997}
temp	float	$tmp271	%read{1004,1004} %write{998,998}
temp	float	$tmp272	%read{1000,1000} %write{999,999}
temp	float	$tmp273	%read{1002,1002} %write{1000,1000}
temp	float	$tmp274	%read{1002,1002} %write{1001,1001}
temp	float	$tmp275	%read{1003,1003} %write{1002,1002}
temp	float	$tmp276	%read{1004,1004} %write{1003,1003}
temp	float	$tmp277.x	%read{1011,1044} %write{1005,1005}
temp	float	$tmp277.y	%read{1013,1046} %write{1006,1006}
temp	float	$tmp277.z	%read{1016,1049} %write{1007,1007}
temp	float	$tmp277.w	%read{1019,1052} %write{1008,1008}
temp	float	$tmp278	%read{1011,1011} %write{1010,1010}
temp	float	$tmp279	%read{1014,1014} %write{1011,1011}
temp	float	$tmp280	%read{1013,1013} %write{1012,1012}
temp	float	$tmp281	%read{1014,1014} %write{1013,1013}
temp	float	$tmp282	%read{1017,1017} %write{1014,1014}
temp	float	$tmp283	%read{1016,1016} %write{1015,1015}
temp	float	$tmp284	%read{1017,1017} %write{1016,1016}
temp	float	$tmp285	%read{1020,1020} %write{1017,1017}
temp	float	$tmp286	%read{1019,1019} %write{1018,1018}
temp	float	$tmp287	%read{1020,1020} %write{1019,1019}
temp	float	$tmp288	%read{1022,1022} %write{1021,1021}
temp	float	$tmp289	%read{1025,1025} %write{1022,1022}
temp	float	$tmp290	%read{1024,1024} %write{1023,1023}
temp	float	$tmp291	%read{1025,1025} %write{1024,1024}
temp	float	$tmp292	%read{1028,1028} %write{1025,1025}
temp	float	$tmp293	%read{1027,1027} %write{1026,1026}
temp	float	$tmp294	%read{1028,1028} %write{1027,1027}
temp	float	$tmp295	%read{1031,1031} %write{1028,1028}
temp	float	$tmp296	%read{1030,1030} %write{1029,1029}
temp	float	$tmp297	%read{1031,1031} %write{1030,1030}
temp	float	$tmp298	%read{1033,1033} %write{1032,1032}
temp	float	$tmp299	%read{1036,1036} %write{1033,1033}
temp	float	$tmp300	%read{1035,1035} %write{1034,1034}
temp	float	$tmp301	%read{1036,1036} %write{1035,1035}
temp	float	$tmp302	%read{1039,1039} %write{1036,1036}
temp	float	$tmp303	%read{1038,1038} %write{1037,1037}
temp	float	$tmp304	%read{1039,1039} %write{1038,1038}
temp	float	$tmp305	%read{1042,1042} %write{1039,1039}
temp	float	$tmp306	%read{1041,1041} %write{1040,1040}
temp	float	$tmp307	%read{1042,1042} %write{1041,1041}
temp	float	$tmp308	%read{1044,1044} %write{1043,1043}
temp	float	$tmp309	%read{1047,1047} %write{1044,1044}
temp	float	$tmp310	%read{1046,1046} %write{1045,1045}
temp	float	$tmp311	%read{1047,1047} %write{1046,1046}
temp	float	$tmp312	%read{1050,1050} %write{1047,1047}
temp	float	$tmp313	%read{1049,1049} %write{1048,1048}
temp	float	$tmp314	%read{1050,1050} %write{1049,1049}
temp	float	$tmp315	%read{1053,1053} %write{1050,1050}
temp	float	$tmp316	%read{1052,1052} %write{1051,1051}
temp	float	$tmp317	%read{1053,1053} %write{1052,1052}
temp	float	$tmp318	%read{1059,1059} %write{1058,1058}
temp	int	$tmp319	%read{1077,1077} %write{1075,1075}
temp	float	$tmp320	%read{1087,1087} %write{1085,1085}
temp	float	$tmp321	%read{1088,1088} %write{1087,1087}
temp	int	$tmp322	%read{1090,1090} %write{1089,1089}
temp	float	$tmp323	%read{1094,1094} %write{1093,1093}
temp	float	$tmp324	%read{1093,1093} %write{1092,1092}
temp	float	$tmp325	%read{1095,1095} %write{1094,1094}
temp	float	$tmp326	%read{1097,1097} %write{1096,1096}
temp	int	$tmp327	%read{1106,1106} %write{1104,1104}
temp	float	$tmp328	%read{1116,1116} %write{1114,1114}
temp	float	$tmp329	%read{1117,1117} %write{1116,1116}
temp	int	$tmp330	%read{1119,1119} %write{1118,1118}
temp	float	$tmp331	%read{1123,1123} %write{1122,1122}
temp	float	$tmp332	%read{1122,1122} %write{1121,1121}
temp	float	$tmp333	%read{1124,1124} %write{1123,1123}
temp	float	$tmp334	%read{1126,1126} %write{1125,1125}
const	float	$const45	1.5		%read{1150,1178} %write{2147483647,-1}
const	string	$const46	"ggx"		%read{1150,1178} %write{2147483647,-1}
const	string	$const47	"R"		%read{1142,1174} %write{2147483647,-1}
const	string	$const48	"mx_dielectric_bsdf"		%read{1141,1169} %write{2147483647,-1}
const	string	$const49	"T"		%read{1142,1174} %write{2147483647,-1}
temp	int	$tmp336	%read{1143,1143} %write{1142,1142}
temp	int	$tmp337	%read{1147,1147} %write{1146,1146}
temp	closure color	$tmp338	%read{1151,1151} %write{1150,1150}
const	string	$const50	"thinfilm_thickness"		%read{1150,1178} %write{2147483647,-1}
const	string	$const51	"thinfilm_ior"		%read{1150,1178} %write{2147483647,-1}
const	string	$const52	"dielectric_bsdf"		%read{1150,1178} %write{2147483647,-1}
temp	closure color	$tmp339	%read{1155,1155} %write{1154,1154}
const	string	$const53	"conductor_bsdf"		%read{1154,1154} %write{2147483647,-1}
temp	int	$tmp340	%read{1159,1159} %write{1158,1158}
temp	int	$tmp341	%read{1163,1163} %write{1162,1162}
temp	closure color	$tmp342	%read{1167,1167} %write{1166,1166}
temp	int	$tmp343	%read{1171,1171} %write{1170,1170}
temp	int	$tmp344	%read{1175,1175} %write{1174,1174}
temp	closure color	$tmp345	%read{1179,1179} %write{1178,1178}
temp	closure color	$tmp346	%read{1181,1181} %write{1180,1180}
const	string	$const54	"sheen_bsdf"		%read{1180,1180} %write{2147483647,-1}
temp	closure color	$tmp347	%read{1184,1184} %write{1183,1183}
const	string	$const55	"translucent_bsdf"		%read{1183,1183} %write{2147483647,-1}
const	string	$const56	"mx_subsurface_bsdf"		%read{1186,1186} %write{2147483647,-1}
temp	color	$tmp348	%read{1188,1188} %write{1187,1187}
const	string	$const57	"subsurface_bssrdf"		%read{1188,1188} %write{2147483647,-1}
const	string	$const58	"mix"		%read{1189,1230} %write{2147483647,-1}
temp	float	$tmp349	%read{1191,1191} %write{1190,1190}
temp	closure color	$tmp350	%read{1193,1193} %write{1191,1191}
temp	closure color	$tmp351	%read{1193,1193} %write{1192,1192}
temp	closure color	$tmp352	%read{1195,1195} %write{1194,1194}
const	string	$const59	"oren_nayar_diffuse_bsdf"		%read{1194,1194} %write{2147483647,-1}
temp	float	$tmp353	%read{1198,1198} %write{1197,1197}
temp	closure color	$tmp354	%read{1200,1200} %write{1198,1198}
temp	closure color	$tmp355	%read{1200,1200} %write{1199,1199}
const	string	$const60	"layer"		%read{1201,1214} %write{2147483647,-1}
temp	float	$tmp356	%read{1204,1204} %write{1203,1203}
temp	closure color	$tmp357	%read{1206,1206} %write{1204,1204}
temp	closure color	$tmp358	%read{1206,1206} %write{1205,1205}
temp	float	$tmp359	%read{1210,1210} %write{1209,1209}
temp	closure color	$tmp360	%read{1212,1212} %write{1210,1210}
temp	closure color	$tmp361	%read{1212,1212} %write{1211,1211}
const	string	$const61	"uniform_edf"		%read{1215,1215} %write{2147483647,-1}
const	float	$const62	5		%read{1227,1227} %write{2147483647,-1}
const	string	$const63	"mx_generalized_schlick_edf"		%read{1218,1218} %write{2147483647,-1}
temp	float	$tmp363	%read{1221,1221} %write{1220,1220}
temp	vector	$tmp364	%read{1220,1220} %write{1219,1219}
const	string	$const64	"mx_fresnel_schlick"		%read{1222,1222} %write{2147483647,-1}
temp	float	$tmp365	%read{1225,1225} %write{1223,1223}
temp	float	$tmp366	%read{1226,1226} %write{1225,1225}
temp	float	$tmp367	%read{1228,1228} %write{1227,1227}
temp	float	$tmp368	%read{1232,1232} %write{1231,1231}
temp	closure color	$tmp369	%read{1234,1234} %write{1232,1232}
temp	closure color	$tmp370	%read{1234,1234} %write{1233,1233}
const	string	$const65	"mx_surface"		%read{1238,1238} %write{2147483647,-1}
temp	float	$tmp371	%read{1243,1243} %write{1242,1242}
const	string	$const66	"mx_surfacematerial"		%read{1248,1248} %write{2147483647,-1}
temp	float	$tmp372	%read{1251,1251} %write{1250,1250}
temp	closure color	$tmp373	%read{1253,1253} %write{1252,1252}
temp	closure color	$tmp374	%read{1257,1257} %write{1253,1253}
temp	closure color	$tmp375	%read{1256,1256} %write{1254,1254}
const	string	$const67	"transparent"		%read{1254,1254} %write{2147483647,-1}
temp	float	$tmp376	%read{1256,1256} %write{1255,1255}
temp	closure color	$tmp377	%read{1257,1257} %write{1256,1256}
code ___main___
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:819
#     vector geomprop_Nworld_out1 = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{819} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:820
#     vector geomprop_Tworld_out1 = normalize(vector(N[2], 0, -N[0]));
	functioncall	$const2 3 	%line{820} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out1 $const3 geomprop_Nworld_space N 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{261} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:821
#     vector2 geomprop_UV0_out1 = vector2(u,v);
	compref		$tmp2 N $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{821} %argrw{"wrr"}
	compref		$tmp3 N $const1 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	vector		$tmp1 $tmp2 $const5 $tmp4 	%argrw{"wrrr"}
	normalize	geomprop_Tworld_out1 $tmp1 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:822
#     color tiledhexagons_color3_out = color(0.0);
	assign		geomprop_UV0_out1.x u 	%line{822} %argrw{"wr"}
	assign		geomprop_UV0_out1.y v 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:823
#     NG_tiledhexagons_color3(geomprop_UV0_out1, tiledhexagons_color3_uvtiling, tiledhexagons_color3_uvoffset, tiledhexagons_color3_size, tiledhexagons_color3_staggered, tiledhexagons_color3_out);
	assign		tiledhexagons_color3_out $const6 	%line{823} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:824
#     surfaceshader SR_test_tiledhexagons_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const7 732 	%line{824} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 15 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___673_texcoord_scale_out.x geomprop_UV0_out1.x tiledhexagons_color3_uvtiling.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___673_texcoord_scale_out.y geomprop_UV0_out1.y tiledhexagons_color3_uvtiling.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:102
#     float scale_half_out = size / scale_half_in2_tmp;
	assign		___673_scale_half_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{102} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:103
#     vector2 texcoord_bias_out = texcoord_scale_out - uvoffset;
	div		___673_scale_half_out tiledhexagons_color3_size ___673_scale_half_in2_tmp 	%line{103} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 20 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_texcoord_bias_out.x ___673_texcoord_scale_out.x tiledhexagons_color3_uvoffset.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_texcoord_bias_out.y ___673_texcoord_scale_out.y tiledhexagons_color3_uvoffset.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:105
#     float texcoord_bias_separate_outy = 0.0;
	assign		___673_texcoord_bias_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{105} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:106
#     NG_separate2_vector2(texcoord_bias_out, texcoord_bias_separate_outx, texcoord_bias_separate_outy);
	assign		___673_texcoord_bias_separate_outy $const5 	%line{106} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:107
#     vector2 mod_texcoord_in2_tmp = vector2(1.000000, 1.000000);
	functioncall	$const11 41 	%line{107} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 31 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp5 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp5 29 31 	%argrw{"r"}
	assign		___669_N_extract_0_out ___673_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___673_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 39 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp6 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp6 37 39 	%argrw{"r"}
	assign		___669_N_extract_1_out ___673_texcoord_bias_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___673_texcoord_bias_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:24
#     outy = N_extract_1_out;
	assign		___673_texcoord_bias_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:25
# }
	assign		___673_texcoord_bias_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:108
#     vector2 mod_texcoord_out = mod(texcoord_bias_out, mod_texcoord_in2_tmp);
	assign		___673_mod_texcoord_in2_tmp.x $const14 	%line{108} %argrw{"wr"}
	assign		___673_mod_texcoord_in2_tmp.y $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:109
#     float stagg_Y_in2_tmp = 1.732050;
	functioncall	$const15 54 	%line{109} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:257
#     return vector2(mod(a.x, b.x),
	functioncall	$const15 49 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{257} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp8 ___673_texcoord_bias_out.x ___673_mod_texcoord_in2_tmp.x 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 ___673_mod_texcoord_in2_tmp.x $tmp7 	%argrw{"wrr"}
	sub		___673_mod_texcoord_out.x ___673_texcoord_bias_out.x $tmp9 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:258
#                    mod(a.y, b.y));
	functioncall	$const15 54 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{258} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp11 ___673_texcoord_bias_out.y ___673_mod_texcoord_in2_tmp.y 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 ___673_mod_texcoord_in2_tmp.y $tmp10 	%argrw{"wrr"}
	sub		___673_mod_texcoord_out.y ___673_texcoord_bias_out.y $tmp12 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:110
#     float stagg_Y_out = mod(texcoord_bias_separate_outy, stagg_Y_in2_tmp);
	assign		___673_stagg_Y_in2_tmp $const16 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{110} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:111
#     float mod_Y_1_in2_tmp = 0.866025;
	functioncall	$const15 60 	%line{111} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp14 ___673_texcoord_bias_separate_outy ___673_stagg_Y_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp13 $tmp14 	%argrw{"wr"}
	mul		$tmp15 ___673_stagg_Y_in2_tmp $tmp13 	%argrw{"wrr"}
	sub		___673_stagg_Y_out ___673_texcoord_bias_separate_outy $tmp15 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:112
#     float mod_Y_1_out = mod(texcoord_bias_separate_outy, mod_Y_1_in2_tmp);
	assign		___673_mod_Y_1_in2_tmp $const17 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{112} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:113
#     float mod_texcoord_2_in2_tmp = 2.000000;
	functioncall	$const15 66 	%line{113} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp17 ___673_texcoord_bias_separate_outy ___673_mod_Y_1_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp16 $tmp17 	%argrw{"wr"}
	mul		$tmp18 ___673_mod_Y_1_in2_tmp $tmp16 	%argrw{"wrr"}
	sub		___673_mod_Y_1_out ___673_texcoord_bias_separate_outy $tmp18 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:114
#     vector2 mod_texcoord_2_out = mod_texcoord_out * mod_texcoord_2_in2_tmp;
	assign		___673_mod_texcoord_2_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{114} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 73 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp19.x ___673_mod_texcoord_2_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp19.y ___673_mod_texcoord_2_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 73 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___673_mod_texcoord_2_out.x ___673_mod_texcoord_out.x $tmp19.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___673_mod_texcoord_2_out.y ___673_mod_texcoord_out.y $tmp19.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:116
#     float delta_X_in1_tmp = 0.500000;
	assign		___673_delta_X_value2_tmp $const17 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{116} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:117
#     float delta_X_in2_tmp = 0.000000;
	assign		___673_delta_X_in1_tmp $const18 	%line{117} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:118
#     float delta_X_out = mx_ternary(stagg_Y_out > delta_X_value2_tmp, delta_X_in1_tmp, delta_X_in2_tmp);
	assign		___673_delta_X_in2_tmp $const5 	%line{118} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:119
#     float coord_adj_3_in1_tmp = 0.866025;
	gt		$tmp20 ___673_stagg_Y_out ___673_delta_X_value2_tmp 	%line{119} %argrw{"wrr"}
	functioncall	$const19 83 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp20 81 83 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_delta_X_out ___673_delta_X_in1_tmp 	%argrw{"wr"}
	return
	assign		___673_delta_X_out ___673_delta_X_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:120
#     float coord_adj_3_out = coord_adj_3_in1_tmp - mod_Y_1_out;
	assign		___673_coord_adj_3_in1_tmp $const17 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{120} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:121
#     float recenter_in2_tmp = 1.000000;
	sub		___673_coord_adj_3_out ___673_coord_adj_3_in1_tmp ___673_mod_Y_1_out 	%line{121} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:122
#     vector2 recenter_out = mod_texcoord_2_out - recenter_in2_tmp;
	assign		___673_recenter_in2_tmp $const14 	%line{122} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 92 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:63
#     return a - vector2(b, b);
	assign		$tmp21.x ___673_recenter_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{63} %argrw{"wr"}
	assign		$tmp21.y ___673_recenter_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 92 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___673_recenter_out.x ___673_mod_texcoord_2_out.x $tmp21.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___673_recenter_out.y ___673_mod_texcoord_2_out.y $tmp21.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:124
#     float hexagon_regular_out = 0.0;
	add		___673_shift_X_out ___673_texcoord_bias_separate_outx ___673_delta_X_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:125
#     NG_hexagon_float(recenter_out, vector2(0.000000, 0.000000), size, hexagon_regular_out);
	assign		___673_hexagon_regular_out $const5 	%line{125} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:126
#     float mod_X_1_in2_tmp = 1.000000;
	assign		$tmp22.x $const5 	%line{126} %argrw{"wr"}
	assign		$tmp22.y $const5 	%argrw{"wr"}
	functioncall	$const20 245 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 100 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_recenter_out.x $tmp22.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_recenter_out.y $tmp22.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:44
#     float k_separate_outy = 0.0;
	assign		___671_k_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:45
#     float k_separate_outz = 0.0;
	assign		___671_k_separate_outy $const5 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:46
#     NG_separate3_vector3(vector(-0.866025, 0.500000, 0.577350), k_separate_outx, k_separate_outy, k_separate_outz);
	assign		___671_k_separate_outz $const5 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:47
#     vector minus_k_in1_tmp = vector(-0.866025, 0.500000, 0.577350);
	functioncall	$const22 116 	%line{47} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 107 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out $const21 ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 110 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out $const21 ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 113 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out $const21 ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:48
#     float minus_k_in2_tmp = -1.000000;
	assign		___671_minus_k_in1_tmp $const21 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:49
#     vector minus_k_out = minus_k_in1_tmp * minus_k_in2_tmp;
	assign		___671_minus_k_in2_tmp $const23 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:50
#     vector2 delta_abs_out = abs(delta_out);
	mul		___671_minus_k_out ___671_minus_k_in1_tmp ___671_minus_k_in2_tmp 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:51
#     vector2 kxy_out = { k_separate_outx,k_separate_outy };
	functioncall	$const24 122 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:147
#     return vector2 (abs(a.x), abs(a.y));
	abs		___671_delta_abs_out.x ___671_delta_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{147} %argrw{"wr"}
	abs		___671_delta_abs_out.y ___671_delta_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:52
#     float kz_r1_out = k_separate_outz * radius;
	assign		___671_kxy_out.x ___671_k_separate_outx 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{52} %argrw{"wr"}
	assign		___671_kxy_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:53
#     float minus_k_separate_outx = 0.0;
	mul		___671_kz_r1_out ___671_k_separate_outz tiledhexagons_color3_size 	%line{53} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:54
#     float minus_k_separate_outy = 0.0;
	assign		___671_minus_k_separate_outx $const5 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:55
#     float minus_k_separate_outz = 0.0;
	assign		___671_minus_k_separate_outy $const5 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:56
#     NG_separate3_vector3(minus_k_out, minus_k_separate_outx, minus_k_separate_outy, minus_k_separate_outz);
	assign		___671_minus_k_separate_outz $const5 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:57
#     float delta_abs_separate_outx = 0.0;
	functioncall	$const22 141 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 132 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out ___671_minus_k_out ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 135 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out ___671_minus_k_out ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 138 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out ___671_minus_k_out ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_minus_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_minus_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_minus_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:58
#     float delta_abs_separate_outy = 0.0;
	assign		___671_delta_abs_separate_outx $const5 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:59
#     NG_separate2_vector2(delta_abs_out, delta_abs_separate_outx, delta_abs_separate_outy);
	assign		___671_delta_abs_separate_outy $const5 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:60
#     vector2 combine_mkx_ky_out = { minus_k_separate_outx,k_separate_outy };
	functioncall	$const11 162 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 152 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp24 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp24 150 152 	%argrw{"r"}
	assign		___669_N_extract_0_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 160 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp25 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp25 158 160 	%argrw{"r"}
	assign		___669_N_extract_1_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:24
#     outy = N_extract_1_out;
	assign		___671_delta_abs_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:25
# }
	assign		___671_delta_abs_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:61
#     float minus_kz_r_out = minus_k_separate_outz * radius;
	assign		___671_combine_mkx_ky_out.x ___671_minus_k_separate_outx 	%line{61} %argrw{"wr"}
	assign		___671_combine_mkx_ky_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:62
#     vector2 p_out = { delta_abs_separate_outy,delta_abs_separate_outx };
	mul		___671_minus_kz_r_out ___671_minus_k_separate_outz tiledhexagons_color3_size 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:63
#     float dot_kxy_p_out = dot(kxy_out, p_out);
	assign		___671_p_out.x ___671_delta_abs_separate_outy 	%line{63} %argrw{"wr"}
	assign		___671_p_out.y ___671_delta_abs_separate_outx 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:64
#     float min_dotkxyp_p_in2_tmp = 0.000000;
	functioncall	$const25 171 	%line{64} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp26 ___671_kxy_out.x ___671_p_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp27 ___671_kxy_out.y ___671_p_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p_out $tmp26 $tmp27 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:65
#     float min_dotkxyp_p_out = min(dot_kxy_p_out, min_dotkxyp_p_in2_tmp);
	assign		___671_min_dotkxyp_p_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:66
#     vector2 multiply_kxy_min_out = kxy_out * min_dotkxyp_p_out;
	min		___671_min_dotkxyp_p_out ___671_dot_kxy_p_out ___671_min_dotkxyp_p_in2_tmp 	%line{66} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 179 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp28.x ___671_min_dotkxyp_p_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp28.y ___671_min_dotkxyp_p_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 179 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_kxy_min_out.x ___671_kxy_out.x $tmp28.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_kxy_min_out.y ___671_kxy_out.y $tmp28.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:68
#     vector2 multiply2_1_out = multiply_kxy_min_out * multiply2_1_in2_tmp;
	assign		___671_multiply2_1_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 186 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp29.x ___671_multiply2_1_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp29.y ___671_multiply2_1_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 186 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_1_out.x ___671_multiply_kxy_min_out.x $tmp29.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_1_out.y ___671_multiply_kxy_min_out.y $tmp29.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 189 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p1_out.x ___671_p_out.x ___671_multiply2_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p1_out.y ___671_p_out.y ___671_multiply2_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:71
#     float min_0_in2_tmp = 0.000000;
	functioncall	$const25 193 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{71} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp30 ___671_combine_mkx_ky_out.x ___671_new_p1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp31 ___671_combine_mkx_ky_out.y ___671_new_p1_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p1_out $tmp30 $tmp31 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:72
#     float min_0_out = min(dot_kxy_p1_out, min_0_in2_tmp);
	assign		___671_min_0_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:73
#     vector2 multiply_min_comb_out = combine_mkx_ky_out * min_0_out;
	min		___671_min_0_out ___671_dot_kxy_p1_out ___671_min_0_in2_tmp 	%line{73} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 201 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp32.x ___671_min_0_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp32.y ___671_min_0_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 201 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_min_comb_out.x ___671_combine_mkx_ky_out.x $tmp32.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_min_comb_out.y ___671_combine_mkx_ky_out.y $tmp32.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:75
#     vector2 multiply2_2_out = multiply_min_comb_out * multiply2_2_in2_tmp;
	assign		___671_multiply2_2_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 208 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp33.x ___671_multiply2_2_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp33.y ___671_multiply2_2_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 208 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_2_out.x ___671_multiply_min_comb_out.x $tmp33.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_2_out.y ___671_multiply_min_comb_out.y $tmp33.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 211 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p2_out.x ___671_new_p1_out.x ___671_multiply2_2_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p2_out.y ___671_new_p1_out.y ___671_multiply2_2_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:78
#     float new_p2_x_out = mx_extract(new_p2_out, new_p2_x_index_tmp);
	assign		___671_new_p2_x_index_tmp $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:79
#     float clamp_out = clamp(new_p2_x_out, minus_kz_r_out, kz_r1_out);
	functioncall	$const12 219 	%line{79} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp34 ___671_new_p2_x_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp34 217 219 	%argrw{"r"}
	assign		___671_new_p2_x_out ___671_new_p2_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___671_new_p2_x_out ___671_new_p2_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:80
#     vector2 combine_clamp_rad_out = { clamp_out,radius };
	functioncall	$const26 222 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{80} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp35 ___671_new_p2_x_out ___671_kz_r1_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp35 ___671_minus_kz_r_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:81
#     vector2 new_p3_out = new_p2_out - combine_clamp_rad_out;
	assign		___671_combine_clamp_rad_out.x ___671_clamp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{81} %argrw{"wr"}
	assign		___671_combine_clamp_rad_out.y tiledhexagons_color3_size 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 227 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p3_out.x ___671_new_p2_out.x ___671_combine_clamp_rad_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p3_out.y ___671_new_p2_out.y ___671_combine_clamp_rad_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:83
#     float p3_sum_out = dot(new_p3_out, p3_sum_in2_tmp);
	assign		___671_p3_sum_in2_tmp.x $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{83} %argrw{"wr"}
	assign		___671_p3_sum_in2_tmp.y $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:84
#     float p3_sqrt_out = sqrt(p3_sum_out);
	functioncall	$const25 233 	%line{84} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp36 ___671_new_p3_out.x ___671_p3_sum_in2_tmp.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp37 ___671_new_p3_out.y ___671_p3_sum_in2_tmp.y 	%argrw{"wrr"}
	add		___671_p3_sum_out $tmp36 $tmp37 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:85
#     float ifgreater_p3_value2_tmp = 0.000000;
	sqrt		___671_p3_sqrt_out ___671_p3_sum_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:86
#     float ifgreater_p3_in1_tmp = 0.000000;
	assign		___671_ifgreater_p3_value2_tmp $const5 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:87
#     float ifgreater_p3_in2_tmp = 1.000000;
	assign		___671_ifgreater_p3_in1_tmp $const5 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:88
#     float ifgreater_p3_out = mx_ternary(p3_sqrt_out > ifgreater_p3_value2_tmp, ifgreater_p3_in1_tmp, ifgreater_p3_in2_tmp);
	assign		___671_ifgreater_p3_in2_tmp $const14 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:89
#     out = ifgreater_p3_out;
	gt		$tmp38 ___671_p3_sqrt_out ___671_ifgreater_p3_value2_tmp 	%line{89} %argrw{"wrr"}
	functioncall	$const19 244 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp38 242 244 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:90
# }
	assign		___673_hexagon_regular_out ___671_ifgreater_p3_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:127
#     float mod_X_1_out = mod(shift_X_out, mod_X_1_in2_tmp);
	assign		___673_mod_X_1_in2_tmp $const14 	%line{127} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:128
#     vector2 coord_circ1_out = { mod_X_1_out,mod_Y_1_out };
	functioncall	$const15 251 	%line{128} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp40 ___673_shift_X_out ___673_mod_X_1_in2_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp39 $tmp40 	%argrw{"wr"}
	mul		$tmp41 ___673_mod_X_1_in2_tmp $tmp39 	%argrw{"wrr"}
	sub		___673_mod_X_1_out ___673_shift_X_out $tmp41 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:129
#     float coord_adj_1_in1_tmp = 1.000000;
	assign		___673_coord_circ1_out.x ___673_mod_X_1_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{129} %argrw{"wr"}
	assign		___673_coord_circ1_out.y ___673_mod_Y_1_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:130
#     float coord_adj_1_out = coord_adj_1_in1_tmp - mod_X_1_out;
	assign		___673_coord_adj_1_in1_tmp $const14 	%line{130} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:131
#     float coord_adj_2_in2_tmp = 0.500000;
	sub		___673_coord_adj_1_out ___673_coord_adj_1_in1_tmp ___673_mod_X_1_out 	%line{131} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:132
#     float coord_adj_2_out = mod_X_1_out - coord_adj_2_in2_tmp;
	assign		___673_coord_adj_2_in2_tmp $const18 	%line{132} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:133
#     float hexagon_stagg1_out = 0.0;
	sub		___673_coord_adj_2_out ___673_mod_X_1_out ___673_coord_adj_2_in2_tmp 	%line{133} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:134
#     NG_hexagon_float(coord_circ1_out, vector2(0.000000, 0.000000), scale_half_out, hexagon_stagg1_out);
	assign		___673_hexagon_stagg1_out $const5 	%line{134} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:135
#     vector2 coord_circ2_out = { coord_adj_1_out,mod_Y_1_out };
	assign		$tmp42.x $const5 	%line{135} %argrw{"wr"}
	assign		$tmp42.y $const5 	%argrw{"wr"}
	functioncall	$const20 409 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 264 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_coord_circ1_out.x $tmp42.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_coord_circ1_out.y $tmp42.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:44
#     float k_separate_outy = 0.0;
	assign		___671_k_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:45
#     float k_separate_outz = 0.0;
	assign		___671_k_separate_outy $const5 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:46
#     NG_separate3_vector3(vector(-0.866025, 0.500000, 0.577350), k_separate_outx, k_separate_outy, k_separate_outz);
	assign		___671_k_separate_outz $const5 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:47
#     vector minus_k_in1_tmp = vector(-0.866025, 0.500000, 0.577350);
	functioncall	$const22 280 	%line{47} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 271 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out $const21 ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 274 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out $const21 ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 277 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out $const21 ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:48
#     float minus_k_in2_tmp = -1.000000;
	assign		___671_minus_k_in1_tmp $const21 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:49
#     vector minus_k_out = minus_k_in1_tmp * minus_k_in2_tmp;
	assign		___671_minus_k_in2_tmp $const23 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:50
#     vector2 delta_abs_out = abs(delta_out);
	mul		___671_minus_k_out ___671_minus_k_in1_tmp ___671_minus_k_in2_tmp 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:51
#     vector2 kxy_out = { k_separate_outx,k_separate_outy };
	functioncall	$const24 286 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:147
#     return vector2 (abs(a.x), abs(a.y));
	abs		___671_delta_abs_out.x ___671_delta_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{147} %argrw{"wr"}
	abs		___671_delta_abs_out.y ___671_delta_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:52
#     float kz_r1_out = k_separate_outz * radius;
	assign		___671_kxy_out.x ___671_k_separate_outx 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{52} %argrw{"wr"}
	assign		___671_kxy_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:53
#     float minus_k_separate_outx = 0.0;
	mul		___671_kz_r1_out ___671_k_separate_outz ___673_scale_half_out 	%line{53} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:54
#     float minus_k_separate_outy = 0.0;
	assign		___671_minus_k_separate_outx $const5 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:55
#     float minus_k_separate_outz = 0.0;
	assign		___671_minus_k_separate_outy $const5 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:56
#     NG_separate3_vector3(minus_k_out, minus_k_separate_outx, minus_k_separate_outy, minus_k_separate_outz);
	assign		___671_minus_k_separate_outz $const5 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:57
#     float delta_abs_separate_outx = 0.0;
	functioncall	$const22 305 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 296 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out ___671_minus_k_out ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 299 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out ___671_minus_k_out ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 302 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out ___671_minus_k_out ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_minus_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_minus_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_minus_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:58
#     float delta_abs_separate_outy = 0.0;
	assign		___671_delta_abs_separate_outx $const5 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:59
#     NG_separate2_vector2(delta_abs_out, delta_abs_separate_outx, delta_abs_separate_outy);
	assign		___671_delta_abs_separate_outy $const5 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:60
#     vector2 combine_mkx_ky_out = { minus_k_separate_outx,k_separate_outy };
	functioncall	$const11 326 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 316 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp44 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp44 314 316 	%argrw{"r"}
	assign		___669_N_extract_0_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 324 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp45 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp45 322 324 	%argrw{"r"}
	assign		___669_N_extract_1_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:24
#     outy = N_extract_1_out;
	assign		___671_delta_abs_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:25
# }
	assign		___671_delta_abs_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:61
#     float minus_kz_r_out = minus_k_separate_outz * radius;
	assign		___671_combine_mkx_ky_out.x ___671_minus_k_separate_outx 	%line{61} %argrw{"wr"}
	assign		___671_combine_mkx_ky_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:62
#     vector2 p_out = { delta_abs_separate_outy,delta_abs_separate_outx };
	mul		___671_minus_kz_r_out ___671_minus_k_separate_outz ___673_scale_half_out 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:63
#     float dot_kxy_p_out = dot(kxy_out, p_out);
	assign		___671_p_out.x ___671_delta_abs_separate_outy 	%line{63} %argrw{"wr"}
	assign		___671_p_out.y ___671_delta_abs_separate_outx 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:64
#     float min_dotkxyp_p_in2_tmp = 0.000000;
	functioncall	$const25 335 	%line{64} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp46 ___671_kxy_out.x ___671_p_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp47 ___671_kxy_out.y ___671_p_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p_out $tmp46 $tmp47 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:65
#     float min_dotkxyp_p_out = min(dot_kxy_p_out, min_dotkxyp_p_in2_tmp);
	assign		___671_min_dotkxyp_p_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:66
#     vector2 multiply_kxy_min_out = kxy_out * min_dotkxyp_p_out;
	min		___671_min_dotkxyp_p_out ___671_dot_kxy_p_out ___671_min_dotkxyp_p_in2_tmp 	%line{66} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 343 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp48.x ___671_min_dotkxyp_p_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp48.y ___671_min_dotkxyp_p_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 343 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_kxy_min_out.x ___671_kxy_out.x $tmp48.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_kxy_min_out.y ___671_kxy_out.y $tmp48.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:68
#     vector2 multiply2_1_out = multiply_kxy_min_out * multiply2_1_in2_tmp;
	assign		___671_multiply2_1_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 350 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp49.x ___671_multiply2_1_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp49.y ___671_multiply2_1_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 350 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_1_out.x ___671_multiply_kxy_min_out.x $tmp49.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_1_out.y ___671_multiply_kxy_min_out.y $tmp49.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 353 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p1_out.x ___671_p_out.x ___671_multiply2_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p1_out.y ___671_p_out.y ___671_multiply2_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:71
#     float min_0_in2_tmp = 0.000000;
	functioncall	$const25 357 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{71} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp50 ___671_combine_mkx_ky_out.x ___671_new_p1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp51 ___671_combine_mkx_ky_out.y ___671_new_p1_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p1_out $tmp50 $tmp51 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:72
#     float min_0_out = min(dot_kxy_p1_out, min_0_in2_tmp);
	assign		___671_min_0_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:73
#     vector2 multiply_min_comb_out = combine_mkx_ky_out * min_0_out;
	min		___671_min_0_out ___671_dot_kxy_p1_out ___671_min_0_in2_tmp 	%line{73} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 365 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp52.x ___671_min_0_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp52.y ___671_min_0_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 365 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_min_comb_out.x ___671_combine_mkx_ky_out.x $tmp52.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_min_comb_out.y ___671_combine_mkx_ky_out.y $tmp52.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:75
#     vector2 multiply2_2_out = multiply_min_comb_out * multiply2_2_in2_tmp;
	assign		___671_multiply2_2_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 372 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp53.x ___671_multiply2_2_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp53.y ___671_multiply2_2_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 372 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_2_out.x ___671_multiply_min_comb_out.x $tmp53.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_2_out.y ___671_multiply_min_comb_out.y $tmp53.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 375 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p2_out.x ___671_new_p1_out.x ___671_multiply2_2_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p2_out.y ___671_new_p1_out.y ___671_multiply2_2_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:78
#     float new_p2_x_out = mx_extract(new_p2_out, new_p2_x_index_tmp);
	assign		___671_new_p2_x_index_tmp $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:79
#     float clamp_out = clamp(new_p2_x_out, minus_kz_r_out, kz_r1_out);
	functioncall	$const12 383 	%line{79} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp54 ___671_new_p2_x_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp54 381 383 	%argrw{"r"}
	assign		___671_new_p2_x_out ___671_new_p2_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___671_new_p2_x_out ___671_new_p2_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:80
#     vector2 combine_clamp_rad_out = { clamp_out,radius };
	functioncall	$const26 386 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{80} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp55 ___671_new_p2_x_out ___671_kz_r1_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp55 ___671_minus_kz_r_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:81
#     vector2 new_p3_out = new_p2_out - combine_clamp_rad_out;
	assign		___671_combine_clamp_rad_out.x ___671_clamp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{81} %argrw{"wr"}
	assign		___671_combine_clamp_rad_out.y ___673_scale_half_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 391 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p3_out.x ___671_new_p2_out.x ___671_combine_clamp_rad_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p3_out.y ___671_new_p2_out.y ___671_combine_clamp_rad_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:83
#     float p3_sum_out = dot(new_p3_out, p3_sum_in2_tmp);
	assign		___671_p3_sum_in2_tmp.x $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{83} %argrw{"wr"}
	assign		___671_p3_sum_in2_tmp.y $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:84
#     float p3_sqrt_out = sqrt(p3_sum_out);
	functioncall	$const25 397 	%line{84} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp56 ___671_new_p3_out.x ___671_p3_sum_in2_tmp.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp57 ___671_new_p3_out.y ___671_p3_sum_in2_tmp.y 	%argrw{"wrr"}
	add		___671_p3_sum_out $tmp56 $tmp57 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:85
#     float ifgreater_p3_value2_tmp = 0.000000;
	sqrt		___671_p3_sqrt_out ___671_p3_sum_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:86
#     float ifgreater_p3_in1_tmp = 0.000000;
	assign		___671_ifgreater_p3_value2_tmp $const5 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:87
#     float ifgreater_p3_in2_tmp = 1.000000;
	assign		___671_ifgreater_p3_in1_tmp $const5 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:88
#     float ifgreater_p3_out = mx_ternary(p3_sqrt_out > ifgreater_p3_value2_tmp, ifgreater_p3_in1_tmp, ifgreater_p3_in2_tmp);
	assign		___671_ifgreater_p3_in2_tmp $const14 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:89
#     out = ifgreater_p3_out;
	gt		$tmp58 ___671_p3_sqrt_out ___671_ifgreater_p3_value2_tmp 	%line{89} %argrw{"wrr"}
	functioncall	$const19 408 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp58 406 408 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:90
# }
	assign		___673_hexagon_stagg1_out ___671_ifgreater_p3_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:136
#     vector2 coord_circ3_out = { coord_adj_2_out,coord_adj_3_out };
	assign		___673_coord_circ2_out.x ___673_coord_adj_1_out 	%line{136} %argrw{"wr"}
	assign		___673_coord_circ2_out.y ___673_mod_Y_1_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:137
#     float hexagon_stagg2_out = 0.0;
	assign		___673_coord_circ3_out.x ___673_coord_adj_2_out 	%line{137} %argrw{"wr"}
	assign		___673_coord_circ3_out.y ___673_coord_adj_3_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:138
#     NG_hexagon_float(coord_circ2_out, vector2(0.000000, 0.000000), scale_half_out, hexagon_stagg2_out);
	assign		___673_hexagon_stagg2_out $const5 	%line{138} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:139
#     float hexagon_stagg3_out = 0.0;
	assign		$tmp59.x $const5 	%line{139} %argrw{"wr"}
	assign		$tmp59.y $const5 	%argrw{"wr"}
	functioncall	$const20 565 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 420 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_coord_circ2_out.x $tmp59.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_coord_circ2_out.y $tmp59.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:44
#     float k_separate_outy = 0.0;
	assign		___671_k_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:45
#     float k_separate_outz = 0.0;
	assign		___671_k_separate_outy $const5 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:46
#     NG_separate3_vector3(vector(-0.866025, 0.500000, 0.577350), k_separate_outx, k_separate_outy, k_separate_outz);
	assign		___671_k_separate_outz $const5 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:47
#     vector minus_k_in1_tmp = vector(-0.866025, 0.500000, 0.577350);
	functioncall	$const22 436 	%line{47} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 427 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out $const21 ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 430 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out $const21 ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 433 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out $const21 ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:48
#     float minus_k_in2_tmp = -1.000000;
	assign		___671_minus_k_in1_tmp $const21 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:49
#     vector minus_k_out = minus_k_in1_tmp * minus_k_in2_tmp;
	assign		___671_minus_k_in2_tmp $const23 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:50
#     vector2 delta_abs_out = abs(delta_out);
	mul		___671_minus_k_out ___671_minus_k_in1_tmp ___671_minus_k_in2_tmp 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:51
#     vector2 kxy_out = { k_separate_outx,k_separate_outy };
	functioncall	$const24 442 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:147
#     return vector2 (abs(a.x), abs(a.y));
	abs		___671_delta_abs_out.x ___671_delta_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{147} %argrw{"wr"}
	abs		___671_delta_abs_out.y ___671_delta_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:52
#     float kz_r1_out = k_separate_outz * radius;
	assign		___671_kxy_out.x ___671_k_separate_outx 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{52} %argrw{"wr"}
	assign		___671_kxy_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:53
#     float minus_k_separate_outx = 0.0;
	mul		___671_kz_r1_out ___671_k_separate_outz ___673_scale_half_out 	%line{53} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:54
#     float minus_k_separate_outy = 0.0;
	assign		___671_minus_k_separate_outx $const5 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:55
#     float minus_k_separate_outz = 0.0;
	assign		___671_minus_k_separate_outy $const5 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:56
#     NG_separate3_vector3(minus_k_out, minus_k_separate_outx, minus_k_separate_outy, minus_k_separate_outz);
	assign		___671_minus_k_separate_outz $const5 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:57
#     float delta_abs_separate_outx = 0.0;
	functioncall	$const22 461 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 452 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out ___671_minus_k_out ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 455 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out ___671_minus_k_out ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 458 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out ___671_minus_k_out ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_minus_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_minus_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_minus_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:58
#     float delta_abs_separate_outy = 0.0;
	assign		___671_delta_abs_separate_outx $const5 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:59
#     NG_separate2_vector2(delta_abs_out, delta_abs_separate_outx, delta_abs_separate_outy);
	assign		___671_delta_abs_separate_outy $const5 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:60
#     vector2 combine_mkx_ky_out = { minus_k_separate_outx,k_separate_outy };
	functioncall	$const11 482 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 472 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp61 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp61 470 472 	%argrw{"r"}
	assign		___669_N_extract_0_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 480 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp62 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp62 478 480 	%argrw{"r"}
	assign		___669_N_extract_1_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:24
#     outy = N_extract_1_out;
	assign		___671_delta_abs_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:25
# }
	assign		___671_delta_abs_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:61
#     float minus_kz_r_out = minus_k_separate_outz * radius;
	assign		___671_combine_mkx_ky_out.x ___671_minus_k_separate_outx 	%line{61} %argrw{"wr"}
	assign		___671_combine_mkx_ky_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:62
#     vector2 p_out = { delta_abs_separate_outy,delta_abs_separate_outx };
	mul		___671_minus_kz_r_out ___671_minus_k_separate_outz ___673_scale_half_out 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:63
#     float dot_kxy_p_out = dot(kxy_out, p_out);
	assign		___671_p_out.x ___671_delta_abs_separate_outy 	%line{63} %argrw{"wr"}
	assign		___671_p_out.y ___671_delta_abs_separate_outx 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:64
#     float min_dotkxyp_p_in2_tmp = 0.000000;
	functioncall	$const25 491 	%line{64} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp63 ___671_kxy_out.x ___671_p_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp64 ___671_kxy_out.y ___671_p_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p_out $tmp63 $tmp64 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:65
#     float min_dotkxyp_p_out = min(dot_kxy_p_out, min_dotkxyp_p_in2_tmp);
	assign		___671_min_dotkxyp_p_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:66
#     vector2 multiply_kxy_min_out = kxy_out * min_dotkxyp_p_out;
	min		___671_min_dotkxyp_p_out ___671_dot_kxy_p_out ___671_min_dotkxyp_p_in2_tmp 	%line{66} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 499 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp65.x ___671_min_dotkxyp_p_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp65.y ___671_min_dotkxyp_p_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 499 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_kxy_min_out.x ___671_kxy_out.x $tmp65.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_kxy_min_out.y ___671_kxy_out.y $tmp65.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:68
#     vector2 multiply2_1_out = multiply_kxy_min_out * multiply2_1_in2_tmp;
	assign		___671_multiply2_1_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 506 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp66.x ___671_multiply2_1_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp66.y ___671_multiply2_1_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 506 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_1_out.x ___671_multiply_kxy_min_out.x $tmp66.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_1_out.y ___671_multiply_kxy_min_out.y $tmp66.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 509 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p1_out.x ___671_p_out.x ___671_multiply2_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p1_out.y ___671_p_out.y ___671_multiply2_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:71
#     float min_0_in2_tmp = 0.000000;
	functioncall	$const25 513 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{71} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp67 ___671_combine_mkx_ky_out.x ___671_new_p1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp68 ___671_combine_mkx_ky_out.y ___671_new_p1_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p1_out $tmp67 $tmp68 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:72
#     float min_0_out = min(dot_kxy_p1_out, min_0_in2_tmp);
	assign		___671_min_0_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:73
#     vector2 multiply_min_comb_out = combine_mkx_ky_out * min_0_out;
	min		___671_min_0_out ___671_dot_kxy_p1_out ___671_min_0_in2_tmp 	%line{73} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 521 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp69.x ___671_min_0_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp69.y ___671_min_0_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 521 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_min_comb_out.x ___671_combine_mkx_ky_out.x $tmp69.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_min_comb_out.y ___671_combine_mkx_ky_out.y $tmp69.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:75
#     vector2 multiply2_2_out = multiply_min_comb_out * multiply2_2_in2_tmp;
	assign		___671_multiply2_2_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 528 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp70.x ___671_multiply2_2_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp70.y ___671_multiply2_2_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 528 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_2_out.x ___671_multiply_min_comb_out.x $tmp70.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_2_out.y ___671_multiply_min_comb_out.y $tmp70.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 531 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p2_out.x ___671_new_p1_out.x ___671_multiply2_2_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p2_out.y ___671_new_p1_out.y ___671_multiply2_2_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:78
#     float new_p2_x_out = mx_extract(new_p2_out, new_p2_x_index_tmp);
	assign		___671_new_p2_x_index_tmp $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:79
#     float clamp_out = clamp(new_p2_x_out, minus_kz_r_out, kz_r1_out);
	functioncall	$const12 539 	%line{79} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp71 ___671_new_p2_x_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp71 537 539 	%argrw{"r"}
	assign		___671_new_p2_x_out ___671_new_p2_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___671_new_p2_x_out ___671_new_p2_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:80
#     vector2 combine_clamp_rad_out = { clamp_out,radius };
	functioncall	$const26 542 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{80} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp72 ___671_new_p2_x_out ___671_kz_r1_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp72 ___671_minus_kz_r_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:81
#     vector2 new_p3_out = new_p2_out - combine_clamp_rad_out;
	assign		___671_combine_clamp_rad_out.x ___671_clamp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{81} %argrw{"wr"}
	assign		___671_combine_clamp_rad_out.y ___673_scale_half_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 547 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p3_out.x ___671_new_p2_out.x ___671_combine_clamp_rad_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p3_out.y ___671_new_p2_out.y ___671_combine_clamp_rad_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:83
#     float p3_sum_out = dot(new_p3_out, p3_sum_in2_tmp);
	assign		___671_p3_sum_in2_tmp.x $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{83} %argrw{"wr"}
	assign		___671_p3_sum_in2_tmp.y $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:84
#     float p3_sqrt_out = sqrt(p3_sum_out);
	functioncall	$const25 553 	%line{84} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp73 ___671_new_p3_out.x ___671_p3_sum_in2_tmp.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp74 ___671_new_p3_out.y ___671_p3_sum_in2_tmp.y 	%argrw{"wrr"}
	add		___671_p3_sum_out $tmp73 $tmp74 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:85
#     float ifgreater_p3_value2_tmp = 0.000000;
	sqrt		___671_p3_sqrt_out ___671_p3_sum_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:86
#     float ifgreater_p3_in1_tmp = 0.000000;
	assign		___671_ifgreater_p3_value2_tmp $const5 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:87
#     float ifgreater_p3_in2_tmp = 1.000000;
	assign		___671_ifgreater_p3_in1_tmp $const5 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:88
#     float ifgreater_p3_out = mx_ternary(p3_sqrt_out > ifgreater_p3_value2_tmp, ifgreater_p3_in1_tmp, ifgreater_p3_in2_tmp);
	assign		___671_ifgreater_p3_in2_tmp $const14 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:89
#     out = ifgreater_p3_out;
	gt		$tmp75 ___671_p3_sqrt_out ___671_ifgreater_p3_value2_tmp 	%line{89} %argrw{"wrr"}
	functioncall	$const19 564 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp75 562 564 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:90
# }
	assign		___673_hexagon_stagg2_out ___671_ifgreater_p3_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:140
#     NG_hexagon_float(coord_circ3_out, vector2(0.000000, 0.000000), scale_half_out, hexagon_stagg3_out);
	assign		___673_hexagon_stagg3_out $const5 	%line{140} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:141
#     float max1_out = max(hexagon_stagg1_out, hexagon_stagg2_out);
	assign		$tmp76.x $const5 	%line{141} %argrw{"wr"}
	assign		$tmp76.y $const5 	%argrw{"wr"}
	functioncall	$const20 717 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 572 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_delta_out.x ___673_coord_circ3_out.x $tmp76.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_delta_out.y ___673_coord_circ3_out.y $tmp76.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:44
#     float k_separate_outy = 0.0;
	assign		___671_k_separate_outx $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{44} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:45
#     float k_separate_outz = 0.0;
	assign		___671_k_separate_outy $const5 	%line{45} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:46
#     NG_separate3_vector3(vector(-0.866025, 0.500000, 0.577350), k_separate_outx, k_separate_outy, k_separate_outz);
	assign		___671_k_separate_outz $const5 	%line{46} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:47
#     vector minus_k_in1_tmp = vector(-0.866025, 0.500000, 0.577350);
	functioncall	$const22 588 	%line{47} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 579 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out $const21 ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 582 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out $const21 ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 585 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out $const21 ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:48
#     float minus_k_in2_tmp = -1.000000;
	assign		___671_minus_k_in1_tmp $const21 	%line{48} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:49
#     vector minus_k_out = minus_k_in1_tmp * minus_k_in2_tmp;
	assign		___671_minus_k_in2_tmp $const23 	%line{49} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:50
#     vector2 delta_abs_out = abs(delta_out);
	mul		___671_minus_k_out ___671_minus_k_in1_tmp ___671_minus_k_in2_tmp 	%line{50} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:51
#     vector2 kxy_out = { k_separate_outx,k_separate_outy };
	functioncall	$const24 594 	%line{51} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:147
#     return vector2 (abs(a.x), abs(a.y));
	abs		___671_delta_abs_out.x ___671_delta_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{147} %argrw{"wr"}
	abs		___671_delta_abs_out.y ___671_delta_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:52
#     float kz_r1_out = k_separate_outz * radius;
	assign		___671_kxy_out.x ___671_k_separate_outx 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{52} %argrw{"wr"}
	assign		___671_kxy_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:53
#     float minus_k_separate_outx = 0.0;
	mul		___671_kz_r1_out ___671_k_separate_outz ___673_scale_half_out 	%line{53} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:54
#     float minus_k_separate_outy = 0.0;
	assign		___671_minus_k_separate_outx $const5 	%line{54} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:55
#     float minus_k_separate_outz = 0.0;
	assign		___671_minus_k_separate_outy $const5 	%line{55} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:56
#     NG_separate3_vector3(minus_k_out, minus_k_separate_outx, minus_k_separate_outy, minus_k_separate_outz);
	assign		___671_minus_k_separate_outz $const5 	%line{56} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:57
#     float delta_abs_separate_outx = 0.0;
	functioncall	$const22 613 	%line{57} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:30
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___670_N_extract_0_index_tmp $const1 	%line{30} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:31
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 604 	%line{31} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_0_out ___671_minus_k_out ___670_N_extract_0_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:32
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___670_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{32} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:33
#     int N_extract_2_index_tmp = 2;
	functioncall	$const12 607 	%line{33} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_1_out ___671_minus_k_out ___670_N_extract_1_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:34
#     float N_extract_2_out = mx_extract(in, N_extract_2_index_tmp);
	assign		___670_N_extract_2_index_tmp $const4 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{34} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:35
#     outx = N_extract_0_out;
	functioncall	$const12 610 	%line{35} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:124
#     return in[index];
	compref		___670_N_extract_2_out ___671_minus_k_out ___670_N_extract_2_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{124} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:36
#     outy = N_extract_1_out;
	assign		___671_minus_k_separate_outx ___670_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{36} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:37
#     outz = N_extract_2_out;
	assign		___671_minus_k_separate_outy ___670_N_extract_1_out 	%line{37} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:38
# }
	assign		___671_minus_k_separate_outz ___670_N_extract_2_out 	%line{38} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:58
#     float delta_abs_separate_outy = 0.0;
	assign		___671_delta_abs_separate_outx $const5 	%line{58} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:59
#     NG_separate2_vector2(delta_abs_out, delta_abs_separate_outx, delta_abs_separate_outy);
	assign		___671_delta_abs_separate_outy $const5 	%line{59} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:60
#     vector2 combine_mkx_ky_out = { minus_k_separate_outx,k_separate_outy };
	functioncall	$const11 634 	%line{60} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:20
#     float N_extract_0_out = mx_extract(in, N_extract_0_index_tmp);
	assign		___669_N_extract_0_index_tmp $const1 	%line{20} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:21
#     int N_extract_1_index_tmp = 1;
	functioncall	$const12 624 	%line{21} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp78 ___669_N_extract_0_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp78 622 624 	%argrw{"r"}
	assign		___669_N_extract_0_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_0_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:22
#     float N_extract_1_out = mx_extract(in, N_extract_1_index_tmp);
	assign		___669_N_extract_1_index_tmp $const13 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{22} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:23
#     outx = N_extract_0_out;
	functioncall	$const12 632 	%line{23} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp79 ___669_N_extract_1_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp79 630 632 	%argrw{"r"}
	assign		___669_N_extract_1_out ___671_delta_abs_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___669_N_extract_1_out ___671_delta_abs_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:24
#     outy = N_extract_1_out;
	assign		___671_delta_abs_separate_outx ___669_N_extract_0_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{24} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:25
# }
	assign		___671_delta_abs_separate_outy ___669_N_extract_1_out 	%line{25} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:61
#     float minus_kz_r_out = minus_k_separate_outz * radius;
	assign		___671_combine_mkx_ky_out.x ___671_minus_k_separate_outx 	%line{61} %argrw{"wr"}
	assign		___671_combine_mkx_ky_out.y ___671_k_separate_outy 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:62
#     vector2 p_out = { delta_abs_separate_outy,delta_abs_separate_outx };
	mul		___671_minus_kz_r_out ___671_minus_k_separate_outz ___673_scale_half_out 	%line{62} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:63
#     float dot_kxy_p_out = dot(kxy_out, p_out);
	assign		___671_p_out.x ___671_delta_abs_separate_outy 	%line{63} %argrw{"wr"}
	assign		___671_p_out.y ___671_delta_abs_separate_outx 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:64
#     float min_dotkxyp_p_in2_tmp = 0.000000;
	functioncall	$const25 643 	%line{64} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp80 ___671_kxy_out.x ___671_p_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp81 ___671_kxy_out.y ___671_p_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p_out $tmp80 $tmp81 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:65
#     float min_dotkxyp_p_out = min(dot_kxy_p_out, min_dotkxyp_p_in2_tmp);
	assign		___671_min_dotkxyp_p_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{65} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:66
#     vector2 multiply_kxy_min_out = kxy_out * min_dotkxyp_p_out;
	min		___671_min_dotkxyp_p_out ___671_dot_kxy_p_out ___671_min_dotkxyp_p_in2_tmp 	%line{66} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 651 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp82.x ___671_min_dotkxyp_p_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp82.y ___671_min_dotkxyp_p_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 651 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_kxy_min_out.x ___671_kxy_out.x $tmp82.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_kxy_min_out.y ___671_kxy_out.y $tmp82.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:68
#     vector2 multiply2_1_out = multiply_kxy_min_out * multiply2_1_in2_tmp;
	assign		___671_multiply2_1_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{68} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 658 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp83.x ___671_multiply2_1_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp83.y ___671_multiply2_1_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 658 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_1_out.x ___671_multiply_kxy_min_out.x $tmp83.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_1_out.y ___671_multiply_kxy_min_out.y $tmp83.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 661 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p1_out.x ___671_p_out.x ___671_multiply2_1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p1_out.y ___671_p_out.y ___671_multiply2_1_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:71
#     float min_0_in2_tmp = 0.000000;
	functioncall	$const25 665 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{71} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp84 ___671_combine_mkx_ky_out.x ___671_new_p1_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp85 ___671_combine_mkx_ky_out.y ___671_new_p1_out.y 	%argrw{"wrr"}
	add		___671_dot_kxy_p1_out $tmp84 $tmp85 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:72
#     float min_0_out = min(dot_kxy_p1_out, min_0_in2_tmp);
	assign		___671_min_0_in2_tmp $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{72} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:73
#     vector2 multiply_min_comb_out = combine_mkx_ky_out * min_0_out;
	min		___671_min_0_out ___671_dot_kxy_p1_out ___671_min_0_in2_tmp 	%line{73} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 673 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp86.x ___671_min_0_out 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp86.y ___671_min_0_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 673 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply_min_comb_out.x ___671_combine_mkx_ky_out.x $tmp86.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply_min_comb_out.y ___671_combine_mkx_ky_out.y $tmp86.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:75
#     vector2 multiply2_2_out = multiply_min_comb_out * multiply2_2_in2_tmp;
	assign		___671_multiply2_2_in2_tmp $const9 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{75} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 680 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp87.x ___671_multiply2_2_in2_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp87.y ___671_multiply2_2_in2_tmp 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const8 680 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___671_multiply2_2_out.x ___671_multiply_min_comb_out.x $tmp87.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{78} %argrw{"wrr"}
	mul		___671_multiply2_2_out.y ___671_multiply_min_comb_out.y $tmp87.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 683 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p2_out.x ___671_new_p1_out.x ___671_multiply2_2_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p2_out.y ___671_new_p1_out.y ___671_multiply2_2_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:78
#     float new_p2_x_out = mx_extract(new_p2_out, new_p2_x_index_tmp);
	assign		___671_new_p2_x_index_tmp $const1 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{78} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:79
#     float clamp_out = clamp(new_p2_x_out, minus_kz_r_out, kz_r1_out);
	functioncall	$const12 691 	%line{79} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:118
#     if (index == 0) return in.x;
	eq		$tmp88 ___671_new_p2_x_index_tmp $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{118} %argrw{"wrr"}
	if		$tmp88 689 691 	%argrw{"r"}
	assign		___671_new_p2_x_out ___671_new_p2_out.x 	%argrw{"wr"}
	return
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:119
#     else return in.y;
	assign		___671_new_p2_x_out ___671_new_p2_out.y 	%line{119} %argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:80
#     vector2 combine_clamp_rad_out = { clamp_out,radius };
	functioncall	$const26 694 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{80} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp89 ___671_new_p2_x_out ___671_kz_r1_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___671_clamp_out $tmp89 ___671_minus_kz_r_out 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:81
#     vector2 new_p3_out = new_p2_out - combine_clamp_rad_out;
	assign		___671_combine_clamp_rad_out.x ___671_clamp_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{81} %argrw{"wr"}
	assign		___671_combine_clamp_rad_out.y ___673_scale_half_out 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:830
# 
	functioncall	$const10 699 	%line{830} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___671_new_p3_out.x ___671_new_p2_out.x ___671_combine_clamp_rad_out.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{53} %argrw{"wrr"}
	sub		___671_new_p3_out.y ___671_new_p2_out.y ___671_combine_clamp_rad_out.y 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:83
#     float p3_sum_out = dot(new_p3_out, p3_sum_in2_tmp);
	assign		___671_p3_sum_in2_tmp.x $const14 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{83} %argrw{"wr"}
	assign		___671_p3_sum_in2_tmp.y $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:84
#     float p3_sqrt_out = sqrt(p3_sum_out);
	functioncall	$const25 705 	%line{84} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h:197
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp90 ___671_new_p3_out.x ___671_p3_sum_in2_tmp.x 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector2.h"} %line{197} %argrw{"wrr"}
	mul		$tmp91 ___671_new_p3_out.y ___671_p3_sum_in2_tmp.y 	%argrw{"wrr"}
	add		___671_p3_sum_out $tmp90 $tmp91 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:85
#     float ifgreater_p3_value2_tmp = 0.000000;
	sqrt		___671_p3_sqrt_out ___671_p3_sum_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{85} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:86
#     float ifgreater_p3_in1_tmp = 0.000000;
	assign		___671_ifgreater_p3_value2_tmp $const5 	%line{86} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:87
#     float ifgreater_p3_in2_tmp = 1.000000;
	assign		___671_ifgreater_p3_in1_tmp $const5 	%line{87} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:88
#     float ifgreater_p3_out = mx_ternary(p3_sqrt_out > ifgreater_p3_value2_tmp, ifgreater_p3_in1_tmp, ifgreater_p3_in2_tmp);
	assign		___671_ifgreater_p3_in2_tmp $const14 	%line{88} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:89
#     out = ifgreater_p3_out;
	gt		$tmp92 ___671_p3_sqrt_out ___671_ifgreater_p3_value2_tmp 	%line{89} %argrw{"wrr"}
	functioncall	$const19 716 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp92 714 716 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in1_tmp 	%argrw{"wr"}
	return
	assign		___671_ifgreater_p3_out ___671_ifgreater_p3_in2_tmp 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:90
# }
	assign		___673_hexagon_stagg3_out ___671_ifgreater_p3_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{90} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:142
#     float max_out = max(max1_out, hexagon_stagg3_out);
	max		___673_max1_out ___673_hexagon_stagg1_out ___673_hexagon_stagg2_out 	%line{142} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:143
#     int pattern_selection_value2_tmp = 1;
	max		___673_max_out ___673_max1_out ___673_hexagon_stagg3_out 	%line{143} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:144
#     float pattern_selection_out = mx_ternary(staggered == pattern_selection_value2_tmp, max_out, hexagon_regular_out);
	assign		___673_pattern_selection_value2_tmp $const13 	%line{144} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:145
#     color to_rgb_out = color(0.0);
	eq		$tmp93 tiledhexagons_color3_staggered ___673_pattern_selection_value2_tmp 	%line{145} %argrw{"wrr"}
	functioncall	$const19 727 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:18
# float mx_ternary(int expr, float v1, float v2) { if (expr) return v1; else return v2; }
	if		$tmp93 725 727 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{18} %argrw{"r"}
	assign		___673_pattern_selection_out ___673_max_out 	%argrw{"wr"}
	return
	assign		___673_pattern_selection_out ___673_hexagon_regular_out 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:146
#     NG_convert_float_color3(pattern_selection_out, to_rgb_out);
	assign		___673_to_rgb_out $const6 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{146} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:147
#     out = to_rgb_out;
	functioncall	$const27 731 	%line{147} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:95
#     out = combine_out;
	color		___672_combine_out ___673_pattern_selection_out ___673_pattern_selection_out ___673_pattern_selection_out 	%line{95} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:96
# }
	assign		___673_to_rgb_out ___672_combine_out 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:148
# }
	assign		tiledhexagons_color3_out ___673_to_rgb_out 	%line{148} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:825
#     NG_standard_surface_surfaceshader_100(SR_test_tiledhexagons_base, tiledhexagons_color3_out, SR_test_tiledhexagons_diffuse_roughness, SR_test_tiledhexagons_metalness, SR_test_tiledhexagons_specular, SR_test_tiledhexagons_specular_color, SR_test_tiledhexagons_specular_roughness, SR_test_tiledhexagons_specular_IOR, SR_test_tiledhexagons_specular_anisotropy, SR_test_tiledhexagons_specular_rotation, SR_test_tiledhexagons_transmission, SR_test_tiledhexagons_transmission_color, SR_test_tiledhexagons_transmission_depth, SR_test_tiledhexagons_transmission_scatter, SR_test_tiledhexagons_transmission_scatter_anisotropy, SR_test_tiledhexagons_transmission_dispersion, SR_test_tiledhexagons_transmission_extra_roughness, SR_test_tiledhexagons_subsurface, SR_test_tiledhexagons_subsurface_color, SR_test_tiledhexagons_subsurface_radius, SR_test_tiledhexagons_subsurface_scale, SR_test_tiledhexagons_subsurface_anisotropy, SR_test_tiledhexagons_sheen, SR_test_tiledhexagons_sheen_color, SR_test_tiledhexagons_sheen_roughness, SR_test_tiledhexagons_coat, SR_test_tiledhexagons_coat_color, SR_test_tiledhexagons_coat_roughness, SR_test_tiledhexagons_coat_anisotropy, SR_test_tiledhexagons_coat_rotation, SR_test_tiledhexagons_coat_IOR, geomprop_Nworld_out1, SR_test_tiledhexagons_coat_affect_color, SR_test_tiledhexagons_coat_affect_roughness, SR_test_tiledhexagons_thin_film_thickness, SR_test_tiledhexagons_thin_film_IOR, SR_test_tiledhexagons_emission, SR_test_tiledhexagons_emission_color, SR_test_tiledhexagons_opacity, SR_test_tiledhexagons_thin_walled, geomprop_Nworld_out1, geomprop_Tworld_out1, SR_test_tiledhexagons_out);
	assign		SR_test_tiledhexagons_out.bsdf null_closure 	%line{825} %argrw{"wr"}
	assign		SR_test_tiledhexagons_out.edf null_closure 	%argrw{"wr"}
	assign		SR_test_tiledhexagons_out.opacity $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:826
#     MATERIAL test_tiledhexagons_out = mx_surfacematerial(SR_test_tiledhexagons_out, backsurfaceshader, displacementshader1);
	functioncall	$const28 1248 	%line{826} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:322
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___697_null_closure $const1 	%line{322} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:323
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___697_coat_roughness_vector_out.x $const5 	%line{323} %argrw{"wr"}
	assign		___697_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:324
#     float coat_tangent_rotate_degree_in2_tmp = 360.000000;
	functioncall	$const29 758 	%line{324} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:153
#     if (anisotropy > 0.0)
	mul		$tmp94 SR_test_tiledhexagons_coat_roughness SR_test_tiledhexagons_coat_roughness 	%line{153} %argrw{"wrr"}
	functioncall	$const26 744 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp95 $tmp94 $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp95 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:154
#     {
	gt		$tmp96 SR_test_tiledhexagons_coat_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{154} %argrw{"wrr"}
	if		$tmp96 756 758 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const26 749 	%line{156} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp98 SR_test_tiledhexagons_coat_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp97 $tmp98 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp99 $const14 $tmp97 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{156} %argrw{"wrr"}
	sqrt		___675_aspect $tmp99 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:157
#         result.y = roughness_sqr * aspect;
	div		$tmp100 ___674_roughness_sqr ___675_aspect 	%line{157} %argrw{"wrr"}
	min		___697_coat_roughness_vector_out.x $tmp100 $const14 	%argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:158
#     }
	mul		___697_coat_roughness_vector_out.y ___674_roughness_sqr ___675_aspect 	%line{158} %argrw{"wrr"}
	assign		___697_coat_roughness_vector_out.y ___697_coat_roughness_vector_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:162
#         result.y = roughness_sqr;
	assign		___697_coat_roughness_vector_out.x ___674_roughness_sqr 	%line{162} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:163
#     }
	assign		___697_coat_roughness_vector_out.y ___674_roughness_sqr 	%line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:325
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___697_coat_tangent_rotate_degree_in2_tmp $const32 	%line{325} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:326
#     color metal_reflectivity_out = base_color * base;
	mul		___697_coat_tangent_rotate_degree_out SR_test_tiledhexagons_coat_rotation ___697_coat_tangent_rotate_degree_in2_tmp 	%line{326} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:327
#     color metal_edgecolor_out = specular_color * specular;
	mul		___697_metal_reflectivity_out tiledhexagons_color3_out SR_test_tiledhexagons_base 	%line{327} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:328
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___697_metal_edgecolor_out SR_test_tiledhexagons_specular_color SR_test_tiledhexagons_specular 	%line{328} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:329
#     float tangent_rotate_degree_in2_tmp = 360.000000;
	mul		___697_coat_affect_roughness_multiply1_out SR_test_tiledhexagons_coat_affect_roughness SR_test_tiledhexagons_coat 	%line{329} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:330
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___697_tangent_rotate_degree_in2_tmp $const32 	%line{330} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:331
#     float transmission_roughness_add_out = specular_roughness + transmission_extra_roughness;
	mul		___697_tangent_rotate_degree_out SR_test_tiledhexagons_specular_rotation ___697_tangent_rotate_degree_in2_tmp 	%line{331} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:332
#     float subsurface_color_nonnegative_in2_tmp = 0.000000;
	add		___697_transmission_roughness_add_out SR_test_tiledhexagons_specular_roughness SR_test_tiledhexagons_transmission_extra_roughness 	%line{332} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:333
#     color subsurface_color_nonnegative_out = max(subsurface_color, subsurface_color_nonnegative_in2_tmp);
	assign		___697_subsurface_color_nonnegative_in2_tmp $const5 	%line{333} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:334
#     float coat_clamped_low_tmp = 0.000000;
	assign		$tmp101 ___697_subsurface_color_nonnegative_in2_tmp 	%line{334} %argrw{"wr"}
	max		___697_subsurface_color_nonnegative_out SR_test_tiledhexagons_subsurface_color $tmp101 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:335
#     float coat_clamped_high_tmp = 1.000000;
	assign		___697_coat_clamped_low_tmp $const5 	%line{335} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:336
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___697_coat_clamped_high_tmp $const14 	%line{336} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:337
#     color subsurface_radius_scaled_out = subsurface_radius * subsurface_scale;
	functioncall	$const26 774 	%line{337} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp102 SR_test_tiledhexagons_coat ___697_coat_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_coat_clamped_out $tmp102 ___697_coat_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:338
#     float subsurface_selector_out = float(thin_walled);
	mul		___697_subsurface_radius_scaled_out SR_test_tiledhexagons_subsurface_radius SR_test_tiledhexagons_subsurface_scale 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{338} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:339
#     float base_color_nonnegative_in2_tmp = 0.000000;
	assign		$tmp103 SR_test_tiledhexagons_thin_walled 	%line{339} %argrw{"wr"}
	assign		___697_subsurface_selector_out $tmp103 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:340
#     color base_color_nonnegative_out = max(base_color, base_color_nonnegative_in2_tmp);
	assign		___697_base_color_nonnegative_in2_tmp $const5 	%line{340} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:341
#     color coat_attenuation_bg_tmp = color(1.000000, 1.000000, 1.000000);
	assign		$tmp104 ___697_base_color_nonnegative_in2_tmp 	%line{341} %argrw{"wr"}
	max		___697_base_color_nonnegative_out tiledhexagons_color3_out $tmp104 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:342
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___697_coat_attenuation_bg_tmp $const33 	%line{342} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:343
#     float one_minus_coat_ior_in1_tmp = 1.000000;
	mix		___697_coat_attenuation_out ___697_coat_attenuation_bg_tmp SR_test_tiledhexagons_coat_color SR_test_tiledhexagons_coat 	%line{343} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:344
#     float one_minus_coat_ior_out = one_minus_coat_ior_in1_tmp - coat_IOR;
	assign		___697_one_minus_coat_ior_in1_tmp $const14 	%line{344} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:345
#     float one_plus_coat_ior_in1_tmp = 1.000000;
	sub		___697_one_minus_coat_ior_out ___697_one_minus_coat_ior_in1_tmp SR_test_tiledhexagons_coat_IOR 	%line{345} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:346
#     float one_plus_coat_ior_out = one_plus_coat_ior_in1_tmp + coat_IOR;
	assign		___697_one_plus_coat_ior_in1_tmp $const14 	%line{346} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:347
#     color emission_weight_out = emission_color * emission1;
	add		___697_one_plus_coat_ior_out ___697_one_plus_coat_ior_in1_tmp SR_test_tiledhexagons_coat_IOR 	%line{347} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:348
#     color opacity_luminance_out = color(0.0);
	mul		___697_emission_weight_out SR_test_tiledhexagons_emission_color SR_test_tiledhexagons_emission 	%line{348} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:349
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.053689), opacity_luminance_out);
	assign		___697_opacity_luminance_out $const6 	%line{349} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:350
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const35 791 	%line{350} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:169
# }
	dot		$tmp106 SR_test_tiledhexagons_opacity $const34 	%line{169} %argrw{"wrr"}
	assign		___697_opacity_luminance_out $tmp106 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:351
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___697_coat_tangent_rotate_out $const36 	%line{351} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:352
#     color artistic_ior_ior = color(0.0);
	functioncall	$const37 909 	%line{352} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:187
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 796 	%line{187} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp107 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___697_coat_tangent_rotate_degree_out $tmp107 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:188
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 859 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{188} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:174
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{174} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:175
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{175} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:176
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{176} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:177
# 
	sub		___678_oc $const14 ___678_c 	%line{177} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:179
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp108 ___678_nAxis $const1 	%line{179} %argrw{"wrr"}
	mul		$tmp109 ___678_oc $tmp108 	%argrw{"wrr"}
	compref		$tmp110 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp111 $tmp109 $tmp110 	%argrw{"wrr"}
	add		$tmp112 $tmp111 ___678_c 	%argrw{"wrr"}
	compref		$tmp113 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp114 ___678_oc $tmp113 	%argrw{"wrr"}
	compref		$tmp115 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp116 $tmp114 $tmp115 	%argrw{"wrr"}
	compref		$tmp117 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp118 $tmp117 ___678_s 	%argrw{"wrr"}
	sub		$tmp119 $tmp116 $tmp118 	%argrw{"wrr"}
	compref		$tmp120 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp121 ___678_oc $tmp120 	%argrw{"wrr"}
	compref		$tmp122 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp123 $tmp121 $tmp122 	%argrw{"wrr"}
	compref		$tmp124 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp125 $tmp124 ___678_s 	%argrw{"wrr"}
	add		$tmp126 $tmp123 $tmp125 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:180
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp127 ___678_nAxis $const1 	%line{180} %argrw{"wrr"}
	mul		$tmp128 ___678_oc $tmp127 	%argrw{"wrr"}
	compref		$tmp129 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp130 $tmp128 $tmp129 	%argrw{"wrr"}
	compref		$tmp131 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp132 $tmp131 ___678_s 	%argrw{"wrr"}
	add		$tmp133 $tmp130 $tmp132 	%argrw{"wrr"}
	compref		$tmp134 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp135 ___678_oc $tmp134 	%argrw{"wrr"}
	compref		$tmp136 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp137 $tmp135 $tmp136 	%argrw{"wrr"}
	add		$tmp138 $tmp137 ___678_c 	%argrw{"wrr"}
	compref		$tmp139 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp140 ___678_oc $tmp139 	%argrw{"wrr"}
	compref		$tmp141 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp142 $tmp140 $tmp141 	%argrw{"wrr"}
	compref		$tmp143 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp144 $tmp143 ___678_s 	%argrw{"wrr"}
	sub		$tmp145 $tmp142 $tmp144 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:181
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp146 ___678_nAxis $const4 	%line{181} %argrw{"wrr"}
	mul		$tmp147 ___678_oc $tmp146 	%argrw{"wrr"}
	compref		$tmp148 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp149 $tmp147 $tmp148 	%argrw{"wrr"}
	compref		$tmp150 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp151 $tmp150 ___678_s 	%argrw{"wrr"}
	sub		$tmp152 $tmp149 $tmp151 	%argrw{"wrr"}
	compref		$tmp153 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp154 ___678_oc $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp156 $tmp154 $tmp155 	%argrw{"wrr"}
	compref		$tmp157 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp158 $tmp157 ___678_s 	%argrw{"wrr"}
	add		$tmp159 $tmp156 $tmp158 	%argrw{"wrr"}
	compref		$tmp160 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp161 ___678_oc $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp163 $tmp161 $tmp162 	%argrw{"wrr"}
	add		$tmp164 $tmp163 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:179
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp112 $tmp119 $tmp126 $const5 $tmp133 $tmp138 $tmp145 $const5 $tmp152 $tmp159 $tmp164 $const5 $const5 $const5 $const5 $const14 	%line{179} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:189
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp165.x geomprop_Tworld_out1 $const1 	%line{189} %argrw{"wrr"}
	compref		$tmp165.y geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	compref		$tmp165.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp165.w $const14 	%argrw{"wr"}
	functioncall	$const2 908 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp166 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp167 $tmp166 $tmp165.x 	%argrw{"wrr"}
	mxcompref	$tmp168 ___679_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp169 $tmp168 $tmp165.y 	%argrw{"wrr"}
	add		$tmp170 $tmp167 $tmp169 	%argrw{"wrr"}
	mxcompref	$tmp171 ___679_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp172 $tmp171 $tmp165.z 	%argrw{"wrr"}
	add		$tmp173 $tmp170 $tmp172 	%argrw{"wrr"}
	mxcompref	$tmp174 ___679_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp175 $tmp174 $tmp165.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp173 $tmp175 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp176 ___679_m $const1 $const13 	%line{416} %argrw{"wrrr"}
	mul		$tmp177 $tmp176 $tmp165.x 	%argrw{"wrr"}
	mxcompref	$tmp178 ___679_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp179 $tmp178 $tmp165.y 	%argrw{"wrr"}
	add		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
	mxcompref	$tmp181 ___679_m $const4 $const13 	%argrw{"wrrr"}
	mul		$tmp182 $tmp181 $tmp165.z 	%argrw{"wrr"}
	add		$tmp183 $tmp180 $tmp182 	%argrw{"wrr"}
	mxcompref	$tmp184 ___679_m $const42 $const13 	%argrw{"wrrr"}
	mul		$tmp185 $tmp184 $tmp165.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp183 $tmp185 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp186 ___679_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp187 $tmp186 $tmp165.x 	%argrw{"wrr"}
	mxcompref	$tmp188 ___679_m $const13 $const4 	%argrw{"wrrr"}
	mul		$tmp189 $tmp188 $tmp165.y 	%argrw{"wrr"}
	add		$tmp190 $tmp187 $tmp189 	%argrw{"wrr"}
	mxcompref	$tmp191 ___679_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp192 $tmp191 $tmp165.z 	%argrw{"wrr"}
	add		$tmp193 $tmp190 $tmp192 	%argrw{"wrr"}
	mxcompref	$tmp194 ___679_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp195 $tmp194 $tmp165.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp193 $tmp195 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp196 ___679_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp197 $tmp196 $tmp165.x 	%argrw{"wrr"}
	mxcompref	$tmp198 ___679_m $const13 $const42 	%argrw{"wrrr"}
	mul		$tmp199 $tmp198 $tmp165.y 	%argrw{"wrr"}
	add		$tmp200 $tmp197 $tmp199 	%argrw{"wrr"}
	mxcompref	$tmp201 ___679_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp202 $tmp201 $tmp165.z 	%argrw{"wrr"}
	add		$tmp203 $tmp200 $tmp202 	%argrw{"wrr"}
	mxcompref	$tmp204 ___679_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp205 $tmp204 $tmp165.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp203 $tmp205 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:190
# }
	vector		___697_coat_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{190} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:353
#     color artistic_ior_extinction = color(0.0);
	assign		___697_artistic_ior_ior $const6 	%line{353} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:354
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___697_artistic_ior_extinction $const6 	%line{354} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:355
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const43 936 	%line{355} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:198
#     color r_sqrt = sqrt(r);
	assign		$tmp206 $const5 	%line{198} %argrw{"wr"}
	assign		$tmp207 $const44 	%argrw{"wr"}
	functioncall	$const26 917 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp208 ___697_metal_reflectivity_out $tmp207 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___680_r $tmp208 $tmp206 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:199
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___680_r_sqrt ___680_r 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{199} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:200
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp209 $const14 ___680_r 	%line{200} %argrw{"wrr"}
	add		$tmp210 $const14 ___680_r 	%argrw{"wrr"}
	div		___680_n_min $tmp209 $tmp210 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:201
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp211 $const14 ___680_r_sqrt 	%line{201} %argrw{"wrr"}
	sub		$tmp212 $const14 ___680_r_sqrt 	%argrw{"wrr"}
	div		___680_n_max $tmp211 $tmp212 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:202
# 
	mix		___697_artistic_ior_ior ___680_n_max ___680_n_min ___697_metal_edgecolor_out 	%line{202} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:204
#     color nm1 = ior - 1.0;
	add		___680_np1 ___697_artistic_ior_ior $const14 	%line{204} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:205
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___680_nm1 ___697_artistic_ior_ior $const14 	%line{205} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:206
#     k2 = max(k2, 0.0);
	mul		$tmp213 ___680_np1 ___680_np1 	%line{206} %argrw{"wrr"}
	mul		$tmp214 $tmp213 ___680_r 	%argrw{"wrr"}
	mul		$tmp215 ___680_nm1 ___680_nm1 	%argrw{"wrr"}
	sub		$tmp216 $tmp214 $tmp215 	%argrw{"wrr"}
	sub		$tmp217 $const14 ___680_r 	%argrw{"wrr"}
	div		___680_k2 $tmp216 $tmp217 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:207
#     extinction = sqrt(k2);
	assign		$tmp218 $const5 	%line{207} %argrw{"wr"}
	max		___680_k2 ___680_k2 $tmp218 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:208
# }
	sqrt		___697_artistic_ior_extinction ___680_k2 	%line{208} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:356
#     vector tangent_rotate_out = vector(0.0);
	mul		___697_coat_affect_roughness_multiply2_out ___697_coat_affect_roughness_multiply1_out SR_test_tiledhexagons_coat_roughness 	%line{356} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:357
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___697_tangent_rotate_out $const36 	%line{357} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:358
#     float transmission_roughness_clamped_low_tmp = 0.000000;
	functioncall	$const37 1055 	%line{358} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:187
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const38 942 	%line{187} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp219 $const39 $const40 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___679_rotationRadians ___697_tangent_rotate_degree_out $tmp219 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:188
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const41 1005 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{188} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:174
#     float s = sin(angle);
	normalize	___678_nAxis geomprop_Nworld_out1 	%line{174} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:175
#     float c = cos(angle);
	sin		___678_s ___679_rotationRadians 	%line{175} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:176
#     float oc = 1.0 - c;
	cos		___678_c ___679_rotationRadians 	%line{176} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:177
# 
	sub		___678_oc $const14 ___678_c 	%line{177} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:179
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp220 ___678_nAxis $const1 	%line{179} %argrw{"wrr"}
	mul		$tmp221 ___678_oc $tmp220 	%argrw{"wrr"}
	compref		$tmp222 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp223 $tmp221 $tmp222 	%argrw{"wrr"}
	add		$tmp224 $tmp223 ___678_c 	%argrw{"wrr"}
	compref		$tmp225 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp226 ___678_oc $tmp225 	%argrw{"wrr"}
	compref		$tmp227 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp228 $tmp226 $tmp227 	%argrw{"wrr"}
	compref		$tmp229 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp230 $tmp229 ___678_s 	%argrw{"wrr"}
	sub		$tmp231 $tmp228 $tmp230 	%argrw{"wrr"}
	compref		$tmp232 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp233 ___678_oc $tmp232 	%argrw{"wrr"}
	compref		$tmp234 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp235 $tmp233 $tmp234 	%argrw{"wrr"}
	compref		$tmp236 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp237 $tmp236 ___678_s 	%argrw{"wrr"}
	add		$tmp238 $tmp235 $tmp237 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:180
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp239 ___678_nAxis $const1 	%line{180} %argrw{"wrr"}
	mul		$tmp240 ___678_oc $tmp239 	%argrw{"wrr"}
	compref		$tmp241 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp242 $tmp240 $tmp241 	%argrw{"wrr"}
	compref		$tmp243 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp244 $tmp243 ___678_s 	%argrw{"wrr"}
	add		$tmp245 $tmp242 $tmp244 	%argrw{"wrr"}
	compref		$tmp246 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp247 ___678_oc $tmp246 	%argrw{"wrr"}
	compref		$tmp248 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp249 $tmp247 $tmp248 	%argrw{"wrr"}
	add		$tmp250 $tmp249 ___678_c 	%argrw{"wrr"}
	compref		$tmp251 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp252 ___678_oc $tmp251 	%argrw{"wrr"}
	compref		$tmp253 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp254 $tmp252 $tmp253 	%argrw{"wrr"}
	compref		$tmp255 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp256 $tmp255 ___678_s 	%argrw{"wrr"}
	sub		$tmp257 $tmp254 $tmp256 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:181
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp258 ___678_nAxis $const4 	%line{181} %argrw{"wrr"}
	mul		$tmp259 ___678_oc $tmp258 	%argrw{"wrr"}
	compref		$tmp260 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp261 $tmp259 $tmp260 	%argrw{"wrr"}
	compref		$tmp262 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp263 $tmp262 ___678_s 	%argrw{"wrr"}
	sub		$tmp264 $tmp261 $tmp263 	%argrw{"wrr"}
	compref		$tmp265 ___678_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp266 ___678_oc $tmp265 	%argrw{"wrr"}
	compref		$tmp267 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp268 $tmp266 $tmp267 	%argrw{"wrr"}
	compref		$tmp269 ___678_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp270 $tmp269 ___678_s 	%argrw{"wrr"}
	add		$tmp271 $tmp268 $tmp270 	%argrw{"wrr"}
	compref		$tmp272 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp273 ___678_oc $tmp272 	%argrw{"wrr"}
	compref		$tmp274 ___678_nAxis $const4 	%argrw{"wrr"}
	mul		$tmp275 $tmp273 $tmp274 	%argrw{"wrr"}
	add		$tmp276 $tmp275 ___678_c 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:179
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___679_m $tmp224 $tmp231 $tmp238 $const5 $tmp245 $tmp250 $tmp257 $const5 $tmp264 $tmp271 $tmp276 $const5 $const5 $const5 $const5 $const14 	%line{179} %argrw{"wrrrrrrrrrrrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:189
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp277.x geomprop_Tworld_out1 $const1 	%line{189} %argrw{"wrr"}
	compref		$tmp277.y geomprop_Tworld_out1 $const13 	%argrw{"wrr"}
	compref		$tmp277.z geomprop_Tworld_out1 $const4 	%argrw{"wrr"}
	assign		$tmp277.w $const14 	%argrw{"wr"}
	functioncall	$const2 1054 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:415
#     return vector4 (M[0][0]*p.x + M[1][0]*p.y + M[2][0]*p.z + M[3][0]*p.w,
	mxcompref	$tmp278 ___679_m $const1 $const1 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h"} %line{415} %argrw{"wrrr"}
	mul		$tmp279 $tmp278 $tmp277.x 	%argrw{"wrr"}
	mxcompref	$tmp280 ___679_m $const13 $const1 	%argrw{"wrrr"}
	mul		$tmp281 $tmp280 $tmp277.y 	%argrw{"wrr"}
	add		$tmp282 $tmp279 $tmp281 	%argrw{"wrr"}
	mxcompref	$tmp283 ___679_m $const4 $const1 	%argrw{"wrrr"}
	mul		$tmp284 $tmp283 $tmp277.z 	%argrw{"wrr"}
	add		$tmp285 $tmp282 $tmp284 	%argrw{"wrr"}
	mxcompref	$tmp286 ___679_m $const42 $const1 	%argrw{"wrrr"}
	mul		$tmp287 $tmp286 $tmp277.w 	%argrw{"wrr"}
	add		___679_trans.x $tmp285 $tmp287 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:416
#                     M[0][1]*p.x + M[1][1]*p.y + M[2][1]*p.z + M[3][1]*p.w,
	mxcompref	$tmp288 ___679_m $const1 $const13 	%line{416} %argrw{"wrrr"}
	mul		$tmp289 $tmp288 $tmp277.x 	%argrw{"wrr"}
	mxcompref	$tmp290 ___679_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp291 $tmp290 $tmp277.y 	%argrw{"wrr"}
	add		$tmp292 $tmp289 $tmp291 	%argrw{"wrr"}
	mxcompref	$tmp293 ___679_m $const4 $const13 	%argrw{"wrrr"}
	mul		$tmp294 $tmp293 $tmp277.z 	%argrw{"wrr"}
	add		$tmp295 $tmp292 $tmp294 	%argrw{"wrr"}
	mxcompref	$tmp296 ___679_m $const42 $const13 	%argrw{"wrrr"}
	mul		$tmp297 $tmp296 $tmp277.w 	%argrw{"wrr"}
	add		___679_trans.y $tmp295 $tmp297 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:417
#                     M[0][2]*p.x + M[1][2]*p.y + M[2][2]*p.z + M[3][2]*p.w,
	mxcompref	$tmp298 ___679_m $const1 $const4 	%line{417} %argrw{"wrrr"}
	mul		$tmp299 $tmp298 $tmp277.x 	%argrw{"wrr"}
	mxcompref	$tmp300 ___679_m $const13 $const4 	%argrw{"wrrr"}
	mul		$tmp301 $tmp300 $tmp277.y 	%argrw{"wrr"}
	add		$tmp302 $tmp299 $tmp301 	%argrw{"wrr"}
	mxcompref	$tmp303 ___679_m $const4 $const4 	%argrw{"wrrr"}
	mul		$tmp304 $tmp303 $tmp277.z 	%argrw{"wrr"}
	add		$tmp305 $tmp302 $tmp304 	%argrw{"wrr"}
	mxcompref	$tmp306 ___679_m $const42 $const4 	%argrw{"wrrr"}
	mul		$tmp307 $tmp306 $tmp277.w 	%argrw{"wrr"}
	add		___679_trans.z $tmp305 $tmp307 	%argrw{"wrr"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/vector4.h:418
#                     M[0][3]*p.x + M[1][3]*p.y + M[2][3]*p.z + M[3][3]*p.w);
	mxcompref	$tmp308 ___679_m $const1 $const42 	%line{418} %argrw{"wrrr"}
	mul		$tmp309 $tmp308 $tmp277.x 	%argrw{"wrr"}
	mxcompref	$tmp310 ___679_m $const13 $const42 	%argrw{"wrrr"}
	mul		$tmp311 $tmp310 $tmp277.y 	%argrw{"wrr"}
	add		$tmp312 $tmp309 $tmp311 	%argrw{"wrr"}
	mxcompref	$tmp313 ___679_m $const4 $const42 	%argrw{"wrrr"}
	mul		$tmp314 $tmp313 $tmp277.z 	%argrw{"wrr"}
	add		$tmp315 $tmp312 $tmp314 	%argrw{"wrr"}
	mxcompref	$tmp316 ___679_m $const42 $const42 	%argrw{"wrrr"}
	mul		$tmp317 $tmp316 $tmp277.w 	%argrw{"wrr"}
	add		___679_trans.w $tmp315 $tmp317 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:190
# }
	vector		___697_tangent_rotate_out ___679_trans.x ___679_trans.y ___679_trans.z 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{190} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:359
#     float transmission_roughness_clamped_high_tmp = 1.000000;
	assign		___697_transmission_roughness_clamped_low_tmp $const5 	%line{359} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:360
#     float transmission_roughness_clamped_out = clamp(transmission_roughness_add_out, transmission_roughness_clamped_low_tmp, transmission_roughness_clamped_high_tmp);
	assign		___697_transmission_roughness_clamped_high_tmp $const14 	%line{360} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:361
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const26 1060 	%line{361} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp318 ___697_transmission_roughness_add_out ___697_transmission_roughness_clamped_high_tmp 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_transmission_roughness_clamped_out $tmp318 ___697_transmission_roughness_clamped_low_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:362
#     float coat_ior_to_F0_sqrt_out = one_minus_coat_ior_out / one_plus_coat_ior_out;
	mul		___697_coat_gamma_multiply_out ___697_coat_clamped_out SR_test_tiledhexagons_coat_affect_color 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{362} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:363
#     int opacity_luminance_float_index_tmp = 0;
	div		___697_coat_ior_to_F0_sqrt_out ___697_one_minus_coat_ior_out ___697_one_plus_coat_ior_out 	%line{363} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:364
#     float opacity_luminance_float_out = mx_extract(opacity_luminance_out, opacity_luminance_float_index_tmp);
	assign		___697_opacity_luminance_float_index_tmp $const1 	%line{364} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:365
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	functioncall	$const12 1065 	%line{365} %argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:105
#     return in[index];
	compref		___697_opacity_luminance_float_out ___697_opacity_luminance_out ___697_opacity_luminance_float_index_tmp 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{105} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:366
#     float coat_affected_roughness_fg_tmp = 1.000000;
	normalize	___697_coat_tangent_rotate_normalize_out ___697_coat_tangent_rotate_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{366} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:367
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_roughness_fg_tmp $const14 	%line{367} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:368
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___697_coat_affected_roughness_out SR_test_tiledhexagons_specular_roughness ___697_coat_affected_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{368} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:369
#     float coat_affected_transmission_roughness_fg_tmp = 1.000000;
	normalize	___697_tangent_rotate_normalize_out ___697_tangent_rotate_out 	%line{369} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:370
#     float coat_affected_transmission_roughness_out = mix(transmission_roughness_clamped_out, coat_affected_transmission_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___697_coat_affected_transmission_roughness_fg_tmp $const14 	%line{370} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:371
#     float coat_gamma_in2_tmp = 1.000000;
	mix		___697_coat_affected_transmission_roughness_out ___697_transmission_roughness_clamped_out ___697_coat_affected_transmission_roughness_fg_tmp ___697_coat_affect_roughness_multiply2_out 	%line{371} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:372
#     float coat_gamma_out = coat_gamma_multiply_out + coat_gamma_in2_tmp;
	assign		___697_coat_gamma_in2_tmp $const14 	%line{372} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:373
#     float coat_ior_to_F0_out = coat_ior_to_F0_sqrt_out * coat_ior_to_F0_sqrt_out;
	add		___697_coat_gamma_out ___697_coat_gamma_multiply_out ___697_coat_gamma_in2_tmp 	%line{373} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:374
#     float coat_tangent_value2_tmp = 0.000000;
	mul		___697_coat_ior_to_F0_out ___697_coat_ior_to_F0_sqrt_out ___697_coat_ior_to_F0_sqrt_out 	%line{374} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:375
#     vector coat_tangent_out = mx_ternary(coat_anisotropy > coat_tangent_value2_tmp, coat_tangent_rotate_normalize_out, tangent);
	assign		___697_coat_tangent_value2_tmp $const5 	%line{375} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:376
#     vector2 main_roughness_out = vector2(0.0, 0.0);
	gt		$tmp319 SR_test_tiledhexagons_coat_anisotropy ___697_coat_tangent_value2_tmp 	%line{376} %argrw{"wrr"}
	functioncall	$const19 1082 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp319 1080 1082 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_coat_tangent_out ___697_coat_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_coat_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:377
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___697_main_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{377} %argrw{"wr"}
	assign		___697_main_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:378
#     float main_tangent_value2_tmp = 0.000000;
	functioncall	$const29 1103 	%line{378} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:153
#     if (anisotropy > 0.0)
	mul		$tmp320 ___697_coat_affected_roughness_out ___697_coat_affected_roughness_out 	%line{153} %argrw{"wrr"}
	functioncall	$const26 1089 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp321 $tmp320 $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp321 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:154
#     {
	gt		$tmp322 SR_test_tiledhexagons_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{154} %argrw{"wrr"}
	if		$tmp322 1101 1103 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const26 1094 	%line{156} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp324 SR_test_tiledhexagons_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp323 $tmp324 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp325 $const14 $tmp323 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{156} %argrw{"wrr"}
	sqrt		___675_aspect $tmp325 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:157
#         result.y = roughness_sqr * aspect;
	div		$tmp326 ___674_roughness_sqr ___675_aspect 	%line{157} %argrw{"wrr"}
	min		___697_main_roughness_out.x $tmp326 $const14 	%argrw{"wrr"}
	assign		___697_main_roughness_out.x ___697_main_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:158
#     }
	mul		___697_main_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{158} %argrw{"wrr"}
	assign		___697_main_roughness_out.y ___697_main_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:162
#         result.y = roughness_sqr;
	assign		___697_main_roughness_out.x ___674_roughness_sqr 	%line{162} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:163
#     }
	assign		___697_main_roughness_out.y ___674_roughness_sqr 	%line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:379
#     vector main_tangent_out = mx_ternary(specular_anisotropy > main_tangent_value2_tmp, tangent_rotate_normalize_out, tangent);
	assign		___697_main_tangent_value2_tmp $const5 	%line{379} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:380
#     vector2 transmission_roughness_out = vector2(0.0, 0.0);
	gt		$tmp327 SR_test_tiledhexagons_specular_anisotropy ___697_main_tangent_value2_tmp 	%line{380} %argrw{"wrr"}
	functioncall	$const19 1111 	%argrw{"r"}
# D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h:22
# vector mx_ternary(int expr, vector v1, vector v2) { if (expr) return v1; else return v2; }
	if		$tmp327 1109 1111 	%filename{"D:/Work/materialx/bernard_MaterialX_3/build/bin/libraries/stdlib/genosl/include/mx_funcs.h"} %line{22} %argrw{"r"}
	assign		___697_main_tangent_out ___697_tangent_rotate_normalize_out 	%argrw{"wr"}
	return
	assign		___697_main_tangent_out geomprop_Tworld_out1 	%argrw{"wr"}
	return
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:381
#     mx_roughness_anisotropy(coat_affected_transmission_roughness_out, specular_anisotropy, transmission_roughness_out);
	assign		___697_transmission_roughness_out.x $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{381} %argrw{"wr"}
	assign		___697_transmission_roughness_out.y $const5 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:382
#     color coat_affected_subsurface_color_out = pow(subsurface_color_nonnegative_out, coat_gamma_out);
	functioncall	$const29 1132 	%line{382} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:153
#     if (anisotropy > 0.0)
	mul		$tmp328 ___697_coat_affected_transmission_roughness_out ___697_coat_affected_transmission_roughness_out 	%line{153} %argrw{"wrr"}
	functioncall	$const26 1118 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp329 $tmp328 $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___674_roughness_sqr $tmp329 $const30 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:154
#     {
	gt		$tmp330 SR_test_tiledhexagons_specular_anisotropy $const5 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{154} %argrw{"wrr"}
	if		$tmp330 1130 1132 	%argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const26 1123 	%line{156} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp332 SR_test_tiledhexagons_specular_anisotropy $const31 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp331 $tmp332 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:156
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp333 $const14 $tmp331 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{156} %argrw{"wrr"}
	sqrt		___675_aspect $tmp333 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:157
#         result.y = roughness_sqr * aspect;
	div		$tmp334 ___674_roughness_sqr ___675_aspect 	%line{157} %argrw{"wrr"}
	min		___697_transmission_roughness_out.x $tmp334 $const14 	%argrw{"wrr"}
	assign		___697_transmission_roughness_out.x ___697_transmission_roughness_out.x 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:158
#     }
	mul		___697_transmission_roughness_out.y ___674_roughness_sqr ___675_aspect 	%line{158} %argrw{"wrr"}
	assign		___697_transmission_roughness_out.y ___697_transmission_roughness_out.y 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:162
#         result.y = roughness_sqr;
	assign		___697_transmission_roughness_out.x ___674_roughness_sqr 	%line{162} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:163
#     }
	assign		___697_transmission_roughness_out.y ___674_roughness_sqr 	%line{163} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:383
#     color coat_affected_diffuse_color_out = pow(base_color_nonnegative_out, coat_gamma_out);
	pow		___697_coat_affected_subsurface_color_out ___697_subsurface_color_nonnegative_out ___697_coat_gamma_out 	%line{383} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:384
#     float one_minus_coat_ior_to_F0_in1_tmp = 1.000000;
	pow		___697_coat_affected_diffuse_color_out ___697_base_color_nonnegative_out ___697_coat_gamma_out 	%line{384} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:385
#     float one_minus_coat_ior_to_F0_out = one_minus_coat_ior_to_F0_in1_tmp - coat_ior_to_F0_out;
	assign		___697_one_minus_coat_ior_to_F0_in1_tmp $const14 	%line{385} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:386
#     color emission_color0_out = color(0.0);
	sub		___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_in1_tmp ___697_coat_ior_to_F0_out 	%line{386} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:387
#     NG_convert_float_color3(one_minus_coat_ior_to_F0_out, emission_color0_out);
	assign		___697_emission_color0_out $const6 	%line{387} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:388
#     BSDF coat_bsdf_out = null_closure;
	functioncall	$const27 1140 	%line{388} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:95
#     out = combine_out;
	color		___672_combine_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out ___697_one_minus_coat_ior_to_F0_out 	%line{95} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:96
# }
	assign		___697_emission_color0_out ___672_combine_out 	%line{96} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:389
#     mx_dielectric_bsdf(coat, color(1.000000, 1.000000, 1.000000), coat_IOR, coat_roughness_vector_out, 0.000000, 1.500000, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___697_coat_bsdf_out ___697_null_closure 	%line{389} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:390
#     float metal_bsdf_weight_tmp = 1.000000;
	functioncall	$const48 1152 	%line{390} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:213
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp336 $const47 $const49 	%line{213} %argrw{"wrr"}
	if		$tmp336 1145 1146 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:214
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp337 $const47 $const47 	%line{214} %argrw{"wrr"}
	if		$tmp337 1149 1150 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint $const33 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:215
# }
	closure		$tmp338 $const52 geomprop_Nworld_out1 ___697_coat_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_coat_roughness_vector_out.x ___697_coat_roughness_vector_out.y SR_test_tiledhexagons_coat_IOR $const46 $const50 $const5 $const51 $const45 	%line{215} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_coat_bsdf_out $tmp338 SR_test_tiledhexagons_coat 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:391
#     string metal_bsdf_distribution_tmp = "ggx";
	assign		___697_metal_bsdf_weight_tmp $const14 	%line{391} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:392
#     BSDF metal_bsdf_out = metal_bsdf_weight_tmp * conductor_bsdf(normal1, main_tangent_out, main_roughness_out.x, main_roughness_out.y, artistic_ior_ior, artistic_ior_extinction, metal_bsdf_distribution_tmp, "thinfilm_thickness", thin_film_thickness, "thinfilm_ior", thin_film_IOR);
	assign		___697_metal_bsdf_distribution_tmp $const46 	%line{392} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:393
#     BSDF specular_bsdf_out = null_closure;
	closure		$tmp339 $const53 geomprop_Nworld_out1 ___697_main_tangent_out ___697_main_roughness_out.x ___697_main_roughness_out.y ___697_artistic_ior_ior ___697_artistic_ior_extinction ___697_metal_bsdf_distribution_tmp $const50 SR_test_tiledhexagons_thin_film_thickness $const51 SR_test_tiledhexagons_thin_film_IOR 	%line{393} %argrw{"wrrrrrrrrrrrr"}
	mul		___697_metal_bsdf_out $tmp339 ___697_metal_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:394
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, thin_film_thickness, thin_film_IOR, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___697_specular_bsdf_out ___697_null_closure 	%line{394} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:395
#     BSDF transmission_bsdf_out = null_closure;
	functioncall	$const48 1168 	%line{395} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:213
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp340 $const47 $const49 	%line{213} %argrw{"wrr"}
	if		$tmp340 1161 1162 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint SR_test_tiledhexagons_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:214
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp341 $const47 $const47 	%line{214} %argrw{"wrr"}
	if		$tmp341 1165 1166 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint SR_test_tiledhexagons_specular_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:215
# }
	closure		$tmp342 $const52 geomprop_Nworld_out1 ___697_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_main_roughness_out.x ___697_main_roughness_out.y SR_test_tiledhexagons_specular_IOR $const46 $const50 SR_test_tiledhexagons_thin_film_thickness $const51 SR_test_tiledhexagons_thin_film_IOR 	%line{215} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_specular_bsdf_out $tmp342 SR_test_tiledhexagons_specular 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:396
#     mx_dielectric_bsdf(1.000000, transmission_color, specular_IOR, transmission_roughness_out, 0.000000, 1.500000, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___697_transmission_bsdf_out ___697_null_closure 	%line{396} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:397
#     BSDF sheen_bsdf_out = sheen1 * sheen_bsdf(normal1, sheen_color, sheen_roughness);
	functioncall	$const48 1180 	%line{397} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:213
#     color transmission_tint = (scatter_mode == "R") ? color(0.0) : tint;
	eq		$tmp343 $const49 $const49 	%line{213} %argrw{"wrr"}
	if		$tmp343 1173 1174 	%argrw{"r"}
	assign		___681_reflection_tint $const6 	%argrw{"wr"}
	assign		___681_reflection_tint SR_test_tiledhexagons_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:214
#     bsdf = weight * dielectric_bsdf(N, U, reflection_tint, transmission_tint, roughness.x, roughness.y, ior, distribution, "thinfilm_thickness", thinfilm_thickness, "thinfilm_ior", thinfilm_ior);
	eq		$tmp344 $const49 $const47 	%line{214} %argrw{"wrr"}
	if		$tmp344 1177 1178 	%argrw{"r"}
	assign		___681_transmission_tint $const6 	%argrw{"wr"}
	assign		___681_transmission_tint SR_test_tiledhexagons_transmission_color 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:215
# }
	closure		$tmp345 $const52 geomprop_Nworld_out1 ___697_main_tangent_out ___681_reflection_tint ___681_transmission_tint ___697_transmission_roughness_out.x ___697_transmission_roughness_out.y SR_test_tiledhexagons_specular_IOR $const46 $const50 $const5 $const51 $const45 	%line{215} %argrw{"wrrrrrrrrrrrrr"}
	mul		___697_transmission_bsdf_out $tmp345 $const14 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:398
#     float translucent_bsdf_weight_tmp = 1.000000;
	closure		$tmp346 $const54 geomprop_Nworld_out1 SR_test_tiledhexagons_sheen_color SR_test_tiledhexagons_sheen_roughness 	%line{398} %argrw{"wrrrr"}
	mul		___697_sheen_bsdf_out $tmp346 SR_test_tiledhexagons_sheen 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:399
#     BSDF translucent_bsdf_out = translucent_bsdf_weight_tmp * translucent_bsdf(normal1, coat_affected_subsurface_color_out);
	assign		___697_translucent_bsdf_weight_tmp $const14 	%line{399} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:400
#     BSDF subsurface_bsdf_out = null_closure;
	closure		$tmp347 $const55 geomprop_Nworld_out1 ___697_coat_affected_subsurface_color_out 	%line{400} %argrw{"wrrr"}
	mul		___697_translucent_bsdf_out $tmp347 ___697_translucent_bsdf_weight_tmp 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:401
#     mx_subsurface_bsdf(1.000000, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___697_subsurface_bsdf_out ___697_null_closure 	%line{401} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:402
#     BSDF selected_subsurface_bsdf_out = mix(subsurface_bsdf_out, translucent_bsdf_out, subsurface_selector_out);
	functioncall	$const56 1189 	%line{402} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:223
# #endif
	mul		$tmp348 $const14 ___697_coat_affected_subsurface_color_out 	%line{223} %argrw{"wrr"}
	closure		___697_subsurface_bsdf_out $const57 geomprop_Nworld_out1 $tmp348 $const14 ___697_subsurface_radius_scaled_out SR_test_tiledhexagons_subsurface_anisotropy 	%argrw{"wrrrrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:403
#     BSDF diffuse_bsdf_out = base * oren_nayar_diffuse_bsdf(normal1, coat_affected_diffuse_color_out, diffuse_roughness);
	functioncall	$const58 1194 	%line{403} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp349 $const14 ___697_subsurface_selector_out 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp350 ___697_subsurface_bsdf_out $tmp349 	%argrw{"wrr"}
	mul		$tmp351 ___697_translucent_bsdf_out ___697_subsurface_selector_out 	%argrw{"wrr"}
	add		___697_selected_subsurface_bsdf_out $tmp350 $tmp351 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:404
#     BSDF subsurface_mix_out = mix(diffuse_bsdf_out, selected_subsurface_bsdf_out, subsurface1);
	closure		$tmp352 $const59 geomprop_Nworld_out1 ___697_coat_affected_diffuse_color_out SR_test_tiledhexagons_diffuse_roughness 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{404} %argrw{"wrrrr"}
	mul		___697_diffuse_bsdf_out $tmp352 SR_test_tiledhexagons_base 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:405
#     BSDF sheen_layer_out = layer(sheen_bsdf_out, subsurface_mix_out);
	functioncall	$const58 1201 	%line{405} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp353 $const14 SR_test_tiledhexagons_subsurface 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp354 ___697_diffuse_bsdf_out $tmp353 	%argrw{"wrr"}
	mul		$tmp355 ___697_selected_subsurface_bsdf_out SR_test_tiledhexagons_subsurface 	%argrw{"wrr"}
	add		___697_subsurface_mix_out $tmp354 $tmp355 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:406
#     BSDF transmission_mix_out = mix(sheen_layer_out, transmission_bsdf_out, transmission);
	closure		___697_sheen_layer_out $const60 ___697_sheen_bsdf_out ___697_subsurface_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{406} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:407
#     BSDF specular_layer_out = layer(specular_bsdf_out, transmission_mix_out);
	functioncall	$const58 1207 	%line{407} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp356 $const14 SR_test_tiledhexagons_transmission 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp357 ___697_sheen_layer_out $tmp356 	%argrw{"wrr"}
	mul		$tmp358 ___697_transmission_bsdf_out SR_test_tiledhexagons_transmission 	%argrw{"wrr"}
	add		___697_transmission_mix_out $tmp357 $tmp358 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:408
#     BSDF metalness_mix_out = mix(specular_layer_out, metal_bsdf_out, metalness);
	closure		___697_specular_layer_out $const60 ___697_specular_bsdf_out ___697_transmission_mix_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{408} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:409
#     BSDF thin_film_layer_attenuated_out = (coat_attenuation_out * metalness_mix_out);
	functioncall	$const58 1213 	%line{409} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp359 $const14 SR_test_tiledhexagons_metalness 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp360 ___697_specular_layer_out $tmp359 	%argrw{"wrr"}
	mul		$tmp361 ___697_metal_bsdf_out SR_test_tiledhexagons_metalness 	%argrw{"wrr"}
	add		___697_metalness_mix_out $tmp360 $tmp361 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:410
#     BSDF coat_layer_out = layer(coat_bsdf_out, thin_film_layer_attenuated_out);
	mul		___697_thin_film_layer_attenuated_out ___697_metalness_mix_out ___697_coat_attenuation_out 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{410} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:411
#     EDF emission_edf_out = uniform_edf(emission_weight_out);
	closure		___697_coat_layer_out $const60 ___697_coat_bsdf_out ___697_thin_film_layer_attenuated_out 	%line{411} %argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:412
#     EDF coat_tinted_emission_edf_out = (coat_color * emission_edf_out);
	closure		___697_emission_edf_out $const61 ___697_emission_weight_out 	%line{412} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:413
#     EDF coat_emission_edf_out = null_closure;
	mul		___697_coat_tinted_emission_edf_out ___697_emission_edf_out SR_test_tiledhexagons_coat_color 	%line{413} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:414
#     mx_generalized_schlick_edf(emission_color0_out, color(0.000000, 0.000000, 0.000000), 5.000000, coat_tinted_emission_edf_out, coat_emission_edf_out);
	assign		___697_coat_emission_edf_out ___697_null_closure 	%line{414} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:415
#     EDF blended_coat_emission_edf_out = mix(emission_edf_out, coat_emission_edf_out, coat);
	functioncall	$const63 1230 	%line{415} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:308
#     color f = mx_fresnel_schlick(NdotV, color0, color90, exponent);
	neg		$tmp364 I 	%line{308} %argrw{"wr"}
	dot		$tmp363 N $tmp364 	%argrw{"wrr"}
	fabs		___695_NdotV $tmp363 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:309
#     result = base * f;
	functioncall	$const64 1229 	%line{309} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:302
#     return mix(f0, f90, pow(x, exponent));
	sub		$tmp365 $const14 ___695_NdotV 	%line{302} %argrw{"wrr"}
	functioncall	$const26 1227 	%argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp366 $tmp365 $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___694_x $tmp366 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:303
# }
	pow		$tmp367 ___694_x $const62 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{303} %argrw{"wrr"}
	mix		___695_f ___697_emission_color0_out $const6 $tmp367 	%argrw{"wrrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:310
# }
	mul		___697_coat_emission_edf_out ___697_coat_tinted_emission_edf_out ___695_f 	%line{310} %argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:416
#     surfaceshader shader_constructor_out = surfaceshader(null_closure, null_closure, 1.0);
	functioncall	$const58 1235 	%line{416} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp368 $const14 SR_test_tiledhexagons_coat 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp369 ___697_emission_edf_out $tmp368 	%argrw{"wrr"}
	mul		$tmp370 ___697_coat_emission_edf_out SR_test_tiledhexagons_coat 	%argrw{"wrr"}
	add		___697_blended_coat_emission_edf_out $tmp369 $tmp370 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:417
#     mx_surface(coat_layer_out, blended_coat_emission_edf_out, opacity_luminance_float_out, 0, shader_constructor_out);
	assign		___697_shader_constructor_out.bsdf ___697_null_closure 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{417} %argrw{"wr"}
	assign		___697_shader_constructor_out.edf ___697_null_closure 	%argrw{"wr"}
	assign		___697_shader_constructor_out.opacity $const14 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:418
#     out = shader_constructor_out;
	functioncall	$const65 1245 	%line{418} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:315
#     result.edf     = edf;
	assign		___697_shader_constructor_out.bsdf ___697_coat_layer_out 	%line{315} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:316
#     result.opacity = clamp(opacity, 0.0, 1.0);
	assign		___697_shader_constructor_out.edf ___697_blended_coat_emission_edf_out 	%line{316} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:317
# }
	functioncall	$const26 1244 	%line{317} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp371 ___697_opacity_luminance_float_out $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___697_shader_constructor_out.opacity $tmp371 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:317
# }
	assign		___697_shader_constructor_out.opacity ___697_shader_constructor_out.opacity 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{317} %argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:419
# }
	assign		SR_test_tiledhexagons_out.bsdf ___697_shader_constructor_out.bsdf 	%line{419} %argrw{"wr"}
	assign		SR_test_tiledhexagons_out.edf ___697_shader_constructor_out.edf 	%argrw{"wr"}
	assign		SR_test_tiledhexagons_out.opacity ___697_shader_constructor_out.opacity 	%argrw{"wr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:827
#     out = test_tiledhexagons_out;
	functioncall	$const66 1258 	%line{827} %argrw{"r"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:424
#     return (surface.bsdf + surface.edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const26 1252 	%line{424} %argrw{"r"}
# D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp372 SR_test_tiledhexagons_out.opacity $const14 	%filename{"D:\\\\Work\\\\materialx\\\\OSL_ILM/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___698_opacity_weight $tmp372 $const5 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:425
# }
	add		$tmp373 SR_test_tiledhexagons_out.bsdf SR_test_tiledhexagons_out.edf 	%filename{"D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl"} %line{425} %argrw{"wrr"}
	mul		$tmp374 $tmp373 ___698_opacity_weight 	%argrw{"wrr"}
	closure		$tmp375 $const67 	%argrw{"wr"}
	sub		$tmp376 $const14 ___698_opacity_weight 	%argrw{"wrr"}
	mul		$tmp377 $tmp375 $tmp376 	%argrw{"wrr"}
	add		test_tiledhexagons_out $tmp374 $tmp377 	%argrw{"wrr"}
# D:\\Work\\materialx\\bernard_MaterialX_3\\build\\bin\\resources\\Materials\\TestSuite\\stdlib\\procedural\\tiledshape\\test_tiledhexagons.osl:828
# }
	assign		out test_tiledhexagons_out 	%line{828} %argrw{"wr"}
	end
